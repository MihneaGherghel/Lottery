{"id":"90575579d22e692ff23c912090f6bb05","_format":"hh-sol-build-info-1","solcVersion":"0.8.24","solcLongVersion":"0.8.24+commit.e11b9ed9","input":{"language":"Solidity","sources":{"@chainlink/contracts/src/v0.8/automation/AutomationBase.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ncontract AutomationBase {\n  error OnlySimulatedBackend();\n\n  /**\n   * @notice method that allows it to be simulated via eth_call by checking that\n   * the sender is the zero address.\n   */\n  function preventExecution() internal view {\n    if (tx.origin != address(0)) {\n      revert OnlySimulatedBackend();\n    }\n  }\n\n  /**\n   * @notice modifier that allows it to be simulated via eth_call by checking\n   * that the sender is the zero address.\n   */\n  modifier cannotExecute() {\n    preventExecution();\n    _;\n  }\n}\n"},"@chainlink/contracts/src/v0.8/automation/AutomationCompatible.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"./AutomationBase.sol\";\nimport \"./interfaces/AutomationCompatibleInterface.sol\";\n\nabstract contract AutomationCompatible is AutomationBase, AutomationCompatibleInterface {}\n"},"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface AutomationCompatibleInterface {\n  /**\n   * @notice method that is simulated by the keepers to see if any work actually\n   * needs to be performed. This method does does not actually need to be\n   * executable, and since it is only ever simulated it can consume lots of gas.\n   * @dev To ensure that it is never called, you may want to add the\n   * cannotExecute modifier from KeeperBase to your implementation of this\n   * method.\n   * @param checkData specified in the upkeep registration so it is always the\n   * same for a registered upkeep. This can easily be broken down into specific\n   * arguments using `abi.decode`, so multiple upkeeps can be registered on the\n   * same contract and easily differentiated by the contract.\n   * @return upkeepNeeded boolean to indicate whether the keeper should call\n   * performUpkeep or not.\n   * @return performData bytes that the keeper should call performUpkeep with, if\n   * upkeep is needed. If you would like to encode data to decode later, try\n   * `abi.encode`.\n   */\n  function checkUpkeep(bytes calldata checkData) external returns (bool upkeepNeeded, bytes memory performData);\n\n  /**\n   * @notice method that is actually executed by the keepers, via the registry.\n   * The data returned by the checkUpkeep simulation will be passed into\n   * this method to actually be executed.\n   * @dev The input to this method should not be trusted, and the caller of the\n   * method should not even be restricted to any single registry. Anyone should\n   * be able call it, and the input should be validated, there is no guarantee\n   * that the data passed in is the performData returned from checkUpkeep. This\n   * could happen due to malicious keepers, racing keepers, or simply a state\n   * change while the performUpkeep transaction is waiting for confirmation.\n   * Always validate the data passed in.\n   * @param performData is the data which was passed back from the checkData\n   * simulation. If it is encoded, it can easily be decoded into other types by\n   * calling `abi.decode`. This data should not be trusted, and should be\n   * validated against the contract's current state.\n   */\n  function performUpkeep(bytes calldata performData) external;\n}\n"},"@chainlink/contracts/src/v0.8/automation/KeeperCompatible.sol":{"content":"// SPDX-License-Identifier: MIT\n/**\n * @notice This is a deprecated interface. Please use AutomationCompatible directly.\n */\npragma solidity ^0.8.0;\nimport {AutomationCompatible as KeeperCompatible} from \"./AutomationCompatible.sol\";\nimport {AutomationBase as KeeperBase} from \"./AutomationBase.sol\";\nimport {AutomationCompatibleInterface as KeeperCompatibleInterface} from \"./interfaces/AutomationCompatibleInterface.sol\";\n"},"@chainlink/contracts/src/v0.8/ChainSpecificUtil.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.4;\n\nimport {ArbSys} from \"./vendor/@arbitrum/nitro-contracts/src/precompiles/ArbSys.sol\";\nimport {ArbGasInfo} from \"./vendor/@arbitrum/nitro-contracts/src/precompiles/ArbGasInfo.sol\";\n\n//@dev A library that abstracts out opcodes that behave differently across chains.\n//@dev The methods below return values that are pertinent to the given chain.\n//@dev For instance, ChainSpecificUtil.getBlockNumber() returns L2 block number in L2 chains\nlibrary ChainSpecificUtil {\n  address private constant ARBSYS_ADDR = address(0x0000000000000000000000000000000000000064);\n  ArbSys private constant ARBSYS = ArbSys(ARBSYS_ADDR);\n  address private constant ARBGAS_ADDR = address(0x000000000000000000000000000000000000006C);\n  ArbGasInfo private constant ARBGAS = ArbGasInfo(ARBGAS_ADDR);\n  uint256 private constant ARB_MAINNET_CHAIN_ID = 42161;\n  uint256 private constant ARB_GOERLI_TESTNET_CHAIN_ID = 421613;\n  uint256 private constant ARB_SEPOLIA_TESTNET_CHAIN_ID = 421614;\n\n  function getBlockhash(uint64 blockNumber) internal view returns (bytes32) {\n    uint256 chainid = block.chainid;\n    if (\n      chainid == ARB_MAINNET_CHAIN_ID ||\n      chainid == ARB_GOERLI_TESTNET_CHAIN_ID ||\n      chainid == ARB_SEPOLIA_TESTNET_CHAIN_ID\n    ) {\n      if ((getBlockNumber() - blockNumber) > 256 || blockNumber >= getBlockNumber()) {\n        return \"\";\n      }\n      return ARBSYS.arbBlockHash(blockNumber);\n    }\n    return blockhash(blockNumber);\n  }\n\n  function getBlockNumber() internal view returns (uint256) {\n    uint256 chainid = block.chainid;\n    if (chainid == ARB_MAINNET_CHAIN_ID || chainid == ARB_GOERLI_TESTNET_CHAIN_ID) {\n      return ARBSYS.arbBlockNumber();\n    }\n    return block.number;\n  }\n\n  function getCurrentTxL1GasFees() internal view returns (uint256) {\n    uint256 chainid = block.chainid;\n    if (chainid == ARB_MAINNET_CHAIN_ID || chainid == ARB_GOERLI_TESTNET_CHAIN_ID) {\n      return ARBGAS.getCurrentTxL1GasFees();\n    }\n    return 0;\n  }\n\n  /**\n   * @notice Returns the gas cost in wei of calldataSizeBytes of calldata being posted\n   * @notice to L1.\n   */\n  function getL1CalldataGasCost(uint256 calldataSizeBytes) internal view returns (uint256) {\n    uint256 chainid = block.chainid;\n    if (chainid == ARB_MAINNET_CHAIN_ID || chainid == ARB_GOERLI_TESTNET_CHAIN_ID) {\n      (, uint256 l1PricePerByte, , , , ) = ARBGAS.getPricesInWei();\n      // see https://developer.arbitrum.io/devs-how-tos/how-to-estimate-gas#where-do-we-get-all-this-information-from\n      // for the justification behind the 140 number.\n      return l1PricePerByte * (calldataSizeBytes + 140);\n    }\n    return 0;\n  }\n}\n"},"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface AggregatorV3Interface {\n  function decimals() external view returns (uint8);\n\n  function description() external view returns (string memory);\n\n  function version() external view returns (uint256);\n\n  function getRoundData(\n    uint80 _roundId\n  ) external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\n\n  function latestRoundData()\n    external\n    view\n    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\n}\n"},"@chainlink/contracts/src/v0.8/interfaces/BlockhashStoreInterface.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface BlockhashStoreInterface {\n  function getBlockhash(uint256 number) external view returns (bytes32);\n}\n"},"@chainlink/contracts/src/v0.8/interfaces/TypeAndVersionInterface.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nabstract contract TypeAndVersionInterface {\n  function typeAndVersion() external pure virtual returns (string memory);\n}\n"},"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface VRFCoordinatorV2Interface {\n  /**\n   * @notice Get configuration relevant for making requests\n   * @return minimumRequestConfirmations global min for request confirmations\n   * @return maxGasLimit global max for request gas limit\n   * @return s_provingKeyHashes list of registered key hashes\n   */\n  function getRequestConfig() external view returns (uint16, uint32, bytes32[] memory);\n\n  /**\n   * @notice Request a set of random words.\n   * @param keyHash - Corresponds to a particular oracle job which uses\n   * that key for generating the VRF proof. Different keyHash's have different gas price\n   * ceilings, so you can select a specific one to bound your maximum per request cost.\n   * @param subId  - The ID of the VRF subscription. Must be funded\n   * with the minimum subscription balance required for the selected keyHash.\n   * @param minimumRequestConfirmations - How many blocks you'd like the\n   * oracle to wait before responding to the request. See SECURITY CONSIDERATIONS\n   * for why you may want to request more. The acceptable range is\n   * [minimumRequestBlockConfirmations, 200].\n   * @param callbackGasLimit - How much gas you'd like to receive in your\n   * fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords\n   * may be slightly less than this amount because of gas used calling the function\n   * (argument decoding etc.), so you may need to request slightly more than you expect\n   * to have inside fulfillRandomWords. The acceptable range is\n   * [0, maxGasLimit]\n   * @param numWords - The number of uint256 random values you'd like to receive\n   * in your fulfillRandomWords callback. Note these numbers are expanded in a\n   * secure way by the VRFCoordinator from a single random value supplied by the oracle.\n   * @return requestId - A unique identifier of the request. Can be used to match\n   * a request to a response in fulfillRandomWords.\n   */\n  function requestRandomWords(\n    bytes32 keyHash,\n    uint64 subId,\n    uint16 minimumRequestConfirmations,\n    uint32 callbackGasLimit,\n    uint32 numWords\n  ) external returns (uint256 requestId);\n\n  /**\n   * @notice Create a VRF subscription.\n   * @return subId - A unique subscription id.\n   * @dev You can manage the consumer set dynamically with addConsumer/removeConsumer.\n   * @dev Note to fund the subscription, use transferAndCall. For example\n   * @dev  LINKTOKEN.transferAndCall(\n   * @dev    address(COORDINATOR),\n   * @dev    amount,\n   * @dev    abi.encode(subId));\n   */\n  function createSubscription() external returns (uint64 subId);\n\n  /**\n   * @notice Get a VRF subscription.\n   * @param subId - ID of the subscription\n   * @return balance - LINK balance of the subscription in juels.\n   * @return reqCount - number of requests for this subscription, determines fee tier.\n   * @return owner - owner of the subscription.\n   * @return consumers - list of consumer address which are able to use this subscription.\n   */\n  function getSubscription(\n    uint64 subId\n  ) external view returns (uint96 balance, uint64 reqCount, address owner, address[] memory consumers);\n\n  /**\n   * @notice Request subscription owner transfer.\n   * @param subId - ID of the subscription\n   * @param newOwner - proposed new owner of the subscription\n   */\n  function requestSubscriptionOwnerTransfer(uint64 subId, address newOwner) external;\n\n  /**\n   * @notice Request subscription owner transfer.\n   * @param subId - ID of the subscription\n   * @dev will revert if original owner of subId has\n   * not requested that msg.sender become the new owner.\n   */\n  function acceptSubscriptionOwnerTransfer(uint64 subId) external;\n\n  /**\n   * @notice Add a consumer to a VRF subscription.\n   * @param subId - ID of the subscription\n   * @param consumer - New consumer which can use the subscription\n   */\n  function addConsumer(uint64 subId, address consumer) external;\n\n  /**\n   * @notice Remove a consumer from a VRF subscription.\n   * @param subId - ID of the subscription\n   * @param consumer - Consumer to remove from the subscription\n   */\n  function removeConsumer(uint64 subId, address consumer) external;\n\n  /**\n   * @notice Cancel a subscription\n   * @param subId - ID of the subscription\n   * @param to - Where to send the remaining LINK to\n   */\n  function cancelSubscription(uint64 subId, address to) external;\n\n  /*\n   * @notice Check to see if there exists a request commitment consumers\n   * for all consumers and keyhashes for a given sub.\n   * @param subId - ID of the subscription\n   * @return true if there exists at least one unfulfilled request for the subscription, false\n   * otherwise.\n   */\n  function pendingRequestExists(uint64 subId) external view returns (bool);\n}\n"},"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"./ConfirmedOwnerWithProposal.sol\";\n\n/**\n * @title The ConfirmedOwner contract\n * @notice A contract with helpers for basic contract ownership.\n */\ncontract ConfirmedOwner is ConfirmedOwnerWithProposal {\n  constructor(address newOwner) ConfirmedOwnerWithProposal(newOwner, address(0)) {}\n}\n"},"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"../interfaces/IOwnable.sol\";\n\n/**\n * @title The ConfirmedOwner contract\n * @notice A contract with helpers for basic contract ownership.\n */\ncontract ConfirmedOwnerWithProposal is IOwnable {\n  address private s_owner;\n  address private s_pendingOwner;\n\n  event OwnershipTransferRequested(address indexed from, address indexed to);\n  event OwnershipTransferred(address indexed from, address indexed to);\n\n  constructor(address newOwner, address pendingOwner) {\n    require(newOwner != address(0), \"Cannot set owner to zero\");\n\n    s_owner = newOwner;\n    if (pendingOwner != address(0)) {\n      _transferOwnership(pendingOwner);\n    }\n  }\n\n  /**\n   * @notice Allows an owner to begin transferring ownership to a new address,\n   * pending.\n   */\n  function transferOwnership(address to) public override onlyOwner {\n    _transferOwnership(to);\n  }\n\n  /**\n   * @notice Allows an ownership transfer to be completed by the recipient.\n   */\n  function acceptOwnership() external override {\n    require(msg.sender == s_pendingOwner, \"Must be proposed owner\");\n\n    address oldOwner = s_owner;\n    s_owner = msg.sender;\n    s_pendingOwner = address(0);\n\n    emit OwnershipTransferred(oldOwner, msg.sender);\n  }\n\n  /**\n   * @notice Get the current owner\n   */\n  function owner() public view override returns (address) {\n    return s_owner;\n  }\n\n  /**\n   * @notice validate, transfer ownership, and emit relevant events\n   */\n  function _transferOwnership(address to) private {\n    require(to != msg.sender, \"Cannot transfer to self\");\n\n    s_pendingOwner = to;\n\n    emit OwnershipTransferRequested(s_owner, to);\n  }\n\n  /**\n   * @notice validate access\n   */\n  function _validateOwnership() internal view {\n    require(msg.sender == s_owner, \"Only callable by owner\");\n  }\n\n  /**\n   * @notice Reverts if called by anyone other than the contract owner.\n   */\n  modifier onlyOwner() {\n    _validateOwnership();\n    _;\n  }\n}\n"},"@chainlink/contracts/src/v0.8/shared/interfaces/IERC677Receiver.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.6;\n\ninterface IERC677Receiver {\n  function onTokenTransfer(address sender, uint256 amount, bytes calldata data) external;\n}\n"},"@chainlink/contracts/src/v0.8/shared/interfaces/IOwnable.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface IOwnable {\n  function owner() external returns (address);\n\n  function transferOwnership(address recipient) external;\n\n  function acceptOwnership() external;\n}\n"},"@chainlink/contracts/src/v0.8/shared/interfaces/LinkTokenInterface.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface LinkTokenInterface {\n  function allowance(address owner, address spender) external view returns (uint256 remaining);\n\n  function approve(address spender, uint256 value) external returns (bool success);\n\n  function balanceOf(address owner) external view returns (uint256 balance);\n\n  function decimals() external view returns (uint8 decimalPlaces);\n\n  function decreaseApproval(address spender, uint256 addedValue) external returns (bool success);\n\n  function increaseApproval(address spender, uint256 subtractedValue) external;\n\n  function name() external view returns (string memory tokenName);\n\n  function symbol() external view returns (string memory tokenSymbol);\n\n  function totalSupply() external view returns (uint256 totalTokensIssued);\n\n  function transfer(address to, uint256 value) external returns (bool success);\n\n  function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool success);\n\n  function transferFrom(address from, address to, uint256 value) external returns (bool success);\n}\n"},"@chainlink/contracts/src/v0.8/vendor/@arbitrum/nitro-contracts/src/precompiles/ArbGasInfo.sol":{"content":"// Copyright 2021-2022, Offchain Labs, Inc.\n// For license information, see https://github.com/nitro/blob/master/LICENSE\n// SPDX-License-Identifier: BUSL-1.1\n\npragma solidity >=0.4.21 <0.9.0;\n\ninterface ArbGasInfo {\n    // return gas prices in wei, assuming the specified aggregator is used\n    //        (\n    //            per L2 tx,\n    //            per L1 calldata unit, (zero byte = 4 units, nonzero byte = 16 units)\n    //            per storage allocation,\n    //            per ArbGas base,\n    //            per ArbGas congestion,\n    //            per ArbGas total\n    //        )\n    function getPricesInWeiWithAggregator(address aggregator) external view returns (uint, uint, uint, uint, uint, uint);\n\n    // return gas prices in wei, as described above, assuming the caller's preferred aggregator is used\n    //     if the caller hasn't specified a preferred aggregator, the default aggregator is assumed\n    function getPricesInWei() external view returns (uint, uint, uint, uint, uint, uint);\n\n    // return prices in ArbGas (per L2 tx, per L1 calldata unit, per storage allocation),\n    //       assuming the specified aggregator is used\n    function getPricesInArbGasWithAggregator(address aggregator) external view returns (uint, uint, uint);\n\n    // return gas prices in ArbGas, as described above, assuming the caller's preferred aggregator is used\n    //     if the caller hasn't specified a preferred aggregator, the default aggregator is assumed\n    function getPricesInArbGas() external view returns (uint, uint, uint);\n\n    // return gas accounting parameters (speedLimitPerSecond, gasPoolMax, maxTxGasLimit)\n    function getGasAccountingParams() external view returns (uint, uint, uint);\n\n    // get ArbOS's estimate of the L1 gas price in wei\n    function getL1GasPriceEstimate() external view returns(uint);\n\n    // set ArbOS's estimate of the L1 gas price in wei\n    // reverts unless called by chain owner or designated gas oracle (if any)\n    function setL1GasPriceEstimate(uint priceInWei) external;\n\n    // get L1 gas fees paid by the current transaction (txBaseFeeWei, calldataFeeWei)\n    function getCurrentTxL1GasFees() external view returns(uint);\n}\n"},"@chainlink/contracts/src/v0.8/vendor/@arbitrum/nitro-contracts/src/precompiles/ArbSys.sol":{"content":"// Copyright 2021-2022, Offchain Labs, Inc.\n// For license information, see https://github.com/nitro/blob/master/LICENSE\n// SPDX-License-Identifier: BUSL-1.1\n\npragma solidity >=0.4.21 <0.9.0;\n\n/**\n * @title System level functionality\n * @notice For use by contracts to interact with core L2-specific functionality.\n * Precompiled contract that exists in every Arbitrum chain at address(100), 0x0000000000000000000000000000000000000064.\n */\ninterface ArbSys {\n    /**\n     * @notice Get Arbitrum block number (distinct from L1 block number; Arbitrum genesis block has block number 0)\n     * @return block number as int\n     */\n    function arbBlockNumber() external view returns (uint256);\n\n    /**\n     * @notice Get Arbitrum block hash (reverts unless currentBlockNum-256 <= arbBlockNum < currentBlockNum)\n     * @return block hash\n     */\n    function arbBlockHash(uint256 arbBlockNum) external view returns (bytes32);\n\n    /**\n     * @notice Gets the rollup's unique chain identifier\n     * @return Chain identifier as int\n     */\n    function arbChainID() external view returns (uint256);\n\n    /**\n     * @notice Get internal version number identifying an ArbOS build\n     * @return version number as int\n     */\n    function arbOSVersion() external view returns (uint256);\n\n    /**\n     * @notice Returns 0 since Nitro has no concept of storage gas\n     * @return uint 0\n     */\n    function getStorageGasAvailable() external view returns (uint256);\n\n    /**\n     * @notice (deprecated) check if current call is top level (meaning it was triggered by an EoA or a L1 contract)\n     * @dev this call has been deprecated and may be removed in a future release\n     * @return true if current execution frame is not a call by another L2 contract\n     */\n    function isTopLevelCall() external view returns (bool);\n\n    /**\n     * @notice map L1 sender contract address to its L2 alias\n     * @param sender sender address\n     * @param unused argument no longer used\n     * @return aliased sender address\n     */\n    function mapL1SenderContractAddressToL2Alias(address sender, address unused)\n        external\n        pure\n        returns (address);\n\n    /**\n     * @notice check if the caller (of this caller of this) is an aliased L1 contract address\n     * @return true iff the caller's address is an alias for an L1 contract address\n     */\n    function wasMyCallersAddressAliased() external view returns (bool);\n\n    /**\n     * @notice return the address of the caller (of this caller of this), without applying L1 contract address aliasing\n     * @return address of the caller's caller, without applying L1 contract address aliasing\n     */\n    function myCallersAddressWithoutAliasing() external view returns (address);\n\n    /**\n     * @notice Send given amount of Eth to dest from sender.\n     * This is a convenience function, which is equivalent to calling sendTxToL1 with empty data.\n     * @param destination recipient address on L1\n     * @return unique identifier for this L2-to-L1 transaction.\n     */\n    function withdrawEth(address destination)\n        external\n        payable\n        returns (uint256);\n\n    /**\n     * @notice Send a transaction to L1\n     * @dev it is not possible to execute on the L1 any L2-to-L1 transaction which contains data\n     * to a contract address without any code (as enforced by the Bridge contract).\n     * @param destination recipient address on L1\n     * @param data (optional) calldata for L1 contract call\n     * @return a unique identifier for this L2-to-L1 transaction.\n     */\n    function sendTxToL1(address destination, bytes calldata data)\n        external\n        payable\n        returns (uint256);\n\n    /**\n     * @notice Get send Merkle tree state\n     * @return size number of sends in the history\n     * @return root root hash of the send history\n     * @return partials hashes of partial subtrees in the send history tree\n     */\n    function sendMerkleTreeState()\n        external\n        view\n        returns (\n            uint256 size,\n            bytes32 root,\n            bytes32[] memory partials\n        );\n\n    /**\n     * @notice creates a send txn from L2 to L1\n     * @param position = (level << 192) + leaf = (0 << 192) + leaf = leaf\n     */\n    event L2ToL1Tx(\n        address caller,\n        address indexed destination,\n        uint256 indexed hash,\n        uint256 indexed position,\n        uint256 arbBlockNum,\n        uint256 ethBlockNum,\n        uint256 timestamp,\n        uint256 callvalue,\n        bytes data\n    );\n\n    /// @dev DEPRECATED in favour of the new L2ToL1Tx event above after the nitro upgrade\n    event L2ToL1Transaction(\n        address caller,\n        address indexed destination,\n        uint256 indexed uniqueId,\n        uint256 indexed batchNumber,\n        uint256 indexInBatch,\n        uint256 arbBlockNum,\n        uint256 ethBlockNum,\n        uint256 timestamp,\n        uint256 callvalue,\n        bytes data\n    );\n\n    /**\n     * @notice logs a merkle branch for proof synthesis\n     * @param reserved an index meant only to align the 4th index with L2ToL1Transaction's 4th event\n     * @param hash the merkle hash\n     * @param position = (level << 192) + leaf\n     */\n    event SendMerkleUpdate(\n        uint256 indexed reserved,\n        bytes32 indexed hash,\n        uint256 indexed position\n    );\n}\n"},"@chainlink/contracts/src/v0.8/vrf/VRF.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\n/** ****************************************************************************\n  * @notice Verification of verifiable-random-function (VRF) proofs, following\n  * @notice https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-5.3\n  * @notice See https://eprint.iacr.org/2017/099.pdf for security proofs.\n\n  * @dev Bibliographic references:\n\n  * @dev Goldberg, et al., \"Verifiable Random Functions (VRFs)\", Internet Draft\n  * @dev draft-irtf-cfrg-vrf-05, IETF, Aug 11 2019,\n  * @dev https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05\n\n  * @dev Papadopoulos, et al., \"Making NSEC5 Practical for DNSSEC\", Cryptology\n  * @dev ePrint Archive, Report 2017/099, https://eprint.iacr.org/2017/099.pdf\n  * ****************************************************************************\n  * @dev USAGE\n\n  * @dev The main entry point is randomValueFromVRFProof. See its docstring.\n  * ****************************************************************************\n  * @dev PURPOSE\n\n  * @dev Reggie the Random Oracle (not his real job) wants to provide randomness\n  * @dev to Vera the verifier in such a way that Vera can be sure he's not\n  * @dev making his output up to suit himself. Reggie provides Vera a public key\n  * @dev to which he knows the secret key. Each time Vera provides a seed to\n  * @dev Reggie, he gives back a value which is computed completely\n  * @dev deterministically from the seed and the secret key.\n\n  * @dev Reggie provides a proof by which Vera can verify that the output was\n  * @dev correctly computed once Reggie tells it to her, but without that proof,\n  * @dev the output is computationally indistinguishable to her from a uniform\n  * @dev random sample from the output space.\n\n  * @dev The purpose of this contract is to perform that verification.\n  * ****************************************************************************\n  * @dev DESIGN NOTES\n\n  * @dev The VRF algorithm verified here satisfies the full uniqueness, full\n  * @dev collision resistance, and full pseudo-randomness security properties.\n  * @dev See \"SECURITY PROPERTIES\" below, and\n  * @dev https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-3\n\n  * @dev An elliptic curve point is generally represented in the solidity code\n  * @dev as a uint256[2], corresponding to its affine coordinates in\n  * @dev GF(FIELD_SIZE).\n\n  * @dev For the sake of efficiency, this implementation deviates from the spec\n  * @dev in some minor ways:\n\n  * @dev - Keccak hash rather than the SHA256 hash recommended in\n  * @dev   https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-5.5\n  * @dev   Keccak costs much less gas on the EVM, and provides similar security.\n\n  * @dev - Secp256k1 curve instead of the P-256 or ED25519 curves recommended in\n  * @dev   https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-5.5\n  * @dev   For curve-point multiplication, it's much cheaper to abuse ECRECOVER\n\n  * @dev - hashToCurve recursively hashes until it finds a curve x-ordinate. On\n  * @dev   the EVM, this is slightly more efficient than the recommendation in\n  * @dev   https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-5.4.1.1\n  * @dev   step 5, to concatenate with a nonce then hash, and rehash with the\n  * @dev   nonce updated until a valid x-ordinate is found.\n\n  * @dev - hashToCurve does not include a cipher version string or the byte 0x1\n  * @dev   in the hash message, as recommended in step 5.B of the draft\n  * @dev   standard. They are unnecessary here because no variation in the\n  * @dev   cipher suite is allowed.\n\n  * @dev - Similarly, the hash input in scalarFromCurvePoints does not include a\n  * @dev   commitment to the cipher suite, either, which differs from step 2 of\n  * @dev   https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-5.4.3\n  * @dev   . Also, the hash input is the concatenation of the uncompressed\n  * @dev   points, not the compressed points as recommended in step 3.\n\n  * @dev - In the calculation of the challenge value \"c\", the \"u\" value (i.e.\n  * @dev   the value computed by Reggie as the nonce times the secp256k1\n  * @dev   generator point, see steps 5 and 7 of\n  * @dev   https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-5.3\n  * @dev   ) is replaced by its ethereum address, i.e. the lower 160 bits of the\n  * @dev   keccak hash of the original u. This is because we only verify the\n  * @dev   calculation of u up to its address, by abusing ECRECOVER.\n  * ****************************************************************************\n  * @dev   SECURITY PROPERTIES\n\n  * @dev Here are the security properties for this VRF:\n\n  * @dev Full uniqueness: For any seed and valid VRF public key, there is\n  * @dev   exactly one VRF output which can be proved to come from that seed, in\n  * @dev   the sense that the proof will pass verifyVRFProof.\n\n  * @dev Full collision resistance: It's cryptographically infeasible to find\n  * @dev   two seeds with same VRF output from a fixed, valid VRF key\n\n  * @dev Full pseudorandomness: Absent the proofs that the VRF outputs are\n  * @dev   derived from a given seed, the outputs are computationally\n  * @dev   indistinguishable from randomness.\n\n  * @dev https://eprint.iacr.org/2017/099.pdf, Appendix B contains the proofs\n  * @dev for these properties.\n\n  * @dev For secp256k1, the key validation described in section\n  * @dev https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-5.6\n  * @dev is unnecessary, because secp256k1 has cofactor 1, and the\n  * @dev representation of the public key used here (affine x- and y-ordinates\n  * @dev of the secp256k1 point on the standard y^2=x^3+7 curve) cannot refer to\n  * @dev the point at infinity.\n  * ****************************************************************************\n  * @dev OTHER SECURITY CONSIDERATIONS\n  *\n  * @dev The seed input to the VRF could in principle force an arbitrary amount\n  * @dev of work in hashToCurve, by requiring extra rounds of hashing and\n  * @dev checking whether that's yielded the x ordinate of a secp256k1 point.\n  * @dev However, under the Random Oracle Model the probability of choosing a\n  * @dev point which forces n extra rounds in hashToCurve is 2⁻ⁿ. The base cost\n  * @dev for calling hashToCurve is about 25,000 gas, and each round of checking\n  * @dev for a valid x ordinate costs about 15,555 gas, so to find a seed for\n  * @dev which hashToCurve would cost more than 2,017,000 gas, one would have to\n  * @dev try, in expectation, about 2¹²⁸ seeds, which is infeasible for any\n  * @dev foreseeable computational resources. (25,000 + 128 * 15,555 < 2,017,000.)\n\n  * @dev Since the gas block limit for the Ethereum main net is 10,000,000 gas,\n  * @dev this means it is infeasible for an adversary to prevent correct\n  * @dev operation of this contract by choosing an adverse seed.\n\n  * @dev (See TestMeasureHashToCurveGasCost for verification of the gas cost for\n  * @dev hashToCurve.)\n\n  * @dev It may be possible to make a secure constant-time hashToCurve function.\n  * @dev See notes in hashToCurve docstring.\n*/\ncontract VRF {\n  // See https://www.secg.org/sec2-v2.pdf, section 2.4.1, for these constants.\n  // Number of points in Secp256k1\n  uint256 private constant GROUP_ORDER = 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141;\n  // Prime characteristic of the galois field over which Secp256k1 is defined\n  uint256 private constant FIELD_SIZE =\n    // solium-disable-next-line indentation\n    0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F;\n  uint256 private constant WORD_LENGTH_BYTES = 0x20;\n\n  // (base^exponent) % FIELD_SIZE\n  // Cribbed from https://medium.com/@rbkhmrcr/precompiles-solidity-e5d29bd428c4\n  function bigModExp(uint256 base, uint256 exponent) internal view returns (uint256 exponentiation) {\n    uint256 callResult;\n    uint256[6] memory bigModExpContractInputs;\n    bigModExpContractInputs[0] = WORD_LENGTH_BYTES; // Length of base\n    bigModExpContractInputs[1] = WORD_LENGTH_BYTES; // Length of exponent\n    bigModExpContractInputs[2] = WORD_LENGTH_BYTES; // Length of modulus\n    bigModExpContractInputs[3] = base;\n    bigModExpContractInputs[4] = exponent;\n    bigModExpContractInputs[5] = FIELD_SIZE;\n    uint256[1] memory output;\n    assembly {\n      // solhint-disable-line no-inline-assembly\n      callResult := staticcall(\n        not(0), // Gas cost: no limit\n        0x05, // Bigmodexp contract address\n        bigModExpContractInputs,\n        0xc0, // Length of input segment: 6*0x20-bytes\n        output,\n        0x20 // Length of output segment\n      )\n    }\n    if (callResult == 0) {\n      revert(\"bigModExp failure!\");\n    }\n    return output[0];\n  }\n\n  // Let q=FIELD_SIZE. q % 4 = 3, ∴ x≡r^2 mod q ⇒ x^SQRT_POWER≡±r mod q.  See\n  // https://en.wikipedia.org/wiki/Modular_square_root#Prime_or_prime_power_modulus\n  uint256 private constant SQRT_POWER = (FIELD_SIZE + 1) >> 2;\n\n  // Computes a s.t. a^2 = x in the field. Assumes a exists\n  function squareRoot(uint256 x) internal view returns (uint256) {\n    return bigModExp(x, SQRT_POWER);\n  }\n\n  // The value of y^2 given that (x,y) is on secp256k1.\n  function ySquared(uint256 x) internal pure returns (uint256) {\n    // Curve is y^2=x^3+7. See section 2.4.1 of https://www.secg.org/sec2-v2.pdf\n    uint256 xCubed = mulmod(x, mulmod(x, x, FIELD_SIZE), FIELD_SIZE);\n    return addmod(xCubed, 7, FIELD_SIZE);\n  }\n\n  // True iff p is on secp256k1\n  function isOnCurve(uint256[2] memory p) internal pure returns (bool) {\n    // Section 2.3.6. in https://www.secg.org/sec1-v2.pdf\n    // requires each ordinate to be in [0, ..., FIELD_SIZE-1]\n    require(p[0] < FIELD_SIZE, \"invalid x-ordinate\");\n    require(p[1] < FIELD_SIZE, \"invalid y-ordinate\");\n    return ySquared(p[0]) == mulmod(p[1], p[1], FIELD_SIZE);\n  }\n\n  // Hash x uniformly into {0, ..., FIELD_SIZE-1}.\n  function fieldHash(bytes memory b) internal pure returns (uint256 x_) {\n    x_ = uint256(keccak256(b));\n    // Rejecting if x >= FIELD_SIZE corresponds to step 2.1 in section 2.3.4 of\n    // http://www.secg.org/sec1-v2.pdf , which is part of the definition of\n    // string_to_point in the IETF draft\n    while (x_ >= FIELD_SIZE) {\n      x_ = uint256(keccak256(abi.encodePacked(x_)));\n    }\n  }\n\n  // Hash b to a random point which hopefully lies on secp256k1. The y ordinate\n  // is always even, due to\n  // https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-5.4.1.1\n  // step 5.C, which references arbitrary_string_to_point, defined in\n  // https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-5.5 as\n  // returning the point with given x ordinate, and even y ordinate.\n  function newCandidateSecp256k1Point(bytes memory b) internal view returns (uint256[2] memory p) {\n    unchecked {\n      p[0] = fieldHash(b);\n      p[1] = squareRoot(ySquared(p[0]));\n      if (p[1] % 2 == 1) {\n        // Note that 0 <= p[1] < FIELD_SIZE\n        // so this cannot wrap, we use unchecked to save gas.\n        p[1] = FIELD_SIZE - p[1];\n      }\n    }\n  }\n\n  // Domain-separation tag for initial hash in hashToCurve. Corresponds to\n  // vrf.go/hashToCurveHashPrefix\n  uint256 internal constant HASH_TO_CURVE_HASH_PREFIX = 1;\n\n  // Cryptographic hash function onto the curve.\n  //\n  // Corresponds to algorithm in section 5.4.1.1 of the draft standard. (But see\n  // DESIGN NOTES above for slight differences.)\n  //\n  // TODO(alx): Implement a bounded-computation hash-to-curve, as described in\n  // \"Construction of Rational Points on Elliptic Curves over Finite Fields\"\n  // http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.831.5299&rep=rep1&type=pdf\n  // and suggested by\n  // https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-hash-to-curve-01#section-5.2.2\n  // (Though we can't used exactly that because secp256k1's j-invariant is 0.)\n  //\n  // This would greatly simplify the analysis in \"OTHER SECURITY CONSIDERATIONS\"\n  // https://www.pivotaltracker.com/story/show/171120900\n  function hashToCurve(uint256[2] memory pk, uint256 input) internal view returns (uint256[2] memory rv) {\n    rv = newCandidateSecp256k1Point(abi.encodePacked(HASH_TO_CURVE_HASH_PREFIX, pk, input));\n    while (!isOnCurve(rv)) {\n      rv = newCandidateSecp256k1Point(abi.encodePacked(rv[0]));\n    }\n  }\n\n  /** *********************************************************************\n   * @notice Check that product==scalar*multiplicand\n   *\n   * @dev Based on Vitalik Buterin's idea in ethresear.ch post cited below.\n   *\n   * @param multiplicand: secp256k1 point\n   * @param scalar: non-zero GF(GROUP_ORDER) scalar\n   * @param product: secp256k1 expected to be multiplier * multiplicand\n   * @return verifies true iff product==scalar*multiplicand, with cryptographically high probability\n   */\n  function ecmulVerify(\n    uint256[2] memory multiplicand,\n    uint256 scalar,\n    uint256[2] memory product\n  ) internal pure returns (bool verifies) {\n    require(scalar != 0, \"zero scalar\"); // Rules out an ecrecover failure case\n    uint256 x = multiplicand[0]; // x ordinate of multiplicand\n    uint8 v = multiplicand[1] % 2 == 0 ? 27 : 28; // parity of y ordinate\n    // https://ethresear.ch/t/you-can-kinda-abuse-ecrecover-to-do-ecmul-in-secp256k1-today/2384/9\n    // Point corresponding to address ecrecover(0, v, x, s=scalar*x) is\n    // (x⁻¹ mod GROUP_ORDER) * (scalar * x * multiplicand - 0 * g), i.e.\n    // scalar*multiplicand. See https://crypto.stackexchange.com/a/18106\n    bytes32 scalarTimesX = bytes32(mulmod(scalar, x, GROUP_ORDER));\n    address actual = ecrecover(bytes32(0), v, bytes32(x), scalarTimesX);\n    // Explicit conversion to address takes bottom 160 bits\n    address expected = address(uint160(uint256(keccak256(abi.encodePacked(product)))));\n    return (actual == expected);\n  }\n\n  // Returns x1/z1-x2/z2=(x1z2-x2z1)/(z1z2) in projective coordinates on P¹(𝔽ₙ)\n  function projectiveSub(\n    uint256 x1,\n    uint256 z1,\n    uint256 x2,\n    uint256 z2\n  ) internal pure returns (uint256 x3, uint256 z3) {\n    unchecked {\n      uint256 num1 = mulmod(z2, x1, FIELD_SIZE);\n      // Note this cannot wrap since x2 is a point in [0, FIELD_SIZE-1]\n      // we use unchecked to save gas.\n      uint256 num2 = mulmod(FIELD_SIZE - x2, z1, FIELD_SIZE);\n      (x3, z3) = (addmod(num1, num2, FIELD_SIZE), mulmod(z1, z2, FIELD_SIZE));\n    }\n  }\n\n  // Returns x1/z1*x2/z2=(x1x2)/(z1z2), in projective coordinates on P¹(𝔽ₙ)\n  function projectiveMul(\n    uint256 x1,\n    uint256 z1,\n    uint256 x2,\n    uint256 z2\n  ) internal pure returns (uint256 x3, uint256 z3) {\n    (x3, z3) = (mulmod(x1, x2, FIELD_SIZE), mulmod(z1, z2, FIELD_SIZE));\n  }\n\n  /** **************************************************************************\n        @notice Computes elliptic-curve sum, in projective co-ordinates\n\n        @dev Using projective coordinates avoids costly divisions\n\n        @dev To use this with p and q in affine coordinates, call\n        @dev projectiveECAdd(px, py, qx, qy). This will return\n        @dev the addition of (px, py, 1) and (qx, qy, 1), in the\n        @dev secp256k1 group.\n\n        @dev This can be used to calculate the z which is the inverse to zInv\n        @dev in isValidVRFOutput. But consider using a faster\n        @dev re-implementation such as ProjectiveECAdd in the golang vrf package.\n\n        @dev This function assumes [px,py,1],[qx,qy,1] are valid projective\n             coordinates of secp256k1 points. That is safe in this contract,\n             because this method is only used by linearCombination, which checks\n             points are on the curve via ecrecover.\n        **************************************************************************\n        @param px The first affine coordinate of the first summand\n        @param py The second affine coordinate of the first summand\n        @param qx The first affine coordinate of the second summand\n        @param qy The second affine coordinate of the second summand\n\n        (px,py) and (qx,qy) must be distinct, valid secp256k1 points.\n        **************************************************************************\n        Return values are projective coordinates of [px,py,1]+[qx,qy,1] as points\n        on secp256k1, in P²(𝔽ₙ)\n        @return sx\n        @return sy\n        @return sz\n    */\n  function projectiveECAdd(\n    uint256 px,\n    uint256 py,\n    uint256 qx,\n    uint256 qy\n  ) internal pure returns (uint256 sx, uint256 sy, uint256 sz) {\n    unchecked {\n      // See \"Group law for E/K : y^2 = x^3 + ax + b\", in section 3.1.2, p. 80,\n      // \"Guide to Elliptic Curve Cryptography\" by Hankerson, Menezes and Vanstone\n      // We take the equations there for (sx,sy), and homogenize them to\n      // projective coordinates. That way, no inverses are required, here, and we\n      // only need the one inverse in affineECAdd.\n\n      // We only need the \"point addition\" equations from Hankerson et al. Can\n      // skip the \"point doubling\" equations because p1 == p2 is cryptographically\n      // impossible, and required not to be the case in linearCombination.\n\n      // Add extra \"projective coordinate\" to the two points\n      (uint256 z1, uint256 z2) = (1, 1);\n\n      // (lx, lz) = (qy-py)/(qx-px), i.e., gradient of secant line.\n      // Cannot wrap since px and py are in [0, FIELD_SIZE-1]\n      uint256 lx = addmod(qy, FIELD_SIZE - py, FIELD_SIZE);\n      uint256 lz = addmod(qx, FIELD_SIZE - px, FIELD_SIZE);\n\n      uint256 dx; // Accumulates denominator from sx calculation\n      // sx=((qy-py)/(qx-px))^2-px-qx\n      (sx, dx) = projectiveMul(lx, lz, lx, lz); // ((qy-py)/(qx-px))^2\n      (sx, dx) = projectiveSub(sx, dx, px, z1); // ((qy-py)/(qx-px))^2-px\n      (sx, dx) = projectiveSub(sx, dx, qx, z2); // ((qy-py)/(qx-px))^2-px-qx\n\n      uint256 dy; // Accumulates denominator from sy calculation\n      // sy=((qy-py)/(qx-px))(px-sx)-py\n      (sy, dy) = projectiveSub(px, z1, sx, dx); // px-sx\n      (sy, dy) = projectiveMul(sy, dy, lx, lz); // ((qy-py)/(qx-px))(px-sx)\n      (sy, dy) = projectiveSub(sy, dy, py, z1); // ((qy-py)/(qx-px))(px-sx)-py\n\n      if (dx != dy) {\n        // Cross-multiply to put everything over a common denominator\n        sx = mulmod(sx, dy, FIELD_SIZE);\n        sy = mulmod(sy, dx, FIELD_SIZE);\n        sz = mulmod(dx, dy, FIELD_SIZE);\n      } else {\n        // Already over a common denominator, use that for z ordinate\n        sz = dx;\n      }\n    }\n  }\n\n  // p1+p2, as affine points on secp256k1.\n  //\n  // invZ must be the inverse of the z returned by projectiveECAdd(p1, p2).\n  // It is computed off-chain to save gas.\n  //\n  // p1 and p2 must be distinct, because projectiveECAdd doesn't handle\n  // point doubling.\n  function affineECAdd(\n    uint256[2] memory p1,\n    uint256[2] memory p2,\n    uint256 invZ\n  ) internal pure returns (uint256[2] memory) {\n    uint256 x;\n    uint256 y;\n    uint256 z;\n    (x, y, z) = projectiveECAdd(p1[0], p1[1], p2[0], p2[1]);\n    require(mulmod(z, invZ, FIELD_SIZE) == 1, \"invZ must be inverse of z\");\n    // Clear the z ordinate of the projective representation by dividing through\n    // by it, to obtain the affine representation\n    return [mulmod(x, invZ, FIELD_SIZE), mulmod(y, invZ, FIELD_SIZE)];\n  }\n\n  // True iff address(c*p+s*g) == lcWitness, where g is generator. (With\n  // cryptographically high probability.)\n  function verifyLinearCombinationWithGenerator(\n    uint256 c,\n    uint256[2] memory p,\n    uint256 s,\n    address lcWitness\n  ) internal pure returns (bool) {\n    // Rule out ecrecover failure modes which return address 0.\n    unchecked {\n      require(lcWitness != address(0), \"bad witness\");\n      uint8 v = (p[1] % 2 == 0) ? 27 : 28; // parity of y-ordinate of p\n      // Note this cannot wrap (X - Y % X), but we use unchecked to save\n      // gas.\n      bytes32 pseudoHash = bytes32(GROUP_ORDER - mulmod(p[0], s, GROUP_ORDER)); // -s*p[0]\n      bytes32 pseudoSignature = bytes32(mulmod(c, p[0], GROUP_ORDER)); // c*p[0]\n      // https://ethresear.ch/t/you-can-kinda-abuse-ecrecover-to-do-ecmul-in-secp256k1-today/2384/9\n      // The point corresponding to the address returned by\n      // ecrecover(-s*p[0],v,p[0],c*p[0]) is\n      // (p[0]⁻¹ mod GROUP_ORDER)*(c*p[0]-(-s)*p[0]*g)=c*p+s*g.\n      // See https://crypto.stackexchange.com/a/18106\n      // https://bitcoin.stackexchange.com/questions/38351/ecdsa-v-r-s-what-is-v\n      address computed = ecrecover(pseudoHash, v, bytes32(p[0]), pseudoSignature);\n      return computed == lcWitness;\n    }\n  }\n\n  // c*p1 + s*p2. Requires cp1Witness=c*p1 and sp2Witness=s*p2. Also\n  // requires cp1Witness != sp2Witness (which is fine for this application,\n  // since it is cryptographically impossible for them to be equal. In the\n  // (cryptographically impossible) case that a prover accidentally derives\n  // a proof with equal c*p1 and s*p2, they should retry with a different\n  // proof nonce.) Assumes that all points are on secp256k1\n  // (which is checked in verifyVRFProof below.)\n  function linearCombination(\n    uint256 c,\n    uint256[2] memory p1,\n    uint256[2] memory cp1Witness,\n    uint256 s,\n    uint256[2] memory p2,\n    uint256[2] memory sp2Witness,\n    uint256 zInv\n  ) internal pure returns (uint256[2] memory) {\n    unchecked {\n      // Note we are relying on the wrap around here\n      require((cp1Witness[0] % FIELD_SIZE) != (sp2Witness[0] % FIELD_SIZE), \"points in sum must be distinct\");\n      require(ecmulVerify(p1, c, cp1Witness), \"First mul check failed\");\n      require(ecmulVerify(p2, s, sp2Witness), \"Second mul check failed\");\n      return affineECAdd(cp1Witness, sp2Witness, zInv);\n    }\n  }\n\n  // Domain-separation tag for the hash taken in scalarFromCurvePoints.\n  // Corresponds to scalarFromCurveHashPrefix in vrf.go\n  uint256 internal constant SCALAR_FROM_CURVE_POINTS_HASH_PREFIX = 2;\n\n  // Pseudo-random number from inputs. Matches vrf.go/scalarFromCurvePoints, and\n  // https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-5.4.3\n  // The draft calls (in step 7, via the definition of string_to_int, in\n  // https://datatracker.ietf.org/doc/html/rfc8017#section-4.2 ) for taking the\n  // first hash without checking that it corresponds to a number less than the\n  // group order, which will lead to a slight bias in the sample.\n  //\n  // TODO(alx): We could save a bit of gas by following the standard here and\n  // using the compressed representation of the points, if we collated the y\n  // parities into a single bytes32.\n  // https://www.pivotaltracker.com/story/show/171120588\n  function scalarFromCurvePoints(\n    uint256[2] memory hash,\n    uint256[2] memory pk,\n    uint256[2] memory gamma,\n    address uWitness,\n    uint256[2] memory v\n  ) internal pure returns (uint256 s) {\n    return uint256(keccak256(abi.encodePacked(SCALAR_FROM_CURVE_POINTS_HASH_PREFIX, hash, pk, gamma, v, uWitness)));\n  }\n\n  // True if (gamma, c, s) is a correctly constructed randomness proof from pk\n  // and seed. zInv must be the inverse of the third ordinate from\n  // projectiveECAdd applied to cGammaWitness and sHashWitness. Corresponds to\n  // section 5.3 of the IETF draft.\n  //\n  // TODO(alx): Since I'm only using pk in the ecrecover call, I could only pass\n  // the x ordinate, and the parity of the y ordinate in the top bit of uWitness\n  // (which I could make a uint256 without using any extra space.) Would save\n  // about 2000 gas. https://www.pivotaltracker.com/story/show/170828567\n  function verifyVRFProof(\n    uint256[2] memory pk,\n    uint256[2] memory gamma,\n    uint256 c,\n    uint256 s,\n    uint256 seed,\n    address uWitness,\n    uint256[2] memory cGammaWitness,\n    uint256[2] memory sHashWitness,\n    uint256 zInv\n  ) internal view {\n    unchecked {\n      require(isOnCurve(pk), \"public key is not on curve\");\n      require(isOnCurve(gamma), \"gamma is not on curve\");\n      require(isOnCurve(cGammaWitness), \"cGammaWitness is not on curve\");\n      require(isOnCurve(sHashWitness), \"sHashWitness is not on curve\");\n      // Step 5. of IETF draft section 5.3 (pk corresponds to 5.3's Y, and here\n      // we use the address of u instead of u itself. Also, here we add the\n      // terms instead of taking the difference, and in the proof construction in\n      // vrf.GenerateProof, we correspondingly take the difference instead of\n      // taking the sum as they do in step 7 of section 5.1.)\n      require(verifyLinearCombinationWithGenerator(c, pk, s, uWitness), \"addr(c*pk+s*g)!=_uWitness\");\n      // Step 4. of IETF draft section 5.3 (pk corresponds to Y, seed to alpha_string)\n      uint256[2] memory hash = hashToCurve(pk, seed);\n      // Step 6. of IETF draft section 5.3, but see note for step 5 about +/- terms\n      uint256[2] memory v = linearCombination(c, gamma, cGammaWitness, s, hash, sHashWitness, zInv);\n      // Steps 7. and 8. of IETF draft section 5.3\n      uint256 derivedC = scalarFromCurvePoints(hash, pk, gamma, uWitness, v);\n      require(c == derivedC, \"invalid proof\");\n    }\n  }\n\n  // Domain-separation tag for the hash used as the final VRF output.\n  // Corresponds to vrfRandomOutputHashPrefix in vrf.go\n  uint256 internal constant VRF_RANDOM_OUTPUT_HASH_PREFIX = 3;\n\n  struct Proof {\n    uint256[2] pk;\n    uint256[2] gamma;\n    uint256 c;\n    uint256 s;\n    uint256 seed;\n    address uWitness;\n    uint256[2] cGammaWitness;\n    uint256[2] sHashWitness;\n    uint256 zInv;\n  }\n\n  /* ***************************************************************************\n     * @notice Returns proof's output, if proof is valid. Otherwise reverts\n\n     * @param proof vrf proof components\n     * @param seed  seed used to generate the vrf output\n     *\n     * Throws if proof is invalid, otherwise:\n     * @return output i.e., the random output implied by the proof\n     * ***************************************************************************\n     */\n  function randomValueFromVRFProof(Proof memory proof, uint256 seed) internal view returns (uint256 output) {\n    verifyVRFProof(\n      proof.pk,\n      proof.gamma,\n      proof.c,\n      proof.s,\n      seed,\n      proof.uWitness,\n      proof.cGammaWitness,\n      proof.sHashWitness,\n      proof.zInv\n    );\n    output = uint256(keccak256(abi.encode(VRF_RANDOM_OUTPUT_HASH_PREFIX, proof.gamma)));\n  }\n}\n"},"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.4;\n\n/** ****************************************************************************\n * @notice Interface for contracts using VRF randomness\n * *****************************************************************************\n * @dev PURPOSE\n *\n * @dev Reggie the Random Oracle (not his real job) wants to provide randomness\n * @dev to Vera the verifier in such a way that Vera can be sure he's not\n * @dev making his output up to suit himself. Reggie provides Vera a public key\n * @dev to which he knows the secret key. Each time Vera provides a seed to\n * @dev Reggie, he gives back a value which is computed completely\n * @dev deterministically from the seed and the secret key.\n *\n * @dev Reggie provides a proof by which Vera can verify that the output was\n * @dev correctly computed once Reggie tells it to her, but without that proof,\n * @dev the output is indistinguishable to her from a uniform random sample\n * @dev from the output space.\n *\n * @dev The purpose of this contract is to make it easy for unrelated contracts\n * @dev to talk to Vera the verifier about the work Reggie is doing, to provide\n * @dev simple access to a verifiable source of randomness. It ensures 2 things:\n * @dev 1. The fulfillment came from the VRFCoordinator\n * @dev 2. The consumer contract implements fulfillRandomWords.\n * *****************************************************************************\n * @dev USAGE\n *\n * @dev Calling contracts must inherit from VRFConsumerBase, and can\n * @dev initialize VRFConsumerBase's attributes in their constructor as\n * @dev shown:\n *\n * @dev   contract VRFConsumer {\n * @dev     constructor(<other arguments>, address _vrfCoordinator, address _link)\n * @dev       VRFConsumerBase(_vrfCoordinator) public {\n * @dev         <initialization with other arguments goes here>\n * @dev       }\n * @dev   }\n *\n * @dev The oracle will have given you an ID for the VRF keypair they have\n * @dev committed to (let's call it keyHash). Create subscription, fund it\n * @dev and your consumer contract as a consumer of it (see VRFCoordinatorInterface\n * @dev subscription management functions).\n * @dev Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,\n * @dev callbackGasLimit, numWords),\n * @dev see (VRFCoordinatorInterface for a description of the arguments).\n *\n * @dev Once the VRFCoordinator has received and validated the oracle's response\n * @dev to your request, it will call your contract's fulfillRandomWords method.\n *\n * @dev The randomness argument to fulfillRandomWords is a set of random words\n * @dev generated from your requestId and the blockHash of the request.\n *\n * @dev If your contract could have concurrent requests open, you can use the\n * @dev requestId returned from requestRandomWords to track which response is associated\n * @dev with which randomness request.\n * @dev See \"SECURITY CONSIDERATIONS\" for principles to keep in mind,\n * @dev if your contract could have multiple requests in flight simultaneously.\n *\n * @dev Colliding `requestId`s are cryptographically impossible as long as seeds\n * @dev differ.\n *\n * *****************************************************************************\n * @dev SECURITY CONSIDERATIONS\n *\n * @dev A method with the ability to call your fulfillRandomness method directly\n * @dev could spoof a VRF response with any random value, so it's critical that\n * @dev it cannot be directly called by anything other than this base contract\n * @dev (specifically, by the VRFConsumerBase.rawFulfillRandomness method).\n *\n * @dev For your users to trust that your contract's random behavior is free\n * @dev from malicious interference, it's best if you can write it so that all\n * @dev behaviors implied by a VRF response are executed *during* your\n * @dev fulfillRandomness method. If your contract must store the response (or\n * @dev anything derived from it) and use it later, you must ensure that any\n * @dev user-significant behavior which depends on that stored value cannot be\n * @dev manipulated by a subsequent VRF request.\n *\n * @dev Similarly, both miners and the VRF oracle itself have some influence\n * @dev over the order in which VRF responses appear on the blockchain, so if\n * @dev your contract could have multiple VRF requests in flight simultaneously,\n * @dev you must ensure that the order in which the VRF responses arrive cannot\n * @dev be used to manipulate your contract's user-significant behavior.\n *\n * @dev Since the block hash of the block which contains the requestRandomness\n * @dev call is mixed into the input to the VRF *last*, a sufficiently powerful\n * @dev miner could, in principle, fork the blockchain to evict the block\n * @dev containing the request, forcing the request to be included in a\n * @dev different block with a different hash, and therefore a different input\n * @dev to the VRF. However, such an attack would incur a substantial economic\n * @dev cost. This cost scales with the number of blocks the VRF oracle waits\n * @dev until it calls responds to a request. It is for this reason that\n * @dev that you can signal to an oracle you'd like them to wait longer before\n * @dev responding to the request (however this is not enforced in the contract\n * @dev and so remains effective only in the case of unmodified oracle software).\n */\nabstract contract VRFConsumerBaseV2 {\n  error OnlyCoordinatorCanFulfill(address have, address want);\n  address private immutable vrfCoordinator;\n\n  /**\n   * @param _vrfCoordinator address of VRFCoordinator contract\n   */\n  constructor(address _vrfCoordinator) {\n    vrfCoordinator = _vrfCoordinator;\n  }\n\n  /**\n   * @notice fulfillRandomness handles the VRF response. Your contract must\n   * @notice implement it. See \"SECURITY CONSIDERATIONS\" above for important\n   * @notice principles to keep in mind when implementing your fulfillRandomness\n   * @notice method.\n   *\n   * @dev VRFConsumerBaseV2 expects its subcontracts to have a method with this\n   * @dev signature, and will call it once it has verified the proof\n   * @dev associated with the randomness. (It is triggered via a call to\n   * @dev rawFulfillRandomness, below.)\n   *\n   * @param requestId The Id initially returned by requestRandomness\n   * @param randomWords the VRF output expanded to the requested number of words\n   */\n  function fulfillRandomWords(uint256 requestId, uint256[] memory randomWords) internal virtual;\n\n  // rawFulfillRandomness is called by VRFCoordinator when it receives a valid VRF\n  // proof. rawFulfillRandomness then calls fulfillRandomness, after validating\n  // the origin of the call\n  function rawFulfillRandomWords(uint256 requestId, uint256[] memory randomWords) external {\n    if (msg.sender != vrfCoordinator) {\n      revert OnlyCoordinatorCanFulfill(msg.sender, vrfCoordinator);\n    }\n    fulfillRandomWords(requestId, randomWords);\n  }\n}\n"},"@chainlink/contracts/src/v0.8/vrf/VRFCoordinatorV2.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.4;\n\nimport \"../shared/interfaces/LinkTokenInterface.sol\";\nimport \"../interfaces/BlockhashStoreInterface.sol\";\nimport \"../interfaces/AggregatorV3Interface.sol\";\nimport \"../interfaces/VRFCoordinatorV2Interface.sol\";\nimport \"../interfaces/TypeAndVersionInterface.sol\";\nimport \"../shared/interfaces/IERC677Receiver.sol\";\nimport \"./VRF.sol\";\nimport \"../shared/access/ConfirmedOwner.sol\";\nimport \"./VRFConsumerBaseV2.sol\";\nimport \"../ChainSpecificUtil.sol\";\n\ncontract VRFCoordinatorV2 is\n    VRF,\n    ConfirmedOwner,\n    TypeAndVersionInterface,\n    VRFCoordinatorV2Interface,\n    IERC677Receiver\n{\n    LinkTokenInterface public immutable LINK;\n    AggregatorV3Interface public immutable LINK_ETH_FEED;\n    BlockhashStoreInterface public immutable BLOCKHASH_STORE;\n\n    // We need to maintain a list of consuming addresses.\n    // This bound ensures we are able to loop over them as needed.\n    // Should a user require more consumers, they can use multiple subscriptions.\n    uint16 public constant MAX_CONSUMERS = 100;\n    error TooManyConsumers();\n    error InsufficientBalance();\n    error InvalidConsumer(uint64 subId, address consumer);\n    error InvalidSubscription();\n    error OnlyCallableFromLink();\n    error InvalidCalldata();\n    error MustBeSubOwner(address owner);\n    error PendingRequestExists();\n    error MustBeRequestedOwner(address proposedOwner);\n    error BalanceInvariantViolated(\n        uint256 internalBalance,\n        uint256 externalBalance\n    ); // Should never happen\n    event FundsRecovered(address to, uint256 amount);\n    // We use the subscription struct (1 word)\n    // at fulfillment time.\n    struct Subscription {\n        // There are only 1e9*1e18 = 1e27 juels in existence, so the balance can fit in uint96 (2^96 ~ 7e28)\n        uint96 balance; // Common link balance used for all consumer requests.\n        uint64 reqCount; // For fee tiers\n    }\n    // We use the config for the mgmt APIs\n    struct SubscriptionConfig {\n        address owner; // Owner can fund/withdraw/cancel the sub.\n        address requestedOwner; // For safely transferring sub ownership.\n        // Maintains the list of keys in s_consumers.\n        // We do this for 2 reasons:\n        // 1. To be able to clean up all keys from s_consumers when canceling a subscription.\n        // 2. To be able to return the list of all consumers in getSubscription.\n        // Note that we need the s_consumers map to be able to directly check if a\n        // consumer is valid without reading all the consumers from storage.\n        address[] consumers;\n    }\n    // Note a nonce of 0 indicates an the consumer is not assigned to that subscription.\n    mapping(address => mapping(uint64 => uint64)) /* consumer */ /* subId */ /* nonce */\n        private s_consumers;\n    mapping(uint64 => SubscriptionConfig) /* subId */ /* subscriptionConfig */\n        private s_subscriptionConfigs;\n    mapping(uint64 => Subscription) /* subId */ /* subscription */\n        private s_subscriptions;\n    // We make the sub count public so that its possible to\n    // get all the current subscriptions via getSubscription.\n    uint64 private s_currentSubId;\n    // s_totalBalance tracks the total link sent to/from\n    // this contract through onTokenTransfer, cancelSubscription and oracleWithdraw.\n    // A discrepancy with this contract's link balance indicates someone\n    // sent tokens using transfer and so we may need to use recoverFunds.\n    uint96 private s_totalBalance;\n    event SubscriptionCreated(uint64 indexed subId, address owner);\n    event SubscriptionFunded(\n        uint64 indexed subId,\n        uint256 oldBalance,\n        uint256 newBalance\n    );\n    event SubscriptionConsumerAdded(uint64 indexed subId, address consumer);\n    event SubscriptionConsumerRemoved(uint64 indexed subId, address consumer);\n    event SubscriptionCanceled(\n        uint64 indexed subId,\n        address to,\n        uint256 amount\n    );\n    event SubscriptionOwnerTransferRequested(\n        uint64 indexed subId,\n        address from,\n        address to\n    );\n    event SubscriptionOwnerTransferred(\n        uint64 indexed subId,\n        address from,\n        address to\n    );\n\n    // Set this maximum to 200 to give us a 56 block window to fulfill\n    // the request before requiring the block hash feeder.\n    uint16 public constant MAX_REQUEST_CONFIRMATIONS = 200;\n    uint32 public constant MAX_NUM_WORDS = 500;\n    // 5k is plenty for an EXTCODESIZE call (2600) + warm CALL (100)\n    // and some arithmetic operations.\n    uint256 private constant GAS_FOR_CALL_EXACT_CHECK = 5_000;\n    error InvalidRequestConfirmations(uint16 have, uint16 min, uint16 max);\n    error GasLimitTooBig(uint32 have, uint32 want);\n    error NumWordsTooBig(uint32 have, uint32 want);\n    error ProvingKeyAlreadyRegistered(bytes32 keyHash);\n    error NoSuchProvingKey(bytes32 keyHash);\n    error InvalidLinkWeiPrice(int256 linkWei);\n    error InsufficientGasForConsumer(uint256 have, uint256 want);\n    error NoCorrespondingRequest();\n    error IncorrectCommitment();\n    error BlockhashNotInStore(uint256 blockNum);\n    error PaymentTooLarge();\n    error Reentrant();\n    struct RequestCommitment {\n        uint64 blockNum;\n        uint64 subId;\n        uint32 callbackGasLimit;\n        uint32 numWords;\n        address sender;\n    }\n    mapping(bytes32 => address) /* keyHash */ /* oracle */\n        private s_provingKeys;\n    bytes32[] private s_provingKeyHashes;\n    mapping(address => uint96) /* oracle */ /* LINK balance */\n        private s_withdrawableTokens;\n    mapping(uint256 => bytes32) /* requestID */ /* commitment */\n        private s_requestCommitments;\n    event ProvingKeyRegistered(bytes32 keyHash, address indexed oracle);\n    event ProvingKeyDeregistered(bytes32 keyHash, address indexed oracle);\n    event RandomWordsRequested(\n        bytes32 indexed keyHash,\n        uint256 requestId,\n        uint256 preSeed,\n        uint64 indexed subId,\n        uint16 minimumRequestConfirmations,\n        uint32 callbackGasLimit,\n        uint32 numWords,\n        address indexed sender\n    );\n    event RandomWordsFulfilled(\n        uint256 indexed requestId,\n        uint256 outputSeed,\n        uint96 payment,\n        bool success\n    );\n\n    struct Config {\n        uint16 minimumRequestConfirmations;\n        uint32 maxGasLimit;\n        // Reentrancy protection.\n        bool reentrancyLock;\n        // stalenessSeconds is how long before we consider the feed price to be stale\n        // and fallback to fallbackWeiPerUnitLink.\n        uint32 stalenessSeconds;\n        // Gas to cover oracle payment after we calculate the payment.\n        // We make it configurable in case those operations are repriced.\n        uint32 gasAfterPaymentCalculation;\n    }\n    int256 private s_fallbackWeiPerUnitLink;\n    Config private s_config;\n    FeeConfig private s_feeConfig;\n    struct FeeConfig {\n        // Flat fee charged per fulfillment in millionths of link\n        // So fee range is [0, 2^32/10^6].\n        uint32 fulfillmentFlatFeeLinkPPMTier1;\n        uint32 fulfillmentFlatFeeLinkPPMTier2;\n        uint32 fulfillmentFlatFeeLinkPPMTier3;\n        uint32 fulfillmentFlatFeeLinkPPMTier4;\n        uint32 fulfillmentFlatFeeLinkPPMTier5;\n        uint24 reqsForTier2;\n        uint24 reqsForTier3;\n        uint24 reqsForTier4;\n        uint24 reqsForTier5;\n    }\n    event ConfigSet(\n        uint16 minimumRequestConfirmations,\n        uint32 maxGasLimit,\n        uint32 stalenessSeconds,\n        uint32 gasAfterPaymentCalculation,\n        int256 fallbackWeiPerUnitLink,\n        FeeConfig feeConfig\n    );\n\n    constructor(\n        address link,\n        address blockhashStore,\n        address linkEthFeed\n    ) ConfirmedOwner(msg.sender) {\n        LINK = LinkTokenInterface(link);\n        LINK_ETH_FEED = AggregatorV3Interface(linkEthFeed);\n        BLOCKHASH_STORE = BlockhashStoreInterface(blockhashStore);\n    }\n\n    /**\n     * @notice Registers a proving key to an oracle.\n     * @param oracle address of the oracle\n     * @param publicProvingKey key that oracle can use to submit vrf fulfillments\n     */\n    function registerProvingKey(\n        address oracle,\n        uint256[2] calldata publicProvingKey\n    ) external onlyOwner {\n        bytes32 kh = hashOfKey(publicProvingKey);\n        if (s_provingKeys[kh] != address(0)) {\n            revert ProvingKeyAlreadyRegistered(kh);\n        }\n        s_provingKeys[kh] = oracle;\n        s_provingKeyHashes.push(kh);\n        emit ProvingKeyRegistered(kh, oracle);\n    }\n\n    /**\n     * @notice Deregisters a proving key to an oracle.\n     * @param publicProvingKey key that oracle can use to submit vrf fulfillments\n     */\n    function deregisterProvingKey(\n        uint256[2] calldata publicProvingKey\n    ) external onlyOwner {\n        bytes32 kh = hashOfKey(publicProvingKey);\n        address oracle = s_provingKeys[kh];\n        if (oracle == address(0)) {\n            revert NoSuchProvingKey(kh);\n        }\n        delete s_provingKeys[kh];\n        for (uint256 i = 0; i < s_provingKeyHashes.length; i++) {\n            if (s_provingKeyHashes[i] == kh) {\n                bytes32 last = s_provingKeyHashes[\n                    s_provingKeyHashes.length - 1\n                ];\n                // Copy last element and overwrite kh to be deleted with it\n                s_provingKeyHashes[i] = last;\n                s_provingKeyHashes.pop();\n            }\n        }\n        emit ProvingKeyDeregistered(kh, oracle);\n    }\n\n    /**\n     * @notice Returns the proving key hash key associated with this public key\n     * @param publicKey the key to return the hash of\n     */\n    function hashOfKey(\n        uint256[2] memory publicKey\n    ) public pure returns (bytes32) {\n        return keccak256(abi.encode(publicKey));\n    }\n\n    /**\n     * @notice Sets the configuration of the vrfv2 coordinator\n     * @param minimumRequestConfirmations global min for request confirmations\n     * @param maxGasLimit global max for request gas limit\n     * @param stalenessSeconds if the eth/link feed is more stale then this, use the fallback price\n     * @param gasAfterPaymentCalculation gas used in doing accounting after completing the gas measurement\n     * @param fallbackWeiPerUnitLink fallback eth/link price in the case of a stale feed\n     * @param feeConfig fee tier configuration\n     */\n    function setConfig(\n        uint16 minimumRequestConfirmations,\n        uint32 maxGasLimit,\n        uint32 stalenessSeconds,\n        uint32 gasAfterPaymentCalculation,\n        int256 fallbackWeiPerUnitLink,\n        FeeConfig memory feeConfig\n    ) external onlyOwner {\n        if (minimumRequestConfirmations > MAX_REQUEST_CONFIRMATIONS) {\n            revert InvalidRequestConfirmations(\n                minimumRequestConfirmations,\n                minimumRequestConfirmations,\n                MAX_REQUEST_CONFIRMATIONS\n            );\n        }\n        if (fallbackWeiPerUnitLink <= 0) {\n            revert InvalidLinkWeiPrice(fallbackWeiPerUnitLink);\n        }\n        s_config = Config({\n            minimumRequestConfirmations: minimumRequestConfirmations,\n            maxGasLimit: maxGasLimit,\n            stalenessSeconds: stalenessSeconds,\n            gasAfterPaymentCalculation: gasAfterPaymentCalculation,\n            reentrancyLock: false\n        });\n        s_feeConfig = feeConfig;\n        s_fallbackWeiPerUnitLink = fallbackWeiPerUnitLink;\n        emit ConfigSet(\n            minimumRequestConfirmations,\n            maxGasLimit,\n            stalenessSeconds,\n            gasAfterPaymentCalculation,\n            fallbackWeiPerUnitLink,\n            s_feeConfig\n        );\n    }\n\n    function getConfig()\n        external\n        view\n        returns (\n            uint16 minimumRequestConfirmations,\n            uint32 maxGasLimit,\n            uint32 stalenessSeconds,\n            uint32 gasAfterPaymentCalculation\n        )\n    {\n        return (\n            s_config.minimumRequestConfirmations,\n            s_config.maxGasLimit,\n            s_config.stalenessSeconds,\n            s_config.gasAfterPaymentCalculation\n        );\n    }\n\n    function getFeeConfig()\n        external\n        view\n        returns (\n            uint32 fulfillmentFlatFeeLinkPPMTier1,\n            uint32 fulfillmentFlatFeeLinkPPMTier2,\n            uint32 fulfillmentFlatFeeLinkPPMTier3,\n            uint32 fulfillmentFlatFeeLinkPPMTier4,\n            uint32 fulfillmentFlatFeeLinkPPMTier5,\n            uint24 reqsForTier2,\n            uint24 reqsForTier3,\n            uint24 reqsForTier4,\n            uint24 reqsForTier5\n        )\n    {\n        return (\n            s_feeConfig.fulfillmentFlatFeeLinkPPMTier1,\n            s_feeConfig.fulfillmentFlatFeeLinkPPMTier2,\n            s_feeConfig.fulfillmentFlatFeeLinkPPMTier3,\n            s_feeConfig.fulfillmentFlatFeeLinkPPMTier4,\n            s_feeConfig.fulfillmentFlatFeeLinkPPMTier5,\n            s_feeConfig.reqsForTier2,\n            s_feeConfig.reqsForTier3,\n            s_feeConfig.reqsForTier4,\n            s_feeConfig.reqsForTier5\n        );\n    }\n\n    function getTotalBalance() external view returns (uint256) {\n        return s_totalBalance;\n    }\n\n    function getFallbackWeiPerUnitLink() external view returns (int256) {\n        return s_fallbackWeiPerUnitLink;\n    }\n\n    /**\n     * @notice Owner cancel subscription, sends remaining link directly to the subscription owner.\n     * @param subId subscription id\n     * @dev notably can be called even if there are pending requests, outstanding ones may fail onchain\n     */\n    function ownerCancelSubscription(uint64 subId) external onlyOwner {\n        if (s_subscriptionConfigs[subId].owner == address(0)) {\n            revert InvalidSubscription();\n        }\n        cancelSubscriptionHelper(subId, s_subscriptionConfigs[subId].owner);\n    }\n\n    /**\n     * @notice Recover link sent with transfer instead of transferAndCall.\n     * @param to address to send link to\n     */\n    function recoverFunds(address to) external onlyOwner {\n        uint256 externalBalance = LINK.balanceOf(address(this));\n        uint256 internalBalance = uint256(s_totalBalance);\n        if (internalBalance > externalBalance) {\n            revert BalanceInvariantViolated(internalBalance, externalBalance);\n        }\n        if (internalBalance < externalBalance) {\n            uint256 amount = externalBalance - internalBalance;\n            LINK.transfer(to, amount);\n            emit FundsRecovered(to, amount);\n        }\n        // If the balances are equal, nothing to be done.\n    }\n\n    /**\n     * @inheritdoc VRFCoordinatorV2Interface\n     */\n    function getRequestConfig()\n        external\n        view\n        override\n        returns (uint16, uint32, bytes32[] memory)\n    {\n        return (\n            s_config.minimumRequestConfirmations,\n            s_config.maxGasLimit,\n            s_provingKeyHashes\n        );\n    }\n\n    /**\n     * @inheritdoc VRFCoordinatorV2Interface\n     */\n    function requestRandomWords(\n        bytes32 keyHash,\n        uint64 subId,\n        uint16 requestConfirmations,\n        uint32 callbackGasLimit,\n        uint32 numWords\n    ) external override nonReentrant returns (uint256) {\n        // Input validation using the subscription storage.\n        if (s_subscriptionConfigs[subId].owner == address(0)) {\n            revert InvalidSubscription();\n        }\n        // Its important to ensure that the consumer is in fact who they say they\n        // are, otherwise they could use someone else's subscription balance.\n        // A nonce of 0 indicates consumer is not allocated to the sub.\n        uint64 currentNonce = s_consumers[msg.sender][subId];\n        if (currentNonce == 0) {\n            revert InvalidConsumer(subId, msg.sender);\n        }\n        // Input validation using the config storage word.\n        if (\n            requestConfirmations < s_config.minimumRequestConfirmations ||\n            requestConfirmations > MAX_REQUEST_CONFIRMATIONS\n        ) {\n            revert InvalidRequestConfirmations(\n                requestConfirmations,\n                s_config.minimumRequestConfirmations,\n                MAX_REQUEST_CONFIRMATIONS\n            );\n        }\n        // No lower bound on the requested gas limit. A user could request 0\n        // and they would simply be billed for the proof verification and wouldn't be\n        // able to do anything with the random value.\n        if (callbackGasLimit > s_config.maxGasLimit) {\n            revert GasLimitTooBig(callbackGasLimit, s_config.maxGasLimit);\n        }\n        if (numWords > MAX_NUM_WORDS) {\n            revert NumWordsTooBig(numWords, MAX_NUM_WORDS);\n        }\n        // Note we do not check whether the keyHash is valid to save gas.\n        // The consequence for users is that they can send requests\n        // for invalid keyHashes which will simply not be fulfilled.\n        uint64 nonce = currentNonce + 1;\n        (uint256 requestId, uint256 preSeed) = computeRequestId(\n            keyHash,\n            msg.sender,\n            subId,\n            nonce\n        );\n\n        s_requestCommitments[requestId] = keccak256(\n            abi.encode(\n                requestId,\n                ChainSpecificUtil.getBlockNumber(),\n                subId,\n                callbackGasLimit,\n                numWords,\n                msg.sender\n            )\n        );\n        emit RandomWordsRequested(\n            keyHash,\n            requestId,\n            preSeed,\n            subId,\n            requestConfirmations,\n            callbackGasLimit,\n            numWords,\n            msg.sender\n        );\n        s_consumers[msg.sender][subId] = nonce;\n\n        return requestId;\n    }\n\n    /**\n     * @notice Get request commitment\n     * @param requestId id of request\n     * @dev used to determine if a request is fulfilled or not\n     */\n    function getCommitment(uint256 requestId) external view returns (bytes32) {\n        return s_requestCommitments[requestId];\n    }\n\n    function computeRequestId(\n        bytes32 keyHash,\n        address sender,\n        uint64 subId,\n        uint64 nonce\n    ) private pure returns (uint256, uint256) {\n        uint256 preSeed = uint256(\n            keccak256(abi.encode(keyHash, sender, subId, nonce))\n        );\n        return (uint256(keccak256(abi.encode(keyHash, preSeed))), preSeed);\n    }\n\n    /**\n     * @dev calls target address with exactly gasAmount gas and data as calldata\n     * or reverts if at least gasAmount gas is not available.\n     */\n    function callWithExactGas(\n        uint256 gasAmount,\n        address target,\n        bytes memory data\n    ) private returns (bool success) {\n        // solhint-disable-next-line no-inline-assembly\n        assembly {\n            let g := gas()\n            // Compute g -= GAS_FOR_CALL_EXACT_CHECK and check for underflow\n            // The gas actually passed to the callee is min(gasAmount, 63//64*gas available).\n            // We want to ensure that we revert if gasAmount >  63//64*gas available\n            // as we do not want to provide them with less, however that check itself costs\n            // gas.  GAS_FOR_CALL_EXACT_CHECK ensures we have at least enough gas to be able\n            // to revert if gasAmount >  63//64*gas available.\n            if lt(g, GAS_FOR_CALL_EXACT_CHECK) {\n                revert(0, 0)\n            }\n            g := sub(g, GAS_FOR_CALL_EXACT_CHECK)\n            // if g - g//64 <= gasAmount, revert\n            // (we subtract g//64 because of EIP-150)\n            if iszero(gt(sub(g, div(g, 64)), gasAmount)) {\n                revert(0, 0)\n            }\n            // solidity calls check that a contract actually exists at the destination, so we do the same\n            if iszero(extcodesize(target)) {\n                revert(0, 0)\n            }\n            // call and return whether we succeeded. ignore return data\n            // call(gas,addr,value,argsOffset,argsLength,retOffset,retLength)\n            success := call(\n                gasAmount,\n                target,\n                0,\n                add(data, 0x20),\n                mload(data),\n                0,\n                0\n            )\n        }\n        return success;\n    }\n\n    function getRandomnessFromProof(\n        Proof memory proof,\n        RequestCommitment memory rc\n    )\n        private\n        view\n        returns (bytes32 keyHash, uint256 requestId, uint256 randomness)\n    {\n        keyHash = hashOfKey(proof.pk);\n        // Only registered proving keys are permitted.\n        address oracle = s_provingKeys[keyHash];\n        if (oracle == address(0)) {\n            revert NoSuchProvingKey(keyHash);\n        }\n        requestId = uint256(keccak256(abi.encode(keyHash, proof.seed)));\n        bytes32 commitment = s_requestCommitments[requestId];\n        if (commitment == 0) {\n            revert NoCorrespondingRequest();\n        }\n        if (\n            commitment !=\n            keccak256(\n                abi.encode(\n                    requestId,\n                    rc.blockNum,\n                    rc.subId,\n                    rc.callbackGasLimit,\n                    rc.numWords,\n                    rc.sender\n                )\n            )\n        ) {\n            revert IncorrectCommitment();\n        }\n\n        bytes32 blockHash = ChainSpecificUtil.getBlockhash(rc.blockNum);\n        if (blockHash == bytes32(0)) {\n            blockHash = BLOCKHASH_STORE.getBlockhash(rc.blockNum);\n            if (blockHash == bytes32(0)) {\n                revert BlockhashNotInStore(rc.blockNum);\n            }\n        }\n\n        // The seed actually used by the VRF machinery, mixing in the blockhash\n        uint256 actualSeed = uint256(\n            keccak256(abi.encodePacked(proof.seed, blockHash))\n        );\n        randomness = VRF.randomValueFromVRFProof(proof, actualSeed); // Reverts on failure\n    }\n\n    /*\n     * @notice Compute fee based on the request count\n     * @param reqCount number of requests\n     * @return feePPM fee in LINK PPM\n     */\n    function getFeeTier(uint64 reqCount) public view returns (uint32) {\n        FeeConfig memory fc = s_feeConfig;\n        if (0 <= reqCount && reqCount <= fc.reqsForTier2) {\n            return fc.fulfillmentFlatFeeLinkPPMTier1;\n        }\n        if (fc.reqsForTier2 < reqCount && reqCount <= fc.reqsForTier3) {\n            return fc.fulfillmentFlatFeeLinkPPMTier2;\n        }\n        if (fc.reqsForTier3 < reqCount && reqCount <= fc.reqsForTier4) {\n            return fc.fulfillmentFlatFeeLinkPPMTier3;\n        }\n        if (fc.reqsForTier4 < reqCount && reqCount <= fc.reqsForTier5) {\n            return fc.fulfillmentFlatFeeLinkPPMTier4;\n        }\n        return fc.fulfillmentFlatFeeLinkPPMTier5;\n    }\n\n    /*\n     * @notice Fulfill a randomness request\n     * @param proof contains the proof and randomness\n     * @param rc request commitment pre-image, committed to at request time\n     * @return payment amount billed to the subscription\n     * @dev simulated offchain to determine if sufficient balance is present to fulfill the request\n     */\n    function fulfillRandomWords(\n        Proof memory proof,\n        RequestCommitment memory rc\n    ) external nonReentrant returns (uint96) {\n        uint256 startGas = gasleft();\n        (\n            bytes32 keyHash,\n            uint256 requestId,\n            uint256 randomness\n        ) = getRandomnessFromProof(proof, rc);\n\n        uint256[] memory randomWords = new uint256[](rc.numWords);\n        for (uint256 i = 0; i < rc.numWords; i++) {\n            randomWords[i] = uint256(keccak256(abi.encode(randomness, i)));\n        }\n\n        delete s_requestCommitments[requestId];\n        VRFConsumerBaseV2 v;\n        bytes memory resp = abi.encodeWithSelector(\n            v.rawFulfillRandomWords.selector,\n            requestId,\n            randomWords\n        );\n        // Call with explicitly the amount of callback gas requested\n        // Important to not let them exhaust the gas budget and avoid oracle payment.\n        // Do not allow any non-view/non-pure coordinator functions to be called\n        // during the consumers callback code via reentrancyLock.\n        // Note that callWithExactGas will revert if we do not have sufficient gas\n        // to give the callee their requested amount.\n        s_config.reentrancyLock = true;\n        bool success = callWithExactGas(rc.callbackGasLimit, rc.sender, resp);\n        s_config.reentrancyLock = false;\n\n        // Increment the req count for fee tier selection.\n        uint64 reqCount = s_subscriptions[rc.subId].reqCount;\n        s_subscriptions[rc.subId].reqCount += 1;\n\n        // We want to charge users exactly for how much gas they use in their callback.\n        // The gasAfterPaymentCalculation is meant to cover these additional operations where we\n        // decrement the subscription balance and increment the oracles withdrawable balance.\n        // We also add the flat link fee to the payment amount.\n        // Its specified in millionths of link, if s_config.fulfillmentFlatFeeLinkPPM = 1\n        // 1 link / 1e6 = 1e18 juels / 1e6 = 1e12 juels.\n        uint96 payment = calculatePaymentAmount(\n            startGas,\n            s_config.gasAfterPaymentCalculation,\n            getFeeTier(reqCount),\n            tx.gasprice\n        );\n        if (s_subscriptions[rc.subId].balance < payment) {\n            revert InsufficientBalance();\n        }\n        s_subscriptions[rc.subId].balance -= payment;\n        s_withdrawableTokens[s_provingKeys[keyHash]] += payment;\n        // Include payment in the event for tracking costs.\n        emit RandomWordsFulfilled(requestId, randomness, payment, success);\n        return payment;\n    }\n\n    // Get the amount of gas used for fulfillment\n    function calculatePaymentAmount(\n        uint256 startGas,\n        uint256 gasAfterPaymentCalculation,\n        uint32 fulfillmentFlatFeeLinkPPM,\n        uint256 weiPerUnitGas\n    ) internal view returns (uint96) {\n        int256 weiPerUnitLink;\n        weiPerUnitLink = getFeedData();\n        if (weiPerUnitLink <= 0) {\n            revert InvalidLinkWeiPrice(weiPerUnitLink);\n        }\n        // Will return non-zero on chains that have this enabled\n        uint256 l1CostWei = ChainSpecificUtil.getCurrentTxL1GasFees();\n        // (1e18 juels/link) ((wei/gas * gas) + l1wei) / (wei/link) = juels\n        uint256 paymentNoFee = (1e18 *\n            (weiPerUnitGas *\n                (gasAfterPaymentCalculation + startGas - gasleft()) +\n                l1CostWei)) / uint256(weiPerUnitLink);\n        uint256 fee = 1e12 * uint256(fulfillmentFlatFeeLinkPPM);\n        if (paymentNoFee > (1e27 - fee)) {\n            revert PaymentTooLarge(); // Payment + fee cannot be more than all of the link in existence.\n        }\n        return uint96(paymentNoFee + fee);\n    }\n\n    function getFeedData() private view returns (int256) {\n        uint32 stalenessSeconds = s_config.stalenessSeconds;\n        bool staleFallback = stalenessSeconds > 0;\n        uint256 timestamp;\n        int256 weiPerUnitLink;\n        (, weiPerUnitLink, , timestamp, ) = LINK_ETH_FEED.latestRoundData();\n        // solhint-disable-next-line not-rely-on-time\n        if (staleFallback && stalenessSeconds < block.timestamp - timestamp) {\n            weiPerUnitLink = s_fallbackWeiPerUnitLink;\n        }\n        return weiPerUnitLink;\n    }\n\n    /*\n     * @notice Oracle withdraw LINK earned through fulfilling requests\n     * @param recipient where to send the funds\n     * @param amount amount to withdraw\n     */\n    function oracleWithdraw(\n        address recipient,\n        uint96 amount\n    ) external nonReentrant {\n        if (s_withdrawableTokens[msg.sender] < amount) {\n            revert InsufficientBalance();\n        }\n        s_withdrawableTokens[msg.sender] -= amount;\n        s_totalBalance -= amount;\n        if (!LINK.transfer(recipient, amount)) {\n            revert InsufficientBalance();\n        }\n    }\n\n    function onTokenTransfer(\n        address /* sender */,\n        uint256 amount,\n        bytes calldata data\n    ) external override nonReentrant {\n        if (msg.sender != address(LINK)) {\n            revert OnlyCallableFromLink();\n        }\n        if (data.length != 32) {\n            revert InvalidCalldata();\n        }\n        uint64 subId = abi.decode(data, (uint64));\n        if (s_subscriptionConfigs[subId].owner == address(0)) {\n            revert InvalidSubscription();\n        }\n        // We do not check that the msg.sender is the subscription owner,\n        // anyone can fund a subscription.\n        uint256 oldBalance = s_subscriptions[subId].balance;\n        s_subscriptions[subId].balance += uint96(amount);\n        s_totalBalance += uint96(amount);\n        emit SubscriptionFunded(subId, oldBalance, oldBalance + amount);\n    }\n\n    function getCurrentSubId() external view returns (uint64) {\n        return s_currentSubId;\n    }\n\n    /**\n     * @inheritdoc VRFCoordinatorV2Interface\n     */\n    function getSubscription(\n        uint64 subId\n    )\n        external\n        view\n        override\n        returns (\n            uint96 balance,\n            uint64 reqCount,\n            address owner,\n            address[] memory consumers\n        )\n    {\n        if (s_subscriptionConfigs[subId].owner == address(0)) {\n            revert InvalidSubscription();\n        }\n        return (\n            s_subscriptions[subId].balance,\n            s_subscriptions[subId].reqCount,\n            s_subscriptionConfigs[subId].owner,\n            s_subscriptionConfigs[subId].consumers\n        );\n    }\n\n    /**\n     * @inheritdoc VRFCoordinatorV2Interface\n     */\n    function createSubscription()\n        external\n        override\n        nonReentrant\n        returns (uint64)\n    {\n        s_currentSubId++;\n        uint64 currentSubId = s_currentSubId;\n        address[] memory consumers = new address[](0);\n        s_subscriptions[currentSubId] = Subscription({balance: 0, reqCount: 0});\n        s_subscriptionConfigs[currentSubId] = SubscriptionConfig({\n            owner: msg.sender,\n            requestedOwner: address(0),\n            consumers: consumers\n        });\n\n        emit SubscriptionCreated(currentSubId, msg.sender);\n        return currentSubId;\n    }\n\n    /**\n     * @inheritdoc VRFCoordinatorV2Interface\n     */\n    function requestSubscriptionOwnerTransfer(\n        uint64 subId,\n        address newOwner\n    ) external override onlySubOwner(subId) nonReentrant {\n        // Proposing to address(0) would never be claimable so don't need to check.\n        if (s_subscriptionConfigs[subId].requestedOwner != newOwner) {\n            s_subscriptionConfigs[subId].requestedOwner = newOwner;\n            emit SubscriptionOwnerTransferRequested(\n                subId,\n                msg.sender,\n                newOwner\n            );\n        }\n    }\n\n    /**\n     * @inheritdoc VRFCoordinatorV2Interface\n     */\n    function acceptSubscriptionOwnerTransfer(\n        uint64 subId\n    ) external override nonReentrant {\n        if (s_subscriptionConfigs[subId].owner == address(0)) {\n            revert InvalidSubscription();\n        }\n        if (s_subscriptionConfigs[subId].requestedOwner != msg.sender) {\n            revert MustBeRequestedOwner(\n                s_subscriptionConfigs[subId].requestedOwner\n            );\n        }\n        address oldOwner = s_subscriptionConfigs[subId].owner;\n        s_subscriptionConfigs[subId].owner = msg.sender;\n        s_subscriptionConfigs[subId].requestedOwner = address(0);\n        emit SubscriptionOwnerTransferred(subId, oldOwner, msg.sender);\n    }\n\n    /**\n     * @inheritdoc VRFCoordinatorV2Interface\n     */\n    function removeConsumer(\n        uint64 subId,\n        address consumer\n    ) external override onlySubOwner(subId) nonReentrant {\n        if (pendingRequestExists(subId)) {\n            revert PendingRequestExists();\n        }\n        if (s_consumers[consumer][subId] == 0) {\n            revert InvalidConsumer(subId, consumer);\n        }\n        // Note bounded by MAX_CONSUMERS\n        address[] memory consumers = s_subscriptionConfigs[subId].consumers;\n        uint256 lastConsumerIndex = consumers.length - 1;\n        for (uint256 i = 0; i < consumers.length; i++) {\n            if (consumers[i] == consumer) {\n                address last = consumers[lastConsumerIndex];\n                // Storage write to preserve last element\n                s_subscriptionConfigs[subId].consumers[i] = last;\n                // Storage remove last element\n                s_subscriptionConfigs[subId].consumers.pop();\n                break;\n            }\n        }\n        delete s_consumers[consumer][subId];\n        emit SubscriptionConsumerRemoved(subId, consumer);\n    }\n\n    /**\n     * @inheritdoc VRFCoordinatorV2Interface\n     */\n    function addConsumer(\n        uint64 subId,\n        address consumer\n    ) external override onlySubOwner(subId) nonReentrant {\n        // Already maxed, cannot add any more consumers.\n        if (s_subscriptionConfigs[subId].consumers.length == MAX_CONSUMERS) {\n            revert TooManyConsumers();\n        }\n        if (s_consumers[consumer][subId] != 0) {\n            // Idempotence - do nothing if already added.\n            // Ensures uniqueness in s_subscriptions[subId].consumers.\n            return;\n        }\n        // Initialize the nonce to 1, indicating the consumer is allocated.\n        s_consumers[consumer][subId] = 1;\n        s_subscriptionConfigs[subId].consumers.push(consumer);\n\n        emit SubscriptionConsumerAdded(subId, consumer);\n    }\n\n    /**\n     * @inheritdoc VRFCoordinatorV2Interface\n     */\n    function cancelSubscription(\n        uint64 subId,\n        address to\n    ) external override onlySubOwner(subId) nonReentrant {\n        if (pendingRequestExists(subId)) {\n            revert PendingRequestExists();\n        }\n        cancelSubscriptionHelper(subId, to);\n    }\n\n    function cancelSubscriptionHelper(\n        uint64 subId,\n        address to\n    ) private nonReentrant {\n        SubscriptionConfig memory subConfig = s_subscriptionConfigs[subId];\n        Subscription memory sub = s_subscriptions[subId];\n        uint96 balance = sub.balance;\n        // Note bounded by MAX_CONSUMERS;\n        // If no consumers, does nothing.\n        for (uint256 i = 0; i < subConfig.consumers.length; i++) {\n            delete s_consumers[subConfig.consumers[i]][subId];\n        }\n        delete s_subscriptionConfigs[subId];\n        delete s_subscriptions[subId];\n        s_totalBalance -= balance;\n        if (!LINK.transfer(to, uint256(balance))) {\n            revert InsufficientBalance();\n        }\n        emit SubscriptionCanceled(subId, to, balance);\n    }\n\n    /**\n     * @inheritdoc VRFCoordinatorV2Interface\n     * @dev Looping is bounded to MAX_CONSUMERS*(number of keyhashes).\n     * @dev Used to disable subscription canceling while outstanding request are present.\n     */\n    function pendingRequestExists(\n        uint64 subId\n    ) public view override returns (bool) {\n        SubscriptionConfig memory subConfig = s_subscriptionConfigs[subId];\n        for (uint256 i = 0; i < subConfig.consumers.length; i++) {\n            for (uint256 j = 0; j < s_provingKeyHashes.length; j++) {\n                (uint256 reqId, ) = computeRequestId(\n                    s_provingKeyHashes[j],\n                    subConfig.consumers[i],\n                    subId,\n                    s_consumers[subConfig.consumers[i]][subId]\n                );\n                if (s_requestCommitments[reqId] != 0) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n\n    modifier onlySubOwner(uint64 subId) {\n        address owner = s_subscriptionConfigs[subId].owner;\n        if (owner == address(0)) {\n            revert InvalidSubscription();\n        }\n        if (msg.sender != owner) {\n            revert MustBeSubOwner(owner);\n        }\n        _;\n    }\n\n    modifier nonReentrant() {\n        if (s_config.reentrancyLock) {\n            revert Reentrant();\n        }\n        _;\n    }\n\n    /**\n     * @notice The type and version of this contract\n     * @return Type and version string\n     */\n    function typeAndVersion()\n        external\n        pure\n        virtual\n        override\n        returns (string memory)\n    {\n        return \"VRFCoordinatorV2 1.0.0\";\n    }\n}\n"},"contracts/Raffle.sol":{"content":"//SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.7;\r\n\r\nimport {VRFCoordinatorV2} from \"@chainlink/contracts/src/v0.8/vrf/VRFCoordinatorV2.sol\";\r\nimport {VRFConsumerBaseV2} from \"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol\";\r\nimport {KeeperCompatibleInterface} from \"@chainlink/contracts/src/v0.8/automation/KeeperCompatible.sol\";\r\n\r\ncontract Raffle is VRFConsumerBaseV2, KeeperCompatibleInterface {\r\n    enum RaffleState {\r\n        OPEN,\r\n        CALCULATING\r\n    }\r\n\r\n    uint256 private immutable i_entranceFee;\r\n    address payable[] private s_players;\r\n    VRFCoordinatorV2 private immutable i_vrfCoordinator;\r\n    bytes32 private immutable i_gasLane;\r\n    uint256 private immutable i_subscriptionId;\r\n    uint16 private constant REQUEST_CONFIRMATION = 3;\r\n    uint32 private immutable i_callbackGasLimit;\r\n    uint32 private constant NUM_WORDS = 1;\r\n    uint256 private immutable i_interval;\r\n\r\n    //Lottery Variables\r\n    address private s_recentWinner;\r\n    RaffleState private s_raffleState;\r\n    uint256 private s_lastTimeStamp;\r\n\r\n    event RaffleEnter(address indexed player);\r\n    event RequestedRaffleWinner(uint256 indexed requestId);\r\n    event WinnerPicked(address indexed winner);\r\n\r\n    constructor(\r\n        address vrfCoordinatorV2,\r\n        uint256 entranceFee,\r\n        bytes32 gasLane,\r\n        uint256 subscriptionId,\r\n        uint32 callbackGasLimit,\r\n        uint256 interval\r\n    ) VRFConsumerBaseV2(vrfCoordinatorV2) {\r\n        i_entranceFee = entranceFee;\r\n        //log(vrfCoordinatorV2);\r\n        i_vrfCoordinator = VRFCoordinatorV2(vrfCoordinatorV2);\r\n        i_gasLane = gasLane;\r\n        i_subscriptionId = subscriptionId;\r\n        i_callbackGasLimit = callbackGasLimit;\r\n        s_raffleState = RaffleState.OPEN;\r\n        s_lastTimeStamp = block.timestamp;\r\n        i_interval = interval;\r\n    }\r\n\r\n    function enterRaffle() public payable {\r\n        require(msg.value >= i_entranceFee, \"Not enough ETH!\");\r\n        require(s_raffleState == RaffleState.OPEN, \"Not open\");\r\n        s_players.push(payable(msg.sender));\r\n        emit RaffleEnter(msg.sender);\r\n    }\r\n\r\n    function checkUpkeep(\r\n        bytes memory\r\n    ) public override returns (bool upkeepNeeded, bytes memory) {\r\n        bool isOpen = (RaffleState.OPEN == s_raffleState);\r\n        bool timePassed = ((block.timestamp - s_lastTimeStamp) > i_interval);\r\n        bool hasPlayers = (s_players.length > 0);\r\n        bool hasBalance = address(this).balance > 0;\r\n        upkeepNeeded = (isOpen && timePassed && hasPlayers && hasBalance);\r\n    }\r\n\r\n    function performUpkeep(bytes calldata) external override {\r\n        (bool upKeepNeeded, ) = checkUpkeep(\"\");\r\n        require(upKeepNeeded == true, \"Upkeep not needed\");\r\n        s_raffleState = RaffleState.CALCULATING;\r\n        uint256 requestId = i_vrfCoordinator.requestRandomWords(\r\n            i_gasLane,\r\n            uint64(i_subscriptionId),\r\n            REQUEST_CONFIRMATION,\r\n            i_callbackGasLimit,\r\n            NUM_WORDS\r\n        );\r\n        emit RequestedRaffleWinner(requestId);\r\n    }\r\n\r\n    function fulfillRandomWords(\r\n        uint256,\r\n        uint256[] memory randomWords\r\n    ) internal override {\r\n        uint256 indexOfWinner = randomWords[0] % s_players.length;\r\n        address payable recentWinner = s_players[indexOfWinner];\r\n        s_recentWinner = recentWinner;\r\n        s_raffleState = RaffleState.OPEN;\r\n        s_players = new address payable[](0);\r\n        s_lastTimeStamp = block.timestamp;\r\n        (bool success, ) = recentWinner.call{value: address(this).balance}(\"\");\r\n        require(success == true, \"Transfer Failed!\");\r\n        emit WinnerPicked(recentWinner);\r\n    }\r\n\r\n    function getEntranceFee() public view returns (uint256) {\r\n        return i_entranceFee;\r\n    }\r\n\r\n    function getPlayer(uint256 index) public view returns (address) {\r\n        return s_players[index];\r\n    }\r\n\r\n    function getRecentWinner() public view returns (address) {\r\n        return s_recentWinner;\r\n    }\r\n\r\n    function getRaffleState() public view returns (RaffleState) {\r\n        return s_raffleState;\r\n    }\r\n\r\n    function getNumWords() public pure returns (uint256) {\r\n        return NUM_WORDS;\r\n    }\r\n\r\n    function getNumberOfPlayers() public view returns (uint256) {\r\n        return s_players.length;\r\n    }\r\n\r\n    function getLatestTimeStamp() public view returns (uint256) {\r\n        return s_lastTimeStamp;\r\n    }\r\n\r\n    function getRequestConfirmation() public pure returns (uint256) {\r\n        return REQUEST_CONFIRMATION;\r\n    }\r\n\r\n    function getInterval() public view returns (uint256) {\r\n        return i_interval;\r\n    }\r\n}\r\n"}},"settings":{"evmVersion":"paris","optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"errors":[{"component":"general","errorCode":"6321","formattedMessage":"Warning: Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.\n  --> contracts/Raffle.sol:61:51:\n   |\n61 |     ) public override returns (bool upkeepNeeded, bytes memory) {\n   |                                                   ^^^^^^^^^^^^\n\n","message":"Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.","severity":"warning","sourceLocation":{"end":2231,"file":"contracts/Raffle.sol","start":2219},"type":"Warning"},{"component":"general","errorCode":"2018","formattedMessage":"Warning: Function state mutability can be restricted to view\n  --> contracts/Raffle.sol:59:5:\n   |\n59 |     function checkUpkeep(\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n","message":"Function state mutability can be restricted to view","severity":"warning","sourceLocation":{"end":2561,"file":"contracts/Raffle.sol","start":2124},"type":"Warning"},{"component":"general","errorCode":"5574","formattedMessage":"Warning: Contract code size is 35748 bytes and exceeds 24576 bytes (a limit introduced in Spurious Dragon). This contract may not be deployable on Mainnet. Consider enabling the optimizer (with a low \"runs\" value!), turning off revert strings, or using libraries.\n  --> @chainlink/contracts/src/v0.8/vrf/VRFCoordinatorV2.sol:15:1:\n   |\n15 | contract VRFCoordinatorV2 is\n   | ^ (Relevant source part starts here and spans across multiple lines).\n\n","message":"Contract code size is 35748 bytes and exceeds 24576 bytes (a limit introduced in Spurious Dragon). This contract may not be deployable on Mainnet. Consider enabling the optimizer (with a low \"runs\" value!), turning off revert strings, or using libraries.","severity":"warning","sourceLocation":{"end":36277,"file":"@chainlink/contracts/src/v0.8/vrf/VRFCoordinatorV2.sol","start":506},"type":"Warning"}],"sources":{"@chainlink/contracts/src/v0.8/ChainSpecificUtil.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/ChainSpecificUtil.sol","exportedSymbols":{"ArbGasInfo":[791],"ArbSys":[937],"ChainSpecificUtil":[181]},"id":182,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"32:23:0"},{"absolutePath":"@chainlink/contracts/src/v0.8/vendor/@arbitrum/nitro-contracts/src/precompiles/ArbSys.sol","file":"./vendor/@arbitrum/nitro-contracts/src/precompiles/ArbSys.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":182,"sourceUnit":938,"src":"57:85:0","symbolAliases":[{"foreign":{"id":2,"name":"ArbSys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":937,"src":"65:6:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/vendor/@arbitrum/nitro-contracts/src/precompiles/ArbGasInfo.sol","file":"./vendor/@arbitrum/nitro-contracts/src/precompiles/ArbGasInfo.sol","id":5,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":182,"sourceUnit":792,"src":"143:93:0","symbolAliases":[{"foreign":{"id":4,"name":"ArbGasInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":791,"src":"151:10:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ChainSpecificUtil","contractDependencies":[],"contractKind":"library","fullyImplemented":true,"id":181,"linearizedBaseContracts":[181],"name":"ChainSpecificUtil","nameLocation":"500:17:0","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":11,"mutability":"constant","name":"ARBSYS_ADDR","nameLocation":"547:11:0","nodeType":"VariableDeclaration","scope":181,"src":"522:90:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6,"name":"address","nodeType":"ElementaryTypeName","src":"522:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"arguments":[{"hexValue":"307830303030303030303030303030303030303030303030303030303030303030303030303030303634","id":9,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"569:42:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x0000000000000000000000000000000000000064"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":8,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"561:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7,"name":"address","nodeType":"ElementaryTypeName","src":"561:7:0","typeDescriptions":{}}},"id":10,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"561:51:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":true,"id":17,"mutability":"constant","name":"ARBSYS","nameLocation":"640:6:0","nodeType":"VariableDeclaration","scope":181,"src":"616:52:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ArbSys_$937","typeString":"contract ArbSys"},"typeName":{"id":13,"nodeType":"UserDefinedTypeName","pathNode":{"id":12,"name":"ArbSys","nameLocations":["616:6:0"],"nodeType":"IdentifierPath","referencedDeclaration":937,"src":"616:6:0"},"referencedDeclaration":937,"src":"616:6:0","typeDescriptions":{"typeIdentifier":"t_contract$_ArbSys_$937","typeString":"contract ArbSys"}},"value":{"arguments":[{"id":15,"name":"ARBSYS_ADDR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11,"src":"656:11:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":14,"name":"ArbSys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":937,"src":"649:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ArbSys_$937_$","typeString":"type(contract ArbSys)"}},"id":16,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"649:19:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ArbSys_$937","typeString":"contract ArbSys"}},"visibility":"private"},{"constant":true,"id":23,"mutability":"constant","name":"ARBGAS_ADDR","nameLocation":"697:11:0","nodeType":"VariableDeclaration","scope":181,"src":"672:90:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":18,"name":"address","nodeType":"ElementaryTypeName","src":"672:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"arguments":[{"hexValue":"307830303030303030303030303030303030303030303030303030303030303030303030303030303643","id":21,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"719:42:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x000000000000000000000000000000000000006C"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":20,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"711:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":19,"name":"address","nodeType":"ElementaryTypeName","src":"711:7:0","typeDescriptions":{}}},"id":22,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"711:51:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":true,"id":29,"mutability":"constant","name":"ARBGAS","nameLocation":"794:6:0","nodeType":"VariableDeclaration","scope":181,"src":"766:60:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ArbGasInfo_$791","typeString":"contract ArbGasInfo"},"typeName":{"id":25,"nodeType":"UserDefinedTypeName","pathNode":{"id":24,"name":"ArbGasInfo","nameLocations":["766:10:0"],"nodeType":"IdentifierPath","referencedDeclaration":791,"src":"766:10:0"},"referencedDeclaration":791,"src":"766:10:0","typeDescriptions":{"typeIdentifier":"t_contract$_ArbGasInfo_$791","typeString":"contract ArbGasInfo"}},"value":{"arguments":[{"id":27,"name":"ARBGAS_ADDR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":23,"src":"814:11:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":26,"name":"ArbGasInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":791,"src":"803:10:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ArbGasInfo_$791_$","typeString":"type(contract ArbGasInfo)"}},"id":28,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"803:23:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ArbGasInfo_$791","typeString":"contract ArbGasInfo"}},"visibility":"private"},{"constant":true,"id":32,"mutability":"constant","name":"ARB_MAINNET_CHAIN_ID","nameLocation":"855:20:0","nodeType":"VariableDeclaration","scope":181,"src":"830:53:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":30,"name":"uint256","nodeType":"ElementaryTypeName","src":"830:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3432313631","id":31,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"878:5:0","typeDescriptions":{"typeIdentifier":"t_rational_42161_by_1","typeString":"int_const 42161"},"value":"42161"},"visibility":"private"},{"constant":true,"id":35,"mutability":"constant","name":"ARB_GOERLI_TESTNET_CHAIN_ID","nameLocation":"912:27:0","nodeType":"VariableDeclaration","scope":181,"src":"887:61:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":33,"name":"uint256","nodeType":"ElementaryTypeName","src":"887:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"343231363133","id":34,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"942:6:0","typeDescriptions":{"typeIdentifier":"t_rational_421613_by_1","typeString":"int_const 421613"},"value":"421613"},"visibility":"private"},{"constant":true,"id":38,"mutability":"constant","name":"ARB_SEPOLIA_TESTNET_CHAIN_ID","nameLocation":"977:28:0","nodeType":"VariableDeclaration","scope":181,"src":"952:62:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":36,"name":"uint256","nodeType":"ElementaryTypeName","src":"952:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"343231363134","id":37,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1008:6:0","typeDescriptions":{"typeIdentifier":"t_rational_421614_by_1","typeString":"int_const 421614"},"value":"421614"},"visibility":"private"},{"body":{"id":88,"nodeType":"Block","src":"1093:396:0","statements":[{"assignments":[46],"declarations":[{"constant":false,"id":46,"mutability":"mutable","name":"chainid","nameLocation":"1107:7:0","nodeType":"VariableDeclaration","scope":88,"src":"1099:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":45,"name":"uint256","nodeType":"ElementaryTypeName","src":"1099:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":49,"initialValue":{"expression":{"id":47,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1117:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":48,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1123:7:0","memberName":"chainid","nodeType":"MemberAccess","src":"1117:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1099:31:0"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":60,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":56,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":52,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":50,"name":"chainid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":46,"src":"1147:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":51,"name":"ARB_MAINNET_CHAIN_ID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":32,"src":"1158:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1147:31:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":55,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":53,"name":"chainid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":46,"src":"1188:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":54,"name":"ARB_GOERLI_TESTNET_CHAIN_ID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":35,"src":"1199:27:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1188:38:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1147:79:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":59,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":57,"name":"chainid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":46,"src":"1236:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":58,"name":"ARB_SEPOLIA_TESTNET_CHAIN_ID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":38,"src":"1247:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1236:39:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1147:128:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":83,"nodeType":"IfStatement","src":"1136:314:0","trueBody":{"id":82,"nodeType":"Block","src":"1282:168:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":72,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":67,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":64,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":61,"name":"getBlockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":116,"src":"1295:14:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":62,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1295:16:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":63,"name":"blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40,"src":"1314:11:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"1295:30:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":65,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1294:32:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"323536","id":66,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1329:3:0","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"value":"256"},"src":"1294:38:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":71,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":68,"name":"blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40,"src":"1336:11:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":69,"name":"getBlockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":116,"src":"1351:14:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":70,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1351:16:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1336:31:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1294:73:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":76,"nodeType":"IfStatement","src":"1290:107:0","trueBody":{"id":75,"nodeType":"Block","src":"1369:28:0","statements":[{"expression":{"hexValue":"","id":73,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1386:2:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"functionReturnParameters":44,"id":74,"nodeType":"Return","src":"1379:9:0"}]}},{"expression":{"arguments":[{"id":79,"name":"blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40,"src":"1431:11:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"expression":{"id":77,"name":"ARBSYS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":17,"src":"1411:6:0","typeDescriptions":{"typeIdentifier":"t_contract$_ArbSys_$937","typeString":"contract ArbSys"}},"id":78,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1418:12:0","memberName":"arbBlockHash","nodeType":"MemberAccess","referencedDeclaration":808,"src":"1411:19:0","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_bytes32_$","typeString":"function (uint256) view external returns (bytes32)"}},"id":80,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1411:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":44,"id":81,"nodeType":"Return","src":"1404:39:0"}]}},{"expression":{"arguments":[{"id":85,"name":"blockNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40,"src":"1472:11:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":84,"name":"blockhash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-5,"src":"1462:9:0","typeDescriptions":{"typeIdentifier":"t_function_blockhash_view$_t_uint256_$returns$_t_bytes32_$","typeString":"function (uint256) view returns (bytes32)"}},"id":86,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1462:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":44,"id":87,"nodeType":"Return","src":"1455:29:0"}]},"id":89,"implemented":true,"kind":"function","modifiers":[],"name":"getBlockhash","nameLocation":"1028:12:0","nodeType":"FunctionDefinition","parameters":{"id":41,"nodeType":"ParameterList","parameters":[{"constant":false,"id":40,"mutability":"mutable","name":"blockNumber","nameLocation":"1048:11:0","nodeType":"VariableDeclaration","scope":89,"src":"1041:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":39,"name":"uint64","nodeType":"ElementaryTypeName","src":"1041:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"1040:20:0"},"returnParameters":{"id":44,"nodeType":"ParameterList","parameters":[{"constant":false,"id":43,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":89,"src":"1084:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":42,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1084:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1083:9:0"},"scope":181,"src":"1019:470:0","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":115,"nodeType":"Block","src":"1551:196:0","statements":[{"assignments":[95],"declarations":[{"constant":false,"id":95,"mutability":"mutable","name":"chainid","nameLocation":"1565:7:0","nodeType":"VariableDeclaration","scope":115,"src":"1557:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":94,"name":"uint256","nodeType":"ElementaryTypeName","src":"1557:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":98,"initialValue":{"expression":{"id":96,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1575:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":97,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1581:7:0","memberName":"chainid","nodeType":"MemberAccess","src":"1575:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1557:31:0"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":99,"name":"chainid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":95,"src":"1598:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":100,"name":"ARB_MAINNET_CHAIN_ID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":32,"src":"1609:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1598:31:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":102,"name":"chainid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":95,"src":"1633:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":103,"name":"ARB_GOERLI_TESTNET_CHAIN_ID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":35,"src":"1644:27:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1633:38:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1598:73:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":111,"nodeType":"IfStatement","src":"1594:124:0","trueBody":{"id":110,"nodeType":"Block","src":"1673:45:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":106,"name":"ARBSYS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":17,"src":"1688:6:0","typeDescriptions":{"typeIdentifier":"t_contract$_ArbSys_$937","typeString":"contract ArbSys"}},"id":107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1695:14:0","memberName":"arbBlockNumber","nodeType":"MemberAccess","referencedDeclaration":800,"src":"1688:21:0","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint256_$","typeString":"function () view external returns (uint256)"}},"id":108,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1688:23:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":93,"id":109,"nodeType":"Return","src":"1681:30:0"}]}},{"expression":{"expression":{"id":112,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1730:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1736:6:0","memberName":"number","nodeType":"MemberAccess","src":"1730:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":93,"id":114,"nodeType":"Return","src":"1723:19:0"}]},"id":116,"implemented":true,"kind":"function","modifiers":[],"name":"getBlockNumber","nameLocation":"1502:14:0","nodeType":"FunctionDefinition","parameters":{"id":90,"nodeType":"ParameterList","parameters":[],"src":"1516:2:0"},"returnParameters":{"id":93,"nodeType":"ParameterList","parameters":[{"constant":false,"id":92,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":116,"src":"1542:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":91,"name":"uint256","nodeType":"ElementaryTypeName","src":"1542:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1541:9:0"},"scope":181,"src":"1493:254:0","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":141,"nodeType":"Block","src":"1816:192:0","statements":[{"assignments":[122],"declarations":[{"constant":false,"id":122,"mutability":"mutable","name":"chainid","nameLocation":"1830:7:0","nodeType":"VariableDeclaration","scope":141,"src":"1822:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":121,"name":"uint256","nodeType":"ElementaryTypeName","src":"1822:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":125,"initialValue":{"expression":{"id":123,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1840:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1846:7:0","memberName":"chainid","nodeType":"MemberAccess","src":"1840:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1822:31:0"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":126,"name":"chainid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":122,"src":"1863:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":127,"name":"ARB_MAINNET_CHAIN_ID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":32,"src":"1874:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1863:31:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":129,"name":"chainid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":122,"src":"1898:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":130,"name":"ARB_GOERLI_TESTNET_CHAIN_ID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":35,"src":"1909:27:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1898:38:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1863:73:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":138,"nodeType":"IfStatement","src":"1859:131:0","trueBody":{"id":137,"nodeType":"Block","src":"1938:52:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":133,"name":"ARBGAS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":29,"src":"1953:6:0","typeDescriptions":{"typeIdentifier":"t_contract$_ArbGasInfo_$791","typeString":"contract ArbGasInfo"}},"id":134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1960:21:0","memberName":"getCurrentTxL1GasFees","nodeType":"MemberAccess","referencedDeclaration":790,"src":"1953:28:0","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint256_$","typeString":"function () view external returns (uint256)"}},"id":135,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1953:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":120,"id":136,"nodeType":"Return","src":"1946:37:0"}]}},{"expression":{"hexValue":"30","id":139,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2002:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":120,"id":140,"nodeType":"Return","src":"1995:8:0"}]},"id":142,"implemented":true,"kind":"function","modifiers":[],"name":"getCurrentTxL1GasFees","nameLocation":"1760:21:0","nodeType":"FunctionDefinition","parameters":{"id":117,"nodeType":"ParameterList","parameters":[],"src":"1781:2:0"},"returnParameters":{"id":120,"nodeType":"ParameterList","parameters":[{"constant":false,"id":119,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":142,"src":"1807:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":118,"name":"uint256","nodeType":"ElementaryTypeName","src":"1807:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1806:9:0"},"scope":181,"src":"1751:257:0","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":179,"nodeType":"Block","src":"2220:444:0","statements":[{"assignments":[151],"declarations":[{"constant":false,"id":151,"mutability":"mutable","name":"chainid","nameLocation":"2234:7:0","nodeType":"VariableDeclaration","scope":179,"src":"2226:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":150,"name":"uint256","nodeType":"ElementaryTypeName","src":"2226:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":154,"initialValue":{"expression":{"id":152,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2244:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2250:7:0","memberName":"chainid","nodeType":"MemberAccess","src":"2244:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2226:31:0"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":155,"name":"chainid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":151,"src":"2267:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":156,"name":"ARB_MAINNET_CHAIN_ID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":32,"src":"2278:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2267:31:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":158,"name":"chainid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":151,"src":"2302:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":159,"name":"ARB_GOERLI_TESTNET_CHAIN_ID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":35,"src":"2313:27:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2302:38:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2267:73:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":176,"nodeType":"IfStatement","src":"2263:383:0","trueBody":{"id":175,"nodeType":"Block","src":"2342:304:0","statements":[{"assignments":[null,163,null,null,null,null],"declarations":[null,{"constant":false,"id":163,"mutability":"mutable","name":"l1PricePerByte","nameLocation":"2361:14:0","nodeType":"VariableDeclaration","scope":175,"src":"2353:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":162,"name":"uint256","nodeType":"ElementaryTypeName","src":"2353:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},null,null,null,null],"id":167,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":164,"name":"ARBGAS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":29,"src":"2387:6:0","typeDescriptions":{"typeIdentifier":"t_contract$_ArbGasInfo_$791","typeString":"contract ArbGasInfo"}},"id":165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2394:14:0","memberName":"getPricesInWei","nodeType":"MemberAccess","referencedDeclaration":746,"src":"2387:21:0","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$","typeString":"function () view external returns (uint256,uint256,uint256,uint256,uint256,uint256)"}},"id":166,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2387:23:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256,uint256,uint256,uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"2350:60:0"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":168,"name":"l1PricePerByte","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":163,"src":"2597:14:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":169,"name":"calldataSizeBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":145,"src":"2615:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"313430","id":170,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2635:3:0","typeDescriptions":{"typeIdentifier":"t_rational_140_by_1","typeString":"int_const 140"},"value":"140"},"src":"2615:23:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":172,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2614:25:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2597:42:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":149,"id":174,"nodeType":"Return","src":"2590:49:0"}]}},{"expression":{"hexValue":"30","id":177,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2658:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":149,"id":178,"nodeType":"Return","src":"2651:8:0"}]},"documentation":{"id":143,"nodeType":"StructuredDocumentation","src":"2012:116:0","text":" @notice Returns the gas cost in wei of calldataSizeBytes of calldata being posted\n @notice to L1."},"id":180,"implemented":true,"kind":"function","modifiers":[],"name":"getL1CalldataGasCost","nameLocation":"2140:20:0","nodeType":"FunctionDefinition","parameters":{"id":146,"nodeType":"ParameterList","parameters":[{"constant":false,"id":145,"mutability":"mutable","name":"calldataSizeBytes","nameLocation":"2169:17:0","nodeType":"VariableDeclaration","scope":180,"src":"2161:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":144,"name":"uint256","nodeType":"ElementaryTypeName","src":"2161:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2160:27:0"},"returnParameters":{"id":149,"nodeType":"ParameterList","parameters":[{"constant":false,"id":148,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":180,"src":"2211:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":147,"name":"uint256","nodeType":"ElementaryTypeName","src":"2211:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2210:9:0"},"scope":181,"src":"2131:533:0","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":182,"src":"492:2174:0","usedErrors":[],"usedEvents":[]}],"src":"32:2635:0"},"id":0},"@chainlink/contracts/src/v0.8/automation/AutomationBase.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/automation/AutomationBase.sol","exportedSymbols":{"AutomationBase":[211]},"id":212,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":183,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:1"},{"abstract":false,"baseContracts":[],"canonicalName":"AutomationBase","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":211,"linearizedBaseContracts":[211],"name":"AutomationBase","nameLocation":"66:14:1","nodeType":"ContractDefinition","nodes":[{"errorSelector":"b60ac5db","id":185,"name":"OnlySimulatedBackend","nameLocation":"91:20:1","nodeType":"ErrorDefinition","parameters":{"id":184,"nodeType":"ParameterList","parameters":[],"src":"111:2:1"},"src":"85:29:1"},{"body":{"id":201,"nodeType":"Block","src":"290:83:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":189,"name":"tx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-26,"src":"300:2:1","typeDescriptions":{"typeIdentifier":"t_magic_transaction","typeString":"tx"}},"id":190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"303:6:1","memberName":"origin","nodeType":"MemberAccess","src":"300:9:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":193,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"321:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":192,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"313:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":191,"name":"address","nodeType":"ElementaryTypeName","src":"313:7:1","typeDescriptions":{}}},"id":194,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"313:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"300:23:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":200,"nodeType":"IfStatement","src":"296:73:1","trueBody":{"id":199,"nodeType":"Block","src":"325:44:1","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":196,"name":"OnlySimulatedBackend","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":185,"src":"340:20:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":197,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"340:22:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":198,"nodeType":"RevertStatement","src":"333:29:1"}]}}]},"documentation":{"id":186,"nodeType":"StructuredDocumentation","src":"118:127:1","text":" @notice method that allows it to be simulated via eth_call by checking that\n the sender is the zero address."},"id":202,"implemented":true,"kind":"function","modifiers":[],"name":"preventExecution","nameLocation":"257:16:1","nodeType":"FunctionDefinition","parameters":{"id":187,"nodeType":"ParameterList","parameters":[],"src":"273:2:1"},"returnParameters":{"id":188,"nodeType":"ParameterList","parameters":[],"src":"290:0:1"},"scope":211,"src":"248:125:1","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":209,"nodeType":"Block","src":"534:36:1","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":205,"name":"preventExecution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":202,"src":"540:16:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":206,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"540:18:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":207,"nodeType":"ExpressionStatement","src":"540:18:1"},{"id":208,"nodeType":"PlaceholderStatement","src":"564:1:1"}]},"documentation":{"id":203,"nodeType":"StructuredDocumentation","src":"377:129:1","text":" @notice modifier that allows it to be simulated via eth_call by checking\n that the sender is the zero address."},"id":210,"name":"cannotExecute","nameLocation":"518:13:1","nodeType":"ModifierDefinition","parameters":{"id":204,"nodeType":"ParameterList","parameters":[],"src":"531:2:1"},"src":"509:61:1","virtual":false,"visibility":"internal"}],"scope":212,"src":"57:515:1","usedErrors":[185],"usedEvents":[]}],"src":"32:541:1"},"id":1},"@chainlink/contracts/src/v0.8/automation/AutomationCompatible.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/automation/AutomationCompatible.sol","exportedSymbols":{"AutomationBase":[211],"AutomationCompatible":[220],"AutomationCompatibleInterface":[247]},"id":221,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":213,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:2"},{"absolutePath":"@chainlink/contracts/src/v0.8/automation/AutomationBase.sol","file":"./AutomationBase.sol","id":214,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":221,"sourceUnit":212,"src":"57:30:2","symbolAliases":[],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol","file":"./interfaces/AutomationCompatibleInterface.sol","id":215,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":221,"sourceUnit":248,"src":"88:56:2","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":216,"name":"AutomationBase","nameLocations":["188:14:2"],"nodeType":"IdentifierPath","referencedDeclaration":211,"src":"188:14:2"},"id":217,"nodeType":"InheritanceSpecifier","src":"188:14:2"},{"baseName":{"id":218,"name":"AutomationCompatibleInterface","nameLocations":["204:29:2"],"nodeType":"IdentifierPath","referencedDeclaration":247,"src":"204:29:2"},"id":219,"nodeType":"InheritanceSpecifier","src":"204:29:2"}],"canonicalName":"AutomationCompatible","contractDependencies":[],"contractKind":"contract","fullyImplemented":false,"id":220,"linearizedBaseContracts":[220,247,211],"name":"AutomationCompatible","nameLocation":"164:20:2","nodeType":"ContractDefinition","nodes":[],"scope":221,"src":"146:90:2","usedErrors":[185],"usedEvents":[]}],"src":"32:205:2"},"id":2},"@chainlink/contracts/src/v0.8/automation/KeeperCompatible.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/automation/KeeperCompatible.sol","exportedSymbols":{"KeeperBase":[211],"KeeperCompatible":[220],"KeeperCompatibleInterface":[247]},"id":229,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":222,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"125:23:3"},{"absolutePath":"@chainlink/contracts/src/v0.8/automation/AutomationCompatible.sol","file":"./AutomationCompatible.sol","id":224,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":229,"sourceUnit":221,"src":"149:84:3","symbolAliases":[{"foreign":{"id":223,"name":"AutomationCompatible","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":220,"src":"157:20:3","typeDescriptions":{}},"local":"KeeperCompatible","nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/automation/AutomationBase.sol","file":"./AutomationBase.sol","id":226,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":229,"sourceUnit":212,"src":"234:66:3","symbolAliases":[{"foreign":{"id":225,"name":"AutomationBase","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":211,"src":"242:14:3","typeDescriptions":{}},"local":"KeeperBase","nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol","file":"./interfaces/AutomationCompatibleInterface.sol","id":228,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":229,"sourceUnit":248,"src":"301:122:3","symbolAliases":[{"foreign":{"id":227,"name":"AutomationCompatibleInterface","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":247,"src":"309:29:3","typeDescriptions":{}},"local":"KeeperCompatibleInterface","nameLocation":"-1:-1:-1"}],"unitAlias":""}],"src":"125:299:3"},"id":3},"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol","exportedSymbols":{"AutomationCompatibleInterface":[247]},"id":248,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":230,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:4"},{"abstract":false,"baseContracts":[],"canonicalName":"AutomationCompatibleInterface","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":247,"linearizedBaseContracts":[247],"name":"AutomationCompatibleInterface","nameLocation":"67:29:4","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":231,"nodeType":"StructuredDocumentation","src":"101:985:4","text":" @notice method that is simulated by the keepers to see if any work actually\n needs to be performed. This method does does not actually need to be\n executable, and since it is only ever simulated it can consume lots of gas.\n @dev To ensure that it is never called, you may want to add the\n cannotExecute modifier from KeeperBase to your implementation of this\n method.\n @param checkData specified in the upkeep registration so it is always the\n same for a registered upkeep. This can easily be broken down into specific\n arguments using `abi.decode`, so multiple upkeeps can be registered on the\n same contract and easily differentiated by the contract.\n @return upkeepNeeded boolean to indicate whether the keeper should call\n performUpkeep or not.\n @return performData bytes that the keeper should call performUpkeep with, if\n upkeep is needed. If you would like to encode data to decode later, try\n `abi.encode`."},"functionSelector":"6e04ff0d","id":240,"implemented":false,"kind":"function","modifiers":[],"name":"checkUpkeep","nameLocation":"1098:11:4","nodeType":"FunctionDefinition","parameters":{"id":234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":233,"mutability":"mutable","name":"checkData","nameLocation":"1125:9:4","nodeType":"VariableDeclaration","scope":240,"src":"1110:24:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":232,"name":"bytes","nodeType":"ElementaryTypeName","src":"1110:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1109:26:4"},"returnParameters":{"id":239,"nodeType":"ParameterList","parameters":[{"constant":false,"id":236,"mutability":"mutable","name":"upkeepNeeded","nameLocation":"1159:12:4","nodeType":"VariableDeclaration","scope":240,"src":"1154:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":235,"name":"bool","nodeType":"ElementaryTypeName","src":"1154:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":238,"mutability":"mutable","name":"performData","nameLocation":"1186:11:4","nodeType":"VariableDeclaration","scope":240,"src":"1173:24:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":237,"name":"bytes","nodeType":"ElementaryTypeName","src":"1173:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1153:45:4"},"scope":247,"src":"1089:110:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":241,"nodeType":"StructuredDocumentation","src":"1203:1003:4","text":" @notice method that is actually executed by the keepers, via the registry.\n The data returned by the checkUpkeep simulation will be passed into\n this method to actually be executed.\n @dev The input to this method should not be trusted, and the caller of the\n method should not even be restricted to any single registry. Anyone should\n be able call it, and the input should be validated, there is no guarantee\n that the data passed in is the performData returned from checkUpkeep. This\n could happen due to malicious keepers, racing keepers, or simply a state\n change while the performUpkeep transaction is waiting for confirmation.\n Always validate the data passed in.\n @param performData is the data which was passed back from the checkData\n simulation. If it is encoded, it can easily be decoded into other types by\n calling `abi.decode`. This data should not be trusted, and should be\n validated against the contract's current state."},"functionSelector":"4585e33b","id":246,"implemented":false,"kind":"function","modifiers":[],"name":"performUpkeep","nameLocation":"2218:13:4","nodeType":"FunctionDefinition","parameters":{"id":244,"nodeType":"ParameterList","parameters":[{"constant":false,"id":243,"mutability":"mutable","name":"performData","nameLocation":"2247:11:4","nodeType":"VariableDeclaration","scope":246,"src":"2232:26:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":242,"name":"bytes","nodeType":"ElementaryTypeName","src":"2232:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2231:28:4"},"returnParameters":{"id":245,"nodeType":"ParameterList","parameters":[],"src":"2268:0:4"},"scope":247,"src":"2209:60:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":248,"src":"57:2214:4","usedErrors":[],"usedEvents":[]}],"src":"32:2240:4"},"id":4},"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol","exportedSymbols":{"AggregatorV3Interface":[293]},"id":294,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":249,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:5"},{"abstract":false,"baseContracts":[],"canonicalName":"AggregatorV3Interface","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":293,"linearizedBaseContracts":[293],"name":"AggregatorV3Interface","nameLocation":"67:21:5","nodeType":"ContractDefinition","nodes":[{"functionSelector":"313ce567","id":254,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"102:8:5","nodeType":"FunctionDefinition","parameters":{"id":250,"nodeType":"ParameterList","parameters":[],"src":"110:2:5"},"returnParameters":{"id":253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":252,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":254,"src":"136:5:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":251,"name":"uint8","nodeType":"ElementaryTypeName","src":"136:5:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"135:7:5"},"scope":293,"src":"93:50:5","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"7284e416","id":259,"implemented":false,"kind":"function","modifiers":[],"name":"description","nameLocation":"156:11:5","nodeType":"FunctionDefinition","parameters":{"id":255,"nodeType":"ParameterList","parameters":[],"src":"167:2:5"},"returnParameters":{"id":258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":257,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":259,"src":"193:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":256,"name":"string","nodeType":"ElementaryTypeName","src":"193:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"192:15:5"},"scope":293,"src":"147:61:5","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"54fd4d50","id":264,"implemented":false,"kind":"function","modifiers":[],"name":"version","nameLocation":"221:7:5","nodeType":"FunctionDefinition","parameters":{"id":260,"nodeType":"ParameterList","parameters":[],"src":"228:2:5"},"returnParameters":{"id":263,"nodeType":"ParameterList","parameters":[{"constant":false,"id":262,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":264,"src":"254:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":261,"name":"uint256","nodeType":"ElementaryTypeName","src":"254:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"253:9:5"},"scope":293,"src":"212:51:5","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"9a6fc8f5","id":279,"implemented":false,"kind":"function","modifiers":[],"name":"getRoundData","nameLocation":"276:12:5","nodeType":"FunctionDefinition","parameters":{"id":267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":266,"mutability":"mutable","name":"_roundId","nameLocation":"301:8:5","nodeType":"VariableDeclaration","scope":279,"src":"294:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":265,"name":"uint80","nodeType":"ElementaryTypeName","src":"294:6:5","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"288:25:5"},"returnParameters":{"id":278,"nodeType":"ParameterList","parameters":[{"constant":false,"id":269,"mutability":"mutable","name":"roundId","nameLocation":"344:7:5","nodeType":"VariableDeclaration","scope":279,"src":"337:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":268,"name":"uint80","nodeType":"ElementaryTypeName","src":"337:6:5","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"},{"constant":false,"id":271,"mutability":"mutable","name":"answer","nameLocation":"360:6:5","nodeType":"VariableDeclaration","scope":279,"src":"353:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":270,"name":"int256","nodeType":"ElementaryTypeName","src":"353:6:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":273,"mutability":"mutable","name":"startedAt","nameLocation":"376:9:5","nodeType":"VariableDeclaration","scope":279,"src":"368:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":272,"name":"uint256","nodeType":"ElementaryTypeName","src":"368:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":275,"mutability":"mutable","name":"updatedAt","nameLocation":"395:9:5","nodeType":"VariableDeclaration","scope":279,"src":"387:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":274,"name":"uint256","nodeType":"ElementaryTypeName","src":"387:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":277,"mutability":"mutable","name":"answeredInRound","nameLocation":"413:15:5","nodeType":"VariableDeclaration","scope":279,"src":"406:22:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":276,"name":"uint80","nodeType":"ElementaryTypeName","src":"406:6:5","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"336:93:5"},"scope":293,"src":"267:163:5","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"feaf968c","id":292,"implemented":false,"kind":"function","modifiers":[],"name":"latestRoundData","nameLocation":"443:15:5","nodeType":"FunctionDefinition","parameters":{"id":280,"nodeType":"ParameterList","parameters":[],"src":"458:2:5"},"returnParameters":{"id":291,"nodeType":"ParameterList","parameters":[{"constant":false,"id":282,"mutability":"mutable","name":"roundId","nameLocation":"503:7:5","nodeType":"VariableDeclaration","scope":292,"src":"496:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":281,"name":"uint80","nodeType":"ElementaryTypeName","src":"496:6:5","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"},{"constant":false,"id":284,"mutability":"mutable","name":"answer","nameLocation":"519:6:5","nodeType":"VariableDeclaration","scope":292,"src":"512:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":283,"name":"int256","nodeType":"ElementaryTypeName","src":"512:6:5","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":286,"mutability":"mutable","name":"startedAt","nameLocation":"535:9:5","nodeType":"VariableDeclaration","scope":292,"src":"527:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":285,"name":"uint256","nodeType":"ElementaryTypeName","src":"527:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":288,"mutability":"mutable","name":"updatedAt","nameLocation":"554:9:5","nodeType":"VariableDeclaration","scope":292,"src":"546:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":287,"name":"uint256","nodeType":"ElementaryTypeName","src":"546:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":290,"mutability":"mutable","name":"answeredInRound","nameLocation":"572:15:5","nodeType":"VariableDeclaration","scope":292,"src":"565:22:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":289,"name":"uint80","nodeType":"ElementaryTypeName","src":"565:6:5","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"495:93:5"},"scope":293,"src":"434:155:5","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":294,"src":"57:534:5","usedErrors":[],"usedEvents":[]}],"src":"32:560:5"},"id":5},"@chainlink/contracts/src/v0.8/interfaces/BlockhashStoreInterface.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/interfaces/BlockhashStoreInterface.sol","exportedSymbols":{"BlockhashStoreInterface":[303]},"id":304,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":295,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:6"},{"abstract":false,"baseContracts":[],"canonicalName":"BlockhashStoreInterface","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":303,"linearizedBaseContracts":[303],"name":"BlockhashStoreInterface","nameLocation":"67:23:6","nodeType":"ContractDefinition","nodes":[{"functionSelector":"e9413d38","id":302,"implemented":false,"kind":"function","modifiers":[],"name":"getBlockhash","nameLocation":"104:12:6","nodeType":"FunctionDefinition","parameters":{"id":298,"nodeType":"ParameterList","parameters":[{"constant":false,"id":297,"mutability":"mutable","name":"number","nameLocation":"125:6:6","nodeType":"VariableDeclaration","scope":302,"src":"117:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":296,"name":"uint256","nodeType":"ElementaryTypeName","src":"117:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"116:16:6"},"returnParameters":{"id":301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":300,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":302,"src":"156:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":299,"name":"bytes32","nodeType":"ElementaryTypeName","src":"156:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"155:9:6"},"scope":303,"src":"95:70:6","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":304,"src":"57:110:6","usedErrors":[],"usedEvents":[]}],"src":"32:136:6"},"id":6},"@chainlink/contracts/src/v0.8/interfaces/TypeAndVersionInterface.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/interfaces/TypeAndVersionInterface.sol","exportedSymbols":{"TypeAndVersionInterface":[311]},"id":312,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":305,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:7"},{"abstract":true,"baseContracts":[],"canonicalName":"TypeAndVersionInterface","contractDependencies":[],"contractKind":"contract","fullyImplemented":false,"id":311,"linearizedBaseContracts":[311],"name":"TypeAndVersionInterface","nameLocation":"75:23:7","nodeType":"ContractDefinition","nodes":[{"functionSelector":"181f5a77","id":310,"implemented":false,"kind":"function","modifiers":[],"name":"typeAndVersion","nameLocation":"112:14:7","nodeType":"FunctionDefinition","parameters":{"id":306,"nodeType":"ParameterList","parameters":[],"src":"126:2:7"},"returnParameters":{"id":309,"nodeType":"ParameterList","parameters":[{"constant":false,"id":308,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":310,"src":"160:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":307,"name":"string","nodeType":"ElementaryTypeName","src":"160:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"159:15:7"},"scope":311,"src":"103:72:7","stateMutability":"pure","virtual":true,"visibility":"external"}],"scope":312,"src":"57:120:7","usedErrors":[],"usedEvents":[]}],"src":"32:146:7"},"id":7},"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol","exportedSymbols":{"VRFCoordinatorV2Interface":[407]},"id":408,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":313,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:8"},{"abstract":false,"baseContracts":[],"canonicalName":"VRFCoordinatorV2Interface","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":407,"linearizedBaseContracts":[407],"name":"VRFCoordinatorV2Interface","nameLocation":"67:25:8","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":314,"nodeType":"StructuredDocumentation","src":"97:267:8","text":" @notice Get configuration relevant for making requests\n @return minimumRequestConfirmations global min for request confirmations\n @return maxGasLimit global max for request gas limit\n @return s_provingKeyHashes list of registered key hashes"},"functionSelector":"00012291","id":324,"implemented":false,"kind":"function","modifiers":[],"name":"getRequestConfig","nameLocation":"376:16:8","nodeType":"FunctionDefinition","parameters":{"id":315,"nodeType":"ParameterList","parameters":[],"src":"392:2:8"},"returnParameters":{"id":323,"nodeType":"ParameterList","parameters":[{"constant":false,"id":317,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":324,"src":"418:6:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":316,"name":"uint16","nodeType":"ElementaryTypeName","src":"418:6:8","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":319,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":324,"src":"426:6:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":318,"name":"uint32","nodeType":"ElementaryTypeName","src":"426:6:8","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":322,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":324,"src":"434:16:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":320,"name":"bytes32","nodeType":"ElementaryTypeName","src":"434:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":321,"nodeType":"ArrayTypeName","src":"434:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"417:34:8"},"scope":407,"src":"367:85:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":325,"nodeType":"StructuredDocumentation","src":"456:1511:8","text":" @notice Request a set of random words.\n @param keyHash - Corresponds to a particular oracle job which uses\n that key for generating the VRF proof. Different keyHash's have different gas price\n ceilings, so you can select a specific one to bound your maximum per request cost.\n @param subId  - The ID of the VRF subscription. Must be funded\n with the minimum subscription balance required for the selected keyHash.\n @param minimumRequestConfirmations - How many blocks you'd like the\n oracle to wait before responding to the request. See SECURITY CONSIDERATIONS\n for why you may want to request more. The acceptable range is\n [minimumRequestBlockConfirmations, 200].\n @param callbackGasLimit - How much gas you'd like to receive in your\n fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords\n may be slightly less than this amount because of gas used calling the function\n (argument decoding etc.), so you may need to request slightly more than you expect\n to have inside fulfillRandomWords. The acceptable range is\n [0, maxGasLimit]\n @param numWords - The number of uint256 random values you'd like to receive\n in your fulfillRandomWords callback. Note these numbers are expanded in a\n secure way by the VRFCoordinator from a single random value supplied by the oracle.\n @return requestId - A unique identifier of the request. Can be used to match\n a request to a response in fulfillRandomWords."},"functionSelector":"5d3b1d30","id":340,"implemented":false,"kind":"function","modifiers":[],"name":"requestRandomWords","nameLocation":"1979:18:8","nodeType":"FunctionDefinition","parameters":{"id":336,"nodeType":"ParameterList","parameters":[{"constant":false,"id":327,"mutability":"mutable","name":"keyHash","nameLocation":"2011:7:8","nodeType":"VariableDeclaration","scope":340,"src":"2003:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":326,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2003:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":329,"mutability":"mutable","name":"subId","nameLocation":"2031:5:8","nodeType":"VariableDeclaration","scope":340,"src":"2024:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":328,"name":"uint64","nodeType":"ElementaryTypeName","src":"2024:6:8","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":331,"mutability":"mutable","name":"minimumRequestConfirmations","nameLocation":"2049:27:8","nodeType":"VariableDeclaration","scope":340,"src":"2042:34:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":330,"name":"uint16","nodeType":"ElementaryTypeName","src":"2042:6:8","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":333,"mutability":"mutable","name":"callbackGasLimit","nameLocation":"2089:16:8","nodeType":"VariableDeclaration","scope":340,"src":"2082:23:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":332,"name":"uint32","nodeType":"ElementaryTypeName","src":"2082:6:8","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":335,"mutability":"mutable","name":"numWords","nameLocation":"2118:8:8","nodeType":"VariableDeclaration","scope":340,"src":"2111:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":334,"name":"uint32","nodeType":"ElementaryTypeName","src":"2111:6:8","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"1997:133:8"},"returnParameters":{"id":339,"nodeType":"ParameterList","parameters":[{"constant":false,"id":338,"mutability":"mutable","name":"requestId","nameLocation":"2157:9:8","nodeType":"VariableDeclaration","scope":340,"src":"2149:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":337,"name":"uint256","nodeType":"ElementaryTypeName","src":"2149:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2148:19:8"},"scope":407,"src":"1970:198:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":341,"nodeType":"StructuredDocumentation","src":"2172:384:8","text":" @notice Create a VRF subscription.\n @return subId - A unique subscription id.\n @dev You can manage the consumer set dynamically with addConsumer/removeConsumer.\n @dev Note to fund the subscription, use transferAndCall. For example\n @dev  LINKTOKEN.transferAndCall(\n @dev    address(COORDINATOR),\n @dev    amount,\n @dev    abi.encode(subId));"},"functionSelector":"a21a23e4","id":346,"implemented":false,"kind":"function","modifiers":[],"name":"createSubscription","nameLocation":"2568:18:8","nodeType":"FunctionDefinition","parameters":{"id":342,"nodeType":"ParameterList","parameters":[],"src":"2586:2:8"},"returnParameters":{"id":345,"nodeType":"ParameterList","parameters":[{"constant":false,"id":344,"mutability":"mutable","name":"subId","nameLocation":"2614:5:8","nodeType":"VariableDeclaration","scope":346,"src":"2607:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":343,"name":"uint64","nodeType":"ElementaryTypeName","src":"2607:6:8","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"2606:14:8"},"scope":407,"src":"2559:62:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":347,"nodeType":"StructuredDocumentation","src":"2625:381:8","text":" @notice Get a VRF subscription.\n @param subId - ID of the subscription\n @return balance - LINK balance of the subscription in juels.\n @return reqCount - number of requests for this subscription, determines fee tier.\n @return owner - owner of the subscription.\n @return consumers - list of consumer address which are able to use this subscription."},"functionSelector":"a47c7696","id":361,"implemented":false,"kind":"function","modifiers":[],"name":"getSubscription","nameLocation":"3018:15:8","nodeType":"FunctionDefinition","parameters":{"id":350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":349,"mutability":"mutable","name":"subId","nameLocation":"3046:5:8","nodeType":"VariableDeclaration","scope":361,"src":"3039:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":348,"name":"uint64","nodeType":"ElementaryTypeName","src":"3039:6:8","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"3033:22:8"},"returnParameters":{"id":360,"nodeType":"ParameterList","parameters":[{"constant":false,"id":352,"mutability":"mutable","name":"balance","nameLocation":"3086:7:8","nodeType":"VariableDeclaration","scope":361,"src":"3079:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":351,"name":"uint96","nodeType":"ElementaryTypeName","src":"3079:6:8","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":354,"mutability":"mutable","name":"reqCount","nameLocation":"3102:8:8","nodeType":"VariableDeclaration","scope":361,"src":"3095:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":353,"name":"uint64","nodeType":"ElementaryTypeName","src":"3095:6:8","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":356,"mutability":"mutable","name":"owner","nameLocation":"3120:5:8","nodeType":"VariableDeclaration","scope":361,"src":"3112:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":355,"name":"address","nodeType":"ElementaryTypeName","src":"3112:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":359,"mutability":"mutable","name":"consumers","nameLocation":"3144:9:8","nodeType":"VariableDeclaration","scope":361,"src":"3127:26:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":357,"name":"address","nodeType":"ElementaryTypeName","src":"3127:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":358,"nodeType":"ArrayTypeName","src":"3127:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"3078:76:8"},"scope":407,"src":"3009:146:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":362,"nodeType":"StructuredDocumentation","src":"3159:164:8","text":" @notice Request subscription owner transfer.\n @param subId - ID of the subscription\n @param newOwner - proposed new owner of the subscription"},"functionSelector":"04c357cb","id":369,"implemented":false,"kind":"function","modifiers":[],"name":"requestSubscriptionOwnerTransfer","nameLocation":"3335:32:8","nodeType":"FunctionDefinition","parameters":{"id":367,"nodeType":"ParameterList","parameters":[{"constant":false,"id":364,"mutability":"mutable","name":"subId","nameLocation":"3375:5:8","nodeType":"VariableDeclaration","scope":369,"src":"3368:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":363,"name":"uint64","nodeType":"ElementaryTypeName","src":"3368:6:8","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":366,"mutability":"mutable","name":"newOwner","nameLocation":"3390:8:8","nodeType":"VariableDeclaration","scope":369,"src":"3382:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":365,"name":"address","nodeType":"ElementaryTypeName","src":"3382:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3367:32:8"},"returnParameters":{"id":368,"nodeType":"ParameterList","parameters":[],"src":"3408:0:8"},"scope":407,"src":"3326:83:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":370,"nodeType":"StructuredDocumentation","src":"3413:212:8","text":" @notice Request subscription owner transfer.\n @param subId - ID of the subscription\n @dev will revert if original owner of subId has\n not requested that msg.sender become the new owner."},"functionSelector":"82359740","id":375,"implemented":false,"kind":"function","modifiers":[],"name":"acceptSubscriptionOwnerTransfer","nameLocation":"3637:31:8","nodeType":"FunctionDefinition","parameters":{"id":373,"nodeType":"ParameterList","parameters":[{"constant":false,"id":372,"mutability":"mutable","name":"subId","nameLocation":"3676:5:8","nodeType":"VariableDeclaration","scope":375,"src":"3669:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":371,"name":"uint64","nodeType":"ElementaryTypeName","src":"3669:6:8","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"3668:14:8"},"returnParameters":{"id":374,"nodeType":"ParameterList","parameters":[],"src":"3691:0:8"},"scope":407,"src":"3628:64:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":376,"nodeType":"StructuredDocumentation","src":"3696:170:8","text":" @notice Add a consumer to a VRF subscription.\n @param subId - ID of the subscription\n @param consumer - New consumer which can use the subscription"},"functionSelector":"7341c10c","id":383,"implemented":false,"kind":"function","modifiers":[],"name":"addConsumer","nameLocation":"3878:11:8","nodeType":"FunctionDefinition","parameters":{"id":381,"nodeType":"ParameterList","parameters":[{"constant":false,"id":378,"mutability":"mutable","name":"subId","nameLocation":"3897:5:8","nodeType":"VariableDeclaration","scope":383,"src":"3890:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":377,"name":"uint64","nodeType":"ElementaryTypeName","src":"3890:6:8","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":380,"mutability":"mutable","name":"consumer","nameLocation":"3912:8:8","nodeType":"VariableDeclaration","scope":383,"src":"3904:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":379,"name":"address","nodeType":"ElementaryTypeName","src":"3904:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3889:32:8"},"returnParameters":{"id":382,"nodeType":"ParameterList","parameters":[],"src":"3930:0:8"},"scope":407,"src":"3869:62:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":384,"nodeType":"StructuredDocumentation","src":"3935:172:8","text":" @notice Remove a consumer from a VRF subscription.\n @param subId - ID of the subscription\n @param consumer - Consumer to remove from the subscription"},"functionSelector":"9f87fad7","id":391,"implemented":false,"kind":"function","modifiers":[],"name":"removeConsumer","nameLocation":"4119:14:8","nodeType":"FunctionDefinition","parameters":{"id":389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":386,"mutability":"mutable","name":"subId","nameLocation":"4141:5:8","nodeType":"VariableDeclaration","scope":391,"src":"4134:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":385,"name":"uint64","nodeType":"ElementaryTypeName","src":"4134:6:8","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":388,"mutability":"mutable","name":"consumer","nameLocation":"4156:8:8","nodeType":"VariableDeclaration","scope":391,"src":"4148:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":387,"name":"address","nodeType":"ElementaryTypeName","src":"4148:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4133:32:8"},"returnParameters":{"id":390,"nodeType":"ParameterList","parameters":[],"src":"4174:0:8"},"scope":407,"src":"4110:65:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":392,"nodeType":"StructuredDocumentation","src":"4179:140:8","text":" @notice Cancel a subscription\n @param subId - ID of the subscription\n @param to - Where to send the remaining LINK to"},"functionSelector":"d7ae1d30","id":399,"implemented":false,"kind":"function","modifiers":[],"name":"cancelSubscription","nameLocation":"4331:18:8","nodeType":"FunctionDefinition","parameters":{"id":397,"nodeType":"ParameterList","parameters":[{"constant":false,"id":394,"mutability":"mutable","name":"subId","nameLocation":"4357:5:8","nodeType":"VariableDeclaration","scope":399,"src":"4350:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":393,"name":"uint64","nodeType":"ElementaryTypeName","src":"4350:6:8","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":396,"mutability":"mutable","name":"to","nameLocation":"4372:2:8","nodeType":"VariableDeclaration","scope":399,"src":"4364:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":395,"name":"address","nodeType":"ElementaryTypeName","src":"4364:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4349:26:8"},"returnParameters":{"id":398,"nodeType":"ParameterList","parameters":[],"src":"4384:0:8"},"scope":407,"src":"4322:63:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"e82ad7d4","id":406,"implemented":false,"kind":"function","modifiers":[],"name":"pendingRequestExists","nameLocation":"4690:20:8","nodeType":"FunctionDefinition","parameters":{"id":402,"nodeType":"ParameterList","parameters":[{"constant":false,"id":401,"mutability":"mutable","name":"subId","nameLocation":"4718:5:8","nodeType":"VariableDeclaration","scope":406,"src":"4711:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":400,"name":"uint64","nodeType":"ElementaryTypeName","src":"4711:6:8","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"4710:14:8"},"returnParameters":{"id":405,"nodeType":"ParameterList","parameters":[{"constant":false,"id":404,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":406,"src":"4748:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":403,"name":"bool","nodeType":"ElementaryTypeName","src":"4748:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4747:6:8"},"scope":407,"src":"4681:73:8","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":408,"src":"57:4699:8","usedErrors":[],"usedEvents":[]}],"src":"32:4725:8"},"id":8},"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol","exportedSymbols":{"ConfirmedOwner":[427],"ConfirmedOwnerWithProposal":[589],"IOwnable":[617]},"id":428,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":409,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:9"},{"absolutePath":"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol","file":"./ConfirmedOwnerWithProposal.sol","id":410,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":428,"sourceUnit":590,"src":"57:42:9","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":412,"name":"ConfirmedOwnerWithProposal","nameLocations":["239:26:9"],"nodeType":"IdentifierPath","referencedDeclaration":589,"src":"239:26:9"},"id":413,"nodeType":"InheritanceSpecifier","src":"239:26:9"}],"canonicalName":"ConfirmedOwner","contractDependencies":[],"contractKind":"contract","documentation":{"id":411,"nodeType":"StructuredDocumentation","src":"101:110:9","text":" @title The ConfirmedOwner contract\n @notice A contract with helpers for basic contract ownership."},"fullyImplemented":true,"id":427,"linearizedBaseContracts":[427,589,617],"name":"ConfirmedOwner","nameLocation":"221:14:9","nodeType":"ContractDefinition","nodes":[{"body":{"id":425,"nodeType":"Block","src":"349:2:9","statements":[]},"id":426,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":418,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":415,"src":"327:8:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":421,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"345:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":420,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"337:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":419,"name":"address","nodeType":"ElementaryTypeName","src":"337:7:9","typeDescriptions":{}}},"id":422,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"337:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":423,"kind":"baseConstructorSpecifier","modifierName":{"id":417,"name":"ConfirmedOwnerWithProposal","nameLocations":["300:26:9"],"nodeType":"IdentifierPath","referencedDeclaration":589,"src":"300:26:9"},"nodeType":"ModifierInvocation","src":"300:48:9"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":416,"nodeType":"ParameterList","parameters":[{"constant":false,"id":415,"mutability":"mutable","name":"newOwner","nameLocation":"290:8:9","nodeType":"VariableDeclaration","scope":426,"src":"282:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":414,"name":"address","nodeType":"ElementaryTypeName","src":"282:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"281:18:9"},"returnParameters":{"id":424,"nodeType":"ParameterList","parameters":[],"src":"349:0:9"},"scope":427,"src":"270:81:9","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":428,"src":"212:141:9","usedErrors":[],"usedEvents":[443,449]}],"src":"32:322:9"},"id":9},"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol","exportedSymbols":{"ConfirmedOwnerWithProposal":[589],"IOwnable":[617]},"id":590,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":429,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:10"},{"absolutePath":"@chainlink/contracts/src/v0.8/shared/interfaces/IOwnable.sol","file":"../interfaces/IOwnable.sol","id":430,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":590,"sourceUnit":618,"src":"57:36:10","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":432,"name":"IOwnable","nameLocations":["245:8:10"],"nodeType":"IdentifierPath","referencedDeclaration":617,"src":"245:8:10"},"id":433,"nodeType":"InheritanceSpecifier","src":"245:8:10"}],"canonicalName":"ConfirmedOwnerWithProposal","contractDependencies":[],"contractKind":"contract","documentation":{"id":431,"nodeType":"StructuredDocumentation","src":"95:110:10","text":" @title The ConfirmedOwner contract\n @notice A contract with helpers for basic contract ownership."},"fullyImplemented":true,"id":589,"linearizedBaseContracts":[589,617],"name":"ConfirmedOwnerWithProposal","nameLocation":"215:26:10","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":435,"mutability":"mutable","name":"s_owner","nameLocation":"274:7:10","nodeType":"VariableDeclaration","scope":589,"src":"258:23:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":434,"name":"address","nodeType":"ElementaryTypeName","src":"258:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":false,"id":437,"mutability":"mutable","name":"s_pendingOwner","nameLocation":"301:14:10","nodeType":"VariableDeclaration","scope":589,"src":"285:30:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":436,"name":"address","nodeType":"ElementaryTypeName","src":"285:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"eventSelector":"ed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae1278","id":443,"name":"OwnershipTransferRequested","nameLocation":"326:26:10","nodeType":"EventDefinition","parameters":{"id":442,"nodeType":"ParameterList","parameters":[{"constant":false,"id":439,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"369:4:10","nodeType":"VariableDeclaration","scope":443,"src":"353:20:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":438,"name":"address","nodeType":"ElementaryTypeName","src":"353:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":441,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"391:2:10","nodeType":"VariableDeclaration","scope":443,"src":"375:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":440,"name":"address","nodeType":"ElementaryTypeName","src":"375:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"352:42:10"},"src":"320:75:10"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":449,"name":"OwnershipTransferred","nameLocation":"404:20:10","nodeType":"EventDefinition","parameters":{"id":448,"nodeType":"ParameterList","parameters":[{"constant":false,"id":445,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"441:4:10","nodeType":"VariableDeclaration","scope":449,"src":"425:20:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":444,"name":"address","nodeType":"ElementaryTypeName","src":"425:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":447,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"463:2:10","nodeType":"VariableDeclaration","scope":449,"src":"447:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":446,"name":"address","nodeType":"ElementaryTypeName","src":"447:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"424:42:10"},"src":"398:69:10"},{"body":{"id":482,"nodeType":"Block","src":"523:179:10","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":457,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":451,"src":"537:8:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":460,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"557:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":459,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"549:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":458,"name":"address","nodeType":"ElementaryTypeName","src":"549:7:10","typeDescriptions":{}}},"id":461,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"549:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"537:22:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43616e6e6f7420736574206f776e657220746f207a65726f","id":463,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"561:26:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2","typeString":"literal_string \"Cannot set owner to zero\""},"value":"Cannot set owner to zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2","typeString":"literal_string \"Cannot set owner to zero\""}],"id":456,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"529:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":464,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"529:59:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":465,"nodeType":"ExpressionStatement","src":"529:59:10"},{"expression":{"id":468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":466,"name":"s_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":435,"src":"595:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":467,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":451,"src":"605:8:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"595:18:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":469,"nodeType":"ExpressionStatement","src":"595:18:10"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":470,"name":"pendingOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":453,"src":"623:12:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":473,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"647:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":472,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"639:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":471,"name":"address","nodeType":"ElementaryTypeName","src":"639:7:10","typeDescriptions":{}}},"id":474,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"639:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"623:26:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":481,"nodeType":"IfStatement","src":"619:79:10","trueBody":{"id":480,"nodeType":"Block","src":"651:47:10","statements":[{"expression":{"arguments":[{"id":477,"name":"pendingOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":453,"src":"678:12:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":476,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":567,"src":"659:18:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":478,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"659:32:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":479,"nodeType":"ExpressionStatement","src":"659:32:10"}]}}]},"id":483,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":454,"nodeType":"ParameterList","parameters":[{"constant":false,"id":451,"mutability":"mutable","name":"newOwner","nameLocation":"491:8:10","nodeType":"VariableDeclaration","scope":483,"src":"483:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":450,"name":"address","nodeType":"ElementaryTypeName","src":"483:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":453,"mutability":"mutable","name":"pendingOwner","nameLocation":"509:12:10","nodeType":"VariableDeclaration","scope":483,"src":"501:20:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":452,"name":"address","nodeType":"ElementaryTypeName","src":"501:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"482:40:10"},"returnParameters":{"id":455,"nodeType":"ParameterList","parameters":[],"src":"523:0:10"},"scope":589,"src":"471:231:10","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[613],"body":{"id":496,"nodeType":"Block","src":"876:33:10","statements":[{"expression":{"arguments":[{"id":493,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":486,"src":"901:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":492,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":567,"src":"882:18:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":494,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"882:22:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":495,"nodeType":"ExpressionStatement","src":"882:22:10"}]},"documentation":{"id":484,"nodeType":"StructuredDocumentation","src":"706:102:10","text":" @notice Allows an owner to begin transferring ownership to a new address,\n pending."},"functionSelector":"f2fde38b","id":497,"implemented":true,"kind":"function","modifiers":[{"id":490,"kind":"modifierInvocation","modifierName":{"id":489,"name":"onlyOwner","nameLocations":["866:9:10"],"nodeType":"IdentifierPath","referencedDeclaration":588,"src":"866:9:10"},"nodeType":"ModifierInvocation","src":"866:9:10"}],"name":"transferOwnership","nameLocation":"820:17:10","nodeType":"FunctionDefinition","overrides":{"id":488,"nodeType":"OverrideSpecifier","overrides":[],"src":"857:8:10"},"parameters":{"id":487,"nodeType":"ParameterList","parameters":[{"constant":false,"id":486,"mutability":"mutable","name":"to","nameLocation":"846:2:10","nodeType":"VariableDeclaration","scope":497,"src":"838:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":485,"name":"address","nodeType":"ElementaryTypeName","src":"838:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"837:12:10"},"returnParameters":{"id":491,"nodeType":"ParameterList","parameters":[],"src":"876:0:10"},"scope":589,"src":"811:98:10","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[616],"body":{"id":532,"nodeType":"Block","src":"1046:220:10","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":503,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1060:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1064:6:10","memberName":"sender","nodeType":"MemberAccess","src":"1060:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":505,"name":"s_pendingOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":437,"src":"1074:14:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1060:28:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d7573742062652070726f706f736564206f776e6572","id":507,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1090:24:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c","typeString":"literal_string \"Must be proposed owner\""},"value":"Must be proposed owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c","typeString":"literal_string \"Must be proposed owner\""}],"id":502,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1052:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":508,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1052:63:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":509,"nodeType":"ExpressionStatement","src":"1052:63:10"},{"assignments":[511],"declarations":[{"constant":false,"id":511,"mutability":"mutable","name":"oldOwner","nameLocation":"1130:8:10","nodeType":"VariableDeclaration","scope":532,"src":"1122:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":510,"name":"address","nodeType":"ElementaryTypeName","src":"1122:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":513,"initialValue":{"id":512,"name":"s_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":435,"src":"1141:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"1122:26:10"},{"expression":{"id":517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":514,"name":"s_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":435,"src":"1154:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":515,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1164:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1168:6:10","memberName":"sender","nodeType":"MemberAccess","src":"1164:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1154:20:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":518,"nodeType":"ExpressionStatement","src":"1154:20:10"},{"expression":{"id":524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":519,"name":"s_pendingOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":437,"src":"1180:14:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"30","id":522,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1205:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":521,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1197:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":520,"name":"address","nodeType":"ElementaryTypeName","src":"1197:7:10","typeDescriptions":{}}},"id":523,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1197:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1180:27:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":525,"nodeType":"ExpressionStatement","src":"1180:27:10"},{"eventCall":{"arguments":[{"id":527,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":511,"src":"1240:8:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":528,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1250:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1254:6:10","memberName":"sender","nodeType":"MemberAccess","src":"1250:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":526,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":449,"src":"1219:20:10","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":530,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1219:42:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":531,"nodeType":"EmitStatement","src":"1214:47:10"}]},"documentation":{"id":498,"nodeType":"StructuredDocumentation","src":"913:85:10","text":" @notice Allows an ownership transfer to be completed by the recipient."},"functionSelector":"79ba5097","id":533,"implemented":true,"kind":"function","modifiers":[],"name":"acceptOwnership","nameLocation":"1010:15:10","nodeType":"FunctionDefinition","overrides":{"id":500,"nodeType":"OverrideSpecifier","overrides":[],"src":"1037:8:10"},"parameters":{"id":499,"nodeType":"ParameterList","parameters":[],"src":"1025:2:10"},"returnParameters":{"id":501,"nodeType":"ParameterList","parameters":[],"src":"1046:0:10"},"scope":589,"src":"1001:265:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[608],"body":{"id":542,"nodeType":"Block","src":"1373:25:10","statements":[{"expression":{"id":540,"name":"s_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":435,"src":"1386:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":539,"id":541,"nodeType":"Return","src":"1379:14:10"}]},"documentation":{"id":534,"nodeType":"StructuredDocumentation","src":"1270:44:10","text":" @notice Get the current owner"},"functionSelector":"8da5cb5b","id":543,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1326:5:10","nodeType":"FunctionDefinition","overrides":{"id":536,"nodeType":"OverrideSpecifier","overrides":[],"src":"1346:8:10"},"parameters":{"id":535,"nodeType":"ParameterList","parameters":[],"src":"1331:2:10"},"returnParameters":{"id":539,"nodeType":"ParameterList","parameters":[{"constant":false,"id":538,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":543,"src":"1364:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":537,"name":"address","nodeType":"ElementaryTypeName","src":"1364:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1363:9:10"},"scope":589,"src":"1317:81:10","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":566,"nodeType":"Block","src":"1530:140:10","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":550,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":546,"src":"1544:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":551,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1550:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1554:6:10","memberName":"sender","nodeType":"MemberAccess","src":"1550:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1544:16:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43616e6e6f74207472616e7366657220746f2073656c66","id":554,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1562:25:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2","typeString":"literal_string \"Cannot transfer to self\""},"value":"Cannot transfer to self"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2","typeString":"literal_string \"Cannot transfer to self\""}],"id":549,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1536:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":555,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1536:52:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":556,"nodeType":"ExpressionStatement","src":"1536:52:10"},{"expression":{"id":559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":557,"name":"s_pendingOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":437,"src":"1595:14:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":558,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":546,"src":"1612:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1595:19:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":560,"nodeType":"ExpressionStatement","src":"1595:19:10"},{"eventCall":{"arguments":[{"id":562,"name":"s_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":435,"src":"1653:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":563,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":546,"src":"1662:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":561,"name":"OwnershipTransferRequested","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":443,"src":"1626:26:10","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":564,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1626:39:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":565,"nodeType":"EmitStatement","src":"1621:44:10"}]},"documentation":{"id":544,"nodeType":"StructuredDocumentation","src":"1402:77:10","text":" @notice validate, transfer ownership, and emit relevant events"},"id":567,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"1491:18:10","nodeType":"FunctionDefinition","parameters":{"id":547,"nodeType":"ParameterList","parameters":[{"constant":false,"id":546,"mutability":"mutable","name":"to","nameLocation":"1518:2:10","nodeType":"VariableDeclaration","scope":567,"src":"1510:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":545,"name":"address","nodeType":"ElementaryTypeName","src":"1510:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1509:12:10"},"returnParameters":{"id":548,"nodeType":"ParameterList","parameters":[],"src":"1530:0:10"},"scope":589,"src":"1482:188:10","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":579,"nodeType":"Block","src":"1759:67:10","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":572,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1773:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1777:6:10","memberName":"sender","nodeType":"MemberAccess","src":"1773:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":574,"name":"s_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":435,"src":"1787:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1773:21:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6e6c792063616c6c61626c65206279206f776e6572","id":576,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1796:24:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3","typeString":"literal_string \"Only callable by owner\""},"value":"Only callable by owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3","typeString":"literal_string \"Only callable by owner\""}],"id":571,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1765:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":577,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1765:56:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":578,"nodeType":"ExpressionStatement","src":"1765:56:10"}]},"documentation":{"id":568,"nodeType":"StructuredDocumentation","src":"1674:38:10","text":" @notice validate access"},"id":580,"implemented":true,"kind":"function","modifiers":[],"name":"_validateOwnership","nameLocation":"1724:18:10","nodeType":"FunctionDefinition","parameters":{"id":569,"nodeType":"ParameterList","parameters":[],"src":"1742:2:10"},"returnParameters":{"id":570,"nodeType":"ParameterList","parameters":[],"src":"1759:0:10"},"scope":589,"src":"1715:111:10","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":587,"nodeType":"Block","src":"1935:38:10","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":583,"name":"_validateOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":580,"src":"1941:18:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":584,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1941:20:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":585,"nodeType":"ExpressionStatement","src":"1941:20:10"},{"id":586,"nodeType":"PlaceholderStatement","src":"1967:1:10"}]},"documentation":{"id":581,"nodeType":"StructuredDocumentation","src":"1830:81:10","text":" @notice Reverts if called by anyone other than the contract owner."},"id":588,"name":"onlyOwner","nameLocation":"1923:9:10","nodeType":"ModifierDefinition","parameters":{"id":582,"nodeType":"ParameterList","parameters":[],"src":"1932:2:10"},"src":"1914:59:10","virtual":false,"visibility":"internal"}],"scope":590,"src":"206:1769:10","usedErrors":[],"usedEvents":[443,449]}],"src":"32:1944:10"},"id":10},"@chainlink/contracts/src/v0.8/shared/interfaces/IERC677Receiver.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/shared/interfaces/IERC677Receiver.sol","exportedSymbols":{"IERC677Receiver":[601]},"id":602,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":591,"literals":["solidity","^","0.8",".6"],"nodeType":"PragmaDirective","src":"32:23:11"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC677Receiver","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":601,"linearizedBaseContracts":[601],"name":"IERC677Receiver","nameLocation":"67:15:11","nodeType":"ContractDefinition","nodes":[{"functionSelector":"a4c0ed36","id":600,"implemented":false,"kind":"function","modifiers":[],"name":"onTokenTransfer","nameLocation":"96:15:11","nodeType":"FunctionDefinition","parameters":{"id":598,"nodeType":"ParameterList","parameters":[{"constant":false,"id":593,"mutability":"mutable","name":"sender","nameLocation":"120:6:11","nodeType":"VariableDeclaration","scope":600,"src":"112:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":592,"name":"address","nodeType":"ElementaryTypeName","src":"112:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":595,"mutability":"mutable","name":"amount","nameLocation":"136:6:11","nodeType":"VariableDeclaration","scope":600,"src":"128:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":594,"name":"uint256","nodeType":"ElementaryTypeName","src":"128:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":597,"mutability":"mutable","name":"data","nameLocation":"159:4:11","nodeType":"VariableDeclaration","scope":600,"src":"144:19:11","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":596,"name":"bytes","nodeType":"ElementaryTypeName","src":"144:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"111:53:11"},"returnParameters":{"id":599,"nodeType":"ParameterList","parameters":[],"src":"173:0:11"},"scope":601,"src":"87:87:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":602,"src":"57:119:11","usedErrors":[],"usedEvents":[]}],"src":"32:145:11"},"id":11},"@chainlink/contracts/src/v0.8/shared/interfaces/IOwnable.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/shared/interfaces/IOwnable.sol","exportedSymbols":{"IOwnable":[617]},"id":618,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":603,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:12"},{"abstract":false,"baseContracts":[],"canonicalName":"IOwnable","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":617,"linearizedBaseContracts":[617],"name":"IOwnable","nameLocation":"67:8:12","nodeType":"ContractDefinition","nodes":[{"functionSelector":"8da5cb5b","id":608,"implemented":false,"kind":"function","modifiers":[],"name":"owner","nameLocation":"89:5:12","nodeType":"FunctionDefinition","parameters":{"id":604,"nodeType":"ParameterList","parameters":[],"src":"94:2:12"},"returnParameters":{"id":607,"nodeType":"ParameterList","parameters":[{"constant":false,"id":606,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":608,"src":"115:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":605,"name":"address","nodeType":"ElementaryTypeName","src":"115:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"114:9:12"},"scope":617,"src":"80:44:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"f2fde38b","id":613,"implemented":false,"kind":"function","modifiers":[],"name":"transferOwnership","nameLocation":"137:17:12","nodeType":"FunctionDefinition","parameters":{"id":611,"nodeType":"ParameterList","parameters":[{"constant":false,"id":610,"mutability":"mutable","name":"recipient","nameLocation":"163:9:12","nodeType":"VariableDeclaration","scope":613,"src":"155:17:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":609,"name":"address","nodeType":"ElementaryTypeName","src":"155:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"154:19:12"},"returnParameters":{"id":612,"nodeType":"ParameterList","parameters":[],"src":"182:0:12"},"scope":617,"src":"128:55:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"79ba5097","id":616,"implemented":false,"kind":"function","modifiers":[],"name":"acceptOwnership","nameLocation":"196:15:12","nodeType":"FunctionDefinition","parameters":{"id":614,"nodeType":"ParameterList","parameters":[],"src":"211:2:12"},"returnParameters":{"id":615,"nodeType":"ParameterList","parameters":[],"src":"222:0:12"},"scope":617,"src":"187:36:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":618,"src":"57:168:12","usedErrors":[],"usedEvents":[]}],"src":"32:194:12"},"id":12},"@chainlink/contracts/src/v0.8/shared/interfaces/LinkTokenInterface.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/shared/interfaces/LinkTokenInterface.sol","exportedSymbols":{"LinkTokenInterface":[712]},"id":713,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":619,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:13"},{"abstract":false,"baseContracts":[],"canonicalName":"LinkTokenInterface","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":712,"linearizedBaseContracts":[712],"name":"LinkTokenInterface","nameLocation":"67:18:13","nodeType":"ContractDefinition","nodes":[{"functionSelector":"dd62ed3e","id":628,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"99:9:13","nodeType":"FunctionDefinition","parameters":{"id":624,"nodeType":"ParameterList","parameters":[{"constant":false,"id":621,"mutability":"mutable","name":"owner","nameLocation":"117:5:13","nodeType":"VariableDeclaration","scope":628,"src":"109:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":620,"name":"address","nodeType":"ElementaryTypeName","src":"109:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":623,"mutability":"mutable","name":"spender","nameLocation":"132:7:13","nodeType":"VariableDeclaration","scope":628,"src":"124:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":622,"name":"address","nodeType":"ElementaryTypeName","src":"124:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"108:32:13"},"returnParameters":{"id":627,"nodeType":"ParameterList","parameters":[{"constant":false,"id":626,"mutability":"mutable","name":"remaining","nameLocation":"172:9:13","nodeType":"VariableDeclaration","scope":628,"src":"164:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":625,"name":"uint256","nodeType":"ElementaryTypeName","src":"164:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"163:19:13"},"scope":712,"src":"90:93:13","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"095ea7b3","id":637,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"196:7:13","nodeType":"FunctionDefinition","parameters":{"id":633,"nodeType":"ParameterList","parameters":[{"constant":false,"id":630,"mutability":"mutable","name":"spender","nameLocation":"212:7:13","nodeType":"VariableDeclaration","scope":637,"src":"204:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":629,"name":"address","nodeType":"ElementaryTypeName","src":"204:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":632,"mutability":"mutable","name":"value","nameLocation":"229:5:13","nodeType":"VariableDeclaration","scope":637,"src":"221:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":631,"name":"uint256","nodeType":"ElementaryTypeName","src":"221:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"203:32:13"},"returnParameters":{"id":636,"nodeType":"ParameterList","parameters":[{"constant":false,"id":635,"mutability":"mutable","name":"success","nameLocation":"259:7:13","nodeType":"VariableDeclaration","scope":637,"src":"254:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":634,"name":"bool","nodeType":"ElementaryTypeName","src":"254:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"253:14:13"},"scope":712,"src":"187:81:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"70a08231","id":644,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"281:9:13","nodeType":"FunctionDefinition","parameters":{"id":640,"nodeType":"ParameterList","parameters":[{"constant":false,"id":639,"mutability":"mutable","name":"owner","nameLocation":"299:5:13","nodeType":"VariableDeclaration","scope":644,"src":"291:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":638,"name":"address","nodeType":"ElementaryTypeName","src":"291:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"290:15:13"},"returnParameters":{"id":643,"nodeType":"ParameterList","parameters":[{"constant":false,"id":642,"mutability":"mutable","name":"balance","nameLocation":"337:7:13","nodeType":"VariableDeclaration","scope":644,"src":"329:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":641,"name":"uint256","nodeType":"ElementaryTypeName","src":"329:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"328:17:13"},"scope":712,"src":"272:74:13","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"313ce567","id":649,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"359:8:13","nodeType":"FunctionDefinition","parameters":{"id":645,"nodeType":"ParameterList","parameters":[],"src":"367:2:13"},"returnParameters":{"id":648,"nodeType":"ParameterList","parameters":[{"constant":false,"id":647,"mutability":"mutable","name":"decimalPlaces","nameLocation":"399:13:13","nodeType":"VariableDeclaration","scope":649,"src":"393:19:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":646,"name":"uint8","nodeType":"ElementaryTypeName","src":"393:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"392:21:13"},"scope":712,"src":"350:64:13","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"66188463","id":658,"implemented":false,"kind":"function","modifiers":[],"name":"decreaseApproval","nameLocation":"427:16:13","nodeType":"FunctionDefinition","parameters":{"id":654,"nodeType":"ParameterList","parameters":[{"constant":false,"id":651,"mutability":"mutable","name":"spender","nameLocation":"452:7:13","nodeType":"VariableDeclaration","scope":658,"src":"444:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":650,"name":"address","nodeType":"ElementaryTypeName","src":"444:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":653,"mutability":"mutable","name":"addedValue","nameLocation":"469:10:13","nodeType":"VariableDeclaration","scope":658,"src":"461:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":652,"name":"uint256","nodeType":"ElementaryTypeName","src":"461:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"443:37:13"},"returnParameters":{"id":657,"nodeType":"ParameterList","parameters":[{"constant":false,"id":656,"mutability":"mutable","name":"success","nameLocation":"504:7:13","nodeType":"VariableDeclaration","scope":658,"src":"499:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":655,"name":"bool","nodeType":"ElementaryTypeName","src":"499:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"498:14:13"},"scope":712,"src":"418:95:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"d73dd623","id":665,"implemented":false,"kind":"function","modifiers":[],"name":"increaseApproval","nameLocation":"526:16:13","nodeType":"FunctionDefinition","parameters":{"id":663,"nodeType":"ParameterList","parameters":[{"constant":false,"id":660,"mutability":"mutable","name":"spender","nameLocation":"551:7:13","nodeType":"VariableDeclaration","scope":665,"src":"543:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":659,"name":"address","nodeType":"ElementaryTypeName","src":"543:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":662,"mutability":"mutable","name":"subtractedValue","nameLocation":"568:15:13","nodeType":"VariableDeclaration","scope":665,"src":"560:23:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":661,"name":"uint256","nodeType":"ElementaryTypeName","src":"560:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"542:42:13"},"returnParameters":{"id":664,"nodeType":"ParameterList","parameters":[],"src":"593:0:13"},"scope":712,"src":"517:77:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"06fdde03","id":670,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"607:4:13","nodeType":"FunctionDefinition","parameters":{"id":666,"nodeType":"ParameterList","parameters":[],"src":"611:2:13"},"returnParameters":{"id":669,"nodeType":"ParameterList","parameters":[{"constant":false,"id":668,"mutability":"mutable","name":"tokenName","nameLocation":"651:9:13","nodeType":"VariableDeclaration","scope":670,"src":"637:23:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":667,"name":"string","nodeType":"ElementaryTypeName","src":"637:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"636:25:13"},"scope":712,"src":"598:64:13","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"95d89b41","id":675,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"675:6:13","nodeType":"FunctionDefinition","parameters":{"id":671,"nodeType":"ParameterList","parameters":[],"src":"681:2:13"},"returnParameters":{"id":674,"nodeType":"ParameterList","parameters":[{"constant":false,"id":673,"mutability":"mutable","name":"tokenSymbol","nameLocation":"721:11:13","nodeType":"VariableDeclaration","scope":675,"src":"707:25:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":672,"name":"string","nodeType":"ElementaryTypeName","src":"707:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"706:27:13"},"scope":712,"src":"666:68:13","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"18160ddd","id":680,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"747:11:13","nodeType":"FunctionDefinition","parameters":{"id":676,"nodeType":"ParameterList","parameters":[],"src":"758:2:13"},"returnParameters":{"id":679,"nodeType":"ParameterList","parameters":[{"constant":false,"id":678,"mutability":"mutable","name":"totalTokensIssued","nameLocation":"792:17:13","nodeType":"VariableDeclaration","scope":680,"src":"784:25:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":677,"name":"uint256","nodeType":"ElementaryTypeName","src":"784:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"783:27:13"},"scope":712,"src":"738:73:13","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"a9059cbb","id":689,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"824:8:13","nodeType":"FunctionDefinition","parameters":{"id":685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":682,"mutability":"mutable","name":"to","nameLocation":"841:2:13","nodeType":"VariableDeclaration","scope":689,"src":"833:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":681,"name":"address","nodeType":"ElementaryTypeName","src":"833:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":684,"mutability":"mutable","name":"value","nameLocation":"853:5:13","nodeType":"VariableDeclaration","scope":689,"src":"845:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":683,"name":"uint256","nodeType":"ElementaryTypeName","src":"845:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"832:27:13"},"returnParameters":{"id":688,"nodeType":"ParameterList","parameters":[{"constant":false,"id":687,"mutability":"mutable","name":"success","nameLocation":"883:7:13","nodeType":"VariableDeclaration","scope":689,"src":"878:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":686,"name":"bool","nodeType":"ElementaryTypeName","src":"878:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"877:14:13"},"scope":712,"src":"815:77:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"4000aea0","id":700,"implemented":false,"kind":"function","modifiers":[],"name":"transferAndCall","nameLocation":"905:15:13","nodeType":"FunctionDefinition","parameters":{"id":696,"nodeType":"ParameterList","parameters":[{"constant":false,"id":691,"mutability":"mutable","name":"to","nameLocation":"929:2:13","nodeType":"VariableDeclaration","scope":700,"src":"921:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":690,"name":"address","nodeType":"ElementaryTypeName","src":"921:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":693,"mutability":"mutable","name":"value","nameLocation":"941:5:13","nodeType":"VariableDeclaration","scope":700,"src":"933:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":692,"name":"uint256","nodeType":"ElementaryTypeName","src":"933:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":695,"mutability":"mutable","name":"data","nameLocation":"963:4:13","nodeType":"VariableDeclaration","scope":700,"src":"948:19:13","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":694,"name":"bytes","nodeType":"ElementaryTypeName","src":"948:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"920:48:13"},"returnParameters":{"id":699,"nodeType":"ParameterList","parameters":[{"constant":false,"id":698,"mutability":"mutable","name":"success","nameLocation":"992:7:13","nodeType":"VariableDeclaration","scope":700,"src":"987:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":697,"name":"bool","nodeType":"ElementaryTypeName","src":"987:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"986:14:13"},"scope":712,"src":"896:105:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"23b872dd","id":711,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"1014:12:13","nodeType":"FunctionDefinition","parameters":{"id":707,"nodeType":"ParameterList","parameters":[{"constant":false,"id":702,"mutability":"mutable","name":"from","nameLocation":"1035:4:13","nodeType":"VariableDeclaration","scope":711,"src":"1027:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":701,"name":"address","nodeType":"ElementaryTypeName","src":"1027:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":704,"mutability":"mutable","name":"to","nameLocation":"1049:2:13","nodeType":"VariableDeclaration","scope":711,"src":"1041:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":703,"name":"address","nodeType":"ElementaryTypeName","src":"1041:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":706,"mutability":"mutable","name":"value","nameLocation":"1061:5:13","nodeType":"VariableDeclaration","scope":711,"src":"1053:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":705,"name":"uint256","nodeType":"ElementaryTypeName","src":"1053:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1026:41:13"},"returnParameters":{"id":710,"nodeType":"ParameterList","parameters":[{"constant":false,"id":709,"mutability":"mutable","name":"success","nameLocation":"1091:7:13","nodeType":"VariableDeclaration","scope":711,"src":"1086:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":708,"name":"bool","nodeType":"ElementaryTypeName","src":"1086:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1085:14:13"},"scope":712,"src":"1005:95:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":713,"src":"57:1045:13","usedErrors":[],"usedEvents":[]}],"src":"32:1071:13"},"id":13},"@chainlink/contracts/src/v0.8/vendor/@arbitrum/nitro-contracts/src/precompiles/ArbGasInfo.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/vendor/@arbitrum/nitro-contracts/src/precompiles/ArbGasInfo.sol","exportedSymbols":{"ArbGasInfo":[791]},"id":792,"license":"BUSL-1.1","nodeType":"SourceUnit","nodes":[{"id":714,"literals":["solidity",">=","0.4",".21","<","0.9",".0"],"nodeType":"PragmaDirective","src":"159:32:14"},{"abstract":false,"baseContracts":[],"canonicalName":"ArbGasInfo","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":791,"linearizedBaseContracts":[791],"name":"ArbGasInfo","nameLocation":"203:10:14","nodeType":"ContractDefinition","nodes":[{"functionSelector":"ba9c916e","id":731,"implemented":false,"kind":"function","modifiers":[],"name":"getPricesInWeiWithAggregator","nameLocation":"605:28:14","nodeType":"FunctionDefinition","parameters":{"id":717,"nodeType":"ParameterList","parameters":[{"constant":false,"id":716,"mutability":"mutable","name":"aggregator","nameLocation":"642:10:14","nodeType":"VariableDeclaration","scope":731,"src":"634:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":715,"name":"address","nodeType":"ElementaryTypeName","src":"634:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"633:20:14"},"returnParameters":{"id":730,"nodeType":"ParameterList","parameters":[{"constant":false,"id":719,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":731,"src":"677:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":718,"name":"uint","nodeType":"ElementaryTypeName","src":"677:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":721,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":731,"src":"683:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":720,"name":"uint","nodeType":"ElementaryTypeName","src":"683:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":723,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":731,"src":"689:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":722,"name":"uint","nodeType":"ElementaryTypeName","src":"689:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":725,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":731,"src":"695:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":724,"name":"uint","nodeType":"ElementaryTypeName","src":"695:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":727,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":731,"src":"701:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":726,"name":"uint","nodeType":"ElementaryTypeName","src":"701:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":729,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":731,"src":"707:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":728,"name":"uint","nodeType":"ElementaryTypeName","src":"707:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"676:36:14"},"scope":791,"src":"596:117:14","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"41b247a8","id":746,"implemented":false,"kind":"function","modifiers":[],"name":"getPricesInWei","nameLocation":"932:14:14","nodeType":"FunctionDefinition","parameters":{"id":732,"nodeType":"ParameterList","parameters":[],"src":"946:2:14"},"returnParameters":{"id":745,"nodeType":"ParameterList","parameters":[{"constant":false,"id":734,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":746,"src":"972:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":733,"name":"uint","nodeType":"ElementaryTypeName","src":"972:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":736,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":746,"src":"978:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":735,"name":"uint","nodeType":"ElementaryTypeName","src":"978:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":738,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":746,"src":"984:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":737,"name":"uint","nodeType":"ElementaryTypeName","src":"984:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":740,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":746,"src":"990:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":739,"name":"uint","nodeType":"ElementaryTypeName","src":"990:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":742,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":746,"src":"996:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":741,"name":"uint","nodeType":"ElementaryTypeName","src":"996:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":744,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":746,"src":"1002:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":743,"name":"uint","nodeType":"ElementaryTypeName","src":"1002:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"971:36:14"},"scope":791,"src":"923:85:14","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"7a1ea732","id":757,"implemented":false,"kind":"function","modifiers":[],"name":"getPricesInArbGasWithAggregator","nameLocation":"1168:31:14","nodeType":"FunctionDefinition","parameters":{"id":749,"nodeType":"ParameterList","parameters":[{"constant":false,"id":748,"mutability":"mutable","name":"aggregator","nameLocation":"1208:10:14","nodeType":"VariableDeclaration","scope":757,"src":"1200:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":747,"name":"address","nodeType":"ElementaryTypeName","src":"1200:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1199:20:14"},"returnParameters":{"id":756,"nodeType":"ParameterList","parameters":[{"constant":false,"id":751,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":757,"src":"1243:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":750,"name":"uint","nodeType":"ElementaryTypeName","src":"1243:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":753,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":757,"src":"1249:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":752,"name":"uint","nodeType":"ElementaryTypeName","src":"1249:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":755,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":757,"src":"1255:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":754,"name":"uint","nodeType":"ElementaryTypeName","src":"1255:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1242:18:14"},"scope":791,"src":"1159:102:14","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"02199f34","id":766,"implemented":false,"kind":"function","modifiers":[],"name":"getPricesInArbGas","nameLocation":"1483:17:14","nodeType":"FunctionDefinition","parameters":{"id":758,"nodeType":"ParameterList","parameters":[],"src":"1500:2:14"},"returnParameters":{"id":765,"nodeType":"ParameterList","parameters":[{"constant":false,"id":760,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":766,"src":"1526:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":759,"name":"uint","nodeType":"ElementaryTypeName","src":"1526:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":762,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":766,"src":"1532:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":761,"name":"uint","nodeType":"ElementaryTypeName","src":"1532:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":764,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":766,"src":"1538:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":763,"name":"uint","nodeType":"ElementaryTypeName","src":"1538:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1525:18:14"},"scope":791,"src":"1474:70:14","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"612af178","id":775,"implemented":false,"kind":"function","modifiers":[],"name":"getGasAccountingParams","nameLocation":"1648:22:14","nodeType":"FunctionDefinition","parameters":{"id":767,"nodeType":"ParameterList","parameters":[],"src":"1670:2:14"},"returnParameters":{"id":774,"nodeType":"ParameterList","parameters":[{"constant":false,"id":769,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":775,"src":"1696:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":768,"name":"uint","nodeType":"ElementaryTypeName","src":"1696:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":771,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":775,"src":"1702:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":770,"name":"uint","nodeType":"ElementaryTypeName","src":"1702:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":773,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":775,"src":"1708:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":772,"name":"uint","nodeType":"ElementaryTypeName","src":"1708:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1695:18:14"},"scope":791,"src":"1639:75:14","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"055f362f","id":780,"implemented":false,"kind":"function","modifiers":[],"name":"getL1GasPriceEstimate","nameLocation":"1784:21:14","nodeType":"FunctionDefinition","parameters":{"id":776,"nodeType":"ParameterList","parameters":[],"src":"1805:2:14"},"returnParameters":{"id":779,"nodeType":"ParameterList","parameters":[{"constant":false,"id":778,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":780,"src":"1830:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":777,"name":"uint","nodeType":"ElementaryTypeName","src":"1830:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1829:6:14"},"scope":791,"src":"1775:61:14","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"4290549e","id":785,"implemented":false,"kind":"function","modifiers":[],"name":"setL1GasPriceEstimate","nameLocation":"1984:21:14","nodeType":"FunctionDefinition","parameters":{"id":783,"nodeType":"ParameterList","parameters":[{"constant":false,"id":782,"mutability":"mutable","name":"priceInWei","nameLocation":"2011:10:14","nodeType":"VariableDeclaration","scope":785,"src":"2006:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":781,"name":"uint","nodeType":"ElementaryTypeName","src":"2006:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2005:17:14"},"returnParameters":{"id":784,"nodeType":"ParameterList","parameters":[],"src":"2031:0:14"},"scope":791,"src":"1975:57:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"c6f7de0e","id":790,"implemented":false,"kind":"function","modifiers":[],"name":"getCurrentTxL1GasFees","nameLocation":"2133:21:14","nodeType":"FunctionDefinition","parameters":{"id":786,"nodeType":"ParameterList","parameters":[],"src":"2154:2:14"},"returnParameters":{"id":789,"nodeType":"ParameterList","parameters":[{"constant":false,"id":788,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":790,"src":"2179:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":787,"name":"uint","nodeType":"ElementaryTypeName","src":"2179:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2178:6:14"},"scope":791,"src":"2124:61:14","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":792,"src":"193:1994:14","usedErrors":[],"usedEvents":[]}],"src":"159:2029:14"},"id":14},"@chainlink/contracts/src/v0.8/vendor/@arbitrum/nitro-contracts/src/precompiles/ArbSys.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/vendor/@arbitrum/nitro-contracts/src/precompiles/ArbSys.sol","exportedSymbols":{"ArbSys":[937]},"id":938,"license":"BUSL-1.1","nodeType":"SourceUnit","nodes":[{"id":793,"literals":["solidity",">=","0.4",".21","<","0.9",".0"],"nodeType":"PragmaDirective","src":"159:32:15"},{"abstract":false,"baseContracts":[],"canonicalName":"ArbSys","contractDependencies":[],"contractKind":"interface","documentation":{"id":794,"nodeType":"StructuredDocumentation","src":"193:246:15","text":" @title System level functionality\n @notice For use by contracts to interact with core L2-specific functionality.\n Precompiled contract that exists in every Arbitrum chain at address(100), 0x0000000000000000000000000000000000000064."},"fullyImplemented":false,"id":937,"linearizedBaseContracts":[937],"name":"ArbSys","nameLocation":"450:6:15","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":795,"nodeType":"StructuredDocumentation","src":"463:162:15","text":" @notice Get Arbitrum block number (distinct from L1 block number; Arbitrum genesis block has block number 0)\n @return block number as int"},"functionSelector":"a3b1b31d","id":800,"implemented":false,"kind":"function","modifiers":[],"name":"arbBlockNumber","nameLocation":"639:14:15","nodeType":"FunctionDefinition","parameters":{"id":796,"nodeType":"ParameterList","parameters":[],"src":"653:2:15"},"returnParameters":{"id":799,"nodeType":"ParameterList","parameters":[{"constant":false,"id":798,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":800,"src":"679:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":797,"name":"uint256","nodeType":"ElementaryTypeName","src":"679:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"678:9:15"},"scope":937,"src":"630:58:15","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":801,"nodeType":"StructuredDocumentation","src":"694:146:15","text":" @notice Get Arbitrum block hash (reverts unless currentBlockNum-256 <= arbBlockNum < currentBlockNum)\n @return block hash"},"functionSelector":"2b407a82","id":808,"implemented":false,"kind":"function","modifiers":[],"name":"arbBlockHash","nameLocation":"854:12:15","nodeType":"FunctionDefinition","parameters":{"id":804,"nodeType":"ParameterList","parameters":[{"constant":false,"id":803,"mutability":"mutable","name":"arbBlockNum","nameLocation":"875:11:15","nodeType":"VariableDeclaration","scope":808,"src":"867:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":802,"name":"uint256","nodeType":"ElementaryTypeName","src":"867:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"866:21:15"},"returnParameters":{"id":807,"nodeType":"ParameterList","parameters":[{"constant":false,"id":806,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":808,"src":"911:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":805,"name":"bytes32","nodeType":"ElementaryTypeName","src":"911:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"910:9:15"},"scope":937,"src":"845:75:15","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":809,"nodeType":"StructuredDocumentation","src":"926:107:15","text":" @notice Gets the rollup's unique chain identifier\n @return Chain identifier as int"},"functionSelector":"d127f54a","id":814,"implemented":false,"kind":"function","modifiers":[],"name":"arbChainID","nameLocation":"1047:10:15","nodeType":"FunctionDefinition","parameters":{"id":810,"nodeType":"ParameterList","parameters":[],"src":"1057:2:15"},"returnParameters":{"id":813,"nodeType":"ParameterList","parameters":[{"constant":false,"id":812,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":814,"src":"1083:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":811,"name":"uint256","nodeType":"ElementaryTypeName","src":"1083:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1082:9:15"},"scope":937,"src":"1038:54:15","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":815,"nodeType":"StructuredDocumentation","src":"1098:118:15","text":" @notice Get internal version number identifying an ArbOS build\n @return version number as int"},"functionSelector":"051038f2","id":820,"implemented":false,"kind":"function","modifiers":[],"name":"arbOSVersion","nameLocation":"1230:12:15","nodeType":"FunctionDefinition","parameters":{"id":816,"nodeType":"ParameterList","parameters":[],"src":"1242:2:15"},"returnParameters":{"id":819,"nodeType":"ParameterList","parameters":[{"constant":false,"id":818,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":820,"src":"1268:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":817,"name":"uint256","nodeType":"ElementaryTypeName","src":"1268:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1267:9:15"},"scope":937,"src":"1221:56:15","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":821,"nodeType":"StructuredDocumentation","src":"1283:100:15","text":" @notice Returns 0 since Nitro has no concept of storage gas\n @return uint 0"},"functionSelector":"a94597ff","id":826,"implemented":false,"kind":"function","modifiers":[],"name":"getStorageGasAvailable","nameLocation":"1397:22:15","nodeType":"FunctionDefinition","parameters":{"id":822,"nodeType":"ParameterList","parameters":[],"src":"1419:2:15"},"returnParameters":{"id":825,"nodeType":"ParameterList","parameters":[{"constant":false,"id":824,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":826,"src":"1445:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":823,"name":"uint256","nodeType":"ElementaryTypeName","src":"1445:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1444:9:15"},"scope":937,"src":"1388:66:15","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":827,"nodeType":"StructuredDocumentation","src":"1460:293:15","text":" @notice (deprecated) check if current call is top level (meaning it was triggered by an EoA or a L1 contract)\n @dev this call has been deprecated and may be removed in a future release\n @return true if current execution frame is not a call by another L2 contract"},"functionSelector":"08bd624c","id":832,"implemented":false,"kind":"function","modifiers":[],"name":"isTopLevelCall","nameLocation":"1767:14:15","nodeType":"FunctionDefinition","parameters":{"id":828,"nodeType":"ParameterList","parameters":[],"src":"1781:2:15"},"returnParameters":{"id":831,"nodeType":"ParameterList","parameters":[{"constant":false,"id":830,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":832,"src":"1807:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":829,"name":"bool","nodeType":"ElementaryTypeName","src":"1807:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1806:6:15"},"scope":937,"src":"1758:55:15","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":833,"nodeType":"StructuredDocumentation","src":"1819:192:15","text":" @notice map L1 sender contract address to its L2 alias\n @param sender sender address\n @param unused argument no longer used\n @return aliased sender address"},"functionSelector":"4dbbd506","id":842,"implemented":false,"kind":"function","modifiers":[],"name":"mapL1SenderContractAddressToL2Alias","nameLocation":"2025:35:15","nodeType":"FunctionDefinition","parameters":{"id":838,"nodeType":"ParameterList","parameters":[{"constant":false,"id":835,"mutability":"mutable","name":"sender","nameLocation":"2069:6:15","nodeType":"VariableDeclaration","scope":842,"src":"2061:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":834,"name":"address","nodeType":"ElementaryTypeName","src":"2061:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":837,"mutability":"mutable","name":"unused","nameLocation":"2085:6:15","nodeType":"VariableDeclaration","scope":842,"src":"2077:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":836,"name":"address","nodeType":"ElementaryTypeName","src":"2077:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2060:32:15"},"returnParameters":{"id":841,"nodeType":"ParameterList","parameters":[{"constant":false,"id":840,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":842,"src":"2140:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":839,"name":"address","nodeType":"ElementaryTypeName","src":"2140:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2139:9:15"},"scope":937,"src":"2016:133:15","stateMutability":"pure","virtual":false,"visibility":"external"},{"documentation":{"id":843,"nodeType":"StructuredDocumentation","src":"2155:189:15","text":" @notice check if the caller (of this caller of this) is an aliased L1 contract address\n @return true iff the caller's address is an alias for an L1 contract address"},"functionSelector":"175a260b","id":848,"implemented":false,"kind":"function","modifiers":[],"name":"wasMyCallersAddressAliased","nameLocation":"2358:26:15","nodeType":"FunctionDefinition","parameters":{"id":844,"nodeType":"ParameterList","parameters":[],"src":"2384:2:15"},"returnParameters":{"id":847,"nodeType":"ParameterList","parameters":[{"constant":false,"id":846,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":848,"src":"2410:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":845,"name":"bool","nodeType":"ElementaryTypeName","src":"2410:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2409:6:15"},"scope":937,"src":"2349:67:15","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":849,"nodeType":"StructuredDocumentation","src":"2422:224:15","text":" @notice return the address of the caller (of this caller of this), without applying L1 contract address aliasing\n @return address of the caller's caller, without applying L1 contract address aliasing"},"functionSelector":"d74523b3","id":854,"implemented":false,"kind":"function","modifiers":[],"name":"myCallersAddressWithoutAliasing","nameLocation":"2660:31:15","nodeType":"FunctionDefinition","parameters":{"id":850,"nodeType":"ParameterList","parameters":[],"src":"2691:2:15"},"returnParameters":{"id":853,"nodeType":"ParameterList","parameters":[{"constant":false,"id":852,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":854,"src":"2717:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":851,"name":"address","nodeType":"ElementaryTypeName","src":"2717:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2716:9:15"},"scope":937,"src":"2651:75:15","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":855,"nodeType":"StructuredDocumentation","src":"2732:284:15","text":" @notice Send given amount of Eth to dest from sender.\n This is a convenience function, which is equivalent to calling sendTxToL1 with empty data.\n @param destination recipient address on L1\n @return unique identifier for this L2-to-L1 transaction."},"functionSelector":"25e16063","id":862,"implemented":false,"kind":"function","modifiers":[],"name":"withdrawEth","nameLocation":"3030:11:15","nodeType":"FunctionDefinition","parameters":{"id":858,"nodeType":"ParameterList","parameters":[{"constant":false,"id":857,"mutability":"mutable","name":"destination","nameLocation":"3050:11:15","nodeType":"VariableDeclaration","scope":862,"src":"3042:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":856,"name":"address","nodeType":"ElementaryTypeName","src":"3042:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3041:21:15"},"returnParameters":{"id":861,"nodeType":"ParameterList","parameters":[{"constant":false,"id":860,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":862,"src":"3113:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":859,"name":"uint256","nodeType":"ElementaryTypeName","src":"3113:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3112:9:15"},"scope":937,"src":"3021:101:15","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":863,"nodeType":"StructuredDocumentation","src":"3128:408:15","text":" @notice Send a transaction to L1\n @dev it is not possible to execute on the L1 any L2-to-L1 transaction which contains data\n to a contract address without any code (as enforced by the Bridge contract).\n @param destination recipient address on L1\n @param data (optional) calldata for L1 contract call\n @return a unique identifier for this L2-to-L1 transaction."},"functionSelector":"928c169a","id":872,"implemented":false,"kind":"function","modifiers":[],"name":"sendTxToL1","nameLocation":"3550:10:15","nodeType":"FunctionDefinition","parameters":{"id":868,"nodeType":"ParameterList","parameters":[{"constant":false,"id":865,"mutability":"mutable","name":"destination","nameLocation":"3569:11:15","nodeType":"VariableDeclaration","scope":872,"src":"3561:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":864,"name":"address","nodeType":"ElementaryTypeName","src":"3561:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":867,"mutability":"mutable","name":"data","nameLocation":"3597:4:15","nodeType":"VariableDeclaration","scope":872,"src":"3582:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":866,"name":"bytes","nodeType":"ElementaryTypeName","src":"3582:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3560:42:15"},"returnParameters":{"id":871,"nodeType":"ParameterList","parameters":[{"constant":false,"id":870,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":872,"src":"3653:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":869,"name":"uint256","nodeType":"ElementaryTypeName","src":"3653:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3652:9:15"},"scope":937,"src":"3541:121:15","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":873,"nodeType":"StructuredDocumentation","src":"3668:230:15","text":" @notice Get send Merkle tree state\n @return size number of sends in the history\n @return root root hash of the send history\n @return partials hashes of partial subtrees in the send history tree"},"functionSelector":"7aeecd2a","id":883,"implemented":false,"kind":"function","modifiers":[],"name":"sendMerkleTreeState","nameLocation":"3912:19:15","nodeType":"FunctionDefinition","parameters":{"id":874,"nodeType":"ParameterList","parameters":[],"src":"3931:2:15"},"returnParameters":{"id":882,"nodeType":"ParameterList","parameters":[{"constant":false,"id":876,"mutability":"mutable","name":"size","nameLocation":"4002:4:15","nodeType":"VariableDeclaration","scope":883,"src":"3994:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":875,"name":"uint256","nodeType":"ElementaryTypeName","src":"3994:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":878,"mutability":"mutable","name":"root","nameLocation":"4028:4:15","nodeType":"VariableDeclaration","scope":883,"src":"4020:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":877,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4020:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":881,"mutability":"mutable","name":"partials","nameLocation":"4063:8:15","nodeType":"VariableDeclaration","scope":883,"src":"4046:25:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":879,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4046:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":880,"nodeType":"ArrayTypeName","src":"4046:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"3980:101:15"},"scope":937,"src":"3903:179:15","stateMutability":"view","virtual":false,"visibility":"external"},{"anonymous":false,"documentation":{"id":884,"nodeType":"StructuredDocumentation","src":"4088:133:15","text":" @notice creates a send txn from L2 to L1\n @param position = (level << 192) + leaf = (0 << 192) + leaf = leaf"},"eventSelector":"3e7aafa77dbf186b7fd488006beff893744caa3c4f6f299e8a709fa2087374fc","id":904,"name":"L2ToL1Tx","nameLocation":"4232:8:15","nodeType":"EventDefinition","parameters":{"id":903,"nodeType":"ParameterList","parameters":[{"constant":false,"id":886,"indexed":false,"mutability":"mutable","name":"caller","nameLocation":"4258:6:15","nodeType":"VariableDeclaration","scope":904,"src":"4250:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":885,"name":"address","nodeType":"ElementaryTypeName","src":"4250:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":888,"indexed":true,"mutability":"mutable","name":"destination","nameLocation":"4290:11:15","nodeType":"VariableDeclaration","scope":904,"src":"4274:27:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":887,"name":"address","nodeType":"ElementaryTypeName","src":"4274:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":890,"indexed":true,"mutability":"mutable","name":"hash","nameLocation":"4327:4:15","nodeType":"VariableDeclaration","scope":904,"src":"4311:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":889,"name":"uint256","nodeType":"ElementaryTypeName","src":"4311:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":892,"indexed":true,"mutability":"mutable","name":"position","nameLocation":"4357:8:15","nodeType":"VariableDeclaration","scope":904,"src":"4341:24:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":891,"name":"uint256","nodeType":"ElementaryTypeName","src":"4341:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":894,"indexed":false,"mutability":"mutable","name":"arbBlockNum","nameLocation":"4383:11:15","nodeType":"VariableDeclaration","scope":904,"src":"4375:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":893,"name":"uint256","nodeType":"ElementaryTypeName","src":"4375:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":896,"indexed":false,"mutability":"mutable","name":"ethBlockNum","nameLocation":"4412:11:15","nodeType":"VariableDeclaration","scope":904,"src":"4404:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":895,"name":"uint256","nodeType":"ElementaryTypeName","src":"4404:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":898,"indexed":false,"mutability":"mutable","name":"timestamp","nameLocation":"4441:9:15","nodeType":"VariableDeclaration","scope":904,"src":"4433:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":897,"name":"uint256","nodeType":"ElementaryTypeName","src":"4433:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":900,"indexed":false,"mutability":"mutable","name":"callvalue","nameLocation":"4468:9:15","nodeType":"VariableDeclaration","scope":904,"src":"4460:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":899,"name":"uint256","nodeType":"ElementaryTypeName","src":"4460:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":902,"indexed":false,"mutability":"mutable","name":"data","nameLocation":"4493:4:15","nodeType":"VariableDeclaration","scope":904,"src":"4487:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":901,"name":"bytes","nodeType":"ElementaryTypeName","src":"4487:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4240:263:15"},"src":"4226:278:15"},{"anonymous":false,"documentation":{"id":905,"nodeType":"StructuredDocumentation","src":"4510:85:15","text":"@dev DEPRECATED in favour of the new L2ToL1Tx event above after the nitro upgrade"},"eventSelector":"5baaa87db386365b5c161be377bc3d8e317e8d98d71a3ca7ed7d555340c8f767","id":927,"name":"L2ToL1Transaction","nameLocation":"4606:17:15","nodeType":"EventDefinition","parameters":{"id":926,"nodeType":"ParameterList","parameters":[{"constant":false,"id":907,"indexed":false,"mutability":"mutable","name":"caller","nameLocation":"4641:6:15","nodeType":"VariableDeclaration","scope":927,"src":"4633:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":906,"name":"address","nodeType":"ElementaryTypeName","src":"4633:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":909,"indexed":true,"mutability":"mutable","name":"destination","nameLocation":"4673:11:15","nodeType":"VariableDeclaration","scope":927,"src":"4657:27:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":908,"name":"address","nodeType":"ElementaryTypeName","src":"4657:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":911,"indexed":true,"mutability":"mutable","name":"uniqueId","nameLocation":"4710:8:15","nodeType":"VariableDeclaration","scope":927,"src":"4694:24:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":910,"name":"uint256","nodeType":"ElementaryTypeName","src":"4694:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":913,"indexed":true,"mutability":"mutable","name":"batchNumber","nameLocation":"4744:11:15","nodeType":"VariableDeclaration","scope":927,"src":"4728:27:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":912,"name":"uint256","nodeType":"ElementaryTypeName","src":"4728:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":915,"indexed":false,"mutability":"mutable","name":"indexInBatch","nameLocation":"4773:12:15","nodeType":"VariableDeclaration","scope":927,"src":"4765:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":914,"name":"uint256","nodeType":"ElementaryTypeName","src":"4765:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":917,"indexed":false,"mutability":"mutable","name":"arbBlockNum","nameLocation":"4803:11:15","nodeType":"VariableDeclaration","scope":927,"src":"4795:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":916,"name":"uint256","nodeType":"ElementaryTypeName","src":"4795:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":919,"indexed":false,"mutability":"mutable","name":"ethBlockNum","nameLocation":"4832:11:15","nodeType":"VariableDeclaration","scope":927,"src":"4824:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":918,"name":"uint256","nodeType":"ElementaryTypeName","src":"4824:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":921,"indexed":false,"mutability":"mutable","name":"timestamp","nameLocation":"4861:9:15","nodeType":"VariableDeclaration","scope":927,"src":"4853:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":920,"name":"uint256","nodeType":"ElementaryTypeName","src":"4853:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":923,"indexed":false,"mutability":"mutable","name":"callvalue","nameLocation":"4888:9:15","nodeType":"VariableDeclaration","scope":927,"src":"4880:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":922,"name":"uint256","nodeType":"ElementaryTypeName","src":"4880:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":925,"indexed":false,"mutability":"mutable","name":"data","nameLocation":"4913:4:15","nodeType":"VariableDeclaration","scope":927,"src":"4907:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":924,"name":"bytes","nodeType":"ElementaryTypeName","src":"4907:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4623:300:15"},"src":"4600:324:15"},{"anonymous":false,"documentation":{"id":928,"nodeType":"StructuredDocumentation","src":"4930:250:15","text":" @notice logs a merkle branch for proof synthesis\n @param reserved an index meant only to align the 4th index with L2ToL1Transaction's 4th event\n @param hash the merkle hash\n @param position = (level << 192) + leaf"},"eventSelector":"e9e13da364699fb5b0496ff5a0fc70760ad5836e93ba96568a4e42b9914a8b95","id":936,"name":"SendMerkleUpdate","nameLocation":"5191:16:15","nodeType":"EventDefinition","parameters":{"id":935,"nodeType":"ParameterList","parameters":[{"constant":false,"id":930,"indexed":true,"mutability":"mutable","name":"reserved","nameLocation":"5233:8:15","nodeType":"VariableDeclaration","scope":936,"src":"5217:24:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":929,"name":"uint256","nodeType":"ElementaryTypeName","src":"5217:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":932,"indexed":true,"mutability":"mutable","name":"hash","nameLocation":"5267:4:15","nodeType":"VariableDeclaration","scope":936,"src":"5251:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":931,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5251:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":934,"indexed":true,"mutability":"mutable","name":"position","nameLocation":"5297:8:15","nodeType":"VariableDeclaration","scope":936,"src":"5281:24:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":933,"name":"uint256","nodeType":"ElementaryTypeName","src":"5281:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5207:104:15"},"src":"5185:127:15"}],"scope":938,"src":"440:4874:15","usedErrors":[],"usedEvents":[904,927,936]}],"src":"159:5156:15"},"id":15},"@chainlink/contracts/src/v0.8/vrf/VRF.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/vrf/VRF.sol","exportedSymbols":{"VRF":[2035]},"id":2036,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":939,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:16"},{"abstract":false,"baseContracts":[],"canonicalName":"VRF","contractDependencies":[],"contractKind":"contract","documentation":{"id":940,"nodeType":"StructuredDocumentation","src":"57:7112:16","text":"****************************************************************************\n @notice Verification of verifiable-random-function (VRF) proofs, following\n @notice https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-5.3\n @notice See https://eprint.iacr.org/2017/099.pdf for security proofs.\n @dev Bibliographic references:\n @dev Goldberg, et al., \"Verifiable Random Functions (VRFs)\", Internet Draft\n @dev draft-irtf-cfrg-vrf-05, IETF, Aug 11 2019,\n @dev https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05\n @dev Papadopoulos, et al., \"Making NSEC5 Practical for DNSSEC\", Cryptology\n @dev ePrint Archive, Report 2017/099, https://eprint.iacr.org/2017/099.pdf\n ****************************************************************************\n @dev USAGE\n @dev The main entry point is randomValueFromVRFProof. See its docstring.\n ****************************************************************************\n @dev PURPOSE\n @dev Reggie the Random Oracle (not his real job) wants to provide randomness\n @dev to Vera the verifier in such a way that Vera can be sure he's not\n @dev making his output up to suit himself. Reggie provides Vera a public key\n @dev to which he knows the secret key. Each time Vera provides a seed to\n @dev Reggie, he gives back a value which is computed completely\n @dev deterministically from the seed and the secret key.\n @dev Reggie provides a proof by which Vera can verify that the output was\n @dev correctly computed once Reggie tells it to her, but without that proof,\n @dev the output is computationally indistinguishable to her from a uniform\n @dev random sample from the output space.\n @dev The purpose of this contract is to perform that verification.\n ****************************************************************************\n @dev DESIGN NOTES\n @dev The VRF algorithm verified here satisfies the full uniqueness, full\n @dev collision resistance, and full pseudo-randomness security properties.\n @dev See \"SECURITY PROPERTIES\" below, and\n @dev https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-3\n @dev An elliptic curve point is generally represented in the solidity code\n @dev as a uint256[2], corresponding to its affine coordinates in\n @dev GF(FIELD_SIZE).\n @dev For the sake of efficiency, this implementation deviates from the spec\n @dev in some minor ways:\n @dev - Keccak hash rather than the SHA256 hash recommended in\n @dev   https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-5.5\n @dev   Keccak costs much less gas on the EVM, and provides similar security.\n @dev - Secp256k1 curve instead of the P-256 or ED25519 curves recommended in\n @dev   https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-5.5\n @dev   For curve-point multiplication, it's much cheaper to abuse ECRECOVER\n @dev - hashToCurve recursively hashes until it finds a curve x-ordinate. On\n @dev   the EVM, this is slightly more efficient than the recommendation in\n @dev   https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-5.4.1.1\n @dev   step 5, to concatenate with a nonce then hash, and rehash with the\n @dev   nonce updated until a valid x-ordinate is found.\n @dev - hashToCurve does not include a cipher version string or the byte 0x1\n @dev   in the hash message, as recommended in step 5.B of the draft\n @dev   standard. They are unnecessary here because no variation in the\n @dev   cipher suite is allowed.\n @dev - Similarly, the hash input in scalarFromCurvePoints does not include a\n @dev   commitment to the cipher suite, either, which differs from step 2 of\n @dev   https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-5.4.3\n @dev   . Also, the hash input is the concatenation of the uncompressed\n @dev   points, not the compressed points as recommended in step 3.\n @dev - In the calculation of the challenge value \"c\", the \"u\" value (i.e.\n @dev   the value computed by Reggie as the nonce times the secp256k1\n @dev   generator point, see steps 5 and 7 of\n @dev   https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-5.3\n @dev   ) is replaced by its ethereum address, i.e. the lower 160 bits of the\n @dev   keccak hash of the original u. This is because we only verify the\n @dev   calculation of u up to its address, by abusing ECRECOVER.\n ****************************************************************************\n @dev   SECURITY PROPERTIES\n @dev Here are the security properties for this VRF:\n @dev Full uniqueness: For any seed and valid VRF public key, there is\n @dev   exactly one VRF output which can be proved to come from that seed, in\n @dev   the sense that the proof will pass verifyVRFProof.\n @dev Full collision resistance: It's cryptographically infeasible to find\n @dev   two seeds with same VRF output from a fixed, valid VRF key\n @dev Full pseudorandomness: Absent the proofs that the VRF outputs are\n @dev   derived from a given seed, the outputs are computationally\n @dev   indistinguishable from randomness.\n @dev https://eprint.iacr.org/2017/099.pdf, Appendix B contains the proofs\n @dev for these properties.\n @dev For secp256k1, the key validation described in section\n @dev https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-5.6\n @dev is unnecessary, because secp256k1 has cofactor 1, and the\n @dev representation of the public key used here (affine x- and y-ordinates\n @dev of the secp256k1 point on the standard y^2=x^3+7 curve) cannot refer to\n @dev the point at infinity.\n ****************************************************************************\n @dev OTHER SECURITY CONSIDERATIONS\n @dev The seed input to the VRF could in principle force an arbitrary amount\n @dev of work in hashToCurve, by requiring extra rounds of hashing and\n @dev checking whether that's yielded the x ordinate of a secp256k1 point.\n @dev However, under the Random Oracle Model the probability of choosing a\n @dev point which forces n extra rounds in hashToCurve is 2⁻ⁿ. The base cost\n @dev for calling hashToCurve is about 25,000 gas, and each round of checking\n @dev for a valid x ordinate costs about 15,555 gas, so to find a seed for\n @dev which hashToCurve would cost more than 2,017,000 gas, one would have to\n @dev try, in expectation, about 2¹²⁸ seeds, which is infeasible for any\n @dev foreseeable computational resources. (25,000 + 128 * 15,555 < 2,017,000.)\n @dev Since the gas block limit for the Ethereum main net is 10,000,000 gas,\n @dev this means it is infeasible for an adversary to prevent correct\n @dev operation of this contract by choosing an adverse seed.\n @dev (See TestMeasureHashToCurveGasCost for verification of the gas cost for\n @dev hashToCurve.)\n @dev It may be possible to make a secure constant-time hashToCurve function.\n @dev See notes in hashToCurve docstring."},"fullyImplemented":true,"id":2035,"linearizedBaseContracts":[2035],"name":"VRF","nameLocation":"7179:3:16","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":943,"mutability":"constant","name":"GROUP_ORDER","nameLocation":"7326:11:16","nodeType":"VariableDeclaration","scope":2035,"src":"7301:105:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":941,"name":"uint256","nodeType":"ElementaryTypeName","src":"7301:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"307846464646464646464646464646464646464646464646464646464646464646454241414544434536414634384130334242464432354538434430333634313431","id":942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7340:66:16","typeDescriptions":{"typeIdentifier":"t_rational_115792089237316195423570985008687907852837564279074904382605163141518161494337_by_1","typeString":"int_const 1157...(70 digits omitted)...4337"},"value":"0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141"},"visibility":"private"},{"constant":true,"id":946,"mutability":"constant","name":"FIELD_SIZE","nameLocation":"7513:10:16","nodeType":"VariableDeclaration","scope":2035,"src":"7488:152:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":944,"name":"uint256","nodeType":"ElementaryTypeName","src":"7488:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"307846464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646464646454646464646433246","id":945,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7574:66:16","typeDescriptions":{"typeIdentifier":"t_rational_115792089237316195423570985008687907853269984665640564039457584007908834671663_by_1","typeString":"int_const 1157...(70 digits omitted)...1663"},"value":"0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F"},"visibility":"private"},{"constant":true,"id":949,"mutability":"constant","name":"WORD_LENGTH_BYTES","nameLocation":"7669:17:16","nodeType":"VariableDeclaration","scope":2035,"src":"7644:49:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":947,"name":"uint256","nodeType":"ElementaryTypeName","src":"7644:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783230","id":948,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7689:4:16","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"visibility":"private"},{"body":{"id":1025,"nodeType":"Block","src":"7911:878:16","statements":[{"assignments":[959],"declarations":[{"constant":false,"id":959,"mutability":"mutable","name":"callResult","nameLocation":"7925:10:16","nodeType":"VariableDeclaration","scope":1025,"src":"7917:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":958,"name":"uint256","nodeType":"ElementaryTypeName","src":"7917:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":960,"nodeType":"VariableDeclarationStatement","src":"7917:18:16"},{"assignments":[966],"declarations":[{"constant":false,"id":966,"mutability":"mutable","name":"bigModExpContractInputs","nameLocation":"7959:23:16","nodeType":"VariableDeclaration","scope":1025,"src":"7941:41:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$6_memory_ptr","typeString":"uint256[6]"},"typeName":{"baseType":{"id":964,"name":"uint256","nodeType":"ElementaryTypeName","src":"7941:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":965,"length":{"hexValue":"36","id":963,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7949:1:16","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"nodeType":"ArrayTypeName","src":"7941:10:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$6_storage_ptr","typeString":"uint256[6]"}},"visibility":"internal"}],"id":967,"nodeType":"VariableDeclarationStatement","src":"7941:41:16"},{"expression":{"id":972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":968,"name":"bigModExpContractInputs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":966,"src":"7988:23:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$6_memory_ptr","typeString":"uint256[6] memory"}},"id":970,"indexExpression":{"hexValue":"30","id":969,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8012:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7988:26:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":971,"name":"WORD_LENGTH_BYTES","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":949,"src":"8017:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7988:46:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":973,"nodeType":"ExpressionStatement","src":"7988:46:16"},{"expression":{"id":978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":974,"name":"bigModExpContractInputs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":966,"src":"8058:23:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$6_memory_ptr","typeString":"uint256[6] memory"}},"id":976,"indexExpression":{"hexValue":"31","id":975,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8082:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8058:26:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":977,"name":"WORD_LENGTH_BYTES","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":949,"src":"8087:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8058:46:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":979,"nodeType":"ExpressionStatement","src":"8058:46:16"},{"expression":{"id":984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":980,"name":"bigModExpContractInputs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":966,"src":"8132:23:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$6_memory_ptr","typeString":"uint256[6] memory"}},"id":982,"indexExpression":{"hexValue":"32","id":981,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8156:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8132:26:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":983,"name":"WORD_LENGTH_BYTES","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":949,"src":"8161:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8132:46:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":985,"nodeType":"ExpressionStatement","src":"8132:46:16"},{"expression":{"id":990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":986,"name":"bigModExpContractInputs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":966,"src":"8205:23:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$6_memory_ptr","typeString":"uint256[6] memory"}},"id":988,"indexExpression":{"hexValue":"33","id":987,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8229:1:16","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8205:26:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":989,"name":"base","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":951,"src":"8234:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8205:33:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":991,"nodeType":"ExpressionStatement","src":"8205:33:16"},{"expression":{"id":996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":992,"name":"bigModExpContractInputs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":966,"src":"8244:23:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$6_memory_ptr","typeString":"uint256[6] memory"}},"id":994,"indexExpression":{"hexValue":"34","id":993,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8268:1:16","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8244:26:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":995,"name":"exponent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":953,"src":"8273:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8244:37:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":997,"nodeType":"ExpressionStatement","src":"8244:37:16"},{"expression":{"id":1002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":998,"name":"bigModExpContractInputs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":966,"src":"8287:23:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$6_memory_ptr","typeString":"uint256[6] memory"}},"id":1000,"indexExpression":{"hexValue":"35","id":999,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8311:1:16","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8287:26:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1001,"name":"FIELD_SIZE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":946,"src":"8316:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8287:39:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1003,"nodeType":"ExpressionStatement","src":"8287:39:16"},{"assignments":[1009],"declarations":[{"constant":false,"id":1009,"mutability":"mutable","name":"output","nameLocation":"8350:6:16","nodeType":"VariableDeclaration","scope":1025,"src":"8332:24:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$1_memory_ptr","typeString":"uint256[1]"},"typeName":{"baseType":{"id":1007,"name":"uint256","nodeType":"ElementaryTypeName","src":"8332:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1008,"length":{"hexValue":"31","id":1006,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8340:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"ArrayTypeName","src":"8332:10:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$1_storage_ptr","typeString":"uint256[1]"}},"visibility":"internal"}],"id":1010,"nodeType":"VariableDeclarationStatement","src":"8332:24:16"},{"AST":{"nativeSrc":"8371:323:16","nodeType":"YulBlock","src":"8371:323:16","statements":[{"nativeSrc":"8428:260:16","nodeType":"YulAssignment","src":"8428:260:16","value":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"8466:1:16","nodeType":"YulLiteral","src":"8466:1:16","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"8462:3:16","nodeType":"YulIdentifier","src":"8462:3:16"},"nativeSrc":"8462:6:16","nodeType":"YulFunctionCall","src":"8462:6:16"},{"kind":"number","nativeSrc":"8500:4:16","nodeType":"YulLiteral","src":"8500:4:16","type":"","value":"0x05"},{"name":"bigModExpContractInputs","nativeSrc":"8544:23:16","nodeType":"YulIdentifier","src":"8544:23:16"},{"kind":"number","nativeSrc":"8577:4:16","nodeType":"YulLiteral","src":"8577:4:16","type":"","value":"0xc0"},{"name":"output","nativeSrc":"8632:6:16","nodeType":"YulIdentifier","src":"8632:6:16"},{"kind":"number","nativeSrc":"8648:4:16","nodeType":"YulLiteral","src":"8648:4:16","type":"","value":"0x20"}],"functionName":{"name":"staticcall","nativeSrc":"8442:10:16","nodeType":"YulIdentifier","src":"8442:10:16"},"nativeSrc":"8442:246:16","nodeType":"YulFunctionCall","src":"8442:246:16"},"variableNames":[{"name":"callResult","nativeSrc":"8428:10:16","nodeType":"YulIdentifier","src":"8428:10:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":966,"isOffset":false,"isSlot":false,"src":"8544:23:16","valueSize":1},{"declaration":959,"isOffset":false,"isSlot":false,"src":"8428:10:16","valueSize":1},{"declaration":1009,"isOffset":false,"isSlot":false,"src":"8632:6:16","valueSize":1}],"id":1011,"nodeType":"InlineAssembly","src":"8362:332:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1012,"name":"callResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":959,"src":"8703:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1013,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8717:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8703:15:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1020,"nodeType":"IfStatement","src":"8699:64:16","trueBody":{"id":1019,"nodeType":"Block","src":"8720:43:16","statements":[{"expression":{"arguments":[{"hexValue":"6269674d6f64457870206661696c75726521","id":1016,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8735:20:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_4bd695d9be776d24ba6aaa6ea48a189f388adfd8a5e6a1df7bd6471290ea4e5f","typeString":"literal_string \"bigModExp failure!\""},"value":"bigModExp failure!"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_4bd695d9be776d24ba6aaa6ea48a189f388adfd8a5e6a1df7bd6471290ea4e5f","typeString":"literal_string \"bigModExp failure!\""}],"id":1015,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"8728:6:16","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1017,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8728:28:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1018,"nodeType":"ExpressionStatement","src":"8728:28:16"}]}},{"expression":{"baseExpression":{"id":1021,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1009,"src":"8775:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$1_memory_ptr","typeString":"uint256[1] memory"}},"id":1023,"indexExpression":{"hexValue":"30","id":1022,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8782:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8775:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":957,"id":1024,"nodeType":"Return","src":"8768:16:16"}]},"id":1026,"implemented":true,"kind":"function","modifiers":[],"name":"bigModExp","nameLocation":"7822:9:16","nodeType":"FunctionDefinition","parameters":{"id":954,"nodeType":"ParameterList","parameters":[{"constant":false,"id":951,"mutability":"mutable","name":"base","nameLocation":"7840:4:16","nodeType":"VariableDeclaration","scope":1026,"src":"7832:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":950,"name":"uint256","nodeType":"ElementaryTypeName","src":"7832:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":953,"mutability":"mutable","name":"exponent","nameLocation":"7854:8:16","nodeType":"VariableDeclaration","scope":1026,"src":"7846:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":952,"name":"uint256","nodeType":"ElementaryTypeName","src":"7846:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7831:32:16"},"returnParameters":{"id":957,"nodeType":"ParameterList","parameters":[{"constant":false,"id":956,"mutability":"mutable","name":"exponentiation","nameLocation":"7895:14:16","nodeType":"VariableDeclaration","scope":1026,"src":"7887:22:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":955,"name":"uint256","nodeType":"ElementaryTypeName","src":"7887:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7886:24:16"},"scope":2035,"src":"7813:976:16","stateMutability":"view","virtual":false,"visibility":"internal"},{"constant":true,"id":1034,"mutability":"constant","name":"SQRT_POWER","nameLocation":"8989:10:16","nodeType":"VariableDeclaration","scope":2035,"src":"8964:59:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1027,"name":"uint256","nodeType":"ElementaryTypeName","src":"8964:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1033,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1030,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"id":1028,"name":"FIELD_SIZE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":946,"src":"9003:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1029,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9016:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9003:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1031,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"9002:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"32","id":1032,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9022:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9002:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"body":{"id":1046,"nodeType":"Block","src":"9151:42:16","statements":[{"expression":{"arguments":[{"id":1042,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1036,"src":"9174:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1043,"name":"SQRT_POWER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1034,"src":"9177:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1041,"name":"bigModExp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1026,"src":"9164:9:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) view returns (uint256)"}},"id":1044,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9164:24:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1040,"id":1045,"nodeType":"Return","src":"9157:31:16"}]},"id":1047,"implemented":true,"kind":"function","modifiers":[],"name":"squareRoot","nameLocation":"9097:10:16","nodeType":"FunctionDefinition","parameters":{"id":1037,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1036,"mutability":"mutable","name":"x","nameLocation":"9116:1:16","nodeType":"VariableDeclaration","scope":1047,"src":"9108:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1035,"name":"uint256","nodeType":"ElementaryTypeName","src":"9108:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9107:11:16"},"returnParameters":{"id":1040,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1039,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1047,"src":"9142:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1038,"name":"uint256","nodeType":"ElementaryTypeName","src":"9142:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9141:9:16"},"scope":2035,"src":"9088:105:16","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1072,"nodeType":"Block","src":"9314:198:16","statements":[{"assignments":[1055],"declarations":[{"constant":false,"id":1055,"mutability":"mutable","name":"xCubed","nameLocation":"9409:6:16","nodeType":"VariableDeclaration","scope":1072,"src":"9401:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1054,"name":"uint256","nodeType":"ElementaryTypeName","src":"9401:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1065,"initialValue":{"arguments":[{"id":1057,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1049,"src":"9425:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":1059,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1049,"src":"9435:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1060,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1049,"src":"9438:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1061,"name":"FIELD_SIZE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":946,"src":"9441:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1058,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"9428:6:16","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":1062,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9428:24:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1063,"name":"FIELD_SIZE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":946,"src":"9454:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1056,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"9418:6:16","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":1064,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9418:47:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9401:64:16"},{"expression":{"arguments":[{"id":1067,"name":"xCubed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1055,"src":"9485:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"37","id":1068,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9493:1:16","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},{"id":1069,"name":"FIELD_SIZE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":946,"src":"9496:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1066,"name":"addmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-2,"src":"9478:6:16","typeDescriptions":{"typeIdentifier":"t_function_addmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":1070,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9478:29:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1053,"id":1071,"nodeType":"Return","src":"9471:36:16"}]},"id":1073,"implemented":true,"kind":"function","modifiers":[],"name":"ySquared","nameLocation":"9262:8:16","nodeType":"FunctionDefinition","parameters":{"id":1050,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1049,"mutability":"mutable","name":"x","nameLocation":"9279:1:16","nodeType":"VariableDeclaration","scope":1073,"src":"9271:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1048,"name":"uint256","nodeType":"ElementaryTypeName","src":"9271:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9270:11:16"},"returnParameters":{"id":1053,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1052,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1073,"src":"9305:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1051,"name":"uint256","nodeType":"ElementaryTypeName","src":"9305:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9304:9:16"},"scope":2035,"src":"9253:259:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1116,"nodeType":"Block","src":"9617:294:16","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":1083,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1077,"src":"9751:1:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},"id":1085,"indexExpression":{"hexValue":"30","id":1084,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9753:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9751:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1086,"name":"FIELD_SIZE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":946,"src":"9758:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9751:17:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"696e76616c696420782d6f7264696e617465","id":1088,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9770:20:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_787cf99fb194dba922561b5b1fd0b18a6a49c57eaa01d9c5279f2b2a5bdc1a86","typeString":"literal_string \"invalid x-ordinate\""},"value":"invalid x-ordinate"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_787cf99fb194dba922561b5b1fd0b18a6a49c57eaa01d9c5279f2b2a5bdc1a86","typeString":"literal_string \"invalid x-ordinate\""}],"id":1082,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9743:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1089,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9743:48:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1090,"nodeType":"ExpressionStatement","src":"9743:48:16"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":1092,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1077,"src":"9805:1:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},"id":1094,"indexExpression":{"hexValue":"31","id":1093,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9807:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9805:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1095,"name":"FIELD_SIZE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":946,"src":"9812:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9805:17:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"696e76616c696420792d6f7264696e617465","id":1097,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9824:20:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_ecc598139057476f7e46578e2e254b173afe0910225980583669989d2a737f84","typeString":"literal_string \"invalid y-ordinate\""},"value":"invalid y-ordinate"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ecc598139057476f7e46578e2e254b173afe0910225980583669989d2a737f84","typeString":"literal_string \"invalid y-ordinate\""}],"id":1091,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9797:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1098,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9797:48:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1099,"nodeType":"ExpressionStatement","src":"9797:48:16"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"baseExpression":{"id":1101,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1077,"src":"9867:1:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},"id":1103,"indexExpression":{"hexValue":"30","id":1102,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9869:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9867:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1100,"name":"ySquared","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1073,"src":"9858:8:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1104,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9858:14:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"baseExpression":{"id":1106,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1077,"src":"9883:1:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},"id":1108,"indexExpression":{"hexValue":"31","id":1107,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9885:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9883:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":1109,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1077,"src":"9889:1:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},"id":1111,"indexExpression":{"hexValue":"31","id":1110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9891:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9889:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1112,"name":"FIELD_SIZE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":946,"src":"9895:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1105,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"9876:6:16","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":1113,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9876:30:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9858:48:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1081,"id":1115,"nodeType":"Return","src":"9851:55:16"}]},"id":1117,"implemented":true,"kind":"function","modifiers":[],"name":"isOnCurve","nameLocation":"9557:9:16","nodeType":"FunctionDefinition","parameters":{"id":1078,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1077,"mutability":"mutable","name":"p","nameLocation":"9585:1:16","nodeType":"VariableDeclaration","scope":1117,"src":"9567:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2]"},"typeName":{"baseType":{"id":1074,"name":"uint256","nodeType":"ElementaryTypeName","src":"9567:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1076,"length":{"hexValue":"32","id":1075,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9575:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"9567:10:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_storage_ptr","typeString":"uint256[2]"}},"visibility":"internal"}],"src":"9566:21:16"},"returnParameters":{"id":1081,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1080,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1117,"src":"9611:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1079,"name":"bool","nodeType":"ElementaryTypeName","src":"9611:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9610:6:16"},"scope":2035,"src":"9548:363:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1150,"nodeType":"Block","src":"10036:324:16","statements":[{"expression":{"id":1131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1124,"name":"x_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1122,"src":"10042:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":1128,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1119,"src":"10065:1:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1127,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"10055:9:16","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1129,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10055:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1126,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10047:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1125,"name":"uint256","nodeType":"ElementaryTypeName","src":"10047:7:16","typeDescriptions":{}}},"id":1130,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10047:21:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10042:26:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1132,"nodeType":"ExpressionStatement","src":"10042:26:16"},{"body":{"id":1148,"nodeType":"Block","src":"10296:60:16","statements":[{"expression":{"id":1146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1136,"name":"x_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1122,"src":"10304:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"arguments":[{"id":1142,"name":"x_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1122,"src":"10344:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1140,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"10327:3:16","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1141,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10331:12:16","memberName":"encodePacked","nodeType":"MemberAccess","src":"10327:16:16","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10327:20:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1139,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"10317:9:16","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1144,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10317:31:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1138,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10309:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1137,"name":"uint256","nodeType":"ElementaryTypeName","src":"10309:7:16","typeDescriptions":{}}},"id":1145,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10309:40:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10304:45:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1147,"nodeType":"ExpressionStatement","src":"10304:45:16"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1133,"name":"x_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1122,"src":"10278:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1134,"name":"FIELD_SIZE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":946,"src":"10284:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10278:16:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1149,"nodeType":"WhileStatement","src":"10271:85:16"}]},"id":1151,"implemented":true,"kind":"function","modifiers":[],"name":"fieldHash","nameLocation":"9975:9:16","nodeType":"FunctionDefinition","parameters":{"id":1120,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1119,"mutability":"mutable","name":"b","nameLocation":"9998:1:16","nodeType":"VariableDeclaration","scope":1151,"src":"9985:14:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1118,"name":"bytes","nodeType":"ElementaryTypeName","src":"9985:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"9984:16:16"},"returnParameters":{"id":1123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1122,"mutability":"mutable","name":"x_","nameLocation":"10032:2:16","nodeType":"VariableDeclaration","scope":1151,"src":"10024:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1121,"name":"uint256","nodeType":"ElementaryTypeName","src":"10024:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10023:12:16"},"scope":2035,"src":"9966:394:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1200,"nodeType":"Block","src":"10870:270:16","statements":[{"id":1199,"nodeType":"UncheckedBlock","src":"10876:260:16","statements":[{"expression":{"id":1166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1160,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1158,"src":"10894:1:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},"id":1162,"indexExpression":{"hexValue":"30","id":1161,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10896:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10894:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1164,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1153,"src":"10911:1:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1163,"name":"fieldHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1151,"src":"10901:9:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_uint256_$","typeString":"function (bytes memory) pure returns (uint256)"}},"id":1165,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10901:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10894:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1167,"nodeType":"ExpressionStatement","src":"10894:19:16"},{"expression":{"id":1178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1168,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1158,"src":"10921:1:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},"id":1170,"indexExpression":{"hexValue":"31","id":1169,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10923:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10921:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"baseExpression":{"id":1173,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1158,"src":"10948:1:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},"id":1175,"indexExpression":{"hexValue":"30","id":1174,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10950:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10948:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1172,"name":"ySquared","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1073,"src":"10939:8:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1176,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10939:14:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1171,"name":"squareRoot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1047,"src":"10928:10:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":1177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10928:26:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10921:33:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1179,"nodeType":"ExpressionStatement","src":"10921:33:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":1180,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1158,"src":"10966:1:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},"id":1182,"indexExpression":{"hexValue":"31","id":1181,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10968:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10966:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":1183,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10973:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10966:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":1185,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10978:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10966:13:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1198,"nodeType":"IfStatement","src":"10962:168:16","trueBody":{"id":1197,"nodeType":"Block","src":"10981:149:16","statements":[{"expression":{"id":1195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1187,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1158,"src":"11097:1:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},"id":1189,"indexExpression":{"hexValue":"31","id":1188,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11099:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11097:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1190,"name":"FIELD_SIZE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":946,"src":"11104:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"baseExpression":{"id":1191,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1158,"src":"11117:1:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},"id":1193,"indexExpression":{"hexValue":"31","id":1192,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11119:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11117:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11104:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11097:24:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1196,"nodeType":"ExpressionStatement","src":"11097:24:16"}]}}]}]},"id":1201,"implemented":true,"kind":"function","modifiers":[],"name":"newCandidateSecp256k1Point","nameLocation":"10783:26:16","nodeType":"FunctionDefinition","parameters":{"id":1154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1153,"mutability":"mutable","name":"b","nameLocation":"10823:1:16","nodeType":"VariableDeclaration","scope":1201,"src":"10810:14:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1152,"name":"bytes","nodeType":"ElementaryTypeName","src":"10810:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"10809:16:16"},"returnParameters":{"id":1159,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1158,"mutability":"mutable","name":"p","nameLocation":"10867:1:16","nodeType":"VariableDeclaration","scope":1201,"src":"10849:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2]"},"typeName":{"baseType":{"id":1155,"name":"uint256","nodeType":"ElementaryTypeName","src":"10849:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1157,"length":{"hexValue":"32","id":1156,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10857:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"10849:10:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_storage_ptr","typeString":"uint256[2]"}},"visibility":"internal"}],"src":"10848:21:16"},"scope":2035,"src":"10774:366:16","stateMutability":"view","virtual":false,"visibility":"internal"},{"constant":true,"id":1204,"mutability":"constant","name":"HASH_TO_CURVE_HASH_PREFIX","nameLocation":"11279:25:16","nodeType":"VariableDeclaration","scope":2035,"src":"11253:55:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1202,"name":"uint256","nodeType":"ElementaryTypeName","src":"11253:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":1203,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11307:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"internal"},{"body":{"id":1245,"nodeType":"Block","src":"12184:197:16","statements":[{"expression":{"id":1226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1217,"name":"rv","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1215,"src":"12190:2:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":1221,"name":"HASH_TO_CURVE_HASH_PREFIX","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1204,"src":"12239:25:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1222,"name":"pk","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1208,"src":"12266:2:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},{"id":1223,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1210,"src":"12270:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1219,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"12222:3:16","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1220,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12226:12:16","memberName":"encodePacked","nodeType":"MemberAccess","src":"12222:16:16","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1224,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12222:54:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1218,"name":"newCandidateSecp256k1Point","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1201,"src":"12195:26:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_memory_ptr_$returns$_t_array$_t_uint256_$2_memory_ptr_$","typeString":"function (bytes memory) view returns (uint256[2] memory)"}},"id":1225,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12195:82:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},"src":"12190:87:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},"id":1227,"nodeType":"ExpressionStatement","src":"12190:87:16"},{"body":{"id":1243,"nodeType":"Block","src":"12306:71:16","statements":[{"expression":{"id":1241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1232,"name":"rv","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1215,"src":"12314:2:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"baseExpression":{"id":1236,"name":"rv","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1215,"src":"12363:2:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},"id":1238,"indexExpression":{"hexValue":"30","id":1237,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12366:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12363:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1234,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"12346:3:16","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1235,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12350:12:16","memberName":"encodePacked","nodeType":"MemberAccess","src":"12346:16:16","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1239,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12346:23:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1233,"name":"newCandidateSecp256k1Point","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1201,"src":"12319:26:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_memory_ptr_$returns$_t_array$_t_uint256_$2_memory_ptr_$","typeString":"function (bytes memory) view returns (uint256[2] memory)"}},"id":1240,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12319:51:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},"src":"12314:56:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},"id":1242,"nodeType":"ExpressionStatement","src":"12314:56:16"}]},"condition":{"id":1231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"12290:14:16","subExpression":{"arguments":[{"id":1229,"name":"rv","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1215,"src":"12301:2:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}],"id":1228,"name":"isOnCurve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1117,"src":"12291:9:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$2_memory_ptr_$returns$_t_bool_$","typeString":"function (uint256[2] memory) pure returns (bool)"}},"id":1230,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12291:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1244,"nodeType":"WhileStatement","src":"12283:94:16"}]},"id":1246,"implemented":true,"kind":"function","modifiers":[],"name":"hashToCurve","nameLocation":"12090:11:16","nodeType":"FunctionDefinition","parameters":{"id":1211,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1208,"mutability":"mutable","name":"pk","nameLocation":"12120:2:16","nodeType":"VariableDeclaration","scope":1246,"src":"12102:20:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2]"},"typeName":{"baseType":{"id":1205,"name":"uint256","nodeType":"ElementaryTypeName","src":"12102:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1207,"length":{"hexValue":"32","id":1206,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12110:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"12102:10:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_storage_ptr","typeString":"uint256[2]"}},"visibility":"internal"},{"constant":false,"id":1210,"mutability":"mutable","name":"input","nameLocation":"12132:5:16","nodeType":"VariableDeclaration","scope":1246,"src":"12124:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1209,"name":"uint256","nodeType":"ElementaryTypeName","src":"12124:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12101:37:16"},"returnParameters":{"id":1216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1215,"mutability":"mutable","name":"rv","nameLocation":"12180:2:16","nodeType":"VariableDeclaration","scope":1246,"src":"12162:20:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2]"},"typeName":{"baseType":{"id":1212,"name":"uint256","nodeType":"ElementaryTypeName","src":"12162:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1214,"length":{"hexValue":"32","id":1213,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12170:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"12162:10:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_storage_ptr","typeString":"uint256[2]"}},"visibility":"internal"}],"src":"12161:22:16"},"scope":2035,"src":"12081:300:16","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1337,"nodeType":"Block","src":"13023:863:16","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1263,"name":"scalar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1253,"src":"13037:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1264,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13047:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13037:11:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"7a65726f207363616c6172","id":1266,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13050:13:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_e71e9381bf8fff7d9eeee436d182c3c8b982b1d416953f4ca9ccf572989baeca","typeString":"literal_string \"zero scalar\""},"value":"zero scalar"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e71e9381bf8fff7d9eeee436d182c3c8b982b1d416953f4ca9ccf572989baeca","typeString":"literal_string \"zero scalar\""}],"id":1262,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13029:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1267,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13029:35:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1268,"nodeType":"ExpressionStatement","src":"13029:35:16"},{"assignments":[1270],"declarations":[{"constant":false,"id":1270,"mutability":"mutable","name":"x","nameLocation":"13117:1:16","nodeType":"VariableDeclaration","scope":1337,"src":"13109:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1269,"name":"uint256","nodeType":"ElementaryTypeName","src":"13109:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1274,"initialValue":{"baseExpression":{"id":1271,"name":"multiplicand","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1251,"src":"13121:12:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},"id":1273,"indexExpression":{"hexValue":"30","id":1272,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13134:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13121:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13109:27:16"},{"assignments":[1276],"declarations":[{"constant":false,"id":1276,"mutability":"mutable","name":"v","nameLocation":"13178:1:16","nodeType":"VariableDeclaration","scope":1337,"src":"13172:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1275,"name":"uint8","nodeType":"ElementaryTypeName","src":"13172:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":1287,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":1277,"name":"multiplicand","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1251,"src":"13182:12:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},"id":1279,"indexExpression":{"hexValue":"31","id":1278,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13195:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13182:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":1280,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13200:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"13182:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13205:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13182:24:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"3238","id":1285,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13214:2:16","typeDescriptions":{"typeIdentifier":"t_rational_28_by_1","typeString":"int_const 28"},"value":"28"},"id":1286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"13182:34:16","trueExpression":{"hexValue":"3237","id":1284,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13209:2:16","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"27"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"13172:44:16"},{"assignments":[1289],"declarations":[{"constant":false,"id":1289,"mutability":"mutable","name":"scalarTimesX","nameLocation":"13573:12:16","nodeType":"VariableDeclaration","scope":1337,"src":"13565:20:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1288,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13565:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1298,"initialValue":{"arguments":[{"arguments":[{"id":1293,"name":"scalar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1253,"src":"13603:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1294,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1270,"src":"13611:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1295,"name":"GROUP_ORDER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":943,"src":"13614:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1292,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"13596:6:16","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":1296,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13596:30:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1291,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13588:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1290,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13588:7:16","typeDescriptions":{}}},"id":1297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13588:39:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"13565:62:16"},{"assignments":[1300],"declarations":[{"constant":false,"id":1300,"mutability":"mutable","name":"actual","nameLocation":"13641:6:16","nodeType":"VariableDeclaration","scope":1337,"src":"13633:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1299,"name":"address","nodeType":"ElementaryTypeName","src":"13633:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1313,"initialValue":{"arguments":[{"arguments":[{"hexValue":"30","id":1304,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13668:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1303,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13660:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1302,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13660:7:16","typeDescriptions":{}}},"id":1305,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13660:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1306,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1276,"src":"13672:1:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"arguments":[{"id":1309,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1270,"src":"13683:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1308,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13675:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1307,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13675:7:16","typeDescriptions":{}}},"id":1310,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13675:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1311,"name":"scalarTimesX","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1289,"src":"13687:12:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1301,"name":"ecrecover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-6,"src":"13650:9:16","typeDescriptions":{"typeIdentifier":"t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":1312,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13650:50:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"13633:67:16"},{"assignments":[1315],"declarations":[{"constant":false,"id":1315,"mutability":"mutable","name":"expected","nameLocation":"13774:8:16","nodeType":"VariableDeclaration","scope":1337,"src":"13766:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1314,"name":"address","nodeType":"ElementaryTypeName","src":"13766:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1331,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"id":1325,"name":"product","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1257,"src":"13836:7:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}],"expression":{"id":1323,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"13819:3:16","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1324,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13823:12:16","memberName":"encodePacked","nodeType":"MemberAccess","src":"13819:16:16","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1326,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13819:25:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1322,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"13809:9:16","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1327,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13809:36:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1321,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13801:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1320,"name":"uint256","nodeType":"ElementaryTypeName","src":"13801:7:16","typeDescriptions":{}}},"id":1328,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13801:45:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1319,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13793:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":1318,"name":"uint160","nodeType":"ElementaryTypeName","src":"13793:7:16","typeDescriptions":{}}},"id":1329,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13793:54:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":1317,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13785:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1316,"name":"address","nodeType":"ElementaryTypeName","src":"13785:7:16","typeDescriptions":{}}},"id":1330,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13785:63:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"13766:82:16"},{"expression":{"components":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1332,"name":"actual","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1300,"src":"13862:6:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1333,"name":"expected","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1315,"src":"13872:8:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13862:18:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1335,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13861:20:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1261,"id":1336,"nodeType":"Return","src":"13854:27:16"}]},"documentation":{"id":1247,"nodeType":"StructuredDocumentation","src":"12385:485:16","text":"*********************************************************************\n @notice Check that product==scalar*multiplicand\n @dev Based on Vitalik Buterin's idea in ethresear.ch post cited below.\n @param multiplicand: secp256k1 point\n @param scalar: non-zero GF(GROUP_ORDER) scalar\n @param product: secp256k1 expected to be multiplier * multiplicand\n @return verifies true iff product==scalar*multiplicand, with cryptographically high probability"},"id":1338,"implemented":true,"kind":"function","modifiers":[],"name":"ecmulVerify","nameLocation":"12882:11:16","nodeType":"FunctionDefinition","parameters":{"id":1258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1251,"mutability":"mutable","name":"multiplicand","nameLocation":"12917:12:16","nodeType":"VariableDeclaration","scope":1338,"src":"12899:30:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2]"},"typeName":{"baseType":{"id":1248,"name":"uint256","nodeType":"ElementaryTypeName","src":"12899:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1250,"length":{"hexValue":"32","id":1249,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12907:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"12899:10:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_storage_ptr","typeString":"uint256[2]"}},"visibility":"internal"},{"constant":false,"id":1253,"mutability":"mutable","name":"scalar","nameLocation":"12943:6:16","nodeType":"VariableDeclaration","scope":1338,"src":"12935:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1252,"name":"uint256","nodeType":"ElementaryTypeName","src":"12935:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1257,"mutability":"mutable","name":"product","nameLocation":"12973:7:16","nodeType":"VariableDeclaration","scope":1338,"src":"12955:25:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2]"},"typeName":{"baseType":{"id":1254,"name":"uint256","nodeType":"ElementaryTypeName","src":"12955:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1256,"length":{"hexValue":"32","id":1255,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12963:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"12955:10:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_storage_ptr","typeString":"uint256[2]"}},"visibility":"internal"}],"src":"12893:91:16"},"returnParameters":{"id":1261,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1260,"mutability":"mutable","name":"verifies","nameLocation":"13013:8:16","nodeType":"VariableDeclaration","scope":1338,"src":"13008:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1259,"name":"bool","nodeType":"ElementaryTypeName","src":"13008:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"13007:15:16"},"scope":2035,"src":"12873:1013:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1388,"nodeType":"Block","src":"14114:328:16","statements":[{"id":1387,"nodeType":"UncheckedBlock","src":"14120:318:16","statements":[{"assignments":[1354],"declarations":[{"constant":false,"id":1354,"mutability":"mutable","name":"num1","nameLocation":"14146:4:16","nodeType":"VariableDeclaration","scope":1387,"src":"14138:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1353,"name":"uint256","nodeType":"ElementaryTypeName","src":"14138:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1360,"initialValue":{"arguments":[{"id":1356,"name":"z2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1346,"src":"14160:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1357,"name":"x1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1340,"src":"14164:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1358,"name":"FIELD_SIZE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":946,"src":"14168:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1355,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"14153:6:16","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":1359,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14153:26:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"14138:41:16"},{"assignments":[1362],"declarations":[{"constant":false,"id":1362,"mutability":"mutable","name":"num2","nameLocation":"14306:4:16","nodeType":"VariableDeclaration","scope":1387,"src":"14298:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1361,"name":"uint256","nodeType":"ElementaryTypeName","src":"14298:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1370,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1364,"name":"FIELD_SIZE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":946,"src":"14320:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1365,"name":"x2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1344,"src":"14333:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14320:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1367,"name":"z1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1342,"src":"14337:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1368,"name":"FIELD_SIZE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":946,"src":"14341:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1363,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"14313:6:16","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":1369,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14313:39:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"14298:54:16"},{"expression":{"id":1385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":1371,"name":"x3","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1349,"src":"14361:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1372,"name":"z3","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1351,"src":"14365:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1373,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"14360:8:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"arguments":[{"id":1375,"name":"num1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1354,"src":"14379:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1376,"name":"num2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1362,"src":"14385:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1377,"name":"FIELD_SIZE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":946,"src":"14391:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1374,"name":"addmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-2,"src":"14372:6:16","typeDescriptions":{"typeIdentifier":"t_function_addmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":1378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14372:30:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":1380,"name":"z1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1342,"src":"14411:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1381,"name":"z2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1346,"src":"14415:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1382,"name":"FIELD_SIZE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":946,"src":"14419:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1379,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"14404:6:16","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":1383,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14404:26:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1384,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14371:60:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"src":"14360:71:16","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1386,"nodeType":"ExpressionStatement","src":"14360:71:16"}]}]},"id":1389,"implemented":true,"kind":"function","modifiers":[],"name":"projectiveSub","nameLocation":"13985:13:16","nodeType":"FunctionDefinition","parameters":{"id":1347,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1340,"mutability":"mutable","name":"x1","nameLocation":"14012:2:16","nodeType":"VariableDeclaration","scope":1389,"src":"14004:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1339,"name":"uint256","nodeType":"ElementaryTypeName","src":"14004:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1342,"mutability":"mutable","name":"z1","nameLocation":"14028:2:16","nodeType":"VariableDeclaration","scope":1389,"src":"14020:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1341,"name":"uint256","nodeType":"ElementaryTypeName","src":"14020:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1344,"mutability":"mutable","name":"x2","nameLocation":"14044:2:16","nodeType":"VariableDeclaration","scope":1389,"src":"14036:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1343,"name":"uint256","nodeType":"ElementaryTypeName","src":"14036:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1346,"mutability":"mutable","name":"z2","nameLocation":"14060:2:16","nodeType":"VariableDeclaration","scope":1389,"src":"14052:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1345,"name":"uint256","nodeType":"ElementaryTypeName","src":"14052:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13998:68:16"},"returnParameters":{"id":1352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1349,"mutability":"mutable","name":"x3","nameLocation":"14098:2:16","nodeType":"VariableDeclaration","scope":1389,"src":"14090:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1348,"name":"uint256","nodeType":"ElementaryTypeName","src":"14090:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1351,"mutability":"mutable","name":"z3","nameLocation":"14110:2:16","nodeType":"VariableDeclaration","scope":1389,"src":"14102:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1350,"name":"uint256","nodeType":"ElementaryTypeName","src":"14102:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14089:24:16"},"scope":2035,"src":"13976:466:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1420,"nodeType":"Block","src":"14666:78:16","statements":[{"expression":{"id":1418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":1404,"name":"x3","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1400,"src":"14673:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1405,"name":"z3","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1402,"src":"14677:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1406,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"14672:8:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"arguments":[{"id":1408,"name":"x1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1391,"src":"14691:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1409,"name":"x2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1395,"src":"14695:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1410,"name":"FIELD_SIZE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":946,"src":"14699:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1407,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"14684:6:16","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":1411,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14684:26:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":1413,"name":"z1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1393,"src":"14719:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1414,"name":"z2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1397,"src":"14723:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1415,"name":"FIELD_SIZE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":946,"src":"14727:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1412,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"14712:6:16","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":1416,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14712:26:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1417,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14683:56:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"src":"14672:67:16","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1419,"nodeType":"ExpressionStatement","src":"14672:67:16"}]},"id":1421,"implemented":true,"kind":"function","modifiers":[],"name":"projectiveMul","nameLocation":"14537:13:16","nodeType":"FunctionDefinition","parameters":{"id":1398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1391,"mutability":"mutable","name":"x1","nameLocation":"14564:2:16","nodeType":"VariableDeclaration","scope":1421,"src":"14556:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1390,"name":"uint256","nodeType":"ElementaryTypeName","src":"14556:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1393,"mutability":"mutable","name":"z1","nameLocation":"14580:2:16","nodeType":"VariableDeclaration","scope":1421,"src":"14572:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1392,"name":"uint256","nodeType":"ElementaryTypeName","src":"14572:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1395,"mutability":"mutable","name":"x2","nameLocation":"14596:2:16","nodeType":"VariableDeclaration","scope":1421,"src":"14588:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1394,"name":"uint256","nodeType":"ElementaryTypeName","src":"14588:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1397,"mutability":"mutable","name":"z2","nameLocation":"14612:2:16","nodeType":"VariableDeclaration","scope":1421,"src":"14604:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1396,"name":"uint256","nodeType":"ElementaryTypeName","src":"14604:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14550:68:16"},"returnParameters":{"id":1403,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1400,"mutability":"mutable","name":"x3","nameLocation":"14650:2:16","nodeType":"VariableDeclaration","scope":1421,"src":"14642:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1399,"name":"uint256","nodeType":"ElementaryTypeName","src":"14642:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1402,"mutability":"mutable","name":"z3","nameLocation":"14662:2:16","nodeType":"VariableDeclaration","scope":1421,"src":"14654:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1401,"name":"uint256","nodeType":"ElementaryTypeName","src":"14654:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14641:24:16"},"scope":2035,"src":"14528:216:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1574,"nodeType":"Block","src":"16548:1958:16","statements":[{"id":1573,"nodeType":"UncheckedBlock","src":"16554:1948:16","statements":[{"assignments":[1440,1442],"declarations":[{"constant":false,"id":1440,"mutability":"mutable","name":"z1","nameLocation":"17250:2:16","nodeType":"VariableDeclaration","scope":1573,"src":"17242:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1439,"name":"uint256","nodeType":"ElementaryTypeName","src":"17242:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1442,"mutability":"mutable","name":"z2","nameLocation":"17262:2:16","nodeType":"VariableDeclaration","scope":1573,"src":"17254:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1441,"name":"uint256","nodeType":"ElementaryTypeName","src":"17254:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1446,"initialValue":{"components":[{"hexValue":"31","id":1443,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17269:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},{"hexValue":"31","id":1444,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17272:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"id":1445,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"17268:6:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_rational_1_by_1_$_t_rational_1_by_1_$","typeString":"tuple(int_const 1,int_const 1)"}},"nodeType":"VariableDeclarationStatement","src":"17241:33:16"},{"assignments":[1448],"declarations":[{"constant":false,"id":1448,"mutability":"mutable","name":"lx","nameLocation":"17421:2:16","nodeType":"VariableDeclaration","scope":1573,"src":"17413:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1447,"name":"uint256","nodeType":"ElementaryTypeName","src":"17413:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1456,"initialValue":{"arguments":[{"id":1450,"name":"qy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1430,"src":"17433:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1451,"name":"FIELD_SIZE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":946,"src":"17437:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1452,"name":"py","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1426,"src":"17450:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17437:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1454,"name":"FIELD_SIZE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":946,"src":"17454:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1449,"name":"addmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-2,"src":"17426:6:16","typeDescriptions":{"typeIdentifier":"t_function_addmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":1455,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17426:39:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"17413:52:16"},{"assignments":[1458],"declarations":[{"constant":false,"id":1458,"mutability":"mutable","name":"lz","nameLocation":"17481:2:16","nodeType":"VariableDeclaration","scope":1573,"src":"17473:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1457,"name":"uint256","nodeType":"ElementaryTypeName","src":"17473:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1466,"initialValue":{"arguments":[{"id":1460,"name":"qx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1428,"src":"17493:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1461,"name":"FIELD_SIZE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":946,"src":"17497:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1462,"name":"px","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1424,"src":"17510:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17497:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1464,"name":"FIELD_SIZE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":946,"src":"17514:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1459,"name":"addmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-2,"src":"17486:6:16","typeDescriptions":{"typeIdentifier":"t_function_addmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":1465,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17486:39:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"17473:52:16"},{"assignments":[1468],"declarations":[{"constant":false,"id":1468,"mutability":"mutable","name":"dx","nameLocation":"17542:2:16","nodeType":"VariableDeclaration","scope":1573,"src":"17534:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1467,"name":"uint256","nodeType":"ElementaryTypeName","src":"17534:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1469,"nodeType":"VariableDeclarationStatement","src":"17534:10:16"},{"expression":{"id":1479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":1470,"name":"sx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1433,"src":"17638:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1471,"name":"dx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1468,"src":"17642:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1472,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"17637:8:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1474,"name":"lx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1448,"src":"17662:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1475,"name":"lz","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1458,"src":"17666:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1476,"name":"lx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1448,"src":"17670:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1477,"name":"lz","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1458,"src":"17674:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1473,"name":"projectiveMul","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1421,"src":"17648:13:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256,uint256,uint256) pure returns (uint256,uint256)"}},"id":1478,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17648:29:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"src":"17637:40:16","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1480,"nodeType":"ExpressionStatement","src":"17637:40:16"},{"expression":{"id":1490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":1481,"name":"sx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1433,"src":"17709:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1482,"name":"dx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1468,"src":"17713:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1483,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"17708:8:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1485,"name":"sx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1433,"src":"17733:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1486,"name":"dx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1468,"src":"17737:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1487,"name":"px","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1424,"src":"17741:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1488,"name":"z1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1440,"src":"17745:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1484,"name":"projectiveSub","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1389,"src":"17719:13:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256,uint256,uint256) pure returns (uint256,uint256)"}},"id":1489,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17719:29:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"src":"17708:40:16","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1491,"nodeType":"ExpressionStatement","src":"17708:40:16"},{"expression":{"id":1501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":1492,"name":"sx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1433,"src":"17783:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1493,"name":"dx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1468,"src":"17787:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1494,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"17782:8:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1496,"name":"sx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1433,"src":"17807:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1497,"name":"dx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1468,"src":"17811:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1498,"name":"qx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1428,"src":"17815:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1499,"name":"z2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1442,"src":"17819:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1495,"name":"projectiveSub","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1389,"src":"17793:13:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256,uint256,uint256) pure returns (uint256,uint256)"}},"id":1500,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17793:29:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"src":"17782:40:16","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1502,"nodeType":"ExpressionStatement","src":"17782:40:16"},{"assignments":[1504],"declarations":[{"constant":false,"id":1504,"mutability":"mutable","name":"dy","nameLocation":"17868:2:16","nodeType":"VariableDeclaration","scope":1573,"src":"17860:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1503,"name":"uint256","nodeType":"ElementaryTypeName","src":"17860:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1505,"nodeType":"VariableDeclarationStatement","src":"17860:10:16"},{"expression":{"id":1515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":1506,"name":"sy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1435,"src":"17966:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1507,"name":"dy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1504,"src":"17970:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1508,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"17965:8:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1510,"name":"px","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1424,"src":"17990:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1511,"name":"z1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1440,"src":"17994:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1512,"name":"sx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1433,"src":"17998:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1513,"name":"dx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1468,"src":"18002:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1509,"name":"projectiveSub","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1389,"src":"17976:13:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256,uint256,uint256) pure returns (uint256,uint256)"}},"id":1514,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17976:29:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"src":"17965:40:16","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1516,"nodeType":"ExpressionStatement","src":"17965:40:16"},{"expression":{"id":1526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":1517,"name":"sy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1435,"src":"18023:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1518,"name":"dy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1504,"src":"18027:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1519,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"18022:8:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1521,"name":"sy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1435,"src":"18047:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1522,"name":"dy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1504,"src":"18051:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1523,"name":"lx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1448,"src":"18055:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1524,"name":"lz","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1458,"src":"18059:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1520,"name":"projectiveMul","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1421,"src":"18033:13:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256,uint256,uint256) pure returns (uint256,uint256)"}},"id":1525,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18033:29:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"src":"18022:40:16","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1527,"nodeType":"ExpressionStatement","src":"18022:40:16"},{"expression":{"id":1537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":1528,"name":"sy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1435,"src":"18099:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1529,"name":"dy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1504,"src":"18103:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1530,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"18098:8:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1532,"name":"sy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1435,"src":"18123:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1533,"name":"dy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1504,"src":"18127:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1534,"name":"py","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1426,"src":"18131:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1535,"name":"z1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1440,"src":"18135:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1531,"name":"projectiveSub","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1389,"src":"18109:13:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256,uint256,uint256) pure returns (uint256,uint256)"}},"id":1536,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18109:29:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"src":"18098:40:16","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1538,"nodeType":"ExpressionStatement","src":"18098:40:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1539,"name":"dx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1468,"src":"18182:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1540,"name":"dy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1504,"src":"18188:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18182:8:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1571,"nodeType":"Block","src":"18400:96:16","statements":[{"expression":{"id":1569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1567,"name":"sz","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1437,"src":"18480:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1568,"name":"dx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1468,"src":"18485:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18480:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1570,"nodeType":"ExpressionStatement","src":"18480:7:16"}]},"id":1572,"nodeType":"IfStatement","src":"18178:318:16","trueBody":{"id":1566,"nodeType":"Block","src":"18192:202:16","statements":[{"expression":{"id":1548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1542,"name":"sx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1433,"src":"18272:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1544,"name":"sx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1433,"src":"18284:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1545,"name":"dy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1504,"src":"18288:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1546,"name":"FIELD_SIZE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":946,"src":"18292:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1543,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"18277:6:16","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":1547,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18277:26:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18272:31:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1549,"nodeType":"ExpressionStatement","src":"18272:31:16"},{"expression":{"id":1556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1550,"name":"sy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1435,"src":"18313:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1552,"name":"sy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1435,"src":"18325:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1553,"name":"dx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1468,"src":"18329:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1554,"name":"FIELD_SIZE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":946,"src":"18333:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1551,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"18318:6:16","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":1555,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18318:26:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18313:31:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1557,"nodeType":"ExpressionStatement","src":"18313:31:16"},{"expression":{"id":1564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1558,"name":"sz","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1437,"src":"18354:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1560,"name":"dx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1468,"src":"18366:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1561,"name":"dy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1504,"src":"18370:2:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1562,"name":"FIELD_SIZE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":946,"src":"18374:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1559,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"18359:6:16","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":1563,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18359:26:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18354:31:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1565,"nodeType":"ExpressionStatement","src":"18354:31:16"}]}}]}]},"documentation":{"id":1422,"nodeType":"StructuredDocumentation","src":"14748:1645:16","text":"**************************************************************************\n@notice Computes elliptic-curve sum, in projective co-ordinates\n@dev Using projective coordinates avoids costly divisions\n@dev To use this with p and q in affine coordinates, call\n@dev projectiveECAdd(px, py, qx, qy). This will return\n@dev the addition of (px, py, 1) and (qx, qy, 1), in the\n@dev secp256k1 group.\n@dev This can be used to calculate the z which is the inverse to zInv\n@dev in isValidVRFOutput. But consider using a faster\n@dev re-implementation such as ProjectiveECAdd in the golang vrf package.\n@dev This function assumes [px,py,1],[qx,qy,1] are valid projective\ncoordinates of secp256k1 points. That is safe in this contract,\nbecause this method is only used by linearCombination, which checks\npoints are on the curve via ecrecover.**************************************************************************\n@param px The first affine coordinate of the first summand\n@param py The second affine coordinate of the first summand\n@param qx The first affine coordinate of the second summand\n@param qy The second affine coordinate of the second summand\n(px,py) and (qx,qy) must be distinct, valid secp256k1 points.**************************************************************************\nReturn values are projective coordinates of [px,py,1]+[qx,qy,1] as points\non secp256k1, in P²(𝔽ₙ)\n@return sx\n@return sy\n@return sz"},"id":1575,"implemented":true,"kind":"function","modifiers":[],"name":"projectiveECAdd","nameLocation":"16405:15:16","nodeType":"FunctionDefinition","parameters":{"id":1431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1424,"mutability":"mutable","name":"px","nameLocation":"16434:2:16","nodeType":"VariableDeclaration","scope":1575,"src":"16426:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1423,"name":"uint256","nodeType":"ElementaryTypeName","src":"16426:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1426,"mutability":"mutable","name":"py","nameLocation":"16450:2:16","nodeType":"VariableDeclaration","scope":1575,"src":"16442:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1425,"name":"uint256","nodeType":"ElementaryTypeName","src":"16442:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1428,"mutability":"mutable","name":"qx","nameLocation":"16466:2:16","nodeType":"VariableDeclaration","scope":1575,"src":"16458:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1427,"name":"uint256","nodeType":"ElementaryTypeName","src":"16458:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1430,"mutability":"mutable","name":"qy","nameLocation":"16482:2:16","nodeType":"VariableDeclaration","scope":1575,"src":"16474:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1429,"name":"uint256","nodeType":"ElementaryTypeName","src":"16474:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16420:68:16"},"returnParameters":{"id":1438,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1433,"mutability":"mutable","name":"sx","nameLocation":"16520:2:16","nodeType":"VariableDeclaration","scope":1575,"src":"16512:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1432,"name":"uint256","nodeType":"ElementaryTypeName","src":"16512:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1435,"mutability":"mutable","name":"sy","nameLocation":"16532:2:16","nodeType":"VariableDeclaration","scope":1575,"src":"16524:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1434,"name":"uint256","nodeType":"ElementaryTypeName","src":"16524:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1437,"mutability":"mutable","name":"sz","nameLocation":"16544:2:16","nodeType":"VariableDeclaration","scope":1575,"src":"16536:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1436,"name":"uint256","nodeType":"ElementaryTypeName","src":"16536:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16511:36:16"},"scope":2035,"src":"16396:2110:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1644,"nodeType":"Block","src":"18912:389:16","statements":[{"assignments":[1593],"declarations":[{"constant":false,"id":1593,"mutability":"mutable","name":"x","nameLocation":"18926:1:16","nodeType":"VariableDeclaration","scope":1644,"src":"18918:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1592,"name":"uint256","nodeType":"ElementaryTypeName","src":"18918:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1594,"nodeType":"VariableDeclarationStatement","src":"18918:9:16"},{"assignments":[1596],"declarations":[{"constant":false,"id":1596,"mutability":"mutable","name":"y","nameLocation":"18941:1:16","nodeType":"VariableDeclaration","scope":1644,"src":"18933:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1595,"name":"uint256","nodeType":"ElementaryTypeName","src":"18933:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1597,"nodeType":"VariableDeclarationStatement","src":"18933:9:16"},{"assignments":[1599],"declarations":[{"constant":false,"id":1599,"mutability":"mutable","name":"z","nameLocation":"18956:1:16","nodeType":"VariableDeclaration","scope":1644,"src":"18948:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1598,"name":"uint256","nodeType":"ElementaryTypeName","src":"18948:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1600,"nodeType":"VariableDeclarationStatement","src":"18948:9:16"},{"expression":{"id":1619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":1601,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1593,"src":"18964:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1602,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1596,"src":"18967:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1603,"name":"z","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1599,"src":"18970:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1604,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"18963:9:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"baseExpression":{"id":1606,"name":"p1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1579,"src":"18991:2:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},"id":1608,"indexExpression":{"hexValue":"30","id":1607,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18994:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"18991:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":1609,"name":"p1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1579,"src":"18998:2:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},"id":1611,"indexExpression":{"hexValue":"31","id":1610,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19001:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"18998:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":1612,"name":"p2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1583,"src":"19005:2:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},"id":1614,"indexExpression":{"hexValue":"30","id":1613,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19008:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19005:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":1615,"name":"p2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1583,"src":"19012:2:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},"id":1617,"indexExpression":{"hexValue":"31","id":1616,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19015:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19012:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1605,"name":"projectiveECAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1575,"src":"18975:15:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256,uint256,uint256) pure returns (uint256,uint256,uint256)"}},"id":1618,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18975:43:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256,uint256)"}},"src":"18963:55:16","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1620,"nodeType":"ExpressionStatement","src":"18963:55:16"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1623,"name":"z","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1599,"src":"19039:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1624,"name":"invZ","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1585,"src":"19042:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1625,"name":"FIELD_SIZE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":946,"src":"19048:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1622,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"19032:6:16","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":1626,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19032:27:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":1627,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19063:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"19032:32:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"696e765a206d75737420626520696e7665727365206f66207a","id":1629,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"19066:27:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_95046d93d9b2e6ba778cd180e8c682e7d907547386cb54bf80bca322c50144ca","typeString":"literal_string \"invZ must be inverse of z\""},"value":"invZ must be inverse of z"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_95046d93d9b2e6ba778cd180e8c682e7d907547386cb54bf80bca322c50144ca","typeString":"literal_string \"invZ must be inverse of z\""}],"id":1621,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"19024:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1630,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19024:70:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1631,"nodeType":"ExpressionStatement","src":"19024:70:16"},{"expression":{"components":[{"arguments":[{"id":1633,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1593,"src":"19246:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1634,"name":"invZ","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1585,"src":"19249:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1635,"name":"FIELD_SIZE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":946,"src":"19255:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1632,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"19239:6:16","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":1636,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19239:27:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":1638,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1596,"src":"19275:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1639,"name":"invZ","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1585,"src":"19278:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1640,"name":"FIELD_SIZE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":946,"src":"19284:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1637,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"19268:6:16","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":1641,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19268:27:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1642,"isConstant":false,"isInlineArray":true,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"19238:58:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},"functionReturnParameters":1591,"id":1643,"nodeType":"Return","src":"19231:65:16"}]},"id":1645,"implemented":true,"kind":"function","modifiers":[],"name":"affineECAdd","nameLocation":"18784:11:16","nodeType":"FunctionDefinition","parameters":{"id":1586,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1579,"mutability":"mutable","name":"p1","nameLocation":"18819:2:16","nodeType":"VariableDeclaration","scope":1645,"src":"18801:20:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2]"},"typeName":{"baseType":{"id":1576,"name":"uint256","nodeType":"ElementaryTypeName","src":"18801:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1578,"length":{"hexValue":"32","id":1577,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18809:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"18801:10:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_storage_ptr","typeString":"uint256[2]"}},"visibility":"internal"},{"constant":false,"id":1583,"mutability":"mutable","name":"p2","nameLocation":"18845:2:16","nodeType":"VariableDeclaration","scope":1645,"src":"18827:20:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2]"},"typeName":{"baseType":{"id":1580,"name":"uint256","nodeType":"ElementaryTypeName","src":"18827:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1582,"length":{"hexValue":"32","id":1581,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18835:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"18827:10:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_storage_ptr","typeString":"uint256[2]"}},"visibility":"internal"},{"constant":false,"id":1585,"mutability":"mutable","name":"invZ","nameLocation":"18861:4:16","nodeType":"VariableDeclaration","scope":1645,"src":"18853:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1584,"name":"uint256","nodeType":"ElementaryTypeName","src":"18853:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18795:74:16"},"returnParameters":{"id":1591,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1590,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1645,"src":"18893:17:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2]"},"typeName":{"baseType":{"id":1587,"name":"uint256","nodeType":"ElementaryTypeName","src":"18893:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1589,"length":{"hexValue":"32","id":1588,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18901:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"18893:10:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_storage_ptr","typeString":"uint256[2]"}},"visibility":"internal"}],"src":"18892:19:16"},"scope":2035,"src":"18775:526:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1731,"nodeType":"Block","src":"19577:1003:16","statements":[{"id":1730,"nodeType":"UncheckedBlock","src":"19647:929:16","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1661,"name":"lcWitness","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1655,"src":"19673:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1664,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19694:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1663,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19686:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1662,"name":"address","nodeType":"ElementaryTypeName","src":"19686:7:16","typeDescriptions":{}}},"id":1665,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19686:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"19673:23:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"626164207769746e657373","id":1667,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"19698:13:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_7fcbfa9df9f83be5218dd62480bcb5cdae56a970e549b88ff2403f5fcded9211","typeString":"literal_string \"bad witness\""},"value":"bad witness"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7fcbfa9df9f83be5218dd62480bcb5cdae56a970e549b88ff2403f5fcded9211","typeString":"literal_string \"bad witness\""}],"id":1660,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"19665:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1668,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19665:47:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1669,"nodeType":"ExpressionStatement","src":"19665:47:16"},{"assignments":[1671],"declarations":[{"constant":false,"id":1671,"mutability":"mutable","name":"v","nameLocation":"19726:1:16","nodeType":"VariableDeclaration","scope":1730,"src":"19720:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1670,"name":"uint8","nodeType":"ElementaryTypeName","src":"19720:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":1683,"initialValue":{"condition":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":1672,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1651,"src":"19731:1:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},"id":1674,"indexExpression":{"hexValue":"31","id":1673,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19733:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19731:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":1675,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19738:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"19731:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1677,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19743:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"19731:13:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1679,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"19730:15:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"3238","id":1681,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19753:2:16","typeDescriptions":{"typeIdentifier":"t_rational_28_by_1","typeString":"int_const 28"},"value":"28"},"id":1682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"19730:25:16","trueExpression":{"hexValue":"3237","id":1680,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19748:2:16","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"27"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"19720:35:16"},{"assignments":[1685],"declarations":[{"constant":false,"id":1685,"mutability":"mutable","name":"pseudoHash","nameLocation":"19887:10:16","nodeType":"VariableDeclaration","scope":1730,"src":"19879:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1684,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19879:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1698,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1688,"name":"GROUP_ORDER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":943,"src":"19908:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"baseExpression":{"id":1690,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1651,"src":"19929:1:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},"id":1692,"indexExpression":{"hexValue":"30","id":1691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19931:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19929:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1693,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1653,"src":"19935:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1694,"name":"GROUP_ORDER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":943,"src":"19938:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1689,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"19922:6:16","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":1695,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19922:28:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"19908:42:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1687,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19900:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1686,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19900:7:16","typeDescriptions":{}}},"id":1697,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19900:51:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"19879:72:16"},{"assignments":[1700],"declarations":[{"constant":false,"id":1700,"mutability":"mutable","name":"pseudoSignature","nameLocation":"19978:15:16","nodeType":"VariableDeclaration","scope":1730,"src":"19970:23:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1699,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19970:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1711,"initialValue":{"arguments":[{"arguments":[{"id":1704,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1647,"src":"20011:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":1705,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1651,"src":"20014:1:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},"id":1707,"indexExpression":{"hexValue":"30","id":1706,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20016:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20014:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1708,"name":"GROUP_ORDER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":943,"src":"20020:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1703,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"20004:6:16","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":1709,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20004:28:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1702,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19996:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1701,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19996:7:16","typeDescriptions":{}}},"id":1710,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19996:37:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"19970:63:16"},{"assignments":[1713],"declarations":[{"constant":false,"id":1713,"mutability":"mutable","name":"computed","nameLocation":"20466:8:16","nodeType":"VariableDeclaration","scope":1730,"src":"20458:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1712,"name":"address","nodeType":"ElementaryTypeName","src":"20458:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1725,"initialValue":{"arguments":[{"id":1715,"name":"pseudoHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1685,"src":"20487:10:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1716,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1671,"src":"20499:1:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"arguments":[{"baseExpression":{"id":1719,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1651,"src":"20510:1:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},"id":1721,"indexExpression":{"hexValue":"30","id":1720,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20512:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20510:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1718,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20502:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1717,"name":"bytes32","nodeType":"ElementaryTypeName","src":"20502:7:16","typeDescriptions":{}}},"id":1722,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20502:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1723,"name":"pseudoSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1700,"src":"20517:15:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1714,"name":"ecrecover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-6,"src":"20477:9:16","typeDescriptions":{"typeIdentifier":"t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":1724,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20477:56:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"20458:75:16"},{"expression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1726,"name":"computed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1713,"src":"20548:8:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1727,"name":"lcWitness","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1655,"src":"20560:9:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"20548:21:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1659,"id":1729,"nodeType":"Return","src":"20541:28:16"}]}]},"id":1732,"implemented":true,"kind":"function","modifiers":[],"name":"verifyLinearCombinationWithGenerator","nameLocation":"19429:36:16","nodeType":"FunctionDefinition","parameters":{"id":1656,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1647,"mutability":"mutable","name":"c","nameLocation":"19479:1:16","nodeType":"VariableDeclaration","scope":1732,"src":"19471:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1646,"name":"uint256","nodeType":"ElementaryTypeName","src":"19471:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1651,"mutability":"mutable","name":"p","nameLocation":"19504:1:16","nodeType":"VariableDeclaration","scope":1732,"src":"19486:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2]"},"typeName":{"baseType":{"id":1648,"name":"uint256","nodeType":"ElementaryTypeName","src":"19486:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1650,"length":{"hexValue":"32","id":1649,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19494:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"19486:10:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_storage_ptr","typeString":"uint256[2]"}},"visibility":"internal"},{"constant":false,"id":1653,"mutability":"mutable","name":"s","nameLocation":"19519:1:16","nodeType":"VariableDeclaration","scope":1732,"src":"19511:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1652,"name":"uint256","nodeType":"ElementaryTypeName","src":"19511:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1655,"mutability":"mutable","name":"lcWitness","nameLocation":"19534:9:16","nodeType":"VariableDeclaration","scope":1732,"src":"19526:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1654,"name":"address","nodeType":"ElementaryTypeName","src":"19526:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"19465:82:16"},"returnParameters":{"id":1659,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1658,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1732,"src":"19571:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1657,"name":"bool","nodeType":"ElementaryTypeName","src":"19571:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"19570:6:16"},"scope":2035,"src":"19420:1160:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1803,"nodeType":"Block","src":"21304:394:16","statements":[{"id":1802,"nodeType":"UncheckedBlock","src":"21310:384:16","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":1762,"name":"cp1Witness","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1742,"src":"21390:10:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},"id":1764,"indexExpression":{"hexValue":"30","id":1763,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21401:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"21390:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":1765,"name":"FIELD_SIZE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":946,"src":"21406:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"21390:26:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1767,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"21389:28:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":1768,"name":"sp2Witness","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1752,"src":"21422:10:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},"id":1770,"indexExpression":{"hexValue":"30","id":1769,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21433:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"21422:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":1771,"name":"FIELD_SIZE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":946,"src":"21438:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"21422:26:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1773,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"21421:28:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"21389:60:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"706f696e747320696e2073756d206d7573742062652064697374696e6374","id":1775,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"21451:32:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_2ce93c410880bb13bca91831655ee36bc7ab052e7c8cb24dd914165b1030eeca","typeString":"literal_string \"points in sum must be distinct\""},"value":"points in sum must be distinct"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2ce93c410880bb13bca91831655ee36bc7ab052e7c8cb24dd914165b1030eeca","typeString":"literal_string \"points in sum must be distinct\""}],"id":1761,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"21381:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1776,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21381:103:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1777,"nodeType":"ExpressionStatement","src":"21381:103:16"},{"expression":{"arguments":[{"arguments":[{"id":1780,"name":"p1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1738,"src":"21512:2:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},{"id":1781,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1734,"src":"21516:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1782,"name":"cp1Witness","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1742,"src":"21519:10:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}],"id":1779,"name":"ecmulVerify","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1338,"src":"21500:11:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$2_memory_ptr_$_t_uint256_$_t_array$_t_uint256_$2_memory_ptr_$returns$_t_bool_$","typeString":"function (uint256[2] memory,uint256,uint256[2] memory) pure returns (bool)"}},"id":1783,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21500:30:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4669727374206d756c20636865636b206661696c6564","id":1784,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"21532:24:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_d9cf4c09fcc6ead19e539ee3210816df98f1219b8b47e830620ffd543bfea51f","typeString":"literal_string \"First mul check failed\""},"value":"First mul check failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d9cf4c09fcc6ead19e539ee3210816df98f1219b8b47e830620ffd543bfea51f","typeString":"literal_string \"First mul check failed\""}],"id":1778,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"21492:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1785,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21492:65:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1786,"nodeType":"ExpressionStatement","src":"21492:65:16"},{"expression":{"arguments":[{"arguments":[{"id":1789,"name":"p2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1748,"src":"21585:2:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},{"id":1790,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1744,"src":"21589:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1791,"name":"sp2Witness","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1752,"src":"21592:10:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}],"id":1788,"name":"ecmulVerify","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1338,"src":"21573:11:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$2_memory_ptr_$_t_uint256_$_t_array$_t_uint256_$2_memory_ptr_$returns$_t_bool_$","typeString":"function (uint256[2] memory,uint256,uint256[2] memory) pure returns (bool)"}},"id":1792,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21573:30:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5365636f6e64206d756c20636865636b206661696c6564","id":1793,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"21605:25:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_13447e9fa8630e4bb2fa50f1493aa790167933f55263568ac4ad74cb4d138234","typeString":"literal_string \"Second mul check failed\""},"value":"Second mul check failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_13447e9fa8630e4bb2fa50f1493aa790167933f55263568ac4ad74cb4d138234","typeString":"literal_string \"Second mul check failed\""}],"id":1787,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"21565:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1794,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21565:66:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1795,"nodeType":"ExpressionStatement","src":"21565:66:16"},{"expression":{"arguments":[{"id":1797,"name":"cp1Witness","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1742,"src":"21658:10:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},{"id":1798,"name":"sp2Witness","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1752,"src":"21670:10:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},{"id":1799,"name":"zInv","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1754,"src":"21682:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"},{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1796,"name":"affineECAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1645,"src":"21646:11:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$2_memory_ptr_$_t_array$_t_uint256_$2_memory_ptr_$_t_uint256_$returns$_t_array$_t_uint256_$2_memory_ptr_$","typeString":"function (uint256[2] memory,uint256[2] memory,uint256) pure returns (uint256[2] memory)"}},"id":1800,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21646:41:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},"functionReturnParameters":1760,"id":1801,"nodeType":"Return","src":"21639:48:16"}]}]},"id":1804,"implemented":true,"kind":"function","modifiers":[],"name":"linearCombination","nameLocation":"21072:17:16","nodeType":"FunctionDefinition","parameters":{"id":1755,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1734,"mutability":"mutable","name":"c","nameLocation":"21103:1:16","nodeType":"VariableDeclaration","scope":1804,"src":"21095:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1733,"name":"uint256","nodeType":"ElementaryTypeName","src":"21095:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1738,"mutability":"mutable","name":"p1","nameLocation":"21128:2:16","nodeType":"VariableDeclaration","scope":1804,"src":"21110:20:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2]"},"typeName":{"baseType":{"id":1735,"name":"uint256","nodeType":"ElementaryTypeName","src":"21110:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1737,"length":{"hexValue":"32","id":1736,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21118:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"21110:10:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_storage_ptr","typeString":"uint256[2]"}},"visibility":"internal"},{"constant":false,"id":1742,"mutability":"mutable","name":"cp1Witness","nameLocation":"21154:10:16","nodeType":"VariableDeclaration","scope":1804,"src":"21136:28:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2]"},"typeName":{"baseType":{"id":1739,"name":"uint256","nodeType":"ElementaryTypeName","src":"21136:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1741,"length":{"hexValue":"32","id":1740,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21144:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"21136:10:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_storage_ptr","typeString":"uint256[2]"}},"visibility":"internal"},{"constant":false,"id":1744,"mutability":"mutable","name":"s","nameLocation":"21178:1:16","nodeType":"VariableDeclaration","scope":1804,"src":"21170:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1743,"name":"uint256","nodeType":"ElementaryTypeName","src":"21170:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1748,"mutability":"mutable","name":"p2","nameLocation":"21203:2:16","nodeType":"VariableDeclaration","scope":1804,"src":"21185:20:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2]"},"typeName":{"baseType":{"id":1745,"name":"uint256","nodeType":"ElementaryTypeName","src":"21185:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1747,"length":{"hexValue":"32","id":1746,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21193:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"21185:10:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_storage_ptr","typeString":"uint256[2]"}},"visibility":"internal"},{"constant":false,"id":1752,"mutability":"mutable","name":"sp2Witness","nameLocation":"21229:10:16","nodeType":"VariableDeclaration","scope":1804,"src":"21211:28:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2]"},"typeName":{"baseType":{"id":1749,"name":"uint256","nodeType":"ElementaryTypeName","src":"21211:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1751,"length":{"hexValue":"32","id":1750,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21219:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"21211:10:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_storage_ptr","typeString":"uint256[2]"}},"visibility":"internal"},{"constant":false,"id":1754,"mutability":"mutable","name":"zInv","nameLocation":"21253:4:16","nodeType":"VariableDeclaration","scope":1804,"src":"21245:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1753,"name":"uint256","nodeType":"ElementaryTypeName","src":"21245:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"21089:172:16"},"returnParameters":{"id":1760,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1759,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1804,"src":"21285:17:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2]"},"typeName":{"baseType":{"id":1756,"name":"uint256","nodeType":"ElementaryTypeName","src":"21285:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1758,"length":{"hexValue":"32","id":1757,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21293:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"21285:10:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_storage_ptr","typeString":"uint256[2]"}},"visibility":"internal"}],"src":"21284:19:16"},"scope":2035,"src":"21063:635:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"constant":true,"id":1807,"mutability":"constant","name":"SCALAR_FROM_CURVE_POINTS_HASH_PREFIX","nameLocation":"21856:36:16","nodeType":"VariableDeclaration","scope":2035,"src":"21830:66:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1805,"name":"uint256","nodeType":"ElementaryTypeName","src":"21830:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":1806,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21895:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"internal"},{"body":{"id":1845,"nodeType":"Block","src":"22813:122:16","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":1835,"name":"SCALAR_FROM_CURVE_POINTS_HASH_PREFIX","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1807,"src":"22861:36:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1836,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1811,"src":"22899:4:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},{"id":1837,"name":"pk","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1815,"src":"22905:2:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},{"id":1838,"name":"gamma","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1819,"src":"22909:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},{"id":1839,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1825,"src":"22916:1:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},{"id":1840,"name":"uWitness","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1821,"src":"22919:8:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"},{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"},{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"},{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1833,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"22844:3:16","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1834,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"22848:12:16","memberName":"encodePacked","nodeType":"MemberAccess","src":"22844:16:16","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1841,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22844:84:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1832,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"22834:9:16","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1842,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22834:95:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1831,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22826:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1830,"name":"uint256","nodeType":"ElementaryTypeName","src":"22826:7:16","typeDescriptions":{}}},"id":1843,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22826:104:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1829,"id":1844,"nodeType":"Return","src":"22819:111:16"}]},"id":1846,"implemented":true,"kind":"function","modifiers":[],"name":"scalarFromCurvePoints","nameLocation":"22623:21:16","nodeType":"FunctionDefinition","parameters":{"id":1826,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1811,"mutability":"mutable","name":"hash","nameLocation":"22668:4:16","nodeType":"VariableDeclaration","scope":1846,"src":"22650:22:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2]"},"typeName":{"baseType":{"id":1808,"name":"uint256","nodeType":"ElementaryTypeName","src":"22650:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1810,"length":{"hexValue":"32","id":1809,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22658:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"22650:10:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_storage_ptr","typeString":"uint256[2]"}},"visibility":"internal"},{"constant":false,"id":1815,"mutability":"mutable","name":"pk","nameLocation":"22696:2:16","nodeType":"VariableDeclaration","scope":1846,"src":"22678:20:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2]"},"typeName":{"baseType":{"id":1812,"name":"uint256","nodeType":"ElementaryTypeName","src":"22678:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1814,"length":{"hexValue":"32","id":1813,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22686:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"22678:10:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_storage_ptr","typeString":"uint256[2]"}},"visibility":"internal"},{"constant":false,"id":1819,"mutability":"mutable","name":"gamma","nameLocation":"22722:5:16","nodeType":"VariableDeclaration","scope":1846,"src":"22704:23:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2]"},"typeName":{"baseType":{"id":1816,"name":"uint256","nodeType":"ElementaryTypeName","src":"22704:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1818,"length":{"hexValue":"32","id":1817,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22712:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"22704:10:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_storage_ptr","typeString":"uint256[2]"}},"visibility":"internal"},{"constant":false,"id":1821,"mutability":"mutable","name":"uWitness","nameLocation":"22741:8:16","nodeType":"VariableDeclaration","scope":1846,"src":"22733:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1820,"name":"address","nodeType":"ElementaryTypeName","src":"22733:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1825,"mutability":"mutable","name":"v","nameLocation":"22773:1:16","nodeType":"VariableDeclaration","scope":1846,"src":"22755:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2]"},"typeName":{"baseType":{"id":1822,"name":"uint256","nodeType":"ElementaryTypeName","src":"22755:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1824,"length":{"hexValue":"32","id":1823,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22763:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"22755:10:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_storage_ptr","typeString":"uint256[2]"}},"visibility":"internal"}],"src":"22644:134:16"},"returnParameters":{"id":1829,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1828,"mutability":"mutable","name":"s","nameLocation":"22810:1:16","nodeType":"VariableDeclaration","scope":1846,"src":"22802:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1827,"name":"uint256","nodeType":"ElementaryTypeName","src":"22802:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"22801:11:16"},"scope":2035,"src":"22614:321:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1958,"nodeType":"Block","src":"23776:1273:16","statements":[{"id":1957,"nodeType":"UncheckedBlock","src":"23782:1263:16","statements":[{"expression":{"arguments":[{"arguments":[{"id":1877,"name":"pk","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1850,"src":"23818:2:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}],"id":1876,"name":"isOnCurve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1117,"src":"23808:9:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$2_memory_ptr_$returns$_t_bool_$","typeString":"function (uint256[2] memory) pure returns (bool)"}},"id":1878,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23808:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"7075626c6963206b6579206973206e6f74206f6e206375727665","id":1879,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"23823:28:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_ae4825d6ed8aab0513e68c27d2710aa68bcf110761c187d047951a5ec2580d8c","typeString":"literal_string \"public key is not on curve\""},"value":"public key is not on curve"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ae4825d6ed8aab0513e68c27d2710aa68bcf110761c187d047951a5ec2580d8c","typeString":"literal_string \"public key is not on curve\""}],"id":1875,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"23800:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1880,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23800:52:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1881,"nodeType":"ExpressionStatement","src":"23800:52:16"},{"expression":{"arguments":[{"arguments":[{"id":1884,"name":"gamma","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1854,"src":"23878:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}],"id":1883,"name":"isOnCurve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1117,"src":"23868:9:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$2_memory_ptr_$returns$_t_bool_$","typeString":"function (uint256[2] memory) pure returns (bool)"}},"id":1885,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23868:16:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"67616d6d61206973206e6f74206f6e206375727665","id":1886,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"23886:23:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_c6038a70864418dbffbd772a49c391c3536f6b633b3f2ccbcd6a6e15dbadd34c","typeString":"literal_string \"gamma is not on curve\""},"value":"gamma is not on curve"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c6038a70864418dbffbd772a49c391c3536f6b633b3f2ccbcd6a6e15dbadd34c","typeString":"literal_string \"gamma is not on curve\""}],"id":1882,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"23860:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1887,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23860:50:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1888,"nodeType":"ExpressionStatement","src":"23860:50:16"},{"expression":{"arguments":[{"arguments":[{"id":1891,"name":"cGammaWitness","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1866,"src":"23936:13:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}],"id":1890,"name":"isOnCurve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1117,"src":"23926:9:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$2_memory_ptr_$returns$_t_bool_$","typeString":"function (uint256[2] memory) pure returns (bool)"}},"id":1892,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23926:24:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"6347616d6d615769746e657373206973206e6f74206f6e206375727665","id":1893,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"23952:31:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_9f90959a5b25997fe56cdafc2f72d300e298468f5ac5e847db7890be22108d2b","typeString":"literal_string \"cGammaWitness is not on curve\""},"value":"cGammaWitness is not on curve"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9f90959a5b25997fe56cdafc2f72d300e298468f5ac5e847db7890be22108d2b","typeString":"literal_string \"cGammaWitness is not on curve\""}],"id":1889,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"23918:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1894,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23918:66:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1895,"nodeType":"ExpressionStatement","src":"23918:66:16"},{"expression":{"arguments":[{"arguments":[{"id":1898,"name":"sHashWitness","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1870,"src":"24010:12:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}],"id":1897,"name":"isOnCurve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1117,"src":"24000:9:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$2_memory_ptr_$returns$_t_bool_$","typeString":"function (uint256[2] memory) pure returns (bool)"}},"id":1899,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24000:23:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"73486173685769746e657373206973206e6f74206f6e206375727665","id":1900,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"24025:30:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_ff425c3ce65530e49c0c35a5fdd7a61b00545f1fcc6482c28903cdcf48ac624f","typeString":"literal_string \"sHashWitness is not on curve\""},"value":"sHashWitness is not on curve"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ff425c3ce65530e49c0c35a5fdd7a61b00545f1fcc6482c28903cdcf48ac624f","typeString":"literal_string \"sHashWitness is not on curve\""}],"id":1896,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"23992:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1901,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23992:64:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1902,"nodeType":"ExpressionStatement","src":"23992:64:16"},{"expression":{"arguments":[{"arguments":[{"id":1905,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1856,"src":"24487:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1906,"name":"pk","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1850,"src":"24490:2:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},{"id":1907,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1858,"src":"24494:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1908,"name":"uWitness","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1862,"src":"24497:8:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1904,"name":"verifyLinearCombinationWithGenerator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1732,"src":"24450:36:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_array$_t_uint256_$2_memory_ptr_$_t_uint256_$_t_address_$returns$_t_bool_$","typeString":"function (uint256,uint256[2] memory,uint256,address) pure returns (bool)"}},"id":1909,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24450:56:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"6164647228632a706b2b732a6729213d5f755769746e657373","id":1910,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"24508:27:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_897d9ab785e875f3b83c51a39f09c2f6a852e06c26e3faf90359e5ad589f8cf1","typeString":"literal_string \"addr(c*pk+s*g)!=_uWitness\""},"value":"addr(c*pk+s*g)!=_uWitness"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_897d9ab785e875f3b83c51a39f09c2f6a852e06c26e3faf90359e5ad589f8cf1","typeString":"literal_string \"addr(c*pk+s*g)!=_uWitness\""}],"id":1903,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"24442:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1911,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24442:94:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1912,"nodeType":"ExpressionStatement","src":"24442:94:16"},{"assignments":[1918],"declarations":[{"constant":false,"id":1918,"mutability":"mutable","name":"hash","nameLocation":"24649:4:16","nodeType":"VariableDeclaration","scope":1957,"src":"24631:22:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2]"},"typeName":{"baseType":{"id":1916,"name":"uint256","nodeType":"ElementaryTypeName","src":"24631:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1917,"length":{"hexValue":"32","id":1915,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24639:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"24631:10:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_storage_ptr","typeString":"uint256[2]"}},"visibility":"internal"}],"id":1923,"initialValue":{"arguments":[{"id":1920,"name":"pk","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1850,"src":"24668:2:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},{"id":1921,"name":"seed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1860,"src":"24672:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1919,"name":"hashToCurve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1246,"src":"24656:11:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_uint256_$2_memory_ptr_$_t_uint256_$returns$_t_array$_t_uint256_$2_memory_ptr_$","typeString":"function (uint256[2] memory,uint256) view returns (uint256[2] memory)"}},"id":1922,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24656:21:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},"nodeType":"VariableDeclarationStatement","src":"24631:46:16"},{"assignments":[1929],"declarations":[{"constant":false,"id":1929,"mutability":"mutable","name":"v","nameLocation":"24787:1:16","nodeType":"VariableDeclaration","scope":1957,"src":"24769:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2]"},"typeName":{"baseType":{"id":1927,"name":"uint256","nodeType":"ElementaryTypeName","src":"24769:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1928,"length":{"hexValue":"32","id":1926,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24777:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"24769:10:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_storage_ptr","typeString":"uint256[2]"}},"visibility":"internal"}],"id":1939,"initialValue":{"arguments":[{"id":1931,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1856,"src":"24809:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1932,"name":"gamma","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1854,"src":"24812:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},{"id":1933,"name":"cGammaWitness","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1866,"src":"24819:13:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},{"id":1934,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1858,"src":"24834:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1935,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1918,"src":"24837:4:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},{"id":1936,"name":"sHashWitness","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1870,"src":"24843:12:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},{"id":1937,"name":"zInv","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1872,"src":"24857:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"},{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"},{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1930,"name":"linearCombination","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1804,"src":"24791:17:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_array$_t_uint256_$2_memory_ptr_$_t_array$_t_uint256_$2_memory_ptr_$_t_uint256_$_t_array$_t_uint256_$2_memory_ptr_$_t_array$_t_uint256_$2_memory_ptr_$_t_uint256_$returns$_t_array$_t_uint256_$2_memory_ptr_$","typeString":"function (uint256,uint256[2] memory,uint256[2] memory,uint256,uint256[2] memory,uint256[2] memory,uint256) pure returns (uint256[2] memory)"}},"id":1938,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24791:71:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},"nodeType":"VariableDeclarationStatement","src":"24769:93:16"},{"assignments":[1941],"declarations":[{"constant":false,"id":1941,"mutability":"mutable","name":"derivedC","nameLocation":"24929:8:16","nodeType":"VariableDeclaration","scope":1957,"src":"24921:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1940,"name":"uint256","nodeType":"ElementaryTypeName","src":"24921:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1949,"initialValue":{"arguments":[{"id":1943,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1918,"src":"24962:4:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},{"id":1944,"name":"pk","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1850,"src":"24968:2:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},{"id":1945,"name":"gamma","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1854,"src":"24972:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},{"id":1946,"name":"uWitness","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1862,"src":"24979:8:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1947,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1929,"src":"24989:1:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"},{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"},{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}],"id":1942,"name":"scalarFromCurvePoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1846,"src":"24940:21:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$2_memory_ptr_$_t_array$_t_uint256_$2_memory_ptr_$_t_array$_t_uint256_$2_memory_ptr_$_t_address_$_t_array$_t_uint256_$2_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256[2] memory,uint256[2] memory,uint256[2] memory,address,uint256[2] memory) pure returns (uint256)"}},"id":1948,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24940:51:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"24921:70:16"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1951,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1856,"src":"25007:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1952,"name":"derivedC","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1941,"src":"25012:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25007:13:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"696e76616c69642070726f6f66","id":1954,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"25022:15:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_cfa179d50ad7851ac140a84fb212f48699dbd00170b3afe087b0d09f632d1624","typeString":"literal_string \"invalid proof\""},"value":"invalid proof"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cfa179d50ad7851ac140a84fb212f48699dbd00170b3afe087b0d09f632d1624","typeString":"literal_string \"invalid proof\""}],"id":1950,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"24999:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1955,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24999:39:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1956,"nodeType":"ExpressionStatement","src":"24999:39:16"}]}]},"id":1959,"implemented":true,"kind":"function","modifiers":[],"name":"verifyVRFProof","nameLocation":"23527:14:16","nodeType":"FunctionDefinition","parameters":{"id":1873,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1850,"mutability":"mutable","name":"pk","nameLocation":"23565:2:16","nodeType":"VariableDeclaration","scope":1959,"src":"23547:20:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2]"},"typeName":{"baseType":{"id":1847,"name":"uint256","nodeType":"ElementaryTypeName","src":"23547:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1849,"length":{"hexValue":"32","id":1848,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23555:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"23547:10:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_storage_ptr","typeString":"uint256[2]"}},"visibility":"internal"},{"constant":false,"id":1854,"mutability":"mutable","name":"gamma","nameLocation":"23591:5:16","nodeType":"VariableDeclaration","scope":1959,"src":"23573:23:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2]"},"typeName":{"baseType":{"id":1851,"name":"uint256","nodeType":"ElementaryTypeName","src":"23573:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1853,"length":{"hexValue":"32","id":1852,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23581:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"23573:10:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_storage_ptr","typeString":"uint256[2]"}},"visibility":"internal"},{"constant":false,"id":1856,"mutability":"mutable","name":"c","nameLocation":"23610:1:16","nodeType":"VariableDeclaration","scope":1959,"src":"23602:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1855,"name":"uint256","nodeType":"ElementaryTypeName","src":"23602:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1858,"mutability":"mutable","name":"s","nameLocation":"23625:1:16","nodeType":"VariableDeclaration","scope":1959,"src":"23617:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1857,"name":"uint256","nodeType":"ElementaryTypeName","src":"23617:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1860,"mutability":"mutable","name":"seed","nameLocation":"23640:4:16","nodeType":"VariableDeclaration","scope":1959,"src":"23632:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1859,"name":"uint256","nodeType":"ElementaryTypeName","src":"23632:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1862,"mutability":"mutable","name":"uWitness","nameLocation":"23658:8:16","nodeType":"VariableDeclaration","scope":1959,"src":"23650:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1861,"name":"address","nodeType":"ElementaryTypeName","src":"23650:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1866,"mutability":"mutable","name":"cGammaWitness","nameLocation":"23690:13:16","nodeType":"VariableDeclaration","scope":1959,"src":"23672:31:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2]"},"typeName":{"baseType":{"id":1863,"name":"uint256","nodeType":"ElementaryTypeName","src":"23672:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1865,"length":{"hexValue":"32","id":1864,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23680:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"23672:10:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_storage_ptr","typeString":"uint256[2]"}},"visibility":"internal"},{"constant":false,"id":1870,"mutability":"mutable","name":"sHashWitness","nameLocation":"23727:12:16","nodeType":"VariableDeclaration","scope":1959,"src":"23709:30:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2]"},"typeName":{"baseType":{"id":1867,"name":"uint256","nodeType":"ElementaryTypeName","src":"23709:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1869,"length":{"hexValue":"32","id":1868,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23717:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"23709:10:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_storage_ptr","typeString":"uint256[2]"}},"visibility":"internal"},{"constant":false,"id":1872,"mutability":"mutable","name":"zInv","nameLocation":"23753:4:16","nodeType":"VariableDeclaration","scope":1959,"src":"23745:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1871,"name":"uint256","nodeType":"ElementaryTypeName","src":"23745:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23541:220:16"},"returnParameters":{"id":1874,"nodeType":"ParameterList","parameters":[],"src":"23776:0:16"},"scope":2035,"src":"23518:1531:16","stateMutability":"view","virtual":false,"visibility":"internal"},{"constant":true,"id":1962,"mutability":"constant","name":"VRF_RANDOM_OUTPUT_HASH_PREFIX","nameLocation":"25205:29:16","nodeType":"VariableDeclaration","scope":2035,"src":"25179:59:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1960,"name":"uint256","nodeType":"ElementaryTypeName","src":"25179:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"33","id":1961,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25237:1:16","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"visibility":"internal"},{"canonicalName":"VRF.Proof","id":1989,"members":[{"constant":false,"id":1966,"mutability":"mutable","name":"pk","nameLocation":"25273:2:16","nodeType":"VariableDeclaration","scope":1989,"src":"25262:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_storage_ptr","typeString":"uint256[2]"},"typeName":{"baseType":{"id":1963,"name":"uint256","nodeType":"ElementaryTypeName","src":"25262:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1965,"length":{"hexValue":"32","id":1964,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25270:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"25262:10:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_storage_ptr","typeString":"uint256[2]"}},"visibility":"internal"},{"constant":false,"id":1970,"mutability":"mutable","name":"gamma","nameLocation":"25292:5:16","nodeType":"VariableDeclaration","scope":1989,"src":"25281:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_storage_ptr","typeString":"uint256[2]"},"typeName":{"baseType":{"id":1967,"name":"uint256","nodeType":"ElementaryTypeName","src":"25281:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1969,"length":{"hexValue":"32","id":1968,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25289:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"25281:10:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_storage_ptr","typeString":"uint256[2]"}},"visibility":"internal"},{"constant":false,"id":1972,"mutability":"mutable","name":"c","nameLocation":"25311:1:16","nodeType":"VariableDeclaration","scope":1989,"src":"25303:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1971,"name":"uint256","nodeType":"ElementaryTypeName","src":"25303:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1974,"mutability":"mutable","name":"s","nameLocation":"25326:1:16","nodeType":"VariableDeclaration","scope":1989,"src":"25318:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1973,"name":"uint256","nodeType":"ElementaryTypeName","src":"25318:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1976,"mutability":"mutable","name":"seed","nameLocation":"25341:4:16","nodeType":"VariableDeclaration","scope":1989,"src":"25333:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1975,"name":"uint256","nodeType":"ElementaryTypeName","src":"25333:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1978,"mutability":"mutable","name":"uWitness","nameLocation":"25359:8:16","nodeType":"VariableDeclaration","scope":1989,"src":"25351:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1977,"name":"address","nodeType":"ElementaryTypeName","src":"25351:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1982,"mutability":"mutable","name":"cGammaWitness","nameLocation":"25384:13:16","nodeType":"VariableDeclaration","scope":1989,"src":"25373:24:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_storage_ptr","typeString":"uint256[2]"},"typeName":{"baseType":{"id":1979,"name":"uint256","nodeType":"ElementaryTypeName","src":"25373:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1981,"length":{"hexValue":"32","id":1980,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25381:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"25373:10:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_storage_ptr","typeString":"uint256[2]"}},"visibility":"internal"},{"constant":false,"id":1986,"mutability":"mutable","name":"sHashWitness","nameLocation":"25414:12:16","nodeType":"VariableDeclaration","scope":1989,"src":"25403:23:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_storage_ptr","typeString":"uint256[2]"},"typeName":{"baseType":{"id":1983,"name":"uint256","nodeType":"ElementaryTypeName","src":"25403:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1985,"length":{"hexValue":"32","id":1984,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25411:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"25403:10:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_storage_ptr","typeString":"uint256[2]"}},"visibility":"internal"},{"constant":false,"id":1988,"mutability":"mutable","name":"zInv","nameLocation":"25440:4:16","nodeType":"VariableDeclaration","scope":1989,"src":"25432:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1987,"name":"uint256","nodeType":"ElementaryTypeName","src":"25432:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Proof","nameLocation":"25250:5:16","nodeType":"StructDefinition","scope":2035,"src":"25243:206:16","visibility":"public"},{"body":{"id":2033,"nodeType":"Block","src":"26026:290:16","statements":[{"expression":{"arguments":[{"expression":{"id":2000,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1992,"src":"26054:5:16","typeDescriptions":{"typeIdentifier":"t_struct$_Proof_$1989_memory_ptr","typeString":"struct VRF.Proof memory"}},"id":2001,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"26060:2:16","memberName":"pk","nodeType":"MemberAccess","referencedDeclaration":1966,"src":"26054:8:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},{"expression":{"id":2002,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1992,"src":"26070:5:16","typeDescriptions":{"typeIdentifier":"t_struct$_Proof_$1989_memory_ptr","typeString":"struct VRF.Proof memory"}},"id":2003,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"26076:5:16","memberName":"gamma","nodeType":"MemberAccess","referencedDeclaration":1970,"src":"26070:11:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},{"expression":{"id":2004,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1992,"src":"26089:5:16","typeDescriptions":{"typeIdentifier":"t_struct$_Proof_$1989_memory_ptr","typeString":"struct VRF.Proof memory"}},"id":2005,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"26095:1:16","memberName":"c","nodeType":"MemberAccess","referencedDeclaration":1972,"src":"26089:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2006,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1992,"src":"26104:5:16","typeDescriptions":{"typeIdentifier":"t_struct$_Proof_$1989_memory_ptr","typeString":"struct VRF.Proof memory"}},"id":2007,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"26110:1:16","memberName":"s","nodeType":"MemberAccess","referencedDeclaration":1974,"src":"26104:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2008,"name":"seed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1994,"src":"26119:4:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2009,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1992,"src":"26131:5:16","typeDescriptions":{"typeIdentifier":"t_struct$_Proof_$1989_memory_ptr","typeString":"struct VRF.Proof memory"}},"id":2010,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"26137:8:16","memberName":"uWitness","nodeType":"MemberAccess","referencedDeclaration":1978,"src":"26131:14:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2011,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1992,"src":"26153:5:16","typeDescriptions":{"typeIdentifier":"t_struct$_Proof_$1989_memory_ptr","typeString":"struct VRF.Proof memory"}},"id":2012,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"26159:13:16","memberName":"cGammaWitness","nodeType":"MemberAccess","referencedDeclaration":1982,"src":"26153:19:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},{"expression":{"id":2013,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1992,"src":"26180:5:16","typeDescriptions":{"typeIdentifier":"t_struct$_Proof_$1989_memory_ptr","typeString":"struct VRF.Proof memory"}},"id":2014,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"26186:12:16","memberName":"sHashWitness","nodeType":"MemberAccess","referencedDeclaration":1986,"src":"26180:18:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}},{"expression":{"id":2015,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1992,"src":"26206:5:16","typeDescriptions":{"typeIdentifier":"t_struct$_Proof_$1989_memory_ptr","typeString":"struct VRF.Proof memory"}},"id":2016,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"26212:4:16","memberName":"zInv","nodeType":"MemberAccess","referencedDeclaration":1988,"src":"26206:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"},{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"},{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1999,"name":"verifyVRFProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1959,"src":"26032:14:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_array$_t_uint256_$2_memory_ptr_$_t_array$_t_uint256_$2_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$_t_array$_t_uint256_$2_memory_ptr_$_t_array$_t_uint256_$2_memory_ptr_$_t_uint256_$returns$__$","typeString":"function (uint256[2] memory,uint256[2] memory,uint256,uint256,uint256,address,uint256[2] memory,uint256[2] memory,uint256) view"}},"id":2017,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26032:190:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2018,"nodeType":"ExpressionStatement","src":"26032:190:16"},{"expression":{"id":2031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2019,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1997,"src":"26228:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"arguments":[{"id":2025,"name":"VRF_RANDOM_OUTPUT_HASH_PREFIX","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1962,"src":"26266:29:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2026,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1992,"src":"26297:5:16","typeDescriptions":{"typeIdentifier":"t_struct$_Proof_$1989_memory_ptr","typeString":"struct VRF.Proof memory"}},"id":2027,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"26303:5:16","memberName":"gamma","nodeType":"MemberAccess","referencedDeclaration":1970,"src":"26297:11:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}],"expression":{"id":2023,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"26255:3:16","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2024,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"26259:6:16","memberName":"encode","nodeType":"MemberAccess","src":"26255:10:16","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2028,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26255:54:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2022,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"26245:9:16","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2029,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26245:65:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2021,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26237:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2020,"name":"uint256","nodeType":"ElementaryTypeName","src":"26237:7:16","typeDescriptions":{}}},"id":2030,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26237:74:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26228:83:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2032,"nodeType":"ExpressionStatement","src":"26228:83:16"}]},"id":2034,"implemented":true,"kind":"function","modifiers":[],"name":"randomValueFromVRFProof","nameLocation":"25929:23:16","nodeType":"FunctionDefinition","parameters":{"id":1995,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1992,"mutability":"mutable","name":"proof","nameLocation":"25966:5:16","nodeType":"VariableDeclaration","scope":2034,"src":"25953:18:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Proof_$1989_memory_ptr","typeString":"struct VRF.Proof"},"typeName":{"id":1991,"nodeType":"UserDefinedTypeName","pathNode":{"id":1990,"name":"Proof","nameLocations":["25953:5:16"],"nodeType":"IdentifierPath","referencedDeclaration":1989,"src":"25953:5:16"},"referencedDeclaration":1989,"src":"25953:5:16","typeDescriptions":{"typeIdentifier":"t_struct$_Proof_$1989_storage_ptr","typeString":"struct VRF.Proof"}},"visibility":"internal"},{"constant":false,"id":1994,"mutability":"mutable","name":"seed","nameLocation":"25981:4:16","nodeType":"VariableDeclaration","scope":2034,"src":"25973:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1993,"name":"uint256","nodeType":"ElementaryTypeName","src":"25973:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25952:34:16"},"returnParameters":{"id":1998,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1997,"mutability":"mutable","name":"output","nameLocation":"26018:6:16","nodeType":"VariableDeclaration","scope":2034,"src":"26010:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1996,"name":"uint256","nodeType":"ElementaryTypeName","src":"26010:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26009:16:16"},"scope":2035,"src":"25920:396:16","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":2036,"src":"7170:19148:16","usedErrors":[],"usedEvents":[]}],"src":"32:26287:16"},"id":16},"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol","exportedSymbols":{"VRFConsumerBaseV2":[2093]},"id":2094,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2037,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"32:23:17"},{"abstract":true,"baseContracts":[],"canonicalName":"VRFConsumerBaseV2","contractDependencies":[],"contractKind":"contract","documentation":{"id":2038,"nodeType":"StructuredDocumentation","src":"57:5275:17","text":"****************************************************************************\n @notice Interface for contracts using VRF randomness\n *****************************************************************************\n @dev PURPOSE\n @dev Reggie the Random Oracle (not his real job) wants to provide randomness\n @dev to Vera the verifier in such a way that Vera can be sure he's not\n @dev making his output up to suit himself. Reggie provides Vera a public key\n @dev to which he knows the secret key. Each time Vera provides a seed to\n @dev Reggie, he gives back a value which is computed completely\n @dev deterministically from the seed and the secret key.\n @dev Reggie provides a proof by which Vera can verify that the output was\n @dev correctly computed once Reggie tells it to her, but without that proof,\n @dev the output is indistinguishable to her from a uniform random sample\n @dev from the output space.\n @dev The purpose of this contract is to make it easy for unrelated contracts\n @dev to talk to Vera the verifier about the work Reggie is doing, to provide\n @dev simple access to a verifiable source of randomness. It ensures 2 things:\n @dev 1. The fulfillment came from the VRFCoordinator\n @dev 2. The consumer contract implements fulfillRandomWords.\n *****************************************************************************\n @dev USAGE\n @dev Calling contracts must inherit from VRFConsumerBase, and can\n @dev initialize VRFConsumerBase's attributes in their constructor as\n @dev shown:\n @dev   contract VRFConsumer {\n @dev     constructor(<other arguments>, address _vrfCoordinator, address _link)\n @dev       VRFConsumerBase(_vrfCoordinator) public {\n @dev         <initialization with other arguments goes here>\n @dev       }\n @dev   }\n @dev The oracle will have given you an ID for the VRF keypair they have\n @dev committed to (let's call it keyHash). Create subscription, fund it\n @dev and your consumer contract as a consumer of it (see VRFCoordinatorInterface\n @dev subscription management functions).\n @dev Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,\n @dev callbackGasLimit, numWords),\n @dev see (VRFCoordinatorInterface for a description of the arguments).\n @dev Once the VRFCoordinator has received and validated the oracle's response\n @dev to your request, it will call your contract's fulfillRandomWords method.\n @dev The randomness argument to fulfillRandomWords is a set of random words\n @dev generated from your requestId and the blockHash of the request.\n @dev If your contract could have concurrent requests open, you can use the\n @dev requestId returned from requestRandomWords to track which response is associated\n @dev with which randomness request.\n @dev See \"SECURITY CONSIDERATIONS\" for principles to keep in mind,\n @dev if your contract could have multiple requests in flight simultaneously.\n @dev Colliding `requestId`s are cryptographically impossible as long as seeds\n @dev differ.\n *****************************************************************************\n @dev SECURITY CONSIDERATIONS\n @dev A method with the ability to call your fulfillRandomness method directly\n @dev could spoof a VRF response with any random value, so it's critical that\n @dev it cannot be directly called by anything other than this base contract\n @dev (specifically, by the VRFConsumerBase.rawFulfillRandomness method).\n @dev For your users to trust that your contract's random behavior is free\n @dev from malicious interference, it's best if you can write it so that all\n @dev behaviors implied by a VRF response are executed *during* your\n @dev fulfillRandomness method. If your contract must store the response (or\n @dev anything derived from it) and use it later, you must ensure that any\n @dev user-significant behavior which depends on that stored value cannot be\n @dev manipulated by a subsequent VRF request.\n @dev Similarly, both miners and the VRF oracle itself have some influence\n @dev over the order in which VRF responses appear on the blockchain, so if\n @dev your contract could have multiple VRF requests in flight simultaneously,\n @dev you must ensure that the order in which the VRF responses arrive cannot\n @dev be used to manipulate your contract's user-significant behavior.\n @dev Since the block hash of the block which contains the requestRandomness\n @dev call is mixed into the input to the VRF *last*, a sufficiently powerful\n @dev miner could, in principle, fork the blockchain to evict the block\n @dev containing the request, forcing the request to be included in a\n @dev different block with a different hash, and therefore a different input\n @dev to the VRF. However, such an attack would incur a substantial economic\n @dev cost. This cost scales with the number of blocks the VRF oracle waits\n @dev until it calls responds to a request. It is for this reason that\n @dev that you can signal to an oracle you'd like them to wait longer before\n @dev responding to the request (however this is not enforced in the contract\n @dev and so remains effective only in the case of unmodified oracle software)."},"fullyImplemented":false,"id":2093,"linearizedBaseContracts":[2093],"name":"VRFConsumerBaseV2","nameLocation":"5351:17:17","nodeType":"ContractDefinition","nodes":[{"errorSelector":"1cf993f4","id":2044,"name":"OnlyCoordinatorCanFulfill","nameLocation":"5379:25:17","nodeType":"ErrorDefinition","parameters":{"id":2043,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2040,"mutability":"mutable","name":"have","nameLocation":"5413:4:17","nodeType":"VariableDeclaration","scope":2044,"src":"5405:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2039,"name":"address","nodeType":"ElementaryTypeName","src":"5405:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2042,"mutability":"mutable","name":"want","nameLocation":"5427:4:17","nodeType":"VariableDeclaration","scope":2044,"src":"5419:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2041,"name":"address","nodeType":"ElementaryTypeName","src":"5419:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5404:28:17"},"src":"5373:60:17"},{"constant":false,"id":2046,"mutability":"immutable","name":"vrfCoordinator","nameLocation":"5462:14:17","nodeType":"VariableDeclaration","scope":2093,"src":"5436:40:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2045,"name":"address","nodeType":"ElementaryTypeName","src":"5436:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"body":{"id":2056,"nodeType":"Block","src":"5593:43:17","statements":[{"expression":{"id":2054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2052,"name":"vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2046,"src":"5599:14:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2053,"name":"_vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2049,"src":"5616:15:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5599:32:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2055,"nodeType":"ExpressionStatement","src":"5599:32:17"}]},"documentation":{"id":2047,"nodeType":"StructuredDocumentation","src":"5481:72:17","text":" @param _vrfCoordinator address of VRFCoordinator contract"},"id":2057,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2050,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2049,"mutability":"mutable","name":"_vrfCoordinator","nameLocation":"5576:15:17","nodeType":"VariableDeclaration","scope":2057,"src":"5568:23:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2048,"name":"address","nodeType":"ElementaryTypeName","src":"5568:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5567:25:17"},"returnParameters":{"id":2051,"nodeType":"ParameterList","parameters":[],"src":"5593:0:17"},"scope":2093,"src":"5556:80:17","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"documentation":{"id":2058,"nodeType":"StructuredDocumentation","src":"5640:686:17","text":" @notice fulfillRandomness handles the VRF response. Your contract must\n @notice implement it. See \"SECURITY CONSIDERATIONS\" above for important\n @notice principles to keep in mind when implementing your fulfillRandomness\n @notice method.\n @dev VRFConsumerBaseV2 expects its subcontracts to have a method with this\n @dev signature, and will call it once it has verified the proof\n @dev associated with the randomness. (It is triggered via a call to\n @dev rawFulfillRandomness, below.)\n @param requestId The Id initially returned by requestRandomness\n @param randomWords the VRF output expanded to the requested number of words"},"id":2066,"implemented":false,"kind":"function","modifiers":[],"name":"fulfillRandomWords","nameLocation":"6338:18:17","nodeType":"FunctionDefinition","parameters":{"id":2064,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2060,"mutability":"mutable","name":"requestId","nameLocation":"6365:9:17","nodeType":"VariableDeclaration","scope":2066,"src":"6357:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2059,"name":"uint256","nodeType":"ElementaryTypeName","src":"6357:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2063,"mutability":"mutable","name":"randomWords","nameLocation":"6393:11:17","nodeType":"VariableDeclaration","scope":2066,"src":"6376:28:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2061,"name":"uint256","nodeType":"ElementaryTypeName","src":"6376:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2062,"nodeType":"ArrayTypeName","src":"6376:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"6356:49:17"},"returnParameters":{"id":2065,"nodeType":"ParameterList","parameters":[],"src":"6422:0:17"},"scope":2093,"src":"6329:94:17","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2091,"nodeType":"Block","src":"6707:167:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2074,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6717:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6721:6:17","memberName":"sender","nodeType":"MemberAccess","src":"6717:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2076,"name":"vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2046,"src":"6731:14:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6717:28:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2085,"nodeType":"IfStatement","src":"6713:109:17","trueBody":{"id":2084,"nodeType":"Block","src":"6747:75:17","statements":[{"errorCall":{"arguments":[{"expression":{"id":2079,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6788:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6792:6:17","memberName":"sender","nodeType":"MemberAccess","src":"6788:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2081,"name":"vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2046,"src":"6800:14:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2078,"name":"OnlyCoordinatorCanFulfill","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2044,"src":"6762:25:17","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_address_$returns$__$","typeString":"function (address,address) pure"}},"id":2082,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6762:53:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2083,"nodeType":"RevertStatement","src":"6755:60:17"}]}},{"expression":{"arguments":[{"id":2087,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2068,"src":"6846:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2088,"name":"randomWords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2071,"src":"6857:11:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":2086,"name":"fulfillRandomWords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2066,"src":"6827:18:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (uint256,uint256[] memory)"}},"id":2089,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6827:42:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2090,"nodeType":"ExpressionStatement","src":"6827:42:17"}]},"functionSelector":"1fe543e3","id":2092,"implemented":true,"kind":"function","modifiers":[],"name":"rawFulfillRandomWords","nameLocation":"6627:21:17","nodeType":"FunctionDefinition","parameters":{"id":2072,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2068,"mutability":"mutable","name":"requestId","nameLocation":"6657:9:17","nodeType":"VariableDeclaration","scope":2092,"src":"6649:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2067,"name":"uint256","nodeType":"ElementaryTypeName","src":"6649:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2071,"mutability":"mutable","name":"randomWords","nameLocation":"6685:11:17","nodeType":"VariableDeclaration","scope":2092,"src":"6668:28:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2069,"name":"uint256","nodeType":"ElementaryTypeName","src":"6668:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2070,"nodeType":"ArrayTypeName","src":"6668:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"6648:49:17"},"returnParameters":{"id":2073,"nodeType":"ParameterList","parameters":[],"src":"6707:0:17"},"scope":2093,"src":"6618:256:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2094,"src":"5333:1543:17","usedErrors":[2044],"usedEvents":[]}],"src":"32:6845:17"},"id":17},"@chainlink/contracts/src/v0.8/vrf/VRFCoordinatorV2.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/vrf/VRFCoordinatorV2.sol","exportedSymbols":{"AggregatorV3Interface":[293],"ArbGasInfo":[791],"ArbSys":[937],"BlockhashStoreInterface":[303],"ChainSpecificUtil":[181],"ConfirmedOwner":[427],"ConfirmedOwnerWithProposal":[589],"IERC677Receiver":[601],"IOwnable":[617],"LinkTokenInterface":[712],"TypeAndVersionInterface":[311],"VRF":[2035],"VRFConsumerBaseV2":[2093],"VRFCoordinatorV2":[4400],"VRFCoordinatorV2Interface":[407]},"id":4401,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2095,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"32:23:18"},{"absolutePath":"@chainlink/contracts/src/v0.8/shared/interfaces/LinkTokenInterface.sol","file":"../shared/interfaces/LinkTokenInterface.sol","id":2096,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4401,"sourceUnit":713,"src":"57:53:18","symbolAliases":[],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/interfaces/BlockhashStoreInterface.sol","file":"../interfaces/BlockhashStoreInterface.sol","id":2097,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4401,"sourceUnit":304,"src":"111:51:18","symbolAliases":[],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol","file":"../interfaces/AggregatorV3Interface.sol","id":2098,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4401,"sourceUnit":294,"src":"163:49:18","symbolAliases":[],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol","file":"../interfaces/VRFCoordinatorV2Interface.sol","id":2099,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4401,"sourceUnit":408,"src":"213:53:18","symbolAliases":[],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/interfaces/TypeAndVersionInterface.sol","file":"../interfaces/TypeAndVersionInterface.sol","id":2100,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4401,"sourceUnit":312,"src":"267:51:18","symbolAliases":[],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/shared/interfaces/IERC677Receiver.sol","file":"../shared/interfaces/IERC677Receiver.sol","id":2101,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4401,"sourceUnit":602,"src":"319:50:18","symbolAliases":[],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/vrf/VRF.sol","file":"./VRF.sol","id":2102,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4401,"sourceUnit":2036,"src":"370:19:18","symbolAliases":[],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol","file":"../shared/access/ConfirmedOwner.sol","id":2103,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4401,"sourceUnit":428,"src":"390:45:18","symbolAliases":[],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol","file":"./VRFConsumerBaseV2.sol","id":2104,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4401,"sourceUnit":2094,"src":"436:33:18","symbolAliases":[],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/ChainSpecificUtil.sol","file":"../ChainSpecificUtil.sol","id":2105,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4401,"sourceUnit":182,"src":"470:34:18","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2106,"name":"VRF","nameLocations":["539:3:18"],"nodeType":"IdentifierPath","referencedDeclaration":2035,"src":"539:3:18"},"id":2107,"nodeType":"InheritanceSpecifier","src":"539:3:18"},{"baseName":{"id":2108,"name":"ConfirmedOwner","nameLocations":["548:14:18"],"nodeType":"IdentifierPath","referencedDeclaration":427,"src":"548:14:18"},"id":2109,"nodeType":"InheritanceSpecifier","src":"548:14:18"},{"baseName":{"id":2110,"name":"TypeAndVersionInterface","nameLocations":["568:23:18"],"nodeType":"IdentifierPath","referencedDeclaration":311,"src":"568:23:18"},"id":2111,"nodeType":"InheritanceSpecifier","src":"568:23:18"},{"baseName":{"id":2112,"name":"VRFCoordinatorV2Interface","nameLocations":["597:25:18"],"nodeType":"IdentifierPath","referencedDeclaration":407,"src":"597:25:18"},"id":2113,"nodeType":"InheritanceSpecifier","src":"597:25:18"},{"baseName":{"id":2114,"name":"IERC677Receiver","nameLocations":["628:15:18"],"nodeType":"IdentifierPath","referencedDeclaration":601,"src":"628:15:18"},"id":2115,"nodeType":"InheritanceSpecifier","src":"628:15:18"}],"canonicalName":"VRFCoordinatorV2","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":4400,"linearizedBaseContracts":[4400,601,407,311,427,589,617,2035],"name":"VRFCoordinatorV2","nameLocation":"515:16:18","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"1b6b6d23","id":2118,"mutability":"immutable","name":"LINK","nameLocation":"686:4:18","nodeType":"VariableDeclaration","scope":4400,"src":"650:40:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_LinkTokenInterface_$712","typeString":"contract LinkTokenInterface"},"typeName":{"id":2117,"nodeType":"UserDefinedTypeName","pathNode":{"id":2116,"name":"LinkTokenInterface","nameLocations":["650:18:18"],"nodeType":"IdentifierPath","referencedDeclaration":712,"src":"650:18:18"},"referencedDeclaration":712,"src":"650:18:18","typeDescriptions":{"typeIdentifier":"t_contract$_LinkTokenInterface_$712","typeString":"contract LinkTokenInterface"}},"visibility":"public"},{"constant":false,"functionSelector":"ad178361","id":2121,"mutability":"immutable","name":"LINK_ETH_FEED","nameLocation":"735:13:18","nodeType":"VariableDeclaration","scope":4400,"src":"696:52:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$293","typeString":"contract AggregatorV3Interface"},"typeName":{"id":2120,"nodeType":"UserDefinedTypeName","pathNode":{"id":2119,"name":"AggregatorV3Interface","nameLocations":["696:21:18"],"nodeType":"IdentifierPath","referencedDeclaration":293,"src":"696:21:18"},"referencedDeclaration":293,"src":"696:21:18","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$293","typeString":"contract AggregatorV3Interface"}},"visibility":"public"},{"constant":false,"functionSelector":"689c4517","id":2124,"mutability":"immutable","name":"BLOCKHASH_STORE","nameLocation":"795:15:18","nodeType":"VariableDeclaration","scope":4400,"src":"754:56:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_BlockhashStoreInterface_$303","typeString":"contract BlockhashStoreInterface"},"typeName":{"id":2123,"nodeType":"UserDefinedTypeName","pathNode":{"id":2122,"name":"BlockhashStoreInterface","nameLocations":["754:23:18"],"nodeType":"IdentifierPath","referencedDeclaration":303,"src":"754:23:18"},"referencedDeclaration":303,"src":"754:23:18","typeDescriptions":{"typeIdentifier":"t_contract$_BlockhashStoreInterface_$303","typeString":"contract BlockhashStoreInterface"}},"visibility":"public"},{"constant":true,"functionSelector":"64d51a2a","id":2127,"mutability":"constant","name":"MAX_CONSUMERS","nameLocation":"1047:13:18","nodeType":"VariableDeclaration","scope":4400,"src":"1024:42:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":2125,"name":"uint16","nodeType":"ElementaryTypeName","src":"1024:6:18","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"value":{"hexValue":"313030","id":2126,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1063:3:18","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"visibility":"public"},{"errorSelector":"05a48e0f","id":2129,"name":"TooManyConsumers","nameLocation":"1078:16:18","nodeType":"ErrorDefinition","parameters":{"id":2128,"nodeType":"ParameterList","parameters":[],"src":"1094:2:18"},"src":"1072:25:18"},{"errorSelector":"f4d678b8","id":2131,"name":"InsufficientBalance","nameLocation":"1108:19:18","nodeType":"ErrorDefinition","parameters":{"id":2130,"nodeType":"ParameterList","parameters":[],"src":"1127:2:18"},"src":"1102:28:18"},{"errorSelector":"f0019fe6","id":2137,"name":"InvalidConsumer","nameLocation":"1141:15:18","nodeType":"ErrorDefinition","parameters":{"id":2136,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2133,"mutability":"mutable","name":"subId","nameLocation":"1164:5:18","nodeType":"VariableDeclaration","scope":2137,"src":"1157:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":2132,"name":"uint64","nodeType":"ElementaryTypeName","src":"1157:6:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":2135,"mutability":"mutable","name":"consumer","nameLocation":"1179:8:18","nodeType":"VariableDeclaration","scope":2137,"src":"1171:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2134,"name":"address","nodeType":"ElementaryTypeName","src":"1171:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1156:32:18"},"src":"1135:54:18"},{"errorSelector":"1f6a65b6","id":2139,"name":"InvalidSubscription","nameLocation":"1200:19:18","nodeType":"ErrorDefinition","parameters":{"id":2138,"nodeType":"ParameterList","parameters":[],"src":"1219:2:18"},"src":"1194:28:18"},{"errorSelector":"44b0e3c3","id":2141,"name":"OnlyCallableFromLink","nameLocation":"1233:20:18","nodeType":"ErrorDefinition","parameters":{"id":2140,"nodeType":"ParameterList","parameters":[],"src":"1253:2:18"},"src":"1227:29:18"},{"errorSelector":"8129bbcd","id":2143,"name":"InvalidCalldata","nameLocation":"1267:15:18","nodeType":"ErrorDefinition","parameters":{"id":2142,"nodeType":"ParameterList","parameters":[],"src":"1282:2:18"},"src":"1261:24:18"},{"errorSelector":"d8a3fb52","id":2147,"name":"MustBeSubOwner","nameLocation":"1296:14:18","nodeType":"ErrorDefinition","parameters":{"id":2146,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2145,"mutability":"mutable","name":"owner","nameLocation":"1319:5:18","nodeType":"VariableDeclaration","scope":2147,"src":"1311:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2144,"name":"address","nodeType":"ElementaryTypeName","src":"1311:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1310:15:18"},"src":"1290:36:18"},{"errorSelector":"b42f66e8","id":2149,"name":"PendingRequestExists","nameLocation":"1337:20:18","nodeType":"ErrorDefinition","parameters":{"id":2148,"nodeType":"ParameterList","parameters":[],"src":"1357:2:18"},"src":"1331:29:18"},{"errorSelector":"d084e975","id":2153,"name":"MustBeRequestedOwner","nameLocation":"1371:20:18","nodeType":"ErrorDefinition","parameters":{"id":2152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2151,"mutability":"mutable","name":"proposedOwner","nameLocation":"1400:13:18","nodeType":"VariableDeclaration","scope":2153,"src":"1392:21:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2150,"name":"address","nodeType":"ElementaryTypeName","src":"1392:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1391:23:18"},"src":"1365:50:18"},{"errorSelector":"a99da302","id":2159,"name":"BalanceInvariantViolated","nameLocation":"1426:24:18","nodeType":"ErrorDefinition","parameters":{"id":2158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2155,"mutability":"mutable","name":"internalBalance","nameLocation":"1468:15:18","nodeType":"VariableDeclaration","scope":2159,"src":"1460:23:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2154,"name":"uint256","nodeType":"ElementaryTypeName","src":"1460:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2157,"mutability":"mutable","name":"externalBalance","nameLocation":"1501:15:18","nodeType":"VariableDeclaration","scope":2159,"src":"1493:23:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2156,"name":"uint256","nodeType":"ElementaryTypeName","src":"1493:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1450:72:18"},"src":"1420:103:18"},{"anonymous":false,"eventSelector":"59bfc682b673f8cbf945f1e454df9334834abf7dfe7f92237ca29ecb9b436600","id":2165,"name":"FundsRecovered","nameLocation":"1557:14:18","nodeType":"EventDefinition","parameters":{"id":2164,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2161,"indexed":false,"mutability":"mutable","name":"to","nameLocation":"1580:2:18","nodeType":"VariableDeclaration","scope":2165,"src":"1572:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2160,"name":"address","nodeType":"ElementaryTypeName","src":"1572:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2163,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1592:6:18","nodeType":"VariableDeclaration","scope":2165,"src":"1584:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2162,"name":"uint256","nodeType":"ElementaryTypeName","src":"1584:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1571:28:18"},"src":"1551:49:18"},{"canonicalName":"VRFCoordinatorV2.Subscription","id":2170,"members":[{"constant":false,"id":2167,"mutability":"mutable","name":"balance","nameLocation":"1826:7:18","nodeType":"VariableDeclaration","scope":2170,"src":"1819:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":2166,"name":"uint96","nodeType":"ElementaryTypeName","src":"1819:6:18","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":2169,"mutability":"mutable","name":"reqCount","nameLocation":"1905:8:18","nodeType":"VariableDeclaration","scope":2170,"src":"1898:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":2168,"name":"uint64","nodeType":"ElementaryTypeName","src":"1898:6:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"name":"Subscription","nameLocation":"1687:12:18","nodeType":"StructDefinition","scope":4400,"src":"1680:257:18","visibility":"public"},{"canonicalName":"VRFCoordinatorV2.SubscriptionConfig","id":2178,"members":[{"constant":false,"id":2172,"mutability":"mutable","name":"owner","nameLocation":"2029:5:18","nodeType":"VariableDeclaration","scope":2178,"src":"2021:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2171,"name":"address","nodeType":"ElementaryTypeName","src":"2021:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2174,"mutability":"mutable","name":"requestedOwner","nameLocation":"2095:14:18","nodeType":"VariableDeclaration","scope":2178,"src":"2087:22:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2173,"name":"address","nodeType":"ElementaryTypeName","src":"2087:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2177,"mutability":"mutable","name":"consumers","nameLocation":"2597:9:18","nodeType":"VariableDeclaration","scope":2178,"src":"2587:19:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2175,"name":"address","nodeType":"ElementaryTypeName","src":"2587:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2176,"nodeType":"ArrayTypeName","src":"2587:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"name":"SubscriptionConfig","nameLocation":"1992:18:18","nodeType":"StructDefinition","scope":4400,"src":"1985:628:18","visibility":"public"},{"constant":false,"id":2184,"mutability":"mutable","name":"s_consumers","nameLocation":"2808:11:18","nodeType":"VariableDeclaration","scope":4400,"src":"2707:112:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint64_$_t_uint64_$_$","typeString":"mapping(address => mapping(uint64 => uint64))"},"typeName":{"id":2183,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":2179,"name":"address","nodeType":"ElementaryTypeName","src":"2715:7:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2707:45:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint64_$_t_uint64_$_$","typeString":"mapping(address => mapping(uint64 => uint64))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2182,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":2180,"name":"uint64","nodeType":"ElementaryTypeName","src":"2734:6:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Mapping","src":"2726:25:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_uint64_$","typeString":"mapping(uint64 => uint64)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2181,"name":"uint64","nodeType":"ElementaryTypeName","src":"2744:6:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}}},"visibility":"private"},{"constant":false,"id":2189,"mutability":"mutable","name":"s_subscriptionConfigs","nameLocation":"2916:21:18","nodeType":"VariableDeclaration","scope":4400,"src":"2825:112:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_SubscriptionConfig_$2178_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2.SubscriptionConfig)"},"typeName":{"id":2188,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":2185,"name":"uint64","nodeType":"ElementaryTypeName","src":"2833:6:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Mapping","src":"2825:37:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_SubscriptionConfig_$2178_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2.SubscriptionConfig)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2187,"nodeType":"UserDefinedTypeName","pathNode":{"id":2186,"name":"SubscriptionConfig","nameLocations":["2843:18:18"],"nodeType":"IdentifierPath","referencedDeclaration":2178,"src":"2843:18:18"},"referencedDeclaration":2178,"src":"2843:18:18","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConfig_$2178_storage_ptr","typeString":"struct VRFCoordinatorV2.SubscriptionConfig"}}},"visibility":"private"},{"constant":false,"id":2194,"mutability":"mutable","name":"s_subscriptions","nameLocation":"3022:15:18","nodeType":"VariableDeclaration","scope":4400,"src":"2943:94:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_Subscription_$2170_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2.Subscription)"},"typeName":{"id":2193,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":2190,"name":"uint64","nodeType":"ElementaryTypeName","src":"2951:6:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Mapping","src":"2943:31:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_Subscription_$2170_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2.Subscription)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2192,"nodeType":"UserDefinedTypeName","pathNode":{"id":2191,"name":"Subscription","nameLocations":["2961:12:18"],"nodeType":"IdentifierPath","referencedDeclaration":2170,"src":"2961:12:18"},"referencedDeclaration":2170,"src":"2961:12:18","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$2170_storage_ptr","typeString":"struct VRFCoordinatorV2.Subscription"}}},"visibility":"private"},{"constant":false,"id":2196,"mutability":"mutable","name":"s_currentSubId","nameLocation":"3180:14:18","nodeType":"VariableDeclaration","scope":4400,"src":"3165:29:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":2195,"name":"uint64","nodeType":"ElementaryTypeName","src":"3165:6:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"private"},{"constant":false,"id":2198,"mutability":"mutable","name":"s_totalBalance","nameLocation":"3504:14:18","nodeType":"VariableDeclaration","scope":4400,"src":"3489:29:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":2197,"name":"uint96","nodeType":"ElementaryTypeName","src":"3489:6:18","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"private"},{"anonymous":false,"eventSelector":"464722b4166576d3dcbba877b999bc35cf911f4eaf434b7eba68fa113951d0bf","id":2204,"name":"SubscriptionCreated","nameLocation":"3530:19:18","nodeType":"EventDefinition","parameters":{"id":2203,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2200,"indexed":true,"mutability":"mutable","name":"subId","nameLocation":"3565:5:18","nodeType":"VariableDeclaration","scope":2204,"src":"3550:20:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":2199,"name":"uint64","nodeType":"ElementaryTypeName","src":"3550:6:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":2202,"indexed":false,"mutability":"mutable","name":"owner","nameLocation":"3580:5:18","nodeType":"VariableDeclaration","scope":2204,"src":"3572:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2201,"name":"address","nodeType":"ElementaryTypeName","src":"3572:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3549:37:18"},"src":"3524:63:18"},{"anonymous":false,"eventSelector":"d39ec07f4e209f627a4c427971473820dc129761ba28de8906bd56f57101d4f8","id":2212,"name":"SubscriptionFunded","nameLocation":"3598:18:18","nodeType":"EventDefinition","parameters":{"id":2211,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2206,"indexed":true,"mutability":"mutable","name":"subId","nameLocation":"3641:5:18","nodeType":"VariableDeclaration","scope":2212,"src":"3626:20:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":2205,"name":"uint64","nodeType":"ElementaryTypeName","src":"3626:6:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":2208,"indexed":false,"mutability":"mutable","name":"oldBalance","nameLocation":"3664:10:18","nodeType":"VariableDeclaration","scope":2212,"src":"3656:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2207,"name":"uint256","nodeType":"ElementaryTypeName","src":"3656:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2210,"indexed":false,"mutability":"mutable","name":"newBalance","nameLocation":"3692:10:18","nodeType":"VariableDeclaration","scope":2212,"src":"3684:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2209,"name":"uint256","nodeType":"ElementaryTypeName","src":"3684:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3616:92:18"},"src":"3592:117:18"},{"anonymous":false,"eventSelector":"43dc749a04ac8fb825cbd514f7c0e13f13bc6f2ee66043b76629d51776cff8e0","id":2218,"name":"SubscriptionConsumerAdded","nameLocation":"3720:25:18","nodeType":"EventDefinition","parameters":{"id":2217,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2214,"indexed":true,"mutability":"mutable","name":"subId","nameLocation":"3761:5:18","nodeType":"VariableDeclaration","scope":2218,"src":"3746:20:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":2213,"name":"uint64","nodeType":"ElementaryTypeName","src":"3746:6:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":2216,"indexed":false,"mutability":"mutable","name":"consumer","nameLocation":"3776:8:18","nodeType":"VariableDeclaration","scope":2218,"src":"3768:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2215,"name":"address","nodeType":"ElementaryTypeName","src":"3768:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3745:40:18"},"src":"3714:72:18"},{"anonymous":false,"eventSelector":"182bff9831466789164ca77075fffd84916d35a8180ba73c27e45634549b445b","id":2224,"name":"SubscriptionConsumerRemoved","nameLocation":"3797:27:18","nodeType":"EventDefinition","parameters":{"id":2223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2220,"indexed":true,"mutability":"mutable","name":"subId","nameLocation":"3840:5:18","nodeType":"VariableDeclaration","scope":2224,"src":"3825:20:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":2219,"name":"uint64","nodeType":"ElementaryTypeName","src":"3825:6:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":2222,"indexed":false,"mutability":"mutable","name":"consumer","nameLocation":"3855:8:18","nodeType":"VariableDeclaration","scope":2224,"src":"3847:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2221,"name":"address","nodeType":"ElementaryTypeName","src":"3847:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3824:40:18"},"src":"3791:74:18"},{"anonymous":false,"eventSelector":"e8ed5b475a5b5987aa9165e8731bb78043f39eee32ec5a1169a89e27fcd49815","id":2232,"name":"SubscriptionCanceled","nameLocation":"3876:20:18","nodeType":"EventDefinition","parameters":{"id":2231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2226,"indexed":true,"mutability":"mutable","name":"subId","nameLocation":"3921:5:18","nodeType":"VariableDeclaration","scope":2232,"src":"3906:20:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":2225,"name":"uint64","nodeType":"ElementaryTypeName","src":"3906:6:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":2228,"indexed":false,"mutability":"mutable","name":"to","nameLocation":"3944:2:18","nodeType":"VariableDeclaration","scope":2232,"src":"3936:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2227,"name":"address","nodeType":"ElementaryTypeName","src":"3936:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2230,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"3964:6:18","nodeType":"VariableDeclaration","scope":2232,"src":"3956:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2229,"name":"uint256","nodeType":"ElementaryTypeName","src":"3956:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3896:80:18"},"src":"3870:107:18"},{"anonymous":false,"eventSelector":"69436ea6df009049404f564eff6622cd00522b0bd6a89efd9e52a355c4a879be","id":2240,"name":"SubscriptionOwnerTransferRequested","nameLocation":"3988:34:18","nodeType":"EventDefinition","parameters":{"id":2239,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2234,"indexed":true,"mutability":"mutable","name":"subId","nameLocation":"4047:5:18","nodeType":"VariableDeclaration","scope":2240,"src":"4032:20:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":2233,"name":"uint64","nodeType":"ElementaryTypeName","src":"4032:6:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":2236,"indexed":false,"mutability":"mutable","name":"from","nameLocation":"4070:4:18","nodeType":"VariableDeclaration","scope":2240,"src":"4062:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2235,"name":"address","nodeType":"ElementaryTypeName","src":"4062:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2238,"indexed":false,"mutability":"mutable","name":"to","nameLocation":"4092:2:18","nodeType":"VariableDeclaration","scope":2240,"src":"4084:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2237,"name":"address","nodeType":"ElementaryTypeName","src":"4084:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4022:78:18"},"src":"3982:119:18"},{"anonymous":false,"eventSelector":"6f1dc65165ffffedfd8e507b4a0f1fcfdada045ed11f6c26ba27cedfe87802f0","id":2248,"name":"SubscriptionOwnerTransferred","nameLocation":"4112:28:18","nodeType":"EventDefinition","parameters":{"id":2247,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2242,"indexed":true,"mutability":"mutable","name":"subId","nameLocation":"4165:5:18","nodeType":"VariableDeclaration","scope":2248,"src":"4150:20:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":2241,"name":"uint64","nodeType":"ElementaryTypeName","src":"4150:6:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":2244,"indexed":false,"mutability":"mutable","name":"from","nameLocation":"4188:4:18","nodeType":"VariableDeclaration","scope":2248,"src":"4180:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2243,"name":"address","nodeType":"ElementaryTypeName","src":"4180:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2246,"indexed":false,"mutability":"mutable","name":"to","nameLocation":"4210:2:18","nodeType":"VariableDeclaration","scope":2248,"src":"4202:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2245,"name":"address","nodeType":"ElementaryTypeName","src":"4202:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4140:78:18"},"src":"4106:113:18"},{"constant":true,"functionSelector":"15c48b84","id":2251,"mutability":"constant","name":"MAX_REQUEST_CONFIRMATIONS","nameLocation":"4378:25:18","nodeType":"VariableDeclaration","scope":4400,"src":"4355:54:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":2249,"name":"uint16","nodeType":"ElementaryTypeName","src":"4355:6:18","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"value":{"hexValue":"323030","id":2250,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4406:3:18","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},"visibility":"public"},{"constant":true,"functionSelector":"40d6bb82","id":2254,"mutability":"constant","name":"MAX_NUM_WORDS","nameLocation":"4438:13:18","nodeType":"VariableDeclaration","scope":4400,"src":"4415:42:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2252,"name":"uint32","nodeType":"ElementaryTypeName","src":"4415:6:18","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"value":{"hexValue":"353030","id":2253,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4454:3:18","typeDescriptions":{"typeIdentifier":"t_rational_500_by_1","typeString":"int_const 500"},"value":"500"},"visibility":"public"},{"constant":true,"id":2257,"mutability":"constant","name":"GAS_FOR_CALL_EXACT_CHECK","nameLocation":"4596:24:18","nodeType":"VariableDeclaration","scope":4400,"src":"4571:57:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2255,"name":"uint256","nodeType":"ElementaryTypeName","src":"4571:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"355f303030","id":2256,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4623:5:18","typeDescriptions":{"typeIdentifier":"t_rational_5000_by_1","typeString":"int_const 5000"},"value":"5_000"},"visibility":"private"},{"errorSelector":"a7386976","id":2265,"name":"InvalidRequestConfirmations","nameLocation":"4640:27:18","nodeType":"ErrorDefinition","parameters":{"id":2264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2259,"mutability":"mutable","name":"have","nameLocation":"4675:4:18","nodeType":"VariableDeclaration","scope":2265,"src":"4668:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":2258,"name":"uint16","nodeType":"ElementaryTypeName","src":"4668:6:18","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":2261,"mutability":"mutable","name":"min","nameLocation":"4688:3:18","nodeType":"VariableDeclaration","scope":2265,"src":"4681:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":2260,"name":"uint16","nodeType":"ElementaryTypeName","src":"4681:6:18","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":2263,"mutability":"mutable","name":"max","nameLocation":"4700:3:18","nodeType":"VariableDeclaration","scope":2265,"src":"4693:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":2262,"name":"uint16","nodeType":"ElementaryTypeName","src":"4693:6:18","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"4667:37:18"},"src":"4634:71:18"},{"errorSelector":"f5d7e01e","id":2271,"name":"GasLimitTooBig","nameLocation":"4716:14:18","nodeType":"ErrorDefinition","parameters":{"id":2270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2267,"mutability":"mutable","name":"have","nameLocation":"4738:4:18","nodeType":"VariableDeclaration","scope":2271,"src":"4731:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2266,"name":"uint32","nodeType":"ElementaryTypeName","src":"4731:6:18","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":2269,"mutability":"mutable","name":"want","nameLocation":"4751:4:18","nodeType":"VariableDeclaration","scope":2271,"src":"4744:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2268,"name":"uint32","nodeType":"ElementaryTypeName","src":"4744:6:18","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"4730:26:18"},"src":"4710:47:18"},{"errorSelector":"47386bec","id":2277,"name":"NumWordsTooBig","nameLocation":"4768:14:18","nodeType":"ErrorDefinition","parameters":{"id":2276,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2273,"mutability":"mutable","name":"have","nameLocation":"4790:4:18","nodeType":"VariableDeclaration","scope":2277,"src":"4783:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2272,"name":"uint32","nodeType":"ElementaryTypeName","src":"4783:6:18","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":2275,"mutability":"mutable","name":"want","nameLocation":"4803:4:18","nodeType":"VariableDeclaration","scope":2277,"src":"4796:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2274,"name":"uint32","nodeType":"ElementaryTypeName","src":"4796:6:18","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"4782:26:18"},"src":"4762:47:18"},{"errorSelector":"4a0b8fa7","id":2281,"name":"ProvingKeyAlreadyRegistered","nameLocation":"4820:27:18","nodeType":"ErrorDefinition","parameters":{"id":2280,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2279,"mutability":"mutable","name":"keyHash","nameLocation":"4856:7:18","nodeType":"VariableDeclaration","scope":2281,"src":"4848:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2278,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4848:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4847:17:18"},"src":"4814:51:18"},{"errorSelector":"77f5b84c","id":2285,"name":"NoSuchProvingKey","nameLocation":"4876:16:18","nodeType":"ErrorDefinition","parameters":{"id":2284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2283,"mutability":"mutable","name":"keyHash","nameLocation":"4901:7:18","nodeType":"VariableDeclaration","scope":2285,"src":"4893:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2282,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4893:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4892:17:18"},"src":"4870:40:18"},{"errorSelector":"43d4cf66","id":2289,"name":"InvalidLinkWeiPrice","nameLocation":"4921:19:18","nodeType":"ErrorDefinition","parameters":{"id":2288,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2287,"mutability":"mutable","name":"linkWei","nameLocation":"4948:7:18","nodeType":"VariableDeclaration","scope":2289,"src":"4941:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2286,"name":"int256","nodeType":"ElementaryTypeName","src":"4941:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"4940:16:18"},"src":"4915:42:18"},{"errorSelector":"d17e7664","id":2295,"name":"InsufficientGasForConsumer","nameLocation":"4968:26:18","nodeType":"ErrorDefinition","parameters":{"id":2294,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2291,"mutability":"mutable","name":"have","nameLocation":"5003:4:18","nodeType":"VariableDeclaration","scope":2295,"src":"4995:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2290,"name":"uint256","nodeType":"ElementaryTypeName","src":"4995:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2293,"mutability":"mutable","name":"want","nameLocation":"5017:4:18","nodeType":"VariableDeclaration","scope":2295,"src":"5009:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2292,"name":"uint256","nodeType":"ElementaryTypeName","src":"5009:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4994:28:18"},"src":"4962:61:18"},{"errorSelector":"3688124a","id":2297,"name":"NoCorrespondingRequest","nameLocation":"5034:22:18","nodeType":"ErrorDefinition","parameters":{"id":2296,"nodeType":"ParameterList","parameters":[],"src":"5056:2:18"},"src":"5028:31:18"},{"errorSelector":"d529142c","id":2299,"name":"IncorrectCommitment","nameLocation":"5070:19:18","nodeType":"ErrorDefinition","parameters":{"id":2298,"nodeType":"ParameterList","parameters":[],"src":"5089:2:18"},"src":"5064:28:18"},{"errorSelector":"175dadad","id":2303,"name":"BlockhashNotInStore","nameLocation":"5103:19:18","nodeType":"ErrorDefinition","parameters":{"id":2302,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2301,"mutability":"mutable","name":"blockNum","nameLocation":"5131:8:18","nodeType":"VariableDeclaration","scope":2303,"src":"5123:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2300,"name":"uint256","nodeType":"ElementaryTypeName","src":"5123:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5122:18:18"},"src":"5097:44:18"},{"errorSelector":"e80fa381","id":2305,"name":"PaymentTooLarge","nameLocation":"5152:15:18","nodeType":"ErrorDefinition","parameters":{"id":2304,"nodeType":"ParameterList","parameters":[],"src":"5167:2:18"},"src":"5146:24:18"},{"errorSelector":"ed3ba6a6","id":2307,"name":"Reentrant","nameLocation":"5181:9:18","nodeType":"ErrorDefinition","parameters":{"id":2306,"nodeType":"ParameterList","parameters":[],"src":"5190:2:18"},"src":"5175:18:18"},{"canonicalName":"VRFCoordinatorV2.RequestCommitment","id":2318,"members":[{"constant":false,"id":2309,"mutability":"mutable","name":"blockNum","nameLocation":"5240:8:18","nodeType":"VariableDeclaration","scope":2318,"src":"5233:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":2308,"name":"uint64","nodeType":"ElementaryTypeName","src":"5233:6:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":2311,"mutability":"mutable","name":"subId","nameLocation":"5265:5:18","nodeType":"VariableDeclaration","scope":2318,"src":"5258:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":2310,"name":"uint64","nodeType":"ElementaryTypeName","src":"5258:6:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":2313,"mutability":"mutable","name":"callbackGasLimit","nameLocation":"5287:16:18","nodeType":"VariableDeclaration","scope":2318,"src":"5280:23:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2312,"name":"uint32","nodeType":"ElementaryTypeName","src":"5280:6:18","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":2315,"mutability":"mutable","name":"numWords","nameLocation":"5320:8:18","nodeType":"VariableDeclaration","scope":2318,"src":"5313:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2314,"name":"uint32","nodeType":"ElementaryTypeName","src":"5313:6:18","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":2317,"mutability":"mutable","name":"sender","nameLocation":"5346:6:18","nodeType":"VariableDeclaration","scope":2318,"src":"5338:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2316,"name":"address","nodeType":"ElementaryTypeName","src":"5338:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"RequestCommitment","nameLocation":"5205:17:18","nodeType":"StructDefinition","scope":4400,"src":"5198:161:18","visibility":"public"},{"constant":false,"id":2322,"mutability":"mutable","name":"s_provingKeys","nameLocation":"5435:13:18","nodeType":"VariableDeclaration","scope":4400,"src":"5364:84:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_address_$","typeString":"mapping(bytes32 => address)"},"typeName":{"id":2321,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":2319,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5372:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"5364:27:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_address_$","typeString":"mapping(bytes32 => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2320,"name":"address","nodeType":"ElementaryTypeName","src":"5383:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":2325,"mutability":"mutable","name":"s_provingKeyHashes","nameLocation":"5472:18:18","nodeType":"VariableDeclaration","scope":4400,"src":"5454:36:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2323,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5454:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2324,"nodeType":"ArrayTypeName","src":"5454:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"private"},{"constant":false,"id":2329,"mutability":"mutable","name":"s_withdrawableTokens","nameLocation":"5571:20:18","nodeType":"VariableDeclaration","scope":4400,"src":"5496:95:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint96_$","typeString":"mapping(address => uint96)"},"typeName":{"id":2328,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":2326,"name":"address","nodeType":"ElementaryTypeName","src":"5504:7:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"5496:26:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint96_$","typeString":"mapping(address => uint96)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2327,"name":"uint96","nodeType":"ElementaryTypeName","src":"5515:6:18","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}}},"visibility":"private"},{"constant":false,"id":2333,"mutability":"mutable","name":"s_requestCommitments","nameLocation":"5674:20:18","nodeType":"VariableDeclaration","scope":4400,"src":"5597:97:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bytes32_$","typeString":"mapping(uint256 => bytes32)"},"typeName":{"id":2332,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":2330,"name":"uint256","nodeType":"ElementaryTypeName","src":"5605:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"5597:27:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bytes32_$","typeString":"mapping(uint256 => bytes32)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2331,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5616:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},"visibility":"private"},{"anonymous":false,"eventSelector":"e729ae16526293f74ade739043022254f1489f616295a25bf72dfb4511ed73b8","id":2339,"name":"ProvingKeyRegistered","nameLocation":"5706:20:18","nodeType":"EventDefinition","parameters":{"id":2338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2335,"indexed":false,"mutability":"mutable","name":"keyHash","nameLocation":"5735:7:18","nodeType":"VariableDeclaration","scope":2339,"src":"5727:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2334,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5727:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2337,"indexed":true,"mutability":"mutable","name":"oracle","nameLocation":"5760:6:18","nodeType":"VariableDeclaration","scope":2339,"src":"5744:22:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2336,"name":"address","nodeType":"ElementaryTypeName","src":"5744:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5726:41:18"},"src":"5700:68:18"},{"anonymous":false,"eventSelector":"72be339577868f868798bac2c93e52d6f034fef4689a9848996c14ebb7416c0d","id":2345,"name":"ProvingKeyDeregistered","nameLocation":"5779:22:18","nodeType":"EventDefinition","parameters":{"id":2344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2341,"indexed":false,"mutability":"mutable","name":"keyHash","nameLocation":"5810:7:18","nodeType":"VariableDeclaration","scope":2345,"src":"5802:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2340,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5802:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2343,"indexed":true,"mutability":"mutable","name":"oracle","nameLocation":"5835:6:18","nodeType":"VariableDeclaration","scope":2345,"src":"5819:22:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2342,"name":"address","nodeType":"ElementaryTypeName","src":"5819:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5801:41:18"},"src":"5773:70:18"},{"anonymous":false,"eventSelector":"63373d1c4696214b898952999c9aaec57dac1ee2723cec59bea6888f489a9772","id":2363,"name":"RandomWordsRequested","nameLocation":"5854:20:18","nodeType":"EventDefinition","parameters":{"id":2362,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2347,"indexed":true,"mutability":"mutable","name":"keyHash","nameLocation":"5900:7:18","nodeType":"VariableDeclaration","scope":2363,"src":"5884:23:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2346,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5884:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2349,"indexed":false,"mutability":"mutable","name":"requestId","nameLocation":"5925:9:18","nodeType":"VariableDeclaration","scope":2363,"src":"5917:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2348,"name":"uint256","nodeType":"ElementaryTypeName","src":"5917:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2351,"indexed":false,"mutability":"mutable","name":"preSeed","nameLocation":"5952:7:18","nodeType":"VariableDeclaration","scope":2363,"src":"5944:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2350,"name":"uint256","nodeType":"ElementaryTypeName","src":"5944:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2353,"indexed":true,"mutability":"mutable","name":"subId","nameLocation":"5984:5:18","nodeType":"VariableDeclaration","scope":2363,"src":"5969:20:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":2352,"name":"uint64","nodeType":"ElementaryTypeName","src":"5969:6:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":2355,"indexed":false,"mutability":"mutable","name":"minimumRequestConfirmations","nameLocation":"6006:27:18","nodeType":"VariableDeclaration","scope":2363,"src":"5999:34:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":2354,"name":"uint16","nodeType":"ElementaryTypeName","src":"5999:6:18","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":2357,"indexed":false,"mutability":"mutable","name":"callbackGasLimit","nameLocation":"6050:16:18","nodeType":"VariableDeclaration","scope":2363,"src":"6043:23:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2356,"name":"uint32","nodeType":"ElementaryTypeName","src":"6043:6:18","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":2359,"indexed":false,"mutability":"mutable","name":"numWords","nameLocation":"6083:8:18","nodeType":"VariableDeclaration","scope":2363,"src":"6076:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2358,"name":"uint32","nodeType":"ElementaryTypeName","src":"6076:6:18","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":2361,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"6117:6:18","nodeType":"VariableDeclaration","scope":2363,"src":"6101:22:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2360,"name":"address","nodeType":"ElementaryTypeName","src":"6101:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5874:255:18"},"src":"5848:282:18"},{"anonymous":false,"eventSelector":"7dffc5ae5ee4e2e4df1651cf6ad329a73cebdb728f37ea0187b9b17e036756e4","id":2373,"name":"RandomWordsFulfilled","nameLocation":"6141:20:18","nodeType":"EventDefinition","parameters":{"id":2372,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2365,"indexed":true,"mutability":"mutable","name":"requestId","nameLocation":"6187:9:18","nodeType":"VariableDeclaration","scope":2373,"src":"6171:25:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2364,"name":"uint256","nodeType":"ElementaryTypeName","src":"6171:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2367,"indexed":false,"mutability":"mutable","name":"outputSeed","nameLocation":"6214:10:18","nodeType":"VariableDeclaration","scope":2373,"src":"6206:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2366,"name":"uint256","nodeType":"ElementaryTypeName","src":"6206:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2369,"indexed":false,"mutability":"mutable","name":"payment","nameLocation":"6241:7:18","nodeType":"VariableDeclaration","scope":2373,"src":"6234:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":2368,"name":"uint96","nodeType":"ElementaryTypeName","src":"6234:6:18","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":2371,"indexed":false,"mutability":"mutable","name":"success","nameLocation":"6263:7:18","nodeType":"VariableDeclaration","scope":2373,"src":"6258:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2370,"name":"bool","nodeType":"ElementaryTypeName","src":"6258:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6161:115:18"},"src":"6135:142:18"},{"canonicalName":"VRFCoordinatorV2.Config","id":2384,"members":[{"constant":false,"id":2375,"mutability":"mutable","name":"minimumRequestConfirmations","nameLocation":"6314:27:18","nodeType":"VariableDeclaration","scope":2384,"src":"6307:34:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":2374,"name":"uint16","nodeType":"ElementaryTypeName","src":"6307:6:18","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":2377,"mutability":"mutable","name":"maxGasLimit","nameLocation":"6358:11:18","nodeType":"VariableDeclaration","scope":2384,"src":"6351:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2376,"name":"uint32","nodeType":"ElementaryTypeName","src":"6351:6:18","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":2379,"mutability":"mutable","name":"reentrancyLock","nameLocation":"6418:14:18","nodeType":"VariableDeclaration","scope":2384,"src":"6413:19:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2378,"name":"bool","nodeType":"ElementaryTypeName","src":"6413:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2381,"mutability":"mutable","name":"stalenessSeconds","nameLocation":"6586:16:18","nodeType":"VariableDeclaration","scope":2384,"src":"6579:23:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2380,"name":"uint32","nodeType":"ElementaryTypeName","src":"6579:6:18","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":2383,"mutability":"mutable","name":"gasAfterPaymentCalculation","nameLocation":"6764:26:18","nodeType":"VariableDeclaration","scope":2384,"src":"6757:33:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2382,"name":"uint32","nodeType":"ElementaryTypeName","src":"6757:6:18","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"name":"Config","nameLocation":"6290:6:18","nodeType":"StructDefinition","scope":4400,"src":"6283:514:18","visibility":"public"},{"constant":false,"id":2386,"mutability":"mutable","name":"s_fallbackWeiPerUnitLink","nameLocation":"6817:24:18","nodeType":"VariableDeclaration","scope":4400,"src":"6802:39:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2385,"name":"int256","nodeType":"ElementaryTypeName","src":"6802:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"private"},{"constant":false,"id":2389,"mutability":"mutable","name":"s_config","nameLocation":"6862:8:18","nodeType":"VariableDeclaration","scope":4400,"src":"6847:23:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Config_$2384_storage","typeString":"struct VRFCoordinatorV2.Config"},"typeName":{"id":2388,"nodeType":"UserDefinedTypeName","pathNode":{"id":2387,"name":"Config","nameLocations":["6847:6:18"],"nodeType":"IdentifierPath","referencedDeclaration":2384,"src":"6847:6:18"},"referencedDeclaration":2384,"src":"6847:6:18","typeDescriptions":{"typeIdentifier":"t_struct$_Config_$2384_storage_ptr","typeString":"struct VRFCoordinatorV2.Config"}},"visibility":"private"},{"constant":false,"id":2392,"mutability":"mutable","name":"s_feeConfig","nameLocation":"6894:11:18","nodeType":"VariableDeclaration","scope":4400,"src":"6876:29:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_FeeConfig_$2411_storage","typeString":"struct VRFCoordinatorV2.FeeConfig"},"typeName":{"id":2391,"nodeType":"UserDefinedTypeName","pathNode":{"id":2390,"name":"FeeConfig","nameLocations":["6876:9:18"],"nodeType":"IdentifierPath","referencedDeclaration":2411,"src":"6876:9:18"},"referencedDeclaration":2411,"src":"6876:9:18","typeDescriptions":{"typeIdentifier":"t_struct$_FeeConfig_$2411_storage_ptr","typeString":"struct VRFCoordinatorV2.FeeConfig"}},"visibility":"private"},{"canonicalName":"VRFCoordinatorV2.FeeConfig","id":2411,"members":[{"constant":false,"id":2394,"mutability":"mutable","name":"fulfillmentFlatFeeLinkPPMTier1","nameLocation":"7054:30:18","nodeType":"VariableDeclaration","scope":2411,"src":"7047:37:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2393,"name":"uint32","nodeType":"ElementaryTypeName","src":"7047:6:18","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":2396,"mutability":"mutable","name":"fulfillmentFlatFeeLinkPPMTier2","nameLocation":"7101:30:18","nodeType":"VariableDeclaration","scope":2411,"src":"7094:37:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2395,"name":"uint32","nodeType":"ElementaryTypeName","src":"7094:6:18","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":2398,"mutability":"mutable","name":"fulfillmentFlatFeeLinkPPMTier3","nameLocation":"7148:30:18","nodeType":"VariableDeclaration","scope":2411,"src":"7141:37:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2397,"name":"uint32","nodeType":"ElementaryTypeName","src":"7141:6:18","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":2400,"mutability":"mutable","name":"fulfillmentFlatFeeLinkPPMTier4","nameLocation":"7195:30:18","nodeType":"VariableDeclaration","scope":2411,"src":"7188:37:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2399,"name":"uint32","nodeType":"ElementaryTypeName","src":"7188:6:18","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":2402,"mutability":"mutable","name":"fulfillmentFlatFeeLinkPPMTier5","nameLocation":"7242:30:18","nodeType":"VariableDeclaration","scope":2411,"src":"7235:37:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2401,"name":"uint32","nodeType":"ElementaryTypeName","src":"7235:6:18","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":2404,"mutability":"mutable","name":"reqsForTier2","nameLocation":"7289:12:18","nodeType":"VariableDeclaration","scope":2411,"src":"7282:19:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":2403,"name":"uint24","nodeType":"ElementaryTypeName","src":"7282:6:18","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"},{"constant":false,"id":2406,"mutability":"mutable","name":"reqsForTier3","nameLocation":"7318:12:18","nodeType":"VariableDeclaration","scope":2411,"src":"7311:19:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":2405,"name":"uint24","nodeType":"ElementaryTypeName","src":"7311:6:18","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"},{"constant":false,"id":2408,"mutability":"mutable","name":"reqsForTier4","nameLocation":"7347:12:18","nodeType":"VariableDeclaration","scope":2411,"src":"7340:19:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":2407,"name":"uint24","nodeType":"ElementaryTypeName","src":"7340:6:18","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"},{"constant":false,"id":2410,"mutability":"mutable","name":"reqsForTier5","nameLocation":"7376:12:18","nodeType":"VariableDeclaration","scope":2411,"src":"7369:19:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":2409,"name":"uint24","nodeType":"ElementaryTypeName","src":"7369:6:18","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"name":"FeeConfig","nameLocation":"6918:9:18","nodeType":"StructDefinition","scope":4400,"src":"6911:484:18","visibility":"public"},{"anonymous":false,"eventSelector":"c21e3bd2e0b339d2848f0dd956947a88966c242c0c0c582a33137a5c1ceb5cb2","id":2426,"name":"ConfigSet","nameLocation":"7406:9:18","nodeType":"EventDefinition","parameters":{"id":2425,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2413,"indexed":false,"mutability":"mutable","name":"minimumRequestConfirmations","nameLocation":"7432:27:18","nodeType":"VariableDeclaration","scope":2426,"src":"7425:34:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":2412,"name":"uint16","nodeType":"ElementaryTypeName","src":"7425:6:18","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":2415,"indexed":false,"mutability":"mutable","name":"maxGasLimit","nameLocation":"7476:11:18","nodeType":"VariableDeclaration","scope":2426,"src":"7469:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2414,"name":"uint32","nodeType":"ElementaryTypeName","src":"7469:6:18","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":2417,"indexed":false,"mutability":"mutable","name":"stalenessSeconds","nameLocation":"7504:16:18","nodeType":"VariableDeclaration","scope":2426,"src":"7497:23:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2416,"name":"uint32","nodeType":"ElementaryTypeName","src":"7497:6:18","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":2419,"indexed":false,"mutability":"mutable","name":"gasAfterPaymentCalculation","nameLocation":"7537:26:18","nodeType":"VariableDeclaration","scope":2426,"src":"7530:33:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2418,"name":"uint32","nodeType":"ElementaryTypeName","src":"7530:6:18","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":2421,"indexed":false,"mutability":"mutable","name":"fallbackWeiPerUnitLink","nameLocation":"7580:22:18","nodeType":"VariableDeclaration","scope":2426,"src":"7573:29:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2420,"name":"int256","nodeType":"ElementaryTypeName","src":"7573:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":2424,"indexed":false,"mutability":"mutable","name":"feeConfig","nameLocation":"7622:9:18","nodeType":"VariableDeclaration","scope":2426,"src":"7612:19:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_FeeConfig_$2411_memory_ptr","typeString":"struct VRFCoordinatorV2.FeeConfig"},"typeName":{"id":2423,"nodeType":"UserDefinedTypeName","pathNode":{"id":2422,"name":"FeeConfig","nameLocations":["7612:9:18"],"nodeType":"IdentifierPath","referencedDeclaration":2411,"src":"7612:9:18"},"referencedDeclaration":2411,"src":"7612:9:18","typeDescriptions":{"typeIdentifier":"t_struct$_FeeConfig_$2411_storage_ptr","typeString":"struct VRFCoordinatorV2.FeeConfig"}},"visibility":"internal"}],"src":"7415:222:18"},"src":"7400:238:18"},{"body":{"id":2457,"nodeType":"Block","src":"7772:175:18","statements":[{"expression":{"id":2443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2439,"name":"LINK","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2118,"src":"7782:4:18","typeDescriptions":{"typeIdentifier":"t_contract$_LinkTokenInterface_$712","typeString":"contract LinkTokenInterface"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2441,"name":"link","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2428,"src":"7808:4:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2440,"name":"LinkTokenInterface","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":712,"src":"7789:18:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_LinkTokenInterface_$712_$","typeString":"type(contract LinkTokenInterface)"}},"id":2442,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7789:24:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_LinkTokenInterface_$712","typeString":"contract LinkTokenInterface"}},"src":"7782:31:18","typeDescriptions":{"typeIdentifier":"t_contract$_LinkTokenInterface_$712","typeString":"contract LinkTokenInterface"}},"id":2444,"nodeType":"ExpressionStatement","src":"7782:31:18"},{"expression":{"id":2449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2445,"name":"LINK_ETH_FEED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2121,"src":"7823:13:18","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$293","typeString":"contract AggregatorV3Interface"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2447,"name":"linkEthFeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2432,"src":"7861:11:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2446,"name":"AggregatorV3Interface","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":293,"src":"7839:21:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AggregatorV3Interface_$293_$","typeString":"type(contract AggregatorV3Interface)"}},"id":2448,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7839:34:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$293","typeString":"contract AggregatorV3Interface"}},"src":"7823:50:18","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$293","typeString":"contract AggregatorV3Interface"}},"id":2450,"nodeType":"ExpressionStatement","src":"7823:50:18"},{"expression":{"id":2455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2451,"name":"BLOCKHASH_STORE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2124,"src":"7883:15:18","typeDescriptions":{"typeIdentifier":"t_contract$_BlockhashStoreInterface_$303","typeString":"contract BlockhashStoreInterface"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2453,"name":"blockhashStore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2430,"src":"7925:14:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2452,"name":"BlockhashStoreInterface","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":303,"src":"7901:23:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_BlockhashStoreInterface_$303_$","typeString":"type(contract BlockhashStoreInterface)"}},"id":2454,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7901:39:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_BlockhashStoreInterface_$303","typeString":"contract BlockhashStoreInterface"}},"src":"7883:57:18","typeDescriptions":{"typeIdentifier":"t_contract$_BlockhashStoreInterface_$303","typeString":"contract BlockhashStoreInterface"}},"id":2456,"nodeType":"ExpressionStatement","src":"7883:57:18"}]},"id":2458,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"expression":{"id":2435,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7760:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7764:6:18","memberName":"sender","nodeType":"MemberAccess","src":"7760:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":2437,"kind":"baseConstructorSpecifier","modifierName":{"id":2434,"name":"ConfirmedOwner","nameLocations":["7745:14:18"],"nodeType":"IdentifierPath","referencedDeclaration":427,"src":"7745:14:18"},"nodeType":"ModifierInvocation","src":"7745:26:18"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2433,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2428,"mutability":"mutable","name":"link","nameLocation":"7673:4:18","nodeType":"VariableDeclaration","scope":2458,"src":"7665:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2427,"name":"address","nodeType":"ElementaryTypeName","src":"7665:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2430,"mutability":"mutable","name":"blockhashStore","nameLocation":"7695:14:18","nodeType":"VariableDeclaration","scope":2458,"src":"7687:22:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2429,"name":"address","nodeType":"ElementaryTypeName","src":"7687:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2432,"mutability":"mutable","name":"linkEthFeed","nameLocation":"7727:11:18","nodeType":"VariableDeclaration","scope":2458,"src":"7719:19:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2431,"name":"address","nodeType":"ElementaryTypeName","src":"7719:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7655:89:18"},"returnParameters":{"id":2438,"nodeType":"ParameterList","parameters":[],"src":"7772:0:18"},"scope":4400,"src":"7644:303:18","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2507,"nodeType":"Block","src":"8270:286:18","statements":[{"assignments":[2471],"declarations":[{"constant":false,"id":2471,"mutability":"mutable","name":"kh","nameLocation":"8288:2:18","nodeType":"VariableDeclaration","scope":2507,"src":"8280:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2470,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8280:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2475,"initialValue":{"arguments":[{"id":2473,"name":"publicProvingKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2465,"src":"8303:16:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_calldata_ptr","typeString":"uint256[2] calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$2_calldata_ptr","typeString":"uint256[2] calldata"}],"id":2472,"name":"hashOfKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2611,"src":"8293:9:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$2_memory_ptr_$returns$_t_bytes32_$","typeString":"function (uint256[2] memory) pure returns (bytes32)"}},"id":2474,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8293:27:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"8280:40:18"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":2476,"name":"s_provingKeys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2322,"src":"8334:13:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_address_$","typeString":"mapping(bytes32 => address)"}},"id":2478,"indexExpression":{"id":2477,"name":"kh","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2471,"src":"8348:2:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8334:17:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2481,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8363:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2480,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8355:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2479,"name":"address","nodeType":"ElementaryTypeName","src":"8355:7:18","typeDescriptions":{}}},"id":2482,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8355:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8334:31:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2489,"nodeType":"IfStatement","src":"8330:100:18","trueBody":{"id":2488,"nodeType":"Block","src":"8367:63:18","statements":[{"errorCall":{"arguments":[{"id":2485,"name":"kh","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2471,"src":"8416:2:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2484,"name":"ProvingKeyAlreadyRegistered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2281,"src":"8388:27:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$returns$__$","typeString":"function (bytes32) pure"}},"id":2486,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8388:31:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2487,"nodeType":"RevertStatement","src":"8381:38:18"}]}},{"expression":{"id":2494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2490,"name":"s_provingKeys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2322,"src":"8439:13:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_address_$","typeString":"mapping(bytes32 => address)"}},"id":2492,"indexExpression":{"id":2491,"name":"kh","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2471,"src":"8453:2:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8439:17:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2493,"name":"oracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2461,"src":"8459:6:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8439:26:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2495,"nodeType":"ExpressionStatement","src":"8439:26:18"},{"expression":{"arguments":[{"id":2499,"name":"kh","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2471,"src":"8499:2:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2496,"name":"s_provingKeyHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2325,"src":"8475:18:18","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":2498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8494:4:18","memberName":"push","nodeType":"MemberAccess","src":"8475:23:18","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$_t_bytes32_$returns$__$attached_to$_t_array$_t_bytes32_$dyn_storage_ptr_$","typeString":"function (bytes32[] storage pointer,bytes32)"}},"id":2500,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8475:27:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2501,"nodeType":"ExpressionStatement","src":"8475:27:18"},{"eventCall":{"arguments":[{"id":2503,"name":"kh","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2471,"src":"8538:2:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2504,"name":"oracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2461,"src":"8542:6:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2502,"name":"ProvingKeyRegistered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2339,"src":"8517:20:18","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":2505,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8517:32:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2506,"nodeType":"EmitStatement","src":"8512:37:18"}]},"documentation":{"id":2459,"nodeType":"StructuredDocumentation","src":"7953:189:18","text":" @notice Registers a proving key to an oracle.\n @param oracle address of the oracle\n @param publicProvingKey key that oracle can use to submit vrf fulfillments"},"functionSelector":"6f64f03f","id":2508,"implemented":true,"kind":"function","modifiers":[{"id":2468,"kind":"modifierInvocation","modifierName":{"id":2467,"name":"onlyOwner","nameLocations":["8260:9:18"],"nodeType":"IdentifierPath","referencedDeclaration":588,"src":"8260:9:18"},"nodeType":"ModifierInvocation","src":"8260:9:18"}],"name":"registerProvingKey","nameLocation":"8156:18:18","nodeType":"FunctionDefinition","parameters":{"id":2466,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2461,"mutability":"mutable","name":"oracle","nameLocation":"8192:6:18","nodeType":"VariableDeclaration","scope":2508,"src":"8184:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2460,"name":"address","nodeType":"ElementaryTypeName","src":"8184:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2465,"mutability":"mutable","name":"publicProvingKey","nameLocation":"8228:16:18","nodeType":"VariableDeclaration","scope":2508,"src":"8208:36:18","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_calldata_ptr","typeString":"uint256[2]"},"typeName":{"baseType":{"id":2462,"name":"uint256","nodeType":"ElementaryTypeName","src":"8208:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2464,"length":{"hexValue":"32","id":2463,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8216:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"8208:10:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_storage_ptr","typeString":"uint256[2]"}},"visibility":"internal"}],"src":"8174:76:18"},"returnParameters":{"id":2469,"nodeType":"ParameterList","parameters":[],"src":"8270:0:18"},"scope":4400,"src":"8147:409:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2592,"nodeType":"Block","src":"8816:692:18","statements":[{"assignments":[2519],"declarations":[{"constant":false,"id":2519,"mutability":"mutable","name":"kh","nameLocation":"8834:2:18","nodeType":"VariableDeclaration","scope":2592,"src":"8826:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2518,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8826:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2523,"initialValue":{"arguments":[{"id":2521,"name":"publicProvingKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2513,"src":"8849:16:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_calldata_ptr","typeString":"uint256[2] calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$2_calldata_ptr","typeString":"uint256[2] calldata"}],"id":2520,"name":"hashOfKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2611,"src":"8839:9:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$2_memory_ptr_$returns$_t_bytes32_$","typeString":"function (uint256[2] memory) pure returns (bytes32)"}},"id":2522,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8839:27:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"8826:40:18"},{"assignments":[2525],"declarations":[{"constant":false,"id":2525,"mutability":"mutable","name":"oracle","nameLocation":"8884:6:18","nodeType":"VariableDeclaration","scope":2592,"src":"8876:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2524,"name":"address","nodeType":"ElementaryTypeName","src":"8876:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2529,"initialValue":{"baseExpression":{"id":2526,"name":"s_provingKeys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2322,"src":"8893:13:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_address_$","typeString":"mapping(bytes32 => address)"}},"id":2528,"indexExpression":{"id":2527,"name":"kh","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2519,"src":"8907:2:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8893:17:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"8876:34:18"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2530,"name":"oracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2525,"src":"8924:6:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2533,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8942:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2532,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8934:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2531,"name":"address","nodeType":"ElementaryTypeName","src":"8934:7:18","typeDescriptions":{}}},"id":2534,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8934:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8924:20:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2541,"nodeType":"IfStatement","src":"8920:78:18","trueBody":{"id":2540,"nodeType":"Block","src":"8946:52:18","statements":[{"errorCall":{"arguments":[{"id":2537,"name":"kh","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2519,"src":"8984:2:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2536,"name":"NoSuchProvingKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2285,"src":"8967:16:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$returns$__$","typeString":"function (bytes32) pure"}},"id":2538,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8967:20:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2539,"nodeType":"RevertStatement","src":"8960:27:18"}]}},{"expression":{"id":2545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"9007:24:18","subExpression":{"baseExpression":{"id":2542,"name":"s_provingKeys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2322,"src":"9014:13:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_address_$","typeString":"mapping(bytes32 => address)"}},"id":2544,"indexExpression":{"id":2543,"name":"kh","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2519,"src":"9028:2:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9014:17:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2546,"nodeType":"ExpressionStatement","src":"9007:24:18"},{"body":{"id":2585,"nodeType":"Block","src":"9097:356:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":2558,"name":"s_provingKeyHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2325,"src":"9115:18:18","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":2560,"indexExpression":{"id":2559,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2548,"src":"9134:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9115:21:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2561,"name":"kh","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2519,"src":"9140:2:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"9115:27:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2584,"nodeType":"IfStatement","src":"9111:332:18","trueBody":{"id":2583,"nodeType":"Block","src":"9144:299:18","statements":[{"assignments":[2564],"declarations":[{"constant":false,"id":2564,"mutability":"mutable","name":"last","nameLocation":"9170:4:18","nodeType":"VariableDeclaration","scope":2583,"src":"9162:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2563,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9162:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2571,"initialValue":{"baseExpression":{"id":2565,"name":"s_provingKeyHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2325,"src":"9177:18:18","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":2570,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2566,"name":"s_provingKeyHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2325,"src":"9217:18:18","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":2567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9236:6:18","memberName":"length","nodeType":"MemberAccess","src":"9217:25:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2568,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9245:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9217:29:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9177:87:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"9162:102:18"},{"expression":{"id":2576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2572,"name":"s_provingKeyHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2325,"src":"9358:18:18","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":2574,"indexExpression":{"id":2573,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2548,"src":"9377:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9358:21:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2575,"name":"last","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2564,"src":"9382:4:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"9358:28:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2577,"nodeType":"ExpressionStatement","src":"9358:28:18"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2578,"name":"s_provingKeyHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2325,"src":"9404:18:18","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":2580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9423:3:18","memberName":"pop","nodeType":"MemberAccess","src":"9404:22:18","typeDescriptions":{"typeIdentifier":"t_function_arraypop_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_bytes32_$dyn_storage_ptr_$","typeString":"function (bytes32[] storage pointer)"}},"id":2581,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9404:24:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2582,"nodeType":"ExpressionStatement","src":"9404:24:18"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2551,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2548,"src":"9061:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2552,"name":"s_provingKeyHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2325,"src":"9065:18:18","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":2553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9084:6:18","memberName":"length","nodeType":"MemberAccess","src":"9065:25:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9061:29:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2586,"initializationExpression":{"assignments":[2548],"declarations":[{"constant":false,"id":2548,"mutability":"mutable","name":"i","nameLocation":"9054:1:18","nodeType":"VariableDeclaration","scope":2586,"src":"9046:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2547,"name":"uint256","nodeType":"ElementaryTypeName","src":"9046:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2550,"initialValue":{"hexValue":"30","id":2549,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9058:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"9046:13:18"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":2556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"9092:3:18","subExpression":{"id":2555,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2548,"src":"9092:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2557,"nodeType":"ExpressionStatement","src":"9092:3:18"},"nodeType":"ForStatement","src":"9041:412:18"},{"eventCall":{"arguments":[{"id":2588,"name":"kh","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2519,"src":"9490:2:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2589,"name":"oracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2525,"src":"9494:6:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2587,"name":"ProvingKeyDeregistered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2345,"src":"9467:22:18","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":2590,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9467:34:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2591,"nodeType":"EmitStatement","src":"9462:39:18"}]},"documentation":{"id":2509,"nodeType":"StructuredDocumentation","src":"8562:148:18","text":" @notice Deregisters a proving key to an oracle.\n @param publicProvingKey key that oracle can use to submit vrf fulfillments"},"functionSelector":"08821d58","id":2593,"implemented":true,"kind":"function","modifiers":[{"id":2516,"kind":"modifierInvocation","modifierName":{"id":2515,"name":"onlyOwner","nameLocations":["8806:9:18"],"nodeType":"IdentifierPath","referencedDeclaration":588,"src":"8806:9:18"},"nodeType":"ModifierInvocation","src":"8806:9:18"}],"name":"deregisterProvingKey","nameLocation":"8724:20:18","nodeType":"FunctionDefinition","parameters":{"id":2514,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2513,"mutability":"mutable","name":"publicProvingKey","nameLocation":"8774:16:18","nodeType":"VariableDeclaration","scope":2593,"src":"8754:36:18","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_calldata_ptr","typeString":"uint256[2]"},"typeName":{"baseType":{"id":2510,"name":"uint256","nodeType":"ElementaryTypeName","src":"8754:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2512,"length":{"hexValue":"32","id":2511,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8762:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"8754:10:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_storage_ptr","typeString":"uint256[2]"}},"visibility":"internal"}],"src":"8744:52:18"},"returnParameters":{"id":2517,"nodeType":"ParameterList","parameters":[],"src":"8816:0:18"},"scope":4400,"src":"8715:793:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2610,"nodeType":"Block","src":"9756:56:18","statements":[{"expression":{"arguments":[{"arguments":[{"id":2606,"name":"publicKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2598,"src":"9794:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}],"expression":{"id":2604,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"9783:3:18","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2605,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9787:6:18","memberName":"encode","nodeType":"MemberAccess","src":"9783:10:18","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2607,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9783:21:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2603,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"9773:9:18","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2608,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9773:32:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2602,"id":2609,"nodeType":"Return","src":"9766:39:18"}]},"documentation":{"id":2594,"nodeType":"StructuredDocumentation","src":"9514:145:18","text":" @notice Returns the proving key hash key associated with this public key\n @param publicKey the key to return the hash of"},"functionSelector":"caf70c4a","id":2611,"implemented":true,"kind":"function","modifiers":[],"name":"hashOfKey","nameLocation":"9673:9:18","nodeType":"FunctionDefinition","parameters":{"id":2599,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2598,"mutability":"mutable","name":"publicKey","nameLocation":"9710:9:18","nodeType":"VariableDeclaration","scope":2611,"src":"9692:27:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2]"},"typeName":{"baseType":{"id":2595,"name":"uint256","nodeType":"ElementaryTypeName","src":"9692:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2597,"length":{"hexValue":"32","id":2596,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9700:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"9692:10:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_storage_ptr","typeString":"uint256[2]"}},"visibility":"internal"}],"src":"9682:43:18"},"returnParameters":{"id":2602,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2601,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2611,"src":"9747:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2600,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9747:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"9746:9:18"},"scope":4400,"src":"9664:148:18","stateMutability":"pure","virtual":false,"visibility":"public"},{"body":{"id":2677,"nodeType":"Block","src":"10645:1021:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint16","typeString":"uint16"},"id":2632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2630,"name":"minimumRequestConfirmations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2614,"src":"10659:27:18","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2631,"name":"MAX_REQUEST_CONFIRMATIONS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2251,"src":"10689:25:18","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"10659:55:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2640,"nodeType":"IfStatement","src":"10655:267:18","trueBody":{"id":2639,"nodeType":"Block","src":"10716:206:18","statements":[{"errorCall":{"arguments":[{"id":2634,"name":"minimumRequestConfirmations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2614,"src":"10782:27:18","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":2635,"name":"minimumRequestConfirmations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2614,"src":"10827:27:18","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":2636,"name":"MAX_REQUEST_CONFIRMATIONS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2251,"src":"10872:25:18","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_uint16","typeString":"uint16"}],"id":2633,"name":"InvalidRequestConfirmations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2265,"src":"10737:27:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint16_$_t_uint16_$_t_uint16_$returns$__$","typeString":"function (uint16,uint16,uint16) pure"}},"id":2637,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10737:174:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2638,"nodeType":"RevertStatement","src":"10730:181:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2641,"name":"fallbackWeiPerUnitLink","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2622,"src":"10935:22:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"30","id":2642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10961:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10935:27:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2649,"nodeType":"IfStatement","src":"10931:108:18","trueBody":{"id":2648,"nodeType":"Block","src":"10964:75:18","statements":[{"errorCall":{"arguments":[{"id":2645,"name":"fallbackWeiPerUnitLink","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2622,"src":"11005:22:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2644,"name":"InvalidLinkWeiPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2289,"src":"10985:19:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_int256_$returns$__$","typeString":"function (int256) pure"}},"id":2646,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10985:43:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2647,"nodeType":"RevertStatement","src":"10978:50:18"}]}},{"expression":{"id":2658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2650,"name":"s_config","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2389,"src":"11048:8:18","typeDescriptions":{"typeIdentifier":"t_struct$_Config_$2384_storage","typeString":"struct VRFCoordinatorV2.Config storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2652,"name":"minimumRequestConfirmations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2614,"src":"11109:27:18","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":2653,"name":"maxGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2616,"src":"11163:11:18","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":2654,"name":"stalenessSeconds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2618,"src":"11206:16:18","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":2655,"name":"gasAfterPaymentCalculation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2620,"src":"11264:26:18","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"hexValue":"66616c7365","id":2656,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"11320:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2651,"name":"Config","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2384,"src":"11059:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Config_$2384_storage_ptr_$","typeString":"type(struct VRFCoordinatorV2.Config storage pointer)"}},"id":2657,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["11080:27:18","11150:11:18","11188:16:18","11236:26:18","11304:14:18"],"names":["minimumRequestConfirmations","maxGasLimit","stalenessSeconds","gasAfterPaymentCalculation","reentrancyLock"],"nodeType":"FunctionCall","src":"11059:277:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Config_$2384_memory_ptr","typeString":"struct VRFCoordinatorV2.Config memory"}},"src":"11048:288:18","typeDescriptions":{"typeIdentifier":"t_struct$_Config_$2384_storage","typeString":"struct VRFCoordinatorV2.Config storage ref"}},"id":2659,"nodeType":"ExpressionStatement","src":"11048:288:18"},{"expression":{"id":2662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2660,"name":"s_feeConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2392,"src":"11346:11:18","typeDescriptions":{"typeIdentifier":"t_struct$_FeeConfig_$2411_storage","typeString":"struct VRFCoordinatorV2.FeeConfig storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2661,"name":"feeConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2625,"src":"11360:9:18","typeDescriptions":{"typeIdentifier":"t_struct$_FeeConfig_$2411_memory_ptr","typeString":"struct VRFCoordinatorV2.FeeConfig memory"}},"src":"11346:23:18","typeDescriptions":{"typeIdentifier":"t_struct$_FeeConfig_$2411_storage","typeString":"struct VRFCoordinatorV2.FeeConfig storage ref"}},"id":2663,"nodeType":"ExpressionStatement","src":"11346:23:18"},{"expression":{"id":2666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2664,"name":"s_fallbackWeiPerUnitLink","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2386,"src":"11379:24:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2665,"name":"fallbackWeiPerUnitLink","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2622,"src":"11406:22:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"11379:49:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":2667,"nodeType":"ExpressionStatement","src":"11379:49:18"},{"eventCall":{"arguments":[{"id":2669,"name":"minimumRequestConfirmations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2614,"src":"11466:27:18","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":2670,"name":"maxGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2616,"src":"11507:11:18","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":2671,"name":"stalenessSeconds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2618,"src":"11532:16:18","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":2672,"name":"gasAfterPaymentCalculation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2620,"src":"11562:26:18","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":2673,"name":"fallbackWeiPerUnitLink","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2622,"src":"11602:22:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":2674,"name":"s_feeConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2392,"src":"11638:11:18","typeDescriptions":{"typeIdentifier":"t_struct$_FeeConfig_$2411_storage","typeString":"struct VRFCoordinatorV2.FeeConfig storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_struct$_FeeConfig_$2411_storage","typeString":"struct VRFCoordinatorV2.FeeConfig storage ref"}],"id":2668,"name":"ConfigSet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2426,"src":"11443:9:18","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint16_$_t_uint32_$_t_uint32_$_t_uint32_$_t_int256_$_t_struct$_FeeConfig_$2411_memory_ptr_$returns$__$","typeString":"function (uint16,uint32,uint32,uint32,int256,struct VRFCoordinatorV2.FeeConfig memory)"}},"id":2675,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11443:216:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2676,"nodeType":"EmitStatement","src":"11438:221:18"}]},"documentation":{"id":2612,"nodeType":"StructuredDocumentation","src":"9818:555:18","text":" @notice Sets the configuration of the vrfv2 coordinator\n @param minimumRequestConfirmations global min for request confirmations\n @param maxGasLimit global max for request gas limit\n @param stalenessSeconds if the eth/link feed is more stale then this, use the fallback price\n @param gasAfterPaymentCalculation gas used in doing accounting after completing the gas measurement\n @param fallbackWeiPerUnitLink fallback eth/link price in the case of a stale feed\n @param feeConfig fee tier configuration"},"functionSelector":"4cb48a54","id":2678,"implemented":true,"kind":"function","modifiers":[{"id":2628,"kind":"modifierInvocation","modifierName":{"id":2627,"name":"onlyOwner","nameLocations":["10635:9:18"],"nodeType":"IdentifierPath","referencedDeclaration":588,"src":"10635:9:18"},"nodeType":"ModifierInvocation","src":"10635:9:18"}],"name":"setConfig","nameLocation":"10387:9:18","nodeType":"FunctionDefinition","parameters":{"id":2626,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2614,"mutability":"mutable","name":"minimumRequestConfirmations","nameLocation":"10413:27:18","nodeType":"VariableDeclaration","scope":2678,"src":"10406:34:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":2613,"name":"uint16","nodeType":"ElementaryTypeName","src":"10406:6:18","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":2616,"mutability":"mutable","name":"maxGasLimit","nameLocation":"10457:11:18","nodeType":"VariableDeclaration","scope":2678,"src":"10450:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2615,"name":"uint32","nodeType":"ElementaryTypeName","src":"10450:6:18","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":2618,"mutability":"mutable","name":"stalenessSeconds","nameLocation":"10485:16:18","nodeType":"VariableDeclaration","scope":2678,"src":"10478:23:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2617,"name":"uint32","nodeType":"ElementaryTypeName","src":"10478:6:18","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":2620,"mutability":"mutable","name":"gasAfterPaymentCalculation","nameLocation":"10518:26:18","nodeType":"VariableDeclaration","scope":2678,"src":"10511:33:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2619,"name":"uint32","nodeType":"ElementaryTypeName","src":"10511:6:18","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":2622,"mutability":"mutable","name":"fallbackWeiPerUnitLink","nameLocation":"10561:22:18","nodeType":"VariableDeclaration","scope":2678,"src":"10554:29:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2621,"name":"int256","nodeType":"ElementaryTypeName","src":"10554:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":2625,"mutability":"mutable","name":"feeConfig","nameLocation":"10610:9:18","nodeType":"VariableDeclaration","scope":2678,"src":"10593:26:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_FeeConfig_$2411_memory_ptr","typeString":"struct VRFCoordinatorV2.FeeConfig"},"typeName":{"id":2624,"nodeType":"UserDefinedTypeName","pathNode":{"id":2623,"name":"FeeConfig","nameLocations":["10593:9:18"],"nodeType":"IdentifierPath","referencedDeclaration":2411,"src":"10593:9:18"},"referencedDeclaration":2411,"src":"10593:9:18","typeDescriptions":{"typeIdentifier":"t_struct$_FeeConfig_$2411_storage_ptr","typeString":"struct VRFCoordinatorV2.FeeConfig"}},"visibility":"internal"}],"src":"10396:229:18"},"returnParameters":{"id":2629,"nodeType":"ParameterList","parameters":[],"src":"10645:0:18"},"scope":4400,"src":"10378:1288:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2699,"nodeType":"Block","src":"11918:206:18","statements":[{"expression":{"components":[{"expression":{"id":2689,"name":"s_config","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2389,"src":"11949:8:18","typeDescriptions":{"typeIdentifier":"t_struct$_Config_$2384_storage","typeString":"struct VRFCoordinatorV2.Config storage ref"}},"id":2690,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11958:27:18","memberName":"minimumRequestConfirmations","nodeType":"MemberAccess","referencedDeclaration":2375,"src":"11949:36:18","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"expression":{"id":2691,"name":"s_config","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2389,"src":"11999:8:18","typeDescriptions":{"typeIdentifier":"t_struct$_Config_$2384_storage","typeString":"struct VRFCoordinatorV2.Config storage ref"}},"id":2692,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12008:11:18","memberName":"maxGasLimit","nodeType":"MemberAccess","referencedDeclaration":2377,"src":"11999:20:18","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"expression":{"id":2693,"name":"s_config","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2389,"src":"12033:8:18","typeDescriptions":{"typeIdentifier":"t_struct$_Config_$2384_storage","typeString":"struct VRFCoordinatorV2.Config storage ref"}},"id":2694,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12042:16:18","memberName":"stalenessSeconds","nodeType":"MemberAccess","referencedDeclaration":2381,"src":"12033:25:18","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"expression":{"id":2695,"name":"s_config","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2389,"src":"12072:8:18","typeDescriptions":{"typeIdentifier":"t_struct$_Config_$2384_storage","typeString":"struct VRFCoordinatorV2.Config storage ref"}},"id":2696,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12081:26:18","memberName":"gasAfterPaymentCalculation","nodeType":"MemberAccess","referencedDeclaration":2383,"src":"12072:35:18","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"id":2697,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11935:182:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint16_$_t_uint32_$_t_uint32_$_t_uint32_$","typeString":"tuple(uint16,uint32,uint32,uint32)"}},"functionReturnParameters":2688,"id":2698,"nodeType":"Return","src":"11928:189:18"}]},"functionSelector":"c3f909d4","id":2700,"implemented":true,"kind":"function","modifiers":[],"name":"getConfig","nameLocation":"11681:9:18","nodeType":"FunctionDefinition","parameters":{"id":2679,"nodeType":"ParameterList","parameters":[],"src":"11690:2:18"},"returnParameters":{"id":2688,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2681,"mutability":"mutable","name":"minimumRequestConfirmations","nameLocation":"11760:27:18","nodeType":"VariableDeclaration","scope":2700,"src":"11753:34:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":2680,"name":"uint16","nodeType":"ElementaryTypeName","src":"11753:6:18","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":2683,"mutability":"mutable","name":"maxGasLimit","nameLocation":"11808:11:18","nodeType":"VariableDeclaration","scope":2700,"src":"11801:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2682,"name":"uint32","nodeType":"ElementaryTypeName","src":"11801:6:18","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":2685,"mutability":"mutable","name":"stalenessSeconds","nameLocation":"11840:16:18","nodeType":"VariableDeclaration","scope":2700,"src":"11833:23:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2684,"name":"uint32","nodeType":"ElementaryTypeName","src":"11833:6:18","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":2687,"mutability":"mutable","name":"gasAfterPaymentCalculation","nameLocation":"11877:26:18","nodeType":"VariableDeclaration","scope":2700,"src":"11870:33:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2686,"name":"uint32","nodeType":"ElementaryTypeName","src":"11870:6:18","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"11739:174:18"},"scope":4400,"src":"11672:452:18","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2741,"nodeType":"Block","src":"12602:466:18","statements":[{"expression":{"components":[{"expression":{"id":2721,"name":"s_feeConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2392,"src":"12633:11:18","typeDescriptions":{"typeIdentifier":"t_struct$_FeeConfig_$2411_storage","typeString":"struct VRFCoordinatorV2.FeeConfig storage ref"}},"id":2722,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12645:30:18","memberName":"fulfillmentFlatFeeLinkPPMTier1","nodeType":"MemberAccess","referencedDeclaration":2394,"src":"12633:42:18","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"expression":{"id":2723,"name":"s_feeConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2392,"src":"12689:11:18","typeDescriptions":{"typeIdentifier":"t_struct$_FeeConfig_$2411_storage","typeString":"struct VRFCoordinatorV2.FeeConfig storage ref"}},"id":2724,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12701:30:18","memberName":"fulfillmentFlatFeeLinkPPMTier2","nodeType":"MemberAccess","referencedDeclaration":2396,"src":"12689:42:18","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"expression":{"id":2725,"name":"s_feeConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2392,"src":"12745:11:18","typeDescriptions":{"typeIdentifier":"t_struct$_FeeConfig_$2411_storage","typeString":"struct VRFCoordinatorV2.FeeConfig storage ref"}},"id":2726,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12757:30:18","memberName":"fulfillmentFlatFeeLinkPPMTier3","nodeType":"MemberAccess","referencedDeclaration":2398,"src":"12745:42:18","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"expression":{"id":2727,"name":"s_feeConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2392,"src":"12801:11:18","typeDescriptions":{"typeIdentifier":"t_struct$_FeeConfig_$2411_storage","typeString":"struct VRFCoordinatorV2.FeeConfig storage ref"}},"id":2728,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12813:30:18","memberName":"fulfillmentFlatFeeLinkPPMTier4","nodeType":"MemberAccess","referencedDeclaration":2400,"src":"12801:42:18","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"expression":{"id":2729,"name":"s_feeConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2392,"src":"12857:11:18","typeDescriptions":{"typeIdentifier":"t_struct$_FeeConfig_$2411_storage","typeString":"struct VRFCoordinatorV2.FeeConfig storage ref"}},"id":2730,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12869:30:18","memberName":"fulfillmentFlatFeeLinkPPMTier5","nodeType":"MemberAccess","referencedDeclaration":2402,"src":"12857:42:18","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"expression":{"id":2731,"name":"s_feeConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2392,"src":"12913:11:18","typeDescriptions":{"typeIdentifier":"t_struct$_FeeConfig_$2411_storage","typeString":"struct VRFCoordinatorV2.FeeConfig storage ref"}},"id":2732,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12925:12:18","memberName":"reqsForTier2","nodeType":"MemberAccess","referencedDeclaration":2404,"src":"12913:24:18","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},{"expression":{"id":2733,"name":"s_feeConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2392,"src":"12951:11:18","typeDescriptions":{"typeIdentifier":"t_struct$_FeeConfig_$2411_storage","typeString":"struct VRFCoordinatorV2.FeeConfig storage ref"}},"id":2734,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12963:12:18","memberName":"reqsForTier3","nodeType":"MemberAccess","referencedDeclaration":2406,"src":"12951:24:18","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},{"expression":{"id":2735,"name":"s_feeConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2392,"src":"12989:11:18","typeDescriptions":{"typeIdentifier":"t_struct$_FeeConfig_$2411_storage","typeString":"struct VRFCoordinatorV2.FeeConfig storage ref"}},"id":2736,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13001:12:18","memberName":"reqsForTier4","nodeType":"MemberAccess","referencedDeclaration":2408,"src":"12989:24:18","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},{"expression":{"id":2737,"name":"s_feeConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2392,"src":"13027:11:18","typeDescriptions":{"typeIdentifier":"t_struct$_FeeConfig_$2411_storage","typeString":"struct VRFCoordinatorV2.FeeConfig storage ref"}},"id":2738,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13039:12:18","memberName":"reqsForTier5","nodeType":"MemberAccess","referencedDeclaration":2410,"src":"13027:24:18","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}}],"id":2739,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12619:442:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint32_$_t_uint32_$_t_uint32_$_t_uint32_$_t_uint32_$_t_uint24_$_t_uint24_$_t_uint24_$_t_uint24_$","typeString":"tuple(uint32,uint32,uint32,uint32,uint32,uint24,uint24,uint24,uint24)"}},"functionReturnParameters":2720,"id":2740,"nodeType":"Return","src":"12612:449:18"}]},"functionSelector":"5fbbc0d2","id":2742,"implemented":true,"kind":"function","modifiers":[],"name":"getFeeConfig","nameLocation":"12139:12:18","nodeType":"FunctionDefinition","parameters":{"id":2701,"nodeType":"ParameterList","parameters":[],"src":"12151:2:18"},"returnParameters":{"id":2720,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2703,"mutability":"mutable","name":"fulfillmentFlatFeeLinkPPMTier1","nameLocation":"12221:30:18","nodeType":"VariableDeclaration","scope":2742,"src":"12214:37:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2702,"name":"uint32","nodeType":"ElementaryTypeName","src":"12214:6:18","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":2705,"mutability":"mutable","name":"fulfillmentFlatFeeLinkPPMTier2","nameLocation":"12272:30:18","nodeType":"VariableDeclaration","scope":2742,"src":"12265:37:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2704,"name":"uint32","nodeType":"ElementaryTypeName","src":"12265:6:18","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":2707,"mutability":"mutable","name":"fulfillmentFlatFeeLinkPPMTier3","nameLocation":"12323:30:18","nodeType":"VariableDeclaration","scope":2742,"src":"12316:37:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2706,"name":"uint32","nodeType":"ElementaryTypeName","src":"12316:6:18","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":2709,"mutability":"mutable","name":"fulfillmentFlatFeeLinkPPMTier4","nameLocation":"12374:30:18","nodeType":"VariableDeclaration","scope":2742,"src":"12367:37:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2708,"name":"uint32","nodeType":"ElementaryTypeName","src":"12367:6:18","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":2711,"mutability":"mutable","name":"fulfillmentFlatFeeLinkPPMTier5","nameLocation":"12425:30:18","nodeType":"VariableDeclaration","scope":2742,"src":"12418:37:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2710,"name":"uint32","nodeType":"ElementaryTypeName","src":"12418:6:18","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":2713,"mutability":"mutable","name":"reqsForTier2","nameLocation":"12476:12:18","nodeType":"VariableDeclaration","scope":2742,"src":"12469:19:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":2712,"name":"uint24","nodeType":"ElementaryTypeName","src":"12469:6:18","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"},{"constant":false,"id":2715,"mutability":"mutable","name":"reqsForTier3","nameLocation":"12509:12:18","nodeType":"VariableDeclaration","scope":2742,"src":"12502:19:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":2714,"name":"uint24","nodeType":"ElementaryTypeName","src":"12502:6:18","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"},{"constant":false,"id":2717,"mutability":"mutable","name":"reqsForTier4","nameLocation":"12542:12:18","nodeType":"VariableDeclaration","scope":2742,"src":"12535:19:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":2716,"name":"uint24","nodeType":"ElementaryTypeName","src":"12535:6:18","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"},{"constant":false,"id":2719,"mutability":"mutable","name":"reqsForTier5","nameLocation":"12575:12:18","nodeType":"VariableDeclaration","scope":2742,"src":"12568:19:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":2718,"name":"uint24","nodeType":"ElementaryTypeName","src":"12568:6:18","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"12200:397:18"},"scope":4400,"src":"12130:938:18","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2749,"nodeType":"Block","src":"13133:38:18","statements":[{"expression":{"id":2747,"name":"s_totalBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2198,"src":"13150:14:18","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":2746,"id":2748,"nodeType":"Return","src":"13143:21:18"}]},"functionSelector":"12b58349","id":2750,"implemented":true,"kind":"function","modifiers":[],"name":"getTotalBalance","nameLocation":"13083:15:18","nodeType":"FunctionDefinition","parameters":{"id":2743,"nodeType":"ParameterList","parameters":[],"src":"13098:2:18"},"returnParameters":{"id":2746,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2745,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2750,"src":"13124:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2744,"name":"uint256","nodeType":"ElementaryTypeName","src":"13124:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13123:9:18"},"scope":4400,"src":"13074:97:18","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2757,"nodeType":"Block","src":"13245:48:18","statements":[{"expression":{"id":2755,"name":"s_fallbackWeiPerUnitLink","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2386,"src":"13262:24:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":2754,"id":2756,"nodeType":"Return","src":"13255:31:18"}]},"functionSelector":"356dac71","id":2758,"implemented":true,"kind":"function","modifiers":[],"name":"getFallbackWeiPerUnitLink","nameLocation":"13186:25:18","nodeType":"FunctionDefinition","parameters":{"id":2751,"nodeType":"ParameterList","parameters":[],"src":"13211:2:18"},"returnParameters":{"id":2754,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2753,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2758,"src":"13237:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2752,"name":"int256","nodeType":"ElementaryTypeName","src":"13237:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"13236:8:18"},"scope":4400,"src":"13177:116:18","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2788,"nodeType":"Block","src":"13620:200:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":2766,"name":"s_subscriptionConfigs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2189,"src":"13634:21:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_SubscriptionConfig_$2178_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2.SubscriptionConfig storage ref)"}},"id":2768,"indexExpression":{"id":2767,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2761,"src":"13656:5:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13634:28:18","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConfig_$2178_storage","typeString":"struct VRFCoordinatorV2.SubscriptionConfig storage ref"}},"id":2769,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13663:5:18","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":2172,"src":"13634:34:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2772,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13680:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2771,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13672:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2770,"name":"address","nodeType":"ElementaryTypeName","src":"13672:7:18","typeDescriptions":{}}},"id":2773,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13672:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13634:48:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2779,"nodeType":"IfStatement","src":"13630:107:18","trueBody":{"id":2778,"nodeType":"Block","src":"13684:53:18","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2775,"name":"InvalidSubscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2139,"src":"13705:19:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2776,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13705:21:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2777,"nodeType":"RevertStatement","src":"13698:28:18"}]}},{"expression":{"arguments":[{"id":2781,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2761,"src":"13771:5:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"expression":{"baseExpression":{"id":2782,"name":"s_subscriptionConfigs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2189,"src":"13778:21:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_SubscriptionConfig_$2178_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2.SubscriptionConfig storage ref)"}},"id":2784,"indexExpression":{"id":2783,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2761,"src":"13800:5:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13778:28:18","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConfig_$2178_storage","typeString":"struct VRFCoordinatorV2.SubscriptionConfig storage ref"}},"id":2785,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"13807:5:18","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":2172,"src":"13778:34:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2780,"name":"cancelSubscriptionHelper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4268,"src":"13746:24:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint64_$_t_address_$returns$__$","typeString":"function (uint64,address)"}},"id":2786,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13746:67:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2787,"nodeType":"ExpressionStatement","src":"13746:67:18"}]},"documentation":{"id":2759,"nodeType":"StructuredDocumentation","src":"13299:250:18","text":" @notice Owner cancel subscription, sends remaining link directly to the subscription owner.\n @param subId subscription id\n @dev notably can be called even if there are pending requests, outstanding ones may fail onchain"},"functionSelector":"02bcc5b6","id":2789,"implemented":true,"kind":"function","modifiers":[{"id":2764,"kind":"modifierInvocation","modifierName":{"id":2763,"name":"onlyOwner","nameLocations":["13610:9:18"],"nodeType":"IdentifierPath","referencedDeclaration":588,"src":"13610:9:18"},"nodeType":"ModifierInvocation","src":"13610:9:18"}],"name":"ownerCancelSubscription","nameLocation":"13563:23:18","nodeType":"FunctionDefinition","parameters":{"id":2762,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2761,"mutability":"mutable","name":"subId","nameLocation":"13594:5:18","nodeType":"VariableDeclaration","scope":2789,"src":"13587:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":2760,"name":"uint64","nodeType":"ElementaryTypeName","src":"13587:6:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13586:14:18"},"returnParameters":{"id":2765,"nodeType":"ParameterList","parameters":[],"src":"13620:0:18"},"scope":4400,"src":"13554:266:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2847,"nodeType":"Block","src":"14011:534:18","statements":[{"assignments":[2798],"declarations":[{"constant":false,"id":2798,"mutability":"mutable","name":"externalBalance","nameLocation":"14029:15:18","nodeType":"VariableDeclaration","scope":2847,"src":"14021:23:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2797,"name":"uint256","nodeType":"ElementaryTypeName","src":"14021:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2806,"initialValue":{"arguments":[{"arguments":[{"id":2803,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"14070:4:18","typeDescriptions":{"typeIdentifier":"t_contract$_VRFCoordinatorV2_$4400","typeString":"contract VRFCoordinatorV2"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_VRFCoordinatorV2_$4400","typeString":"contract VRFCoordinatorV2"}],"id":2802,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14062:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2801,"name":"address","nodeType":"ElementaryTypeName","src":"14062:7:18","typeDescriptions":{}}},"id":2804,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14062:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2799,"name":"LINK","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2118,"src":"14047:4:18","typeDescriptions":{"typeIdentifier":"t_contract$_LinkTokenInterface_$712","typeString":"contract LinkTokenInterface"}},"id":2800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14052:9:18","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":644,"src":"14047:14:18","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":2805,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14047:29:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"14021:55:18"},{"assignments":[2808],"declarations":[{"constant":false,"id":2808,"mutability":"mutable","name":"internalBalance","nameLocation":"14094:15:18","nodeType":"VariableDeclaration","scope":2847,"src":"14086:23:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2807,"name":"uint256","nodeType":"ElementaryTypeName","src":"14086:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2813,"initialValue":{"arguments":[{"id":2811,"name":"s_totalBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2198,"src":"14120:14:18","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint96","typeString":"uint96"}],"id":2810,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14112:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2809,"name":"uint256","nodeType":"ElementaryTypeName","src":"14112:7:18","typeDescriptions":{}}},"id":2812,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14112:23:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"14086:49:18"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2814,"name":"internalBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2808,"src":"14149:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2815,"name":"externalBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2798,"src":"14167:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14149:33:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2823,"nodeType":"IfStatement","src":"14145:129:18","trueBody":{"id":2822,"nodeType":"Block","src":"14184:90:18","statements":[{"errorCall":{"arguments":[{"id":2818,"name":"internalBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2808,"src":"14230:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2819,"name":"externalBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2798,"src":"14247:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2817,"name":"BalanceInvariantViolated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2159,"src":"14205:24:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":2820,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14205:58:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2821,"nodeType":"RevertStatement","src":"14198:65:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2824,"name":"internalBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2808,"src":"14287:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2825,"name":"externalBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2798,"src":"14305:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14287:33:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2846,"nodeType":"IfStatement","src":"14283:198:18","trueBody":{"id":2845,"nodeType":"Block","src":"14322:159:18","statements":[{"assignments":[2828],"declarations":[{"constant":false,"id":2828,"mutability":"mutable","name":"amount","nameLocation":"14344:6:18","nodeType":"VariableDeclaration","scope":2845,"src":"14336:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2827,"name":"uint256","nodeType":"ElementaryTypeName","src":"14336:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2832,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2829,"name":"externalBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2798,"src":"14353:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2830,"name":"internalBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2808,"src":"14371:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14353:33:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"14336:50:18"},{"expression":{"arguments":[{"id":2836,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2792,"src":"14414:2:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2837,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2828,"src":"14418:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2833,"name":"LINK","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2118,"src":"14400:4:18","typeDescriptions":{"typeIdentifier":"t_contract$_LinkTokenInterface_$712","typeString":"contract LinkTokenInterface"}},"id":2835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14405:8:18","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":689,"src":"14400:13:18","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":2838,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14400:25:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2839,"nodeType":"ExpressionStatement","src":"14400:25:18"},{"eventCall":{"arguments":[{"id":2841,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2792,"src":"14459:2:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2842,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2828,"src":"14463:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2840,"name":"FundsRecovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2165,"src":"14444:14:18","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":2843,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14444:26:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2844,"nodeType":"EmitStatement","src":"14439:31:18"}]}}]},"documentation":{"id":2790,"nodeType":"StructuredDocumentation","src":"13826:127:18","text":" @notice Recover link sent with transfer instead of transferAndCall.\n @param to address to send link to"},"functionSelector":"e72f6e30","id":2848,"implemented":true,"kind":"function","modifiers":[{"id":2795,"kind":"modifierInvocation","modifierName":{"id":2794,"name":"onlyOwner","nameLocations":["14001:9:18"],"nodeType":"IdentifierPath","referencedDeclaration":588,"src":"14001:9:18"},"nodeType":"ModifierInvocation","src":"14001:9:18"}],"name":"recoverFunds","nameLocation":"13967:12:18","nodeType":"FunctionDefinition","parameters":{"id":2793,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2792,"mutability":"mutable","name":"to","nameLocation":"13988:2:18","nodeType":"VariableDeclaration","scope":2848,"src":"13980:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2791,"name":"address","nodeType":"ElementaryTypeName","src":"13980:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"13979:12:18"},"returnParameters":{"id":2796,"nodeType":"ParameterList","parameters":[],"src":"14011:0:18"},"scope":4400,"src":"13958:587:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[324],"body":{"id":2867,"nodeType":"Block","src":"14742:150:18","statements":[{"expression":{"components":[{"expression":{"id":2860,"name":"s_config","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2389,"src":"14773:8:18","typeDescriptions":{"typeIdentifier":"t_struct$_Config_$2384_storage","typeString":"struct VRFCoordinatorV2.Config storage ref"}},"id":2861,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14782:27:18","memberName":"minimumRequestConfirmations","nodeType":"MemberAccess","referencedDeclaration":2375,"src":"14773:36:18","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"expression":{"id":2862,"name":"s_config","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2389,"src":"14823:8:18","typeDescriptions":{"typeIdentifier":"t_struct$_Config_$2384_storage","typeString":"struct VRFCoordinatorV2.Config storage ref"}},"id":2863,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14832:11:18","memberName":"maxGasLimit","nodeType":"MemberAccess","referencedDeclaration":2377,"src":"14823:20:18","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":2864,"name":"s_provingKeyHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2325,"src":"14857:18:18","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}}],"id":2865,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14759:126:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint16_$_t_uint32_$_t_array$_t_bytes32_$dyn_storage_$","typeString":"tuple(uint16,uint32,bytes32[] storage ref)"}},"functionReturnParameters":2859,"id":2866,"nodeType":"Return","src":"14752:133:18"}]},"documentation":{"id":2849,"nodeType":"StructuredDocumentation","src":"14551:56:18","text":" @inheritdoc VRFCoordinatorV2Interface"},"functionSelector":"00012291","id":2868,"implemented":true,"kind":"function","modifiers":[],"name":"getRequestConfig","nameLocation":"14621:16:18","nodeType":"FunctionDefinition","overrides":{"id":2851,"nodeType":"OverrideSpecifier","overrides":[],"src":"14678:8:18"},"parameters":{"id":2850,"nodeType":"ParameterList","parameters":[],"src":"14637:2:18"},"returnParameters":{"id":2859,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2853,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2868,"src":"14704:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":2852,"name":"uint16","nodeType":"ElementaryTypeName","src":"14704:6:18","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":2855,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2868,"src":"14712:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2854,"name":"uint32","nodeType":"ElementaryTypeName","src":"14712:6:18","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":2858,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2868,"src":"14720:16:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2856,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14720:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2857,"nodeType":"ArrayTypeName","src":"14720:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"14703:34:18"},"scope":4400,"src":"14612:280:18","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[340],"body":{"id":3020,"nodeType":"Block","src":"15184:2485:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":2887,"name":"s_subscriptionConfigs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2189,"src":"15258:21:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_SubscriptionConfig_$2178_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2.SubscriptionConfig storage ref)"}},"id":2889,"indexExpression":{"id":2888,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2873,"src":"15280:5:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15258:28:18","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConfig_$2178_storage","typeString":"struct VRFCoordinatorV2.SubscriptionConfig storage ref"}},"id":2890,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15287:5:18","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":2172,"src":"15258:34:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2893,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15304:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2892,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15296:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2891,"name":"address","nodeType":"ElementaryTypeName","src":"15296:7:18","typeDescriptions":{}}},"id":2894,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15296:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15258:48:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2900,"nodeType":"IfStatement","src":"15254:107:18","trueBody":{"id":2899,"nodeType":"Block","src":"15308:53:18","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2896,"name":"InvalidSubscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2139,"src":"15329:19:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2897,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15329:21:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2898,"nodeType":"RevertStatement","src":"15322:28:18"}]}},{"assignments":[2902],"declarations":[{"constant":false,"id":2902,"mutability":"mutable","name":"currentNonce","nameLocation":"15609:12:18","nodeType":"VariableDeclaration","scope":3020,"src":"15602:19:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":2901,"name":"uint64","nodeType":"ElementaryTypeName","src":"15602:6:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"id":2909,"initialValue":{"baseExpression":{"baseExpression":{"id":2903,"name":"s_consumers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2184,"src":"15624:11:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint64_$_t_uint64_$_$","typeString":"mapping(address => mapping(uint64 => uint64))"}},"id":2906,"indexExpression":{"expression":{"id":2904,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"15636:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2905,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15640:6:18","memberName":"sender","nodeType":"MemberAccess","src":"15636:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15624:23:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_uint64_$","typeString":"mapping(uint64 => uint64)"}},"id":2908,"indexExpression":{"id":2907,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2873,"src":"15648:5:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15624:30:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"VariableDeclarationStatement","src":"15602:52:18"},{"condition":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":2912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2910,"name":"currentNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2902,"src":"15668:12:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2911,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15684:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"15668:17:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2920,"nodeType":"IfStatement","src":"15664:89:18","trueBody":{"id":2919,"nodeType":"Block","src":"15687:66:18","statements":[{"errorCall":{"arguments":[{"id":2914,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2873,"src":"15724:5:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"expression":{"id":2915,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"15731:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15735:6:18","memberName":"sender","nodeType":"MemberAccess","src":"15731:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2913,"name":"InvalidConsumer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2137,"src":"15708:15:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint64_$_t_address_$returns$__$","typeString":"function (uint64,address) pure"}},"id":2917,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15708:34:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2918,"nodeType":"RevertStatement","src":"15701:41:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint16","typeString":"uint16"},"id":2924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2921,"name":"requestConfirmations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2875,"src":"15838:20:18","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2922,"name":"s_config","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2389,"src":"15861:8:18","typeDescriptions":{"typeIdentifier":"t_struct$_Config_$2384_storage","typeString":"struct VRFCoordinatorV2.Config storage ref"}},"id":2923,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15870:27:18","memberName":"minimumRequestConfirmations","nodeType":"MemberAccess","referencedDeclaration":2375,"src":"15861:36:18","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"15838:59:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint16","typeString":"uint16"},"id":2927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2925,"name":"requestConfirmations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2875,"src":"15913:20:18","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2926,"name":"MAX_REQUEST_CONFIRMATIONS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2251,"src":"15936:25:18","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"15913:48:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15838:123:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2937,"nodeType":"IfStatement","src":"15821:359:18","trueBody":{"id":2936,"nodeType":"Block","src":"15972:208:18","statements":[{"errorCall":{"arguments":[{"id":2930,"name":"requestConfirmations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2875,"src":"16038:20:18","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"expression":{"id":2931,"name":"s_config","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2389,"src":"16076:8:18","typeDescriptions":{"typeIdentifier":"t_struct$_Config_$2384_storage","typeString":"struct VRFCoordinatorV2.Config storage ref"}},"id":2932,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16085:27:18","memberName":"minimumRequestConfirmations","nodeType":"MemberAccess","referencedDeclaration":2375,"src":"16076:36:18","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":2933,"name":"MAX_REQUEST_CONFIRMATIONS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2251,"src":"16130:25:18","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_uint16","typeString":"uint16"}],"id":2929,"name":"InvalidRequestConfirmations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2265,"src":"15993:27:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint16_$_t_uint16_$_t_uint16_$returns$__$","typeString":"function (uint16,uint16,uint16) pure"}},"id":2934,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15993:176:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2935,"nodeType":"RevertStatement","src":"15986:183:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":2941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2938,"name":"callbackGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2877,"src":"16410:16:18","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":2939,"name":"s_config","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2389,"src":"16429:8:18","typeDescriptions":{"typeIdentifier":"t_struct$_Config_$2384_storage","typeString":"struct VRFCoordinatorV2.Config storage ref"}},"id":2940,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16438:11:18","memberName":"maxGasLimit","nodeType":"MemberAccess","referencedDeclaration":2377,"src":"16429:20:18","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"16410:39:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2949,"nodeType":"IfStatement","src":"16406:131:18","trueBody":{"id":2948,"nodeType":"Block","src":"16451:86:18","statements":[{"errorCall":{"arguments":[{"id":2943,"name":"callbackGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2877,"src":"16487:16:18","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"expression":{"id":2944,"name":"s_config","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2389,"src":"16505:8:18","typeDescriptions":{"typeIdentifier":"t_struct$_Config_$2384_storage","typeString":"struct VRFCoordinatorV2.Config storage ref"}},"id":2945,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16514:11:18","memberName":"maxGasLimit","nodeType":"MemberAccess","referencedDeclaration":2377,"src":"16505:20:18","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint32","typeString":"uint32"}],"id":2942,"name":"GasLimitTooBig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2271,"src":"16472:14:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint32_$_t_uint32_$returns$__$","typeString":"function (uint32,uint32) pure"}},"id":2946,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16472:54:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2947,"nodeType":"RevertStatement","src":"16465:61:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":2952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2950,"name":"numWords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2879,"src":"16550:8:18","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2951,"name":"MAX_NUM_WORDS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2254,"src":"16561:13:18","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"16550:24:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2959,"nodeType":"IfStatement","src":"16546:101:18","trueBody":{"id":2958,"nodeType":"Block","src":"16576:71:18","statements":[{"errorCall":{"arguments":[{"id":2954,"name":"numWords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2879,"src":"16612:8:18","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":2955,"name":"MAX_NUM_WORDS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2254,"src":"16622:13:18","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint32","typeString":"uint32"}],"id":2953,"name":"NumWordsTooBig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2277,"src":"16597:14:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint32_$_t_uint32_$returns$__$","typeString":"function (uint32,uint32) pure"}},"id":2956,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16597:39:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2957,"nodeType":"RevertStatement","src":"16590:46:18"}]}},{"assignments":[2961],"declarations":[{"constant":false,"id":2961,"mutability":"mutable","name":"nonce","nameLocation":"16874:5:18","nodeType":"VariableDeclaration","scope":3020,"src":"16867:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":2960,"name":"uint64","nodeType":"ElementaryTypeName","src":"16867:6:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"id":2965,"initialValue":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":2964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2962,"name":"currentNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2902,"src":"16882:12:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2963,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16897:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"16882:16:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"VariableDeclarationStatement","src":"16867:31:18"},{"assignments":[2967,2969],"declarations":[{"constant":false,"id":2967,"mutability":"mutable","name":"requestId","nameLocation":"16917:9:18","nodeType":"VariableDeclaration","scope":3020,"src":"16909:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2966,"name":"uint256","nodeType":"ElementaryTypeName","src":"16909:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2969,"mutability":"mutable","name":"preSeed","nameLocation":"16936:7:18","nodeType":"VariableDeclaration","scope":3020,"src":"16928:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2968,"name":"uint256","nodeType":"ElementaryTypeName","src":"16928:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2977,"initialValue":{"arguments":[{"id":2971,"name":"keyHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2871,"src":"16977:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":2972,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"16998:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17002:6:18","memberName":"sender","nodeType":"MemberAccess","src":"16998:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2974,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2873,"src":"17022:5:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":2975,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2961,"src":"17041:5:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":2970,"name":"computeRequestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3078,"src":"16947:16:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_address_$_t_uint64_$_t_uint64_$returns$_t_uint256_$_t_uint256_$","typeString":"function (bytes32,address,uint64,uint64) pure returns (uint256,uint256)"}},"id":2976,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16947:109:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"16908:148:18"},{"expression":{"id":2995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2978,"name":"s_requestCommitments","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2333,"src":"17067:20:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bytes32_$","typeString":"mapping(uint256 => bytes32)"}},"id":2980,"indexExpression":{"id":2979,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2967,"src":"17088:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17067:31:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":2984,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2967,"src":"17152:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2985,"name":"ChainSpecificUtil","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":181,"src":"17179:17:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ChainSpecificUtil_$181_$","typeString":"type(library ChainSpecificUtil)"}},"id":2986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17197:14:18","memberName":"getBlockNumber","nodeType":"MemberAccess","referencedDeclaration":116,"src":"17179:32:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":2987,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17179:34:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2988,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2873,"src":"17231:5:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":2989,"name":"callbackGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2877,"src":"17254:16:18","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":2990,"name":"numWords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2879,"src":"17288:8:18","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"expression":{"id":2991,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"17314:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17318:6:18","memberName":"sender","nodeType":"MemberAccess","src":"17314:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2982,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"17124:3:18","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2983,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"17128:6:18","memberName":"encode","nodeType":"MemberAccess","src":"17124:10:18","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2993,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17124:214:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2981,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"17101:9:18","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2994,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17101:247:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"17067:281:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2996,"nodeType":"ExpressionStatement","src":"17067:281:18"},{"eventCall":{"arguments":[{"id":2998,"name":"keyHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2871,"src":"17397:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2999,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2967,"src":"17418:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3000,"name":"preSeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2969,"src":"17441:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3001,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2873,"src":"17462:5:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":3002,"name":"requestConfirmations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2875,"src":"17481:20:18","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":3003,"name":"callbackGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2877,"src":"17515:16:18","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":3004,"name":"numWords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2879,"src":"17545:8:18","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"expression":{"id":3005,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"17567:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17571:6:18","memberName":"sender","nodeType":"MemberAccess","src":"17567:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2997,"name":"RandomWordsRequested","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2363,"src":"17363:20:18","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_uint256_$_t_uint256_$_t_uint64_$_t_uint16_$_t_uint32_$_t_uint32_$_t_address_$returns$__$","typeString":"function (bytes32,uint256,uint256,uint64,uint16,uint32,uint32,address)"}},"id":3007,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17363:224:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3008,"nodeType":"EmitStatement","src":"17358:229:18"},{"expression":{"id":3016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":3009,"name":"s_consumers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2184,"src":"17597:11:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint64_$_t_uint64_$_$","typeString":"mapping(address => mapping(uint64 => uint64))"}},"id":3013,"indexExpression":{"expression":{"id":3010,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"17609:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17613:6:18","memberName":"sender","nodeType":"MemberAccess","src":"17609:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17597:23:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_uint64_$","typeString":"mapping(uint64 => uint64)"}},"id":3014,"indexExpression":{"id":3012,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2873,"src":"17621:5:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17597:30:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3015,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2961,"src":"17630:5:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"17597:38:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":3017,"nodeType":"ExpressionStatement","src":"17597:38:18"},{"expression":{"id":3018,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2967,"src":"17653:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2886,"id":3019,"nodeType":"Return","src":"17646:16:18"}]},"documentation":{"id":2869,"nodeType":"StructuredDocumentation","src":"14898:56:18","text":" @inheritdoc VRFCoordinatorV2Interface"},"functionSelector":"5d3b1d30","id":3021,"implemented":true,"kind":"function","modifiers":[{"id":2883,"kind":"modifierInvocation","modifierName":{"id":2882,"name":"nonReentrant","nameLocations":["15153:12:18"],"nodeType":"IdentifierPath","referencedDeclaration":4389,"src":"15153:12:18"},"nodeType":"ModifierInvocation","src":"15153:12:18"}],"name":"requestRandomWords","nameLocation":"14968:18:18","nodeType":"FunctionDefinition","overrides":{"id":2881,"nodeType":"OverrideSpecifier","overrides":[],"src":"15144:8:18"},"parameters":{"id":2880,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2871,"mutability":"mutable","name":"keyHash","nameLocation":"15004:7:18","nodeType":"VariableDeclaration","scope":3021,"src":"14996:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2870,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14996:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2873,"mutability":"mutable","name":"subId","nameLocation":"15028:5:18","nodeType":"VariableDeclaration","scope":3021,"src":"15021:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":2872,"name":"uint64","nodeType":"ElementaryTypeName","src":"15021:6:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":2875,"mutability":"mutable","name":"requestConfirmations","nameLocation":"15050:20:18","nodeType":"VariableDeclaration","scope":3021,"src":"15043:27:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":2874,"name":"uint16","nodeType":"ElementaryTypeName","src":"15043:6:18","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":2877,"mutability":"mutable","name":"callbackGasLimit","nameLocation":"15087:16:18","nodeType":"VariableDeclaration","scope":3021,"src":"15080:23:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2876,"name":"uint32","nodeType":"ElementaryTypeName","src":"15080:6:18","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":2879,"mutability":"mutable","name":"numWords","nameLocation":"15120:8:18","nodeType":"VariableDeclaration","scope":3021,"src":"15113:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":2878,"name":"uint32","nodeType":"ElementaryTypeName","src":"15113:6:18","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"14986:148:18"},"returnParameters":{"id":2886,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2885,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3021,"src":"15175:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2884,"name":"uint256","nodeType":"ElementaryTypeName","src":"15175:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15174:9:18"},"scope":4400,"src":"14959:2710:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3033,"nodeType":"Block","src":"17904:55:18","statements":[{"expression":{"baseExpression":{"id":3029,"name":"s_requestCommitments","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2333,"src":"17921:20:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bytes32_$","typeString":"mapping(uint256 => bytes32)"}},"id":3031,"indexExpression":{"id":3030,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3024,"src":"17942:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17921:31:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3028,"id":3032,"nodeType":"Return","src":"17914:38:18"}]},"documentation":{"id":3022,"nodeType":"StructuredDocumentation","src":"17675:150:18","text":" @notice Get request commitment\n @param requestId id of request\n @dev used to determine if a request is fulfilled or not"},"functionSelector":"69bcdb7d","id":3034,"implemented":true,"kind":"function","modifiers":[],"name":"getCommitment","nameLocation":"17839:13:18","nodeType":"FunctionDefinition","parameters":{"id":3025,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3024,"mutability":"mutable","name":"requestId","nameLocation":"17861:9:18","nodeType":"VariableDeclaration","scope":3034,"src":"17853:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3023,"name":"uint256","nodeType":"ElementaryTypeName","src":"17853:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17852:19:18"},"returnParameters":{"id":3028,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3027,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3034,"src":"17895:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3026,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17895:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"17894:9:18"},"scope":4400,"src":"17830:129:18","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":3077,"nodeType":"Block","src":"18130:194:18","statements":[{"assignments":[3050],"declarations":[{"constant":false,"id":3050,"mutability":"mutable","name":"preSeed","nameLocation":"18148:7:18","nodeType":"VariableDeclaration","scope":3077,"src":"18140:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3049,"name":"uint256","nodeType":"ElementaryTypeName","src":"18140:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3063,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":3056,"name":"keyHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3036,"src":"18200:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3057,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3038,"src":"18209:6:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3058,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3040,"src":"18217:5:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":3059,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3042,"src":"18224:5:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint64","typeString":"uint64"}],"expression":{"id":3054,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"18189:3:18","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3055,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"18193:6:18","memberName":"encode","nodeType":"MemberAccess","src":"18189:10:18","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3060,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18189:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3053,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"18179:9:18","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3061,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18179:52:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3052,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18158:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3051,"name":"uint256","nodeType":"ElementaryTypeName","src":"18158:7:18","typeDescriptions":{}}},"id":3062,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18158:83:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"18140:101:18"},{"expression":{"components":[{"arguments":[{"arguments":[{"arguments":[{"id":3069,"name":"keyHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3036,"src":"18288:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3070,"name":"preSeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3050,"src":"18297:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3067,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"18277:3:18","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3068,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"18281:6:18","memberName":"encode","nodeType":"MemberAccess","src":"18277:10:18","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3071,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18277:28:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3066,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"18267:9:18","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3072,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18267:39:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3065,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18259:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3064,"name":"uint256","nodeType":"ElementaryTypeName","src":"18259:7:18","typeDescriptions":{}}},"id":3073,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18259:48:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3074,"name":"preSeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3050,"src":"18309:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3075,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"18258:59:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"functionReturnParameters":3048,"id":3076,"nodeType":"Return","src":"18251:66:18"}]},"id":3078,"implemented":true,"kind":"function","modifiers":[],"name":"computeRequestId","nameLocation":"17974:16:18","nodeType":"FunctionDefinition","parameters":{"id":3043,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3036,"mutability":"mutable","name":"keyHash","nameLocation":"18008:7:18","nodeType":"VariableDeclaration","scope":3078,"src":"18000:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3035,"name":"bytes32","nodeType":"ElementaryTypeName","src":"18000:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3038,"mutability":"mutable","name":"sender","nameLocation":"18033:6:18","nodeType":"VariableDeclaration","scope":3078,"src":"18025:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3037,"name":"address","nodeType":"ElementaryTypeName","src":"18025:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3040,"mutability":"mutable","name":"subId","nameLocation":"18056:5:18","nodeType":"VariableDeclaration","scope":3078,"src":"18049:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":3039,"name":"uint64","nodeType":"ElementaryTypeName","src":"18049:6:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":3042,"mutability":"mutable","name":"nonce","nameLocation":"18078:5:18","nodeType":"VariableDeclaration","scope":3078,"src":"18071:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":3041,"name":"uint64","nodeType":"ElementaryTypeName","src":"18071:6:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"17990:99:18"},"returnParameters":{"id":3048,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3045,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3078,"src":"18112:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3044,"name":"uint256","nodeType":"ElementaryTypeName","src":"18112:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3047,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3078,"src":"18121:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3046,"name":"uint256","nodeType":"ElementaryTypeName","src":"18121:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18111:18:18"},"scope":4400,"src":"17965:359:18","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3093,"nodeType":"Block","src":"18630:1550:18","statements":[{"AST":{"nativeSrc":"18705:1445:18","nodeType":"YulBlock","src":"18705:1445:18","statements":[{"nativeSrc":"18719:14:18","nodeType":"YulVariableDeclaration","src":"18719:14:18","value":{"arguments":[],"functionName":{"name":"gas","nativeSrc":"18728:3:18","nodeType":"YulIdentifier","src":"18728:3:18"},"nativeSrc":"18728:5:18","nodeType":"YulFunctionCall","src":"18728:5:18"},"variables":[{"name":"g","nativeSrc":"18723:1:18","nodeType":"YulTypedName","src":"18723:1:18","type":""}]},{"body":{"nativeSrc":"19285:44:18","nodeType":"YulBlock","src":"19285:44:18","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"19310:1:18","nodeType":"YulLiteral","src":"19310:1:18","type":"","value":"0"},{"kind":"number","nativeSrc":"19313:1:18","nodeType":"YulLiteral","src":"19313:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"19303:6:18","nodeType":"YulIdentifier","src":"19303:6:18"},"nativeSrc":"19303:12:18","nodeType":"YulFunctionCall","src":"19303:12:18"},"nativeSrc":"19303:12:18","nodeType":"YulExpressionStatement","src":"19303:12:18"}]},"condition":{"arguments":[{"name":"g","nativeSrc":"19256:1:18","nodeType":"YulIdentifier","src":"19256:1:18"},{"name":"GAS_FOR_CALL_EXACT_CHECK","nativeSrc":"19259:24:18","nodeType":"YulIdentifier","src":"19259:24:18"}],"functionName":{"name":"lt","nativeSrc":"19253:2:18","nodeType":"YulIdentifier","src":"19253:2:18"},"nativeSrc":"19253:31:18","nodeType":"YulFunctionCall","src":"19253:31:18"},"nativeSrc":"19250:79:18","nodeType":"YulIf","src":"19250:79:18"},{"nativeSrc":"19342:37:18","nodeType":"YulAssignment","src":"19342:37:18","value":{"arguments":[{"name":"g","nativeSrc":"19351:1:18","nodeType":"YulIdentifier","src":"19351:1:18"},{"name":"GAS_FOR_CALL_EXACT_CHECK","nativeSrc":"19354:24:18","nodeType":"YulIdentifier","src":"19354:24:18"}],"functionName":{"name":"sub","nativeSrc":"19347:3:18","nodeType":"YulIdentifier","src":"19347:3:18"},"nativeSrc":"19347:32:18","nodeType":"YulFunctionCall","src":"19347:32:18"},"variableNames":[{"name":"g","nativeSrc":"19342:1:18","nodeType":"YulIdentifier","src":"19342:1:18"}]},{"body":{"nativeSrc":"19540:44:18","nodeType":"YulBlock","src":"19540:44:18","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"19565:1:18","nodeType":"YulLiteral","src":"19565:1:18","type":"","value":"0"},{"kind":"number","nativeSrc":"19568:1:18","nodeType":"YulLiteral","src":"19568:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"19558:6:18","nodeType":"YulIdentifier","src":"19558:6:18"},"nativeSrc":"19558:12:18","nodeType":"YulFunctionCall","src":"19558:12:18"},"nativeSrc":"19558:12:18","nodeType":"YulExpressionStatement","src":"19558:12:18"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"g","nativeSrc":"19512:1:18","nodeType":"YulIdentifier","src":"19512:1:18"},{"arguments":[{"name":"g","nativeSrc":"19519:1:18","nodeType":"YulIdentifier","src":"19519:1:18"},{"kind":"number","nativeSrc":"19522:2:18","nodeType":"YulLiteral","src":"19522:2:18","type":"","value":"64"}],"functionName":{"name":"div","nativeSrc":"19515:3:18","nodeType":"YulIdentifier","src":"19515:3:18"},"nativeSrc":"19515:10:18","nodeType":"YulFunctionCall","src":"19515:10:18"}],"functionName":{"name":"sub","nativeSrc":"19508:3:18","nodeType":"YulIdentifier","src":"19508:3:18"},"nativeSrc":"19508:18:18","nodeType":"YulFunctionCall","src":"19508:18:18"},{"name":"gasAmount","nativeSrc":"19528:9:18","nodeType":"YulIdentifier","src":"19528:9:18"}],"functionName":{"name":"gt","nativeSrc":"19505:2:18","nodeType":"YulIdentifier","src":"19505:2:18"},"nativeSrc":"19505:33:18","nodeType":"YulFunctionCall","src":"19505:33:18"}],"functionName":{"name":"iszero","nativeSrc":"19498:6:18","nodeType":"YulIdentifier","src":"19498:6:18"},"nativeSrc":"19498:41:18","nodeType":"YulFunctionCall","src":"19498:41:18"},"nativeSrc":"19495:89:18","nodeType":"YulIf","src":"19495:89:18"},{"body":{"nativeSrc":"19734:44:18","nodeType":"YulBlock","src":"19734:44:18","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"19759:1:18","nodeType":"YulLiteral","src":"19759:1:18","type":"","value":"0"},{"kind":"number","nativeSrc":"19762:1:18","nodeType":"YulLiteral","src":"19762:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"19752:6:18","nodeType":"YulIdentifier","src":"19752:6:18"},"nativeSrc":"19752:12:18","nodeType":"YulFunctionCall","src":"19752:12:18"},"nativeSrc":"19752:12:18","nodeType":"YulExpressionStatement","src":"19752:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"target","nativeSrc":"19725:6:18","nodeType":"YulIdentifier","src":"19725:6:18"}],"functionName":{"name":"extcodesize","nativeSrc":"19713:11:18","nodeType":"YulIdentifier","src":"19713:11:18"},"nativeSrc":"19713:19:18","nodeType":"YulFunctionCall","src":"19713:19:18"}],"functionName":{"name":"iszero","nativeSrc":"19706:6:18","nodeType":"YulIdentifier","src":"19706:6:18"},"nativeSrc":"19706:27:18","nodeType":"YulFunctionCall","src":"19706:27:18"},"nativeSrc":"19703:75:18","nodeType":"YulIf","src":"19703:75:18"},{"nativeSrc":"19941:199:18","nodeType":"YulAssignment","src":"19941:199:18","value":{"arguments":[{"name":"gasAmount","nativeSrc":"19974:9:18","nodeType":"YulIdentifier","src":"19974:9:18"},{"name":"target","nativeSrc":"20001:6:18","nodeType":"YulIdentifier","src":"20001:6:18"},{"kind":"number","nativeSrc":"20025:1:18","nodeType":"YulLiteral","src":"20025:1:18","type":"","value":"0"},{"arguments":[{"name":"data","nativeSrc":"20048:4:18","nodeType":"YulIdentifier","src":"20048:4:18"},{"kind":"number","nativeSrc":"20054:4:18","nodeType":"YulLiteral","src":"20054:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"20044:3:18","nodeType":"YulIdentifier","src":"20044:3:18"},"nativeSrc":"20044:15:18","nodeType":"YulFunctionCall","src":"20044:15:18"},{"arguments":[{"name":"data","nativeSrc":"20083:4:18","nodeType":"YulIdentifier","src":"20083:4:18"}],"functionName":{"name":"mload","nativeSrc":"20077:5:18","nodeType":"YulIdentifier","src":"20077:5:18"},"nativeSrc":"20077:11:18","nodeType":"YulFunctionCall","src":"20077:11:18"},{"kind":"number","nativeSrc":"20106:1:18","nodeType":"YulLiteral","src":"20106:1:18","type":"","value":"0"},{"kind":"number","nativeSrc":"20125:1:18","nodeType":"YulLiteral","src":"20125:1:18","type":"","value":"0"}],"functionName":{"name":"call","nativeSrc":"19952:4:18","nodeType":"YulIdentifier","src":"19952:4:18"},"nativeSrc":"19952:188:18","nodeType":"YulFunctionCall","src":"19952:188:18"},"variableNames":[{"name":"success","nativeSrc":"19941:7:18","nodeType":"YulIdentifier","src":"19941:7:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2257,"isOffset":false,"isSlot":false,"src":"19259:24:18","valueSize":1},{"declaration":2257,"isOffset":false,"isSlot":false,"src":"19354:24:18","valueSize":1},{"declaration":3085,"isOffset":false,"isSlot":false,"src":"20048:4:18","valueSize":1},{"declaration":3085,"isOffset":false,"isSlot":false,"src":"20083:4:18","valueSize":1},{"declaration":3081,"isOffset":false,"isSlot":false,"src":"19528:9:18","valueSize":1},{"declaration":3081,"isOffset":false,"isSlot":false,"src":"19974:9:18","valueSize":1},{"declaration":3088,"isOffset":false,"isSlot":false,"src":"19941:7:18","valueSize":1},{"declaration":3083,"isOffset":false,"isSlot":false,"src":"19725:6:18","valueSize":1},{"declaration":3083,"isOffset":false,"isSlot":false,"src":"20001:6:18","valueSize":1}],"id":3090,"nodeType":"InlineAssembly","src":"18696:1454:18"},{"expression":{"id":3091,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3088,"src":"20166:7:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3089,"id":3092,"nodeType":"Return","src":"20159:14:18"}]},"documentation":{"id":3079,"nodeType":"StructuredDocumentation","src":"18330:154:18","text":" @dev calls target address with exactly gasAmount gas and data as calldata\n or reverts if at least gasAmount gas is not available."},"id":3094,"implemented":true,"kind":"function","modifiers":[],"name":"callWithExactGas","nameLocation":"18498:16:18","nodeType":"FunctionDefinition","parameters":{"id":3086,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3081,"mutability":"mutable","name":"gasAmount","nameLocation":"18532:9:18","nodeType":"VariableDeclaration","scope":3094,"src":"18524:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3080,"name":"uint256","nodeType":"ElementaryTypeName","src":"18524:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3083,"mutability":"mutable","name":"target","nameLocation":"18559:6:18","nodeType":"VariableDeclaration","scope":3094,"src":"18551:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3082,"name":"address","nodeType":"ElementaryTypeName","src":"18551:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3085,"mutability":"mutable","name":"data","nameLocation":"18588:4:18","nodeType":"VariableDeclaration","scope":3094,"src":"18575:17:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3084,"name":"bytes","nodeType":"ElementaryTypeName","src":"18575:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18514:84:18"},"returnParameters":{"id":3089,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3088,"mutability":"mutable","name":"success","nameLocation":"18621:7:18","nodeType":"VariableDeclaration","scope":3094,"src":"18616:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3087,"name":"bool","nodeType":"ElementaryTypeName","src":"18616:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"18615:14:18"},"scope":4400,"src":"18489:1691:18","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":3244,"nodeType":"Block","src":"20395:1435:18","statements":[{"expression":{"id":3114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3109,"name":"keyHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3103,"src":"20405:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":3111,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3097,"src":"20425:5:18","typeDescriptions":{"typeIdentifier":"t_struct$_Proof_$1989_memory_ptr","typeString":"struct VRF.Proof memory"}},"id":3112,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"20431:2:18","memberName":"pk","nodeType":"MemberAccess","referencedDeclaration":1966,"src":"20425:8:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$2_memory_ptr","typeString":"uint256[2] memory"}],"id":3110,"name":"hashOfKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2611,"src":"20415:9:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$2_memory_ptr_$returns$_t_bytes32_$","typeString":"function (uint256[2] memory) pure returns (bytes32)"}},"id":3113,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20415:19:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"20405:29:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3115,"nodeType":"ExpressionStatement","src":"20405:29:18"},{"assignments":[3117],"declarations":[{"constant":false,"id":3117,"mutability":"mutable","name":"oracle","nameLocation":"20507:6:18","nodeType":"VariableDeclaration","scope":3244,"src":"20499:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3116,"name":"address","nodeType":"ElementaryTypeName","src":"20499:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3121,"initialValue":{"baseExpression":{"id":3118,"name":"s_provingKeys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2322,"src":"20516:13:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_address_$","typeString":"mapping(bytes32 => address)"}},"id":3120,"indexExpression":{"id":3119,"name":"keyHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3103,"src":"20530:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20516:22:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"20499:39:18"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3122,"name":"oracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3117,"src":"20552:6:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":3125,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20570:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3124,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20562:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3123,"name":"address","nodeType":"ElementaryTypeName","src":"20562:7:18","typeDescriptions":{}}},"id":3126,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20562:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"20552:20:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3133,"nodeType":"IfStatement","src":"20548:83:18","trueBody":{"id":3132,"nodeType":"Block","src":"20574:57:18","statements":[{"errorCall":{"arguments":[{"id":3129,"name":"keyHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3103,"src":"20612:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3128,"name":"NoSuchProvingKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2285,"src":"20595:16:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$returns$__$","typeString":"function (bytes32) pure"}},"id":3130,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20595:25:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3131,"nodeType":"RevertStatement","src":"20588:32:18"}]}},{"expression":{"id":3146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3134,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3105,"src":"20640:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"arguments":[{"id":3140,"name":"keyHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3103,"src":"20681:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":3141,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3097,"src":"20690:5:18","typeDescriptions":{"typeIdentifier":"t_struct$_Proof_$1989_memory_ptr","typeString":"struct VRF.Proof memory"}},"id":3142,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"20696:4:18","memberName":"seed","nodeType":"MemberAccess","referencedDeclaration":1976,"src":"20690:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3138,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"20670:3:18","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3139,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"20674:6:18","memberName":"encode","nodeType":"MemberAccess","src":"20670:10:18","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20670:31:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3137,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"20660:9:18","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3144,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20660:42:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3136,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20652:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3135,"name":"uint256","nodeType":"ElementaryTypeName","src":"20652:7:18","typeDescriptions":{}}},"id":3145,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20652:51:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20640:63:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3147,"nodeType":"ExpressionStatement","src":"20640:63:18"},{"assignments":[3149],"declarations":[{"constant":false,"id":3149,"mutability":"mutable","name":"commitment","nameLocation":"20721:10:18","nodeType":"VariableDeclaration","scope":3244,"src":"20713:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3148,"name":"bytes32","nodeType":"ElementaryTypeName","src":"20713:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3153,"initialValue":{"baseExpression":{"id":3150,"name":"s_requestCommitments","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2333,"src":"20734:20:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bytes32_$","typeString":"mapping(uint256 => bytes32)"}},"id":3152,"indexExpression":{"id":3151,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3105,"src":"20755:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20734:31:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"20713:52:18"},{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":3156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3154,"name":"commitment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3149,"src":"20779:10:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3155,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20793:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"20779:15:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3161,"nodeType":"IfStatement","src":"20775:77:18","trueBody":{"id":3160,"nodeType":"Block","src":"20796:56:18","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3157,"name":"NoCorrespondingRequest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2297,"src":"20817:22:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3158,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20817:24:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3159,"nodeType":"RevertStatement","src":"20810:31:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":3179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3162,"name":"commitment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3149,"src":"20878:10:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"arguments":[{"id":3166,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3105,"src":"20963:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3167,"name":"rc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3100,"src":"20994:2:18","typeDescriptions":{"typeIdentifier":"t_struct$_RequestCommitment_$2318_memory_ptr","typeString":"struct VRFCoordinatorV2.RequestCommitment memory"}},"id":3168,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"20997:8:18","memberName":"blockNum","nodeType":"MemberAccess","referencedDeclaration":2309,"src":"20994:11:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"expression":{"id":3169,"name":"rc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3100,"src":"21027:2:18","typeDescriptions":{"typeIdentifier":"t_struct$_RequestCommitment_$2318_memory_ptr","typeString":"struct VRFCoordinatorV2.RequestCommitment memory"}},"id":3170,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"21030:5:18","memberName":"subId","nodeType":"MemberAccess","referencedDeclaration":2311,"src":"21027:8:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"expression":{"id":3171,"name":"rc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3100,"src":"21057:2:18","typeDescriptions":{"typeIdentifier":"t_struct$_RequestCommitment_$2318_memory_ptr","typeString":"struct VRFCoordinatorV2.RequestCommitment memory"}},"id":3172,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"21060:16:18","memberName":"callbackGasLimit","nodeType":"MemberAccess","referencedDeclaration":2313,"src":"21057:19:18","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"expression":{"id":3173,"name":"rc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3100,"src":"21098:2:18","typeDescriptions":{"typeIdentifier":"t_struct$_RequestCommitment_$2318_memory_ptr","typeString":"struct VRFCoordinatorV2.RequestCommitment memory"}},"id":3174,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"21101:8:18","memberName":"numWords","nodeType":"MemberAccess","referencedDeclaration":2315,"src":"21098:11:18","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"expression":{"id":3175,"name":"rc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3100,"src":"21131:2:18","typeDescriptions":{"typeIdentifier":"t_struct$_RequestCommitment_$2318_memory_ptr","typeString":"struct VRFCoordinatorV2.RequestCommitment memory"}},"id":3176,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"21134:6:18","memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":2317,"src":"21131:9:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3164,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"20931:3:18","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3165,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"20935:6:18","memberName":"encode","nodeType":"MemberAccess","src":"20931:10:18","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20931:227:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3163,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"20904:9:18","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3178,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20904:268:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"20878:294:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3184,"nodeType":"IfStatement","src":"20861:375:18","trueBody":{"id":3183,"nodeType":"Block","src":"21183:53:18","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3180,"name":"IncorrectCommitment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2299,"src":"21204:19:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3181,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21204:21:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3182,"nodeType":"RevertStatement","src":"21197:28:18"}]}},{"assignments":[3186],"declarations":[{"constant":false,"id":3186,"mutability":"mutable","name":"blockHash","nameLocation":"21254:9:18","nodeType":"VariableDeclaration","scope":3244,"src":"21246:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3185,"name":"bytes32","nodeType":"ElementaryTypeName","src":"21246:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3192,"initialValue":{"arguments":[{"expression":{"id":3189,"name":"rc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3100,"src":"21297:2:18","typeDescriptions":{"typeIdentifier":"t_struct$_RequestCommitment_$2318_memory_ptr","typeString":"struct VRFCoordinatorV2.RequestCommitment memory"}},"id":3190,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"21300:8:18","memberName":"blockNum","nodeType":"MemberAccess","referencedDeclaration":2309,"src":"21297:11:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"expression":{"id":3187,"name":"ChainSpecificUtil","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":181,"src":"21266:17:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ChainSpecificUtil_$181_$","typeString":"type(library ChainSpecificUtil)"}},"id":3188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"21284:12:18","memberName":"getBlockhash","nodeType":"MemberAccess","referencedDeclaration":89,"src":"21266:30:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint64_$returns$_t_bytes32_$","typeString":"function (uint64) view returns (bytes32)"}},"id":3191,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21266:43:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"21246:63:18"},{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":3198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3193,"name":"blockHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3186,"src":"21323:9:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":3196,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21344:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3195,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21336:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3194,"name":"bytes32","nodeType":"ElementaryTypeName","src":"21336:7:18","typeDescriptions":{}}},"id":3197,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21336:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"21323:23:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3221,"nodeType":"IfStatement","src":"21319:221:18","trueBody":{"id":3220,"nodeType":"Block","src":"21348:192:18","statements":[{"expression":{"id":3205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3199,"name":"blockHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3186,"src":"21362:9:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":3202,"name":"rc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3100,"src":"21403:2:18","typeDescriptions":{"typeIdentifier":"t_struct$_RequestCommitment_$2318_memory_ptr","typeString":"struct VRFCoordinatorV2.RequestCommitment memory"}},"id":3203,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"21406:8:18","memberName":"blockNum","nodeType":"MemberAccess","referencedDeclaration":2309,"src":"21403:11:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"expression":{"id":3200,"name":"BLOCKHASH_STORE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2124,"src":"21374:15:18","typeDescriptions":{"typeIdentifier":"t_contract$_BlockhashStoreInterface_$303","typeString":"contract BlockhashStoreInterface"}},"id":3201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"21390:12:18","memberName":"getBlockhash","nodeType":"MemberAccess","referencedDeclaration":302,"src":"21374:28:18","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_bytes32_$","typeString":"function (uint256) view external returns (bytes32)"}},"id":3204,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21374:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"21362:53:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3206,"nodeType":"ExpressionStatement","src":"21362:53:18"},{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":3212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3207,"name":"blockHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3186,"src":"21433:9:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":3210,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21454:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3209,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21446:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3208,"name":"bytes32","nodeType":"ElementaryTypeName","src":"21446:7:18","typeDescriptions":{}}},"id":3211,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21446:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"21433:23:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3219,"nodeType":"IfStatement","src":"21429:101:18","trueBody":{"id":3218,"nodeType":"Block","src":"21458:72:18","statements":[{"errorCall":{"arguments":[{"expression":{"id":3214,"name":"rc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3100,"src":"21503:2:18","typeDescriptions":{"typeIdentifier":"t_struct$_RequestCommitment_$2318_memory_ptr","typeString":"struct VRFCoordinatorV2.RequestCommitment memory"}},"id":3215,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"21506:8:18","memberName":"blockNum","nodeType":"MemberAccess","referencedDeclaration":2309,"src":"21503:11:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":3213,"name":"BlockhashNotInStore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2303,"src":"21483:19:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3216,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21483:32:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3217,"nodeType":"RevertStatement","src":"21476:39:18"}]}}]}},{"assignments":[3223],"declarations":[{"constant":false,"id":3223,"mutability":"mutable","name":"actualSeed","nameLocation":"21638:10:18","nodeType":"VariableDeclaration","scope":3244,"src":"21630:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3222,"name":"uint256","nodeType":"ElementaryTypeName","src":"21630:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3235,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"expression":{"id":3229,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3097,"src":"21699:5:18","typeDescriptions":{"typeIdentifier":"t_struct$_Proof_$1989_memory_ptr","typeString":"struct VRF.Proof memory"}},"id":3230,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"21705:4:18","memberName":"seed","nodeType":"MemberAccess","referencedDeclaration":1976,"src":"21699:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3231,"name":"blockHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3186,"src":"21711:9:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":3227,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"21682:3:18","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3228,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"21686:12:18","memberName":"encodePacked","nodeType":"MemberAccess","src":"21682:16:18","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3232,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21682:39:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3226,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"21672:9:18","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3233,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21672:50:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3225,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21651:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3224,"name":"uint256","nodeType":"ElementaryTypeName","src":"21651:7:18","typeDescriptions":{}}},"id":3234,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21651:81:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"21630:102:18"},{"expression":{"id":3242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3236,"name":"randomness","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3107,"src":"21742:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3239,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3097,"src":"21783:5:18","typeDescriptions":{"typeIdentifier":"t_struct$_Proof_$1989_memory_ptr","typeString":"struct VRF.Proof memory"}},{"id":3240,"name":"actualSeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3223,"src":"21790:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Proof_$1989_memory_ptr","typeString":"struct VRF.Proof memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3237,"name":"VRF","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2035,"src":"21755:3:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_VRF_$2035_$","typeString":"type(contract VRF)"}},"id":3238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"21759:23:18","memberName":"randomValueFromVRFProof","nodeType":"MemberAccess","referencedDeclaration":2034,"src":"21755:27:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Proof_$1989_memory_ptr_$_t_uint256_$returns$_t_uint256_$","typeString":"function (struct VRF.Proof memory,uint256) view returns (uint256)"}},"id":3241,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21755:46:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"21742:59:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3243,"nodeType":"ExpressionStatement","src":"21742:59:18"}]},"id":3245,"implemented":true,"kind":"function","modifiers":[],"name":"getRandomnessFromProof","nameLocation":"20195:22:18","nodeType":"FunctionDefinition","parameters":{"id":3101,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3097,"mutability":"mutable","name":"proof","nameLocation":"20240:5:18","nodeType":"VariableDeclaration","scope":3245,"src":"20227:18:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Proof_$1989_memory_ptr","typeString":"struct VRF.Proof"},"typeName":{"id":3096,"nodeType":"UserDefinedTypeName","pathNode":{"id":3095,"name":"Proof","nameLocations":["20227:5:18"],"nodeType":"IdentifierPath","referencedDeclaration":1989,"src":"20227:5:18"},"referencedDeclaration":1989,"src":"20227:5:18","typeDescriptions":{"typeIdentifier":"t_struct$_Proof_$1989_storage_ptr","typeString":"struct VRF.Proof"}},"visibility":"internal"},{"constant":false,"id":3100,"mutability":"mutable","name":"rc","nameLocation":"20280:2:18","nodeType":"VariableDeclaration","scope":3245,"src":"20255:27:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_RequestCommitment_$2318_memory_ptr","typeString":"struct VRFCoordinatorV2.RequestCommitment"},"typeName":{"id":3099,"nodeType":"UserDefinedTypeName","pathNode":{"id":3098,"name":"RequestCommitment","nameLocations":["20255:17:18"],"nodeType":"IdentifierPath","referencedDeclaration":2318,"src":"20255:17:18"},"referencedDeclaration":2318,"src":"20255:17:18","typeDescriptions":{"typeIdentifier":"t_struct$_RequestCommitment_$2318_storage_ptr","typeString":"struct VRFCoordinatorV2.RequestCommitment"}},"visibility":"internal"}],"src":"20217:71:18"},"returnParameters":{"id":3108,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3103,"mutability":"mutable","name":"keyHash","nameLocation":"20343:7:18","nodeType":"VariableDeclaration","scope":3245,"src":"20335:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3102,"name":"bytes32","nodeType":"ElementaryTypeName","src":"20335:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3105,"mutability":"mutable","name":"requestId","nameLocation":"20360:9:18","nodeType":"VariableDeclaration","scope":3245,"src":"20352:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3104,"name":"uint256","nodeType":"ElementaryTypeName","src":"20352:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3107,"mutability":"mutable","name":"randomness","nameLocation":"20379:10:18","nodeType":"VariableDeclaration","scope":3245,"src":"20371:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3106,"name":"uint256","nodeType":"ElementaryTypeName","src":"20371:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20334:56:18"},"scope":4400,"src":"20186:1644:18","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":3315,"nodeType":"Block","src":"22051:635:18","statements":[{"assignments":[3254],"declarations":[{"constant":false,"id":3254,"mutability":"mutable","name":"fc","nameLocation":"22078:2:18","nodeType":"VariableDeclaration","scope":3315,"src":"22061:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_FeeConfig_$2411_memory_ptr","typeString":"struct VRFCoordinatorV2.FeeConfig"},"typeName":{"id":3253,"nodeType":"UserDefinedTypeName","pathNode":{"id":3252,"name":"FeeConfig","nameLocations":["22061:9:18"],"nodeType":"IdentifierPath","referencedDeclaration":2411,"src":"22061:9:18"},"referencedDeclaration":2411,"src":"22061:9:18","typeDescriptions":{"typeIdentifier":"t_struct$_FeeConfig_$2411_storage_ptr","typeString":"struct VRFCoordinatorV2.FeeConfig"}},"visibility":"internal"}],"id":3256,"initialValue":{"id":3255,"name":"s_feeConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2392,"src":"22083:11:18","typeDescriptions":{"typeIdentifier":"t_struct$_FeeConfig_$2411_storage","typeString":"struct VRFCoordinatorV2.FeeConfig storage ref"}},"nodeType":"VariableDeclarationStatement","src":"22061:33:18"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":3259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"30","id":3257,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22108:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":3258,"name":"reqCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3247,"src":"22113:8:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"22108:13:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":3263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3260,"name":"reqCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3247,"src":"22125:8:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"id":3261,"name":"fc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3254,"src":"22137:2:18","typeDescriptions":{"typeIdentifier":"t_struct$_FeeConfig_$2411_memory_ptr","typeString":"struct VRFCoordinatorV2.FeeConfig memory"}},"id":3262,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"22140:12:18","memberName":"reqsForTier2","nodeType":"MemberAccess","referencedDeclaration":2404,"src":"22137:15:18","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"22125:27:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"22108:44:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3269,"nodeType":"IfStatement","src":"22104:115:18","trueBody":{"id":3268,"nodeType":"Block","src":"22154:65:18","statements":[{"expression":{"expression":{"id":3265,"name":"fc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3254,"src":"22175:2:18","typeDescriptions":{"typeIdentifier":"t_struct$_FeeConfig_$2411_memory_ptr","typeString":"struct VRFCoordinatorV2.FeeConfig memory"}},"id":3266,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"22178:30:18","memberName":"fulfillmentFlatFeeLinkPPMTier1","nodeType":"MemberAccess","referencedDeclaration":2394,"src":"22175:33:18","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":3251,"id":3267,"nodeType":"Return","src":"22168:40:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":3273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3270,"name":"fc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3254,"src":"22232:2:18","typeDescriptions":{"typeIdentifier":"t_struct$_FeeConfig_$2411_memory_ptr","typeString":"struct VRFCoordinatorV2.FeeConfig memory"}},"id":3271,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"22235:12:18","memberName":"reqsForTier2","nodeType":"MemberAccess","referencedDeclaration":2404,"src":"22232:15:18","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3272,"name":"reqCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3247,"src":"22250:8:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"22232:26:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":3277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3274,"name":"reqCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3247,"src":"22262:8:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"id":3275,"name":"fc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3254,"src":"22274:2:18","typeDescriptions":{"typeIdentifier":"t_struct$_FeeConfig_$2411_memory_ptr","typeString":"struct VRFCoordinatorV2.FeeConfig memory"}},"id":3276,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"22277:12:18","memberName":"reqsForTier3","nodeType":"MemberAccess","referencedDeclaration":2406,"src":"22274:15:18","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"22262:27:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"22232:57:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3283,"nodeType":"IfStatement","src":"22228:128:18","trueBody":{"id":3282,"nodeType":"Block","src":"22291:65:18","statements":[{"expression":{"expression":{"id":3279,"name":"fc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3254,"src":"22312:2:18","typeDescriptions":{"typeIdentifier":"t_struct$_FeeConfig_$2411_memory_ptr","typeString":"struct VRFCoordinatorV2.FeeConfig memory"}},"id":3280,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"22315:30:18","memberName":"fulfillmentFlatFeeLinkPPMTier2","nodeType":"MemberAccess","referencedDeclaration":2396,"src":"22312:33:18","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":3251,"id":3281,"nodeType":"Return","src":"22305:40:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":3287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3284,"name":"fc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3254,"src":"22369:2:18","typeDescriptions":{"typeIdentifier":"t_struct$_FeeConfig_$2411_memory_ptr","typeString":"struct VRFCoordinatorV2.FeeConfig memory"}},"id":3285,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"22372:12:18","memberName":"reqsForTier3","nodeType":"MemberAccess","referencedDeclaration":2406,"src":"22369:15:18","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3286,"name":"reqCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3247,"src":"22387:8:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"22369:26:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":3291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3288,"name":"reqCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3247,"src":"22399:8:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"id":3289,"name":"fc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3254,"src":"22411:2:18","typeDescriptions":{"typeIdentifier":"t_struct$_FeeConfig_$2411_memory_ptr","typeString":"struct VRFCoordinatorV2.FeeConfig memory"}},"id":3290,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"22414:12:18","memberName":"reqsForTier4","nodeType":"MemberAccess","referencedDeclaration":2408,"src":"22411:15:18","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"22399:27:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"22369:57:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3297,"nodeType":"IfStatement","src":"22365:128:18","trueBody":{"id":3296,"nodeType":"Block","src":"22428:65:18","statements":[{"expression":{"expression":{"id":3293,"name":"fc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3254,"src":"22449:2:18","typeDescriptions":{"typeIdentifier":"t_struct$_FeeConfig_$2411_memory_ptr","typeString":"struct VRFCoordinatorV2.FeeConfig memory"}},"id":3294,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"22452:30:18","memberName":"fulfillmentFlatFeeLinkPPMTier3","nodeType":"MemberAccess","referencedDeclaration":2398,"src":"22449:33:18","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":3251,"id":3295,"nodeType":"Return","src":"22442:40:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":3301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3298,"name":"fc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3254,"src":"22506:2:18","typeDescriptions":{"typeIdentifier":"t_struct$_FeeConfig_$2411_memory_ptr","typeString":"struct VRFCoordinatorV2.FeeConfig memory"}},"id":3299,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"22509:12:18","memberName":"reqsForTier4","nodeType":"MemberAccess","referencedDeclaration":2408,"src":"22506:15:18","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3300,"name":"reqCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3247,"src":"22524:8:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"22506:26:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":3305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3302,"name":"reqCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3247,"src":"22536:8:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"id":3303,"name":"fc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3254,"src":"22548:2:18","typeDescriptions":{"typeIdentifier":"t_struct$_FeeConfig_$2411_memory_ptr","typeString":"struct VRFCoordinatorV2.FeeConfig memory"}},"id":3304,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"22551:12:18","memberName":"reqsForTier5","nodeType":"MemberAccess","referencedDeclaration":2410,"src":"22548:15:18","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"22536:27:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"22506:57:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3311,"nodeType":"IfStatement","src":"22502:128:18","trueBody":{"id":3310,"nodeType":"Block","src":"22565:65:18","statements":[{"expression":{"expression":{"id":3307,"name":"fc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3254,"src":"22586:2:18","typeDescriptions":{"typeIdentifier":"t_struct$_FeeConfig_$2411_memory_ptr","typeString":"struct VRFCoordinatorV2.FeeConfig memory"}},"id":3308,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"22589:30:18","memberName":"fulfillmentFlatFeeLinkPPMTier4","nodeType":"MemberAccess","referencedDeclaration":2400,"src":"22586:33:18","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":3251,"id":3309,"nodeType":"Return","src":"22579:40:18"}]}},{"expression":{"expression":{"id":3312,"name":"fc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3254,"src":"22646:2:18","typeDescriptions":{"typeIdentifier":"t_struct$_FeeConfig_$2411_memory_ptr","typeString":"struct VRFCoordinatorV2.FeeConfig memory"}},"id":3313,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"22649:30:18","memberName":"fulfillmentFlatFeeLinkPPMTier5","nodeType":"MemberAccess","referencedDeclaration":2402,"src":"22646:33:18","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":3251,"id":3314,"nodeType":"Return","src":"22639:40:18"}]},"functionSelector":"d2f9f9a7","id":3316,"implemented":true,"kind":"function","modifiers":[],"name":"getFeeTier","nameLocation":"21994:10:18","nodeType":"FunctionDefinition","parameters":{"id":3248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3247,"mutability":"mutable","name":"reqCount","nameLocation":"22012:8:18","nodeType":"VariableDeclaration","scope":3316,"src":"22005:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":3246,"name":"uint64","nodeType":"ElementaryTypeName","src":"22005:6:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"22004:17:18"},"returnParameters":{"id":3251,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3250,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3316,"src":"22043:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3249,"name":"uint32","nodeType":"ElementaryTypeName","src":"22043:6:18","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"22042:8:18"},"scope":4400,"src":"21985:701:18","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3493,"nodeType":"Block","src":"23176:2473:18","statements":[{"assignments":[3330],"declarations":[{"constant":false,"id":3330,"mutability":"mutable","name":"startGas","nameLocation":"23194:8:18","nodeType":"VariableDeclaration","scope":3493,"src":"23186:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3329,"name":"uint256","nodeType":"ElementaryTypeName","src":"23186:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3333,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":3331,"name":"gasleft","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-7,"src":"23205:7:18","typeDescriptions":{"typeIdentifier":"t_function_gasleft_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":3332,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23205:9:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"23186:28:18"},{"assignments":[3335,3337,3339],"declarations":[{"constant":false,"id":3335,"mutability":"mutable","name":"keyHash","nameLocation":"23246:7:18","nodeType":"VariableDeclaration","scope":3493,"src":"23238:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3334,"name":"bytes32","nodeType":"ElementaryTypeName","src":"23238:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3337,"mutability":"mutable","name":"requestId","nameLocation":"23275:9:18","nodeType":"VariableDeclaration","scope":3493,"src":"23267:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3336,"name":"uint256","nodeType":"ElementaryTypeName","src":"23267:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3339,"mutability":"mutable","name":"randomness","nameLocation":"23306:10:18","nodeType":"VariableDeclaration","scope":3493,"src":"23298:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3338,"name":"uint256","nodeType":"ElementaryTypeName","src":"23298:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3344,"initialValue":{"arguments":[{"id":3341,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3319,"src":"23352:5:18","typeDescriptions":{"typeIdentifier":"t_struct$_Proof_$1989_memory_ptr","typeString":"struct VRF.Proof memory"}},{"id":3342,"name":"rc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3322,"src":"23359:2:18","typeDescriptions":{"typeIdentifier":"t_struct$_RequestCommitment_$2318_memory_ptr","typeString":"struct VRFCoordinatorV2.RequestCommitment memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Proof_$1989_memory_ptr","typeString":"struct VRF.Proof memory"},{"typeIdentifier":"t_struct$_RequestCommitment_$2318_memory_ptr","typeString":"struct VRFCoordinatorV2.RequestCommitment memory"}],"id":3340,"name":"getRandomnessFromProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3245,"src":"23329:22:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Proof_$1989_memory_ptr_$_t_struct$_RequestCommitment_$2318_memory_ptr_$returns$_t_bytes32_$_t_uint256_$_t_uint256_$","typeString":"function (struct VRF.Proof memory,struct VRFCoordinatorV2.RequestCommitment memory) view returns (bytes32,uint256,uint256)"}},"id":3343,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23329:33:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bytes32_$_t_uint256_$_t_uint256_$","typeString":"tuple(bytes32,uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"23224:138:18"},{"assignments":[3349],"declarations":[{"constant":false,"id":3349,"mutability":"mutable","name":"randomWords","nameLocation":"23390:11:18","nodeType":"VariableDeclaration","scope":3493,"src":"23373:28:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3347,"name":"uint256","nodeType":"ElementaryTypeName","src":"23373:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3348,"nodeType":"ArrayTypeName","src":"23373:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":3356,"initialValue":{"arguments":[{"expression":{"id":3353,"name":"rc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3322,"src":"23418:2:18","typeDescriptions":{"typeIdentifier":"t_struct$_RequestCommitment_$2318_memory_ptr","typeString":"struct VRFCoordinatorV2.RequestCommitment memory"}},"id":3354,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"23421:8:18","memberName":"numWords","nodeType":"MemberAccess","referencedDeclaration":2315,"src":"23418:11:18","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"}],"id":3352,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"23404:13:18","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":3350,"name":"uint256","nodeType":"ElementaryTypeName","src":"23408:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3351,"nodeType":"ArrayTypeName","src":"23408:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":3355,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23404:26:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"23373:57:18"},{"body":{"id":3383,"nodeType":"Block","src":"23482:87:18","statements":[{"expression":{"id":3381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3368,"name":"randomWords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3349,"src":"23496:11:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3370,"indexExpression":{"id":3369,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3358,"src":"23508:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"23496:14:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"arguments":[{"id":3376,"name":"randomness","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3339,"src":"23542:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3377,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3358,"src":"23554:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3374,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"23531:3:18","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3375,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"23535:6:18","memberName":"encode","nodeType":"MemberAccess","src":"23531:10:18","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23531:25:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3373,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"23521:9:18","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3379,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23521:36:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3372,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23513:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3371,"name":"uint256","nodeType":"ElementaryTypeName","src":"23513:7:18","typeDescriptions":{}}},"id":3380,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23513:45:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23496:62:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3382,"nodeType":"ExpressionStatement","src":"23496:62:18"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3361,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3358,"src":"23460:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3362,"name":"rc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3322,"src":"23464:2:18","typeDescriptions":{"typeIdentifier":"t_struct$_RequestCommitment_$2318_memory_ptr","typeString":"struct VRFCoordinatorV2.RequestCommitment memory"}},"id":3363,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"23467:8:18","memberName":"numWords","nodeType":"MemberAccess","referencedDeclaration":2315,"src":"23464:11:18","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"23460:15:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3384,"initializationExpression":{"assignments":[3358],"declarations":[{"constant":false,"id":3358,"mutability":"mutable","name":"i","nameLocation":"23453:1:18","nodeType":"VariableDeclaration","scope":3384,"src":"23445:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3357,"name":"uint256","nodeType":"ElementaryTypeName","src":"23445:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3360,"initialValue":{"hexValue":"30","id":3359,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23457:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"23445:13:18"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":3366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"23477:3:18","subExpression":{"id":3365,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3358,"src":"23477:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3367,"nodeType":"ExpressionStatement","src":"23477:3:18"},"nodeType":"ForStatement","src":"23440:129:18"},{"expression":{"id":3388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"23579:38:18","subExpression":{"baseExpression":{"id":3385,"name":"s_requestCommitments","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2333,"src":"23586:20:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bytes32_$","typeString":"mapping(uint256 => bytes32)"}},"id":3387,"indexExpression":{"id":3386,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3337,"src":"23607:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"23586:31:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3389,"nodeType":"ExpressionStatement","src":"23579:38:18"},{"assignments":[3392],"declarations":[{"constant":false,"id":3392,"mutability":"mutable","name":"v","nameLocation":"23645:1:18","nodeType":"VariableDeclaration","scope":3493,"src":"23627:19:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_VRFConsumerBaseV2_$2093","typeString":"contract VRFConsumerBaseV2"},"typeName":{"id":3391,"nodeType":"UserDefinedTypeName","pathNode":{"id":3390,"name":"VRFConsumerBaseV2","nameLocations":["23627:17:18"],"nodeType":"IdentifierPath","referencedDeclaration":2093,"src":"23627:17:18"},"referencedDeclaration":2093,"src":"23627:17:18","typeDescriptions":{"typeIdentifier":"t_contract$_VRFConsumerBaseV2_$2093","typeString":"contract VRFConsumerBaseV2"}},"visibility":"internal"}],"id":3393,"nodeType":"VariableDeclarationStatement","src":"23627:19:18"},{"assignments":[3395],"declarations":[{"constant":false,"id":3395,"mutability":"mutable","name":"resp","nameLocation":"23669:4:18","nodeType":"VariableDeclaration","scope":3493,"src":"23656:17:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3394,"name":"bytes","nodeType":"ElementaryTypeName","src":"23656:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3404,"initialValue":{"arguments":[{"expression":{"expression":{"id":3398,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3392,"src":"23712:1:18","typeDescriptions":{"typeIdentifier":"t_contract$_VRFConsumerBaseV2_$2093","typeString":"contract VRFConsumerBaseV2"}},"id":3399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23714:21:18","memberName":"rawFulfillRandomWords","nodeType":"MemberAccess","referencedDeclaration":2092,"src":"23712:23:18","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (uint256,uint256[] memory) external"}},"id":3400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23736:8:18","memberName":"selector","nodeType":"MemberAccess","src":"23712:32:18","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":3401,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3337,"src":"23758:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3402,"name":"randomWords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3349,"src":"23781:11:18","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"expression":{"id":3396,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"23676:3:18","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3397,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"23680:18:18","memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"23676:22:18","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":3403,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23676:126:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"23656:146:18"},{"expression":{"id":3409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3405,"name":"s_config","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2389,"src":"24251:8:18","typeDescriptions":{"typeIdentifier":"t_struct$_Config_$2384_storage","typeString":"struct VRFCoordinatorV2.Config storage ref"}},"id":3407,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"24260:14:18","memberName":"reentrancyLock","nodeType":"MemberAccess","referencedDeclaration":2379,"src":"24251:23:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":3408,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"24277:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"24251:30:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3410,"nodeType":"ExpressionStatement","src":"24251:30:18"},{"assignments":[3412],"declarations":[{"constant":false,"id":3412,"mutability":"mutable","name":"success","nameLocation":"24296:7:18","nodeType":"VariableDeclaration","scope":3493,"src":"24291:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3411,"name":"bool","nodeType":"ElementaryTypeName","src":"24291:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3420,"initialValue":{"arguments":[{"expression":{"id":3414,"name":"rc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3322,"src":"24323:2:18","typeDescriptions":{"typeIdentifier":"t_struct$_RequestCommitment_$2318_memory_ptr","typeString":"struct VRFCoordinatorV2.RequestCommitment memory"}},"id":3415,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"24326:16:18","memberName":"callbackGasLimit","nodeType":"MemberAccess","referencedDeclaration":2313,"src":"24323:19:18","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"expression":{"id":3416,"name":"rc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3322,"src":"24344:2:18","typeDescriptions":{"typeIdentifier":"t_struct$_RequestCommitment_$2318_memory_ptr","typeString":"struct VRFCoordinatorV2.RequestCommitment memory"}},"id":3417,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"24347:6:18","memberName":"sender","nodeType":"MemberAccess","referencedDeclaration":2317,"src":"24344:9:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3418,"name":"resp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3395,"src":"24355:4:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3413,"name":"callWithExactGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3094,"src":"24306:16:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (uint256,address,bytes memory) returns (bool)"}},"id":3419,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24306:54:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"24291:69:18"},{"expression":{"id":3425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3421,"name":"s_config","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2389,"src":"24370:8:18","typeDescriptions":{"typeIdentifier":"t_struct$_Config_$2384_storage","typeString":"struct VRFCoordinatorV2.Config storage ref"}},"id":3423,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"24379:14:18","memberName":"reentrancyLock","nodeType":"MemberAccess","referencedDeclaration":2379,"src":"24370:23:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":3424,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"24396:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"24370:31:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3426,"nodeType":"ExpressionStatement","src":"24370:31:18"},{"assignments":[3428],"declarations":[{"constant":false,"id":3428,"mutability":"mutable","name":"reqCount","nameLocation":"24478:8:18","nodeType":"VariableDeclaration","scope":3493,"src":"24471:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":3427,"name":"uint64","nodeType":"ElementaryTypeName","src":"24471:6:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"id":3434,"initialValue":{"expression":{"baseExpression":{"id":3429,"name":"s_subscriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2194,"src":"24489:15:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_Subscription_$2170_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2.Subscription storage ref)"}},"id":3432,"indexExpression":{"expression":{"id":3430,"name":"rc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3322,"src":"24505:2:18","typeDescriptions":{"typeIdentifier":"t_struct$_RequestCommitment_$2318_memory_ptr","typeString":"struct VRFCoordinatorV2.RequestCommitment memory"}},"id":3431,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"24508:5:18","memberName":"subId","nodeType":"MemberAccess","referencedDeclaration":2311,"src":"24505:8:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"24489:25:18","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$2170_storage","typeString":"struct VRFCoordinatorV2.Subscription storage ref"}},"id":3433,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"24515:8:18","memberName":"reqCount","nodeType":"MemberAccess","referencedDeclaration":2169,"src":"24489:34:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"VariableDeclarationStatement","src":"24471:52:18"},{"expression":{"id":3441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":3435,"name":"s_subscriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2194,"src":"24533:15:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_Subscription_$2170_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2.Subscription storage ref)"}},"id":3438,"indexExpression":{"expression":{"id":3436,"name":"rc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3322,"src":"24549:2:18","typeDescriptions":{"typeIdentifier":"t_struct$_RequestCommitment_$2318_memory_ptr","typeString":"struct VRFCoordinatorV2.RequestCommitment memory"}},"id":3437,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"24552:5:18","memberName":"subId","nodeType":"MemberAccess","referencedDeclaration":2311,"src":"24549:8:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"24533:25:18","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$2170_storage","typeString":"struct VRFCoordinatorV2.Subscription storage ref"}},"id":3439,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"24559:8:18","memberName":"reqCount","nodeType":"MemberAccess","referencedDeclaration":2169,"src":"24533:34:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":3440,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24571:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24533:39:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":3442,"nodeType":"ExpressionStatement","src":"24533:39:18"},{"assignments":[3444],"declarations":[{"constant":false,"id":3444,"mutability":"mutable","name":"payment","nameLocation":"25080:7:18","nodeType":"VariableDeclaration","scope":3493,"src":"25073:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":3443,"name":"uint96","nodeType":"ElementaryTypeName","src":"25073:6:18","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"id":3455,"initialValue":{"arguments":[{"id":3446,"name":"startGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3330,"src":"25126:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3447,"name":"s_config","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2389,"src":"25148:8:18","typeDescriptions":{"typeIdentifier":"t_struct$_Config_$2384_storage","typeString":"struct VRFCoordinatorV2.Config storage ref"}},"id":3448,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"25157:26:18","memberName":"gasAfterPaymentCalculation","nodeType":"MemberAccess","referencedDeclaration":2383,"src":"25148:35:18","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"arguments":[{"id":3450,"name":"reqCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3428,"src":"25208:8:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":3449,"name":"getFeeTier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3316,"src":"25197:10:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint64_$returns$_t_uint32_$","typeString":"function (uint64) view returns (uint32)"}},"id":3451,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25197:20:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"expression":{"id":3452,"name":"tx","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-26,"src":"25231:2:18","typeDescriptions":{"typeIdentifier":"t_magic_transaction","typeString":"tx"}},"id":3453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25234:8:18","memberName":"gasprice","nodeType":"MemberAccess","src":"25231:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3445,"name":"calculatePaymentAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3581,"src":"25090:22:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint32_$_t_uint256_$returns$_t_uint96_$","typeString":"function (uint256,uint256,uint32,uint256) view returns (uint96)"}},"id":3454,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25090:162:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"VariableDeclarationStatement","src":"25073:179:18"},{"condition":{"commonType":{"typeIdentifier":"t_uint96","typeString":"uint96"},"id":3462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":3456,"name":"s_subscriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2194,"src":"25266:15:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_Subscription_$2170_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2.Subscription storage ref)"}},"id":3459,"indexExpression":{"expression":{"id":3457,"name":"rc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3322,"src":"25282:2:18","typeDescriptions":{"typeIdentifier":"t_struct$_RequestCommitment_$2318_memory_ptr","typeString":"struct VRFCoordinatorV2.RequestCommitment memory"}},"id":3458,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"25285:5:18","memberName":"subId","nodeType":"MemberAccess","referencedDeclaration":2311,"src":"25282:8:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"25266:25:18","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$2170_storage","typeString":"struct VRFCoordinatorV2.Subscription storage ref"}},"id":3460,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"25292:7:18","memberName":"balance","nodeType":"MemberAccess","referencedDeclaration":2167,"src":"25266:33:18","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3461,"name":"payment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3444,"src":"25302:7:18","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"25266:43:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3467,"nodeType":"IfStatement","src":"25262:102:18","trueBody":{"id":3466,"nodeType":"Block","src":"25311:53:18","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3463,"name":"InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2131,"src":"25332:19:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3464,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25332:21:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3465,"nodeType":"RevertStatement","src":"25325:28:18"}]}},{"expression":{"id":3474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":3468,"name":"s_subscriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2194,"src":"25373:15:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_Subscription_$2170_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2.Subscription storage ref)"}},"id":3471,"indexExpression":{"expression":{"id":3469,"name":"rc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3322,"src":"25389:2:18","typeDescriptions":{"typeIdentifier":"t_struct$_RequestCommitment_$2318_memory_ptr","typeString":"struct VRFCoordinatorV2.RequestCommitment memory"}},"id":3470,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"25392:5:18","memberName":"subId","nodeType":"MemberAccess","referencedDeclaration":2311,"src":"25389:8:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"25373:25:18","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$2170_storage","typeString":"struct VRFCoordinatorV2.Subscription storage ref"}},"id":3472,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"25399:7:18","memberName":"balance","nodeType":"MemberAccess","referencedDeclaration":2167,"src":"25373:33:18","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":3473,"name":"payment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3444,"src":"25410:7:18","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"25373:44:18","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"id":3475,"nodeType":"ExpressionStatement","src":"25373:44:18"},{"expression":{"id":3482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3476,"name":"s_withdrawableTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2329,"src":"25427:20:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint96_$","typeString":"mapping(address => uint96)"}},"id":3480,"indexExpression":{"baseExpression":{"id":3477,"name":"s_provingKeys","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2322,"src":"25448:13:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_address_$","typeString":"mapping(bytes32 => address)"}},"id":3479,"indexExpression":{"id":3478,"name":"keyHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3335,"src":"25462:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"25448:22:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"25427:44:18","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":3481,"name":"payment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3444,"src":"25475:7:18","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"25427:55:18","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"id":3483,"nodeType":"ExpressionStatement","src":"25427:55:18"},{"eventCall":{"arguments":[{"id":3485,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3337,"src":"25578:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3486,"name":"randomness","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3339,"src":"25589:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3487,"name":"payment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3444,"src":"25601:7:18","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"id":3488,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3412,"src":"25610:7:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint96","typeString":"uint96"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":3484,"name":"RandomWordsFulfilled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2373,"src":"25557:20:18","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint96_$_t_bool_$returns$__$","typeString":"function (uint256,uint256,uint96,bool)"}},"id":3489,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25557:61:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3490,"nodeType":"EmitStatement","src":"25552:66:18"},{"expression":{"id":3491,"name":"payment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3444,"src":"25635:7:18","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":3328,"id":3492,"nodeType":"Return","src":"25628:14:18"}]},"functionSelector":"af198b97","id":3494,"implemented":true,"kind":"function","modifiers":[{"id":3325,"kind":"modifierInvocation","modifierName":{"id":3324,"name":"nonReentrant","nameLocations":["23146:12:18"],"nodeType":"IdentifierPath","referencedDeclaration":4389,"src":"23146:12:18"},"nodeType":"ModifierInvocation","src":"23146:12:18"}],"name":"fulfillRandomWords","nameLocation":"23047:18:18","nodeType":"FunctionDefinition","parameters":{"id":3323,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3319,"mutability":"mutable","name":"proof","nameLocation":"23088:5:18","nodeType":"VariableDeclaration","scope":3494,"src":"23075:18:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Proof_$1989_memory_ptr","typeString":"struct VRF.Proof"},"typeName":{"id":3318,"nodeType":"UserDefinedTypeName","pathNode":{"id":3317,"name":"Proof","nameLocations":["23075:5:18"],"nodeType":"IdentifierPath","referencedDeclaration":1989,"src":"23075:5:18"},"referencedDeclaration":1989,"src":"23075:5:18","typeDescriptions":{"typeIdentifier":"t_struct$_Proof_$1989_storage_ptr","typeString":"struct VRF.Proof"}},"visibility":"internal"},{"constant":false,"id":3322,"mutability":"mutable","name":"rc","nameLocation":"23128:2:18","nodeType":"VariableDeclaration","scope":3494,"src":"23103:27:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_RequestCommitment_$2318_memory_ptr","typeString":"struct VRFCoordinatorV2.RequestCommitment"},"typeName":{"id":3321,"nodeType":"UserDefinedTypeName","pathNode":{"id":3320,"name":"RequestCommitment","nameLocations":["23103:17:18"],"nodeType":"IdentifierPath","referencedDeclaration":2318,"src":"23103:17:18"},"referencedDeclaration":2318,"src":"23103:17:18","typeDescriptions":{"typeIdentifier":"t_struct$_RequestCommitment_$2318_storage_ptr","typeString":"struct VRFCoordinatorV2.RequestCommitment"}},"visibility":"internal"}],"src":"23065:71:18"},"returnParameters":{"id":3328,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3327,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3494,"src":"23168:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":3326,"name":"uint96","nodeType":"ElementaryTypeName","src":"23168:6:18","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"23167:8:18"},"scope":4400,"src":"23038:2611:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3580,"nodeType":"Block","src":"25917:850:18","statements":[{"assignments":[3508],"declarations":[{"constant":false,"id":3508,"mutability":"mutable","name":"weiPerUnitLink","nameLocation":"25934:14:18","nodeType":"VariableDeclaration","scope":3580,"src":"25927:21:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3507,"name":"int256","nodeType":"ElementaryTypeName","src":"25927:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":3509,"nodeType":"VariableDeclarationStatement","src":"25927:21:18"},{"expression":{"id":3513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3510,"name":"weiPerUnitLink","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3508,"src":"25958:14:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"id":3511,"name":"getFeedData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3628,"src":"25975:11:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_int256_$","typeString":"function () view returns (int256)"}},"id":3512,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25975:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25958:30:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":3514,"nodeType":"ExpressionStatement","src":"25958:30:18"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3515,"name":"weiPerUnitLink","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3508,"src":"26002:14:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"30","id":3516,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26020:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"26002:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3523,"nodeType":"IfStatement","src":"25998:92:18","trueBody":{"id":3522,"nodeType":"Block","src":"26023:67:18","statements":[{"errorCall":{"arguments":[{"id":3519,"name":"weiPerUnitLink","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3508,"src":"26064:14:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3518,"name":"InvalidLinkWeiPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2289,"src":"26044:19:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_int256_$returns$__$","typeString":"function (int256) pure"}},"id":3520,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26044:35:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3521,"nodeType":"RevertStatement","src":"26037:42:18"}]}},{"assignments":[3525],"declarations":[{"constant":false,"id":3525,"mutability":"mutable","name":"l1CostWei","nameLocation":"26172:9:18","nodeType":"VariableDeclaration","scope":3580,"src":"26164:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3524,"name":"uint256","nodeType":"ElementaryTypeName","src":"26164:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3529,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3526,"name":"ChainSpecificUtil","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":181,"src":"26184:17:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ChainSpecificUtil_$181_$","typeString":"type(library ChainSpecificUtil)"}},"id":3527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26202:21:18","memberName":"getCurrentTxL1GasFees","nodeType":"MemberAccess","referencedDeclaration":142,"src":"26184:39:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":3528,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26184:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"26164:61:18"},{"assignments":[3531],"declarations":[{"constant":false,"id":3531,"mutability":"mutable","name":"paymentNoFee","nameLocation":"26319:12:18","nodeType":"VariableDeclaration","scope":3580,"src":"26311:20:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3530,"name":"uint256","nodeType":"ElementaryTypeName","src":"26311:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3552,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31653138","id":3532,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26335:4:18","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"value":"1e18"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3533,"name":"weiPerUnitGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3502,"src":"26355:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3534,"name":"gasAfterPaymentCalculation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3498,"src":"26388:26:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3535,"name":"startGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3496,"src":"26417:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26388:37:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":3537,"name":"gasleft","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-7,"src":"26428:7:18","typeDescriptions":{"typeIdentifier":"t_function_gasleft_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":3538,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26428:9:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26388:49:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3540,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26387:51:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26355:83:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3542,"name":"l1CostWei","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3525,"src":"26457:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26355:111:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3544,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26354:113:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26335:132:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3546,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26334:134:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"arguments":[{"id":3549,"name":"weiPerUnitLink","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3508,"src":"26479:14:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3548,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26471:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3547,"name":"uint256","nodeType":"ElementaryTypeName","src":"26471:7:18","typeDescriptions":{}}},"id":3550,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26471:23:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26334:160:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"26311:183:18"},{"assignments":[3554],"declarations":[{"constant":false,"id":3554,"mutability":"mutable","name":"fee","nameLocation":"26512:3:18","nodeType":"VariableDeclaration","scope":3580,"src":"26504:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3553,"name":"uint256","nodeType":"ElementaryTypeName","src":"26504:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3561,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31653132","id":3555,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26518:4:18","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000_by_1","typeString":"int_const 1000000000000"},"value":"1e12"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":3558,"name":"fulfillmentFlatFeeLinkPPM","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3500,"src":"26533:25:18","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"}],"id":3557,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26525:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3556,"name":"uint256","nodeType":"ElementaryTypeName","src":"26525:7:18","typeDescriptions":{}}},"id":3559,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26525:34:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26518:41:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"26504:55:18"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3562,"name":"paymentNoFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3531,"src":"26573:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31653237","id":3563,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26589:4:18","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000000000000_by_1","typeString":"int_const 1000000000000000000000000000"},"value":"1e27"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3564,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3554,"src":"26596:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26589:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3566,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26588:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26573:27:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3572,"nodeType":"IfStatement","src":"26569:149:18","trueBody":{"id":3571,"nodeType":"Block","src":"26602:116:18","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3568,"name":"PaymentTooLarge","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2305,"src":"26623:15:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3569,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26623:17:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3570,"nodeType":"RevertStatement","src":"26616:24:18"}]}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3575,"name":"paymentNoFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3531,"src":"26741:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3576,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3554,"src":"26756:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26741:18:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3574,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26734:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":3573,"name":"uint96","nodeType":"ElementaryTypeName","src":"26734:6:18","typeDescriptions":{}}},"id":3578,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26734:26:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":3506,"id":3579,"nodeType":"Return","src":"26727:33:18"}]},"id":3581,"implemented":true,"kind":"function","modifiers":[],"name":"calculatePaymentAmount","nameLocation":"25714:22:18","nodeType":"FunctionDefinition","parameters":{"id":3503,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3496,"mutability":"mutable","name":"startGas","nameLocation":"25754:8:18","nodeType":"VariableDeclaration","scope":3581,"src":"25746:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3495,"name":"uint256","nodeType":"ElementaryTypeName","src":"25746:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3498,"mutability":"mutable","name":"gasAfterPaymentCalculation","nameLocation":"25780:26:18","nodeType":"VariableDeclaration","scope":3581,"src":"25772:34:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3497,"name":"uint256","nodeType":"ElementaryTypeName","src":"25772:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3500,"mutability":"mutable","name":"fulfillmentFlatFeeLinkPPM","nameLocation":"25823:25:18","nodeType":"VariableDeclaration","scope":3581,"src":"25816:32:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3499,"name":"uint32","nodeType":"ElementaryTypeName","src":"25816:6:18","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":3502,"mutability":"mutable","name":"weiPerUnitGas","nameLocation":"25866:13:18","nodeType":"VariableDeclaration","scope":3581,"src":"25858:21:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3501,"name":"uint256","nodeType":"ElementaryTypeName","src":"25858:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25736:149:18"},"returnParameters":{"id":3506,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3505,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3581,"src":"25909:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":3504,"name":"uint96","nodeType":"ElementaryTypeName","src":"25909:6:18","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"25908:8:18"},"scope":4400,"src":"25705:1062:18","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3627,"nodeType":"Block","src":"26826:483:18","statements":[{"assignments":[3587],"declarations":[{"constant":false,"id":3587,"mutability":"mutable","name":"stalenessSeconds","nameLocation":"26843:16:18","nodeType":"VariableDeclaration","scope":3627,"src":"26836:23:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":3586,"name":"uint32","nodeType":"ElementaryTypeName","src":"26836:6:18","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"id":3590,"initialValue":{"expression":{"id":3588,"name":"s_config","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2389,"src":"26862:8:18","typeDescriptions":{"typeIdentifier":"t_struct$_Config_$2384_storage","typeString":"struct VRFCoordinatorV2.Config storage ref"}},"id":3589,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"26871:16:18","memberName":"stalenessSeconds","nodeType":"MemberAccess","referencedDeclaration":2381,"src":"26862:25:18","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"VariableDeclarationStatement","src":"26836:51:18"},{"assignments":[3592],"declarations":[{"constant":false,"id":3592,"mutability":"mutable","name":"staleFallback","nameLocation":"26902:13:18","nodeType":"VariableDeclaration","scope":3627,"src":"26897:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3591,"name":"bool","nodeType":"ElementaryTypeName","src":"26897:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3596,"initialValue":{"commonType":{"typeIdentifier":"t_uint32","typeString":"uint32"},"id":3595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3593,"name":"stalenessSeconds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3587,"src":"26918:16:18","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3594,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26937:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"26918:20:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"26897:41:18"},{"assignments":[3598],"declarations":[{"constant":false,"id":3598,"mutability":"mutable","name":"timestamp","nameLocation":"26956:9:18","nodeType":"VariableDeclaration","scope":3627,"src":"26948:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3597,"name":"uint256","nodeType":"ElementaryTypeName","src":"26948:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3599,"nodeType":"VariableDeclarationStatement","src":"26948:17:18"},{"assignments":[3601],"declarations":[{"constant":false,"id":3601,"mutability":"mutable","name":"weiPerUnitLink","nameLocation":"26982:14:18","nodeType":"VariableDeclaration","scope":3627,"src":"26975:21:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3600,"name":"int256","nodeType":"ElementaryTypeName","src":"26975:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":3602,"nodeType":"VariableDeclarationStatement","src":"26975:21:18"},{"expression":{"id":3609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[null,{"id":3603,"name":"weiPerUnitLink","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3601,"src":"27009:14:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},null,{"id":3604,"name":"timestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3598,"src":"27027:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},null],"id":3605,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"27006:33:18","typeDescriptions":{"typeIdentifier":"t_tuple$__$_t_int256_$__$_t_uint256_$__$","typeString":"tuple(,int256,,uint256,)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3606,"name":"LINK_ETH_FEED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2121,"src":"27042:13:18","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$293","typeString":"contract AggregatorV3Interface"}},"id":3607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27056:15:18","memberName":"latestRoundData","nodeType":"MemberAccess","referencedDeclaration":292,"src":"27042:29:18","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$","typeString":"function () view external returns (uint80,int256,uint256,uint256,uint80)"}},"id":3608,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27042:31:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$","typeString":"tuple(uint80,int256,uint256,uint256,uint80)"}},"src":"27006:67:18","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3610,"nodeType":"ExpressionStatement","src":"27006:67:18"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3611,"name":"staleFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3592,"src":"27141:13:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3612,"name":"stalenessSeconds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3587,"src":"27158:16:18","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3613,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"27177:5:18","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27183:9:18","memberName":"timestamp","nodeType":"MemberAccess","src":"27177:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3615,"name":"timestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3598,"src":"27195:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27177:27:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27158:46:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"27141:63:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3624,"nodeType":"IfStatement","src":"27137:135:18","trueBody":{"id":3623,"nodeType":"Block","src":"27206:66:18","statements":[{"expression":{"id":3621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3619,"name":"weiPerUnitLink","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3601,"src":"27220:14:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3620,"name":"s_fallbackWeiPerUnitLink","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2386,"src":"27237:24:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27220:41:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":3622,"nodeType":"ExpressionStatement","src":"27220:41:18"}]}},{"expression":{"id":3625,"name":"weiPerUnitLink","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3601,"src":"27288:14:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":3585,"id":3626,"nodeType":"Return","src":"27281:21:18"}]},"id":3628,"implemented":true,"kind":"function","modifiers":[],"name":"getFeedData","nameLocation":"26782:11:18","nodeType":"FunctionDefinition","parameters":{"id":3582,"nodeType":"ParameterList","parameters":[],"src":"26793:2:18"},"returnParameters":{"id":3585,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3584,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3628,"src":"26818:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3583,"name":"int256","nodeType":"ElementaryTypeName","src":"26818:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26817:8:18"},"scope":4400,"src":"26773:536:18","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":3670,"nodeType":"Block","src":"27591:303:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint96","typeString":"uint96"},"id":3642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":3637,"name":"s_withdrawableTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2329,"src":"27605:20:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint96_$","typeString":"mapping(address => uint96)"}},"id":3640,"indexExpression":{"expression":{"id":3638,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"27626:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27630:6:18","memberName":"sender","nodeType":"MemberAccess","src":"27626:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"27605:32:18","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3641,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3632,"src":"27640:6:18","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"27605:41:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3647,"nodeType":"IfStatement","src":"27601:100:18","trueBody":{"id":3646,"nodeType":"Block","src":"27648:53:18","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3643,"name":"InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2131,"src":"27669:19:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3644,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27669:21:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3645,"nodeType":"RevertStatement","src":"27662:28:18"}]}},{"expression":{"id":3653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3648,"name":"s_withdrawableTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2329,"src":"27710:20:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint96_$","typeString":"mapping(address => uint96)"}},"id":3651,"indexExpression":{"expression":{"id":3649,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"27731:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27735:6:18","memberName":"sender","nodeType":"MemberAccess","src":"27731:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"27710:32:18","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":3652,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3632,"src":"27746:6:18","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"27710:42:18","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"id":3654,"nodeType":"ExpressionStatement","src":"27710:42:18"},{"expression":{"id":3657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3655,"name":"s_totalBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2198,"src":"27762:14:18","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":3656,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3632,"src":"27780:6:18","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"27762:24:18","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"id":3658,"nodeType":"ExpressionStatement","src":"27762:24:18"},{"condition":{"id":3664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"27800:33:18","subExpression":{"arguments":[{"id":3661,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3630,"src":"27815:9:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3662,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3632,"src":"27826:6:18","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint96","typeString":"uint96"}],"expression":{"id":3659,"name":"LINK","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2118,"src":"27801:4:18","typeDescriptions":{"typeIdentifier":"t_contract$_LinkTokenInterface_$712","typeString":"contract LinkTokenInterface"}},"id":3660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27806:8:18","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":689,"src":"27801:13:18","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":3663,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27801:32:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3669,"nodeType":"IfStatement","src":"27796:92:18","trueBody":{"id":3668,"nodeType":"Block","src":"27835:53:18","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3665,"name":"InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2131,"src":"27856:19:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3666,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27856:21:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3667,"nodeType":"RevertStatement","src":"27849:28:18"}]}}]},"functionSelector":"66316d8d","id":3671,"implemented":true,"kind":"function","modifiers":[{"id":3635,"kind":"modifierInvocation","modifierName":{"id":3634,"name":"nonReentrant","nameLocations":["27578:12:18"],"nodeType":"IdentifierPath","referencedDeclaration":4389,"src":"27578:12:18"},"nodeType":"ModifierInvocation","src":"27578:12:18"}],"name":"oracleWithdraw","nameLocation":"27498:14:18","nodeType":"FunctionDefinition","parameters":{"id":3633,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3630,"mutability":"mutable","name":"recipient","nameLocation":"27530:9:18","nodeType":"VariableDeclaration","scope":3671,"src":"27522:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3629,"name":"address","nodeType":"ElementaryTypeName","src":"27522:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3632,"mutability":"mutable","name":"amount","nameLocation":"27556:6:18","nodeType":"VariableDeclaration","scope":3671,"src":"27549:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":3631,"name":"uint96","nodeType":"ElementaryTypeName","src":"27549:6:18","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"27512:56:18"},"returnParameters":{"id":3636,"nodeType":"ParameterList","parameters":[],"src":"27591:0:18"},"scope":4400,"src":"27489:405:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[600],"body":{"id":3760,"nodeType":"Block","src":"28045:702:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3683,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"28059:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"28063:6:18","memberName":"sender","nodeType":"MemberAccess","src":"28059:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"id":3687,"name":"LINK","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2118,"src":"28081:4:18","typeDescriptions":{"typeIdentifier":"t_contract$_LinkTokenInterface_$712","typeString":"contract LinkTokenInterface"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_LinkTokenInterface_$712","typeString":"contract LinkTokenInterface"}],"id":3686,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28073:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3685,"name":"address","nodeType":"ElementaryTypeName","src":"28073:7:18","typeDescriptions":{}}},"id":3688,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28073:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"28059:27:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3694,"nodeType":"IfStatement","src":"28055:87:18","trueBody":{"id":3693,"nodeType":"Block","src":"28088:54:18","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3690,"name":"OnlyCallableFromLink","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2141,"src":"28109:20:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3691,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28109:22:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3692,"nodeType":"RevertStatement","src":"28102:29:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3695,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3677,"src":"28155:4:18","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":3696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"28160:6:18","memberName":"length","nodeType":"MemberAccess","src":"28155:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"3332","id":3697,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28170:2:18","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"28155:17:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3703,"nodeType":"IfStatement","src":"28151:72:18","trueBody":{"id":3702,"nodeType":"Block","src":"28174:49:18","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3699,"name":"InvalidCalldata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2143,"src":"28195:15:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3700,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28195:17:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3701,"nodeType":"RevertStatement","src":"28188:24:18"}]}},{"assignments":[3705],"declarations":[{"constant":false,"id":3705,"mutability":"mutable","name":"subId","nameLocation":"28239:5:18","nodeType":"VariableDeclaration","scope":3760,"src":"28232:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":3704,"name":"uint64","nodeType":"ElementaryTypeName","src":"28232:6:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"id":3713,"initialValue":{"arguments":[{"id":3708,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3677,"src":"28258:4:18","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"components":[{"id":3710,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28265:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":3709,"name":"uint64","nodeType":"ElementaryTypeName","src":"28265:6:18","typeDescriptions":{}}}],"id":3711,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"28264:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"expression":{"id":3706,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"28247:3:18","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3707,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"28251:6:18","memberName":"decode","nodeType":"MemberAccess","src":"28247:10:18","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":3712,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28247:26:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"VariableDeclarationStatement","src":"28232:41:18"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":3714,"name":"s_subscriptionConfigs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2189,"src":"28287:21:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_SubscriptionConfig_$2178_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2.SubscriptionConfig storage ref)"}},"id":3716,"indexExpression":{"id":3715,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3705,"src":"28309:5:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"28287:28:18","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConfig_$2178_storage","typeString":"struct VRFCoordinatorV2.SubscriptionConfig storage ref"}},"id":3717,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"28316:5:18","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":2172,"src":"28287:34:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":3720,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28333:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3719,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28325:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3718,"name":"address","nodeType":"ElementaryTypeName","src":"28325:7:18","typeDescriptions":{}}},"id":3721,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28325:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"28287:48:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3727,"nodeType":"IfStatement","src":"28283:107:18","trueBody":{"id":3726,"nodeType":"Block","src":"28337:53:18","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3723,"name":"InvalidSubscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2139,"src":"28358:19:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3724,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28358:21:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3725,"nodeType":"RevertStatement","src":"28351:28:18"}]}},{"assignments":[3729],"declarations":[{"constant":false,"id":3729,"mutability":"mutable","name":"oldBalance","nameLocation":"28524:10:18","nodeType":"VariableDeclaration","scope":3760,"src":"28516:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3728,"name":"uint256","nodeType":"ElementaryTypeName","src":"28516:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3734,"initialValue":{"expression":{"baseExpression":{"id":3730,"name":"s_subscriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2194,"src":"28537:15:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_Subscription_$2170_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2.Subscription storage ref)"}},"id":3732,"indexExpression":{"id":3731,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3705,"src":"28553:5:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"28537:22:18","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$2170_storage","typeString":"struct VRFCoordinatorV2.Subscription storage ref"}},"id":3733,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"28560:7:18","memberName":"balance","nodeType":"MemberAccess","referencedDeclaration":2167,"src":"28537:30:18","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"VariableDeclarationStatement","src":"28516:51:18"},{"expression":{"id":3743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":3735,"name":"s_subscriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2194,"src":"28577:15:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_Subscription_$2170_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2.Subscription storage ref)"}},"id":3737,"indexExpression":{"id":3736,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3705,"src":"28593:5:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"28577:22:18","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$2170_storage","typeString":"struct VRFCoordinatorV2.Subscription storage ref"}},"id":3738,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"28600:7:18","memberName":"balance","nodeType":"MemberAccess","referencedDeclaration":2167,"src":"28577:30:18","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"arguments":[{"id":3741,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3675,"src":"28618:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3740,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28611:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":3739,"name":"uint96","nodeType":"ElementaryTypeName","src":"28611:6:18","typeDescriptions":{}}},"id":3742,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28611:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"28577:48:18","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"id":3744,"nodeType":"ExpressionStatement","src":"28577:48:18"},{"expression":{"id":3750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3745,"name":"s_totalBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2198,"src":"28635:14:18","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"arguments":[{"id":3748,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3675,"src":"28660:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3747,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28653:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":3746,"name":"uint96","nodeType":"ElementaryTypeName","src":"28653:6:18","typeDescriptions":{}}},"id":3749,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28653:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"28635:32:18","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"id":3751,"nodeType":"ExpressionStatement","src":"28635:32:18"},{"eventCall":{"arguments":[{"id":3753,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3705,"src":"28701:5:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":3754,"name":"oldBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3729,"src":"28708:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3755,"name":"oldBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3729,"src":"28720:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3756,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3675,"src":"28733:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28720:19:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3752,"name":"SubscriptionFunded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2212,"src":"28682:18:18","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint64,uint256,uint256)"}},"id":3758,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28682:58:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3759,"nodeType":"EmitStatement","src":"28677:63:18"}]},"functionSelector":"a4c0ed36","id":3761,"implemented":true,"kind":"function","modifiers":[{"id":3681,"kind":"modifierInvocation","modifierName":{"id":3680,"name":"nonReentrant","nameLocations":["28032:12:18"],"nodeType":"IdentifierPath","referencedDeclaration":4389,"src":"28032:12:18"},"nodeType":"ModifierInvocation","src":"28032:12:18"}],"name":"onTokenTransfer","nameLocation":"27909:15:18","nodeType":"FunctionDefinition","overrides":{"id":3679,"nodeType":"OverrideSpecifier","overrides":[],"src":"28023:8:18"},"parameters":{"id":3678,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3673,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3761,"src":"27934:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3672,"name":"address","nodeType":"ElementaryTypeName","src":"27934:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3675,"mutability":"mutable","name":"amount","nameLocation":"27972:6:18","nodeType":"VariableDeclaration","scope":3761,"src":"27964:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3674,"name":"uint256","nodeType":"ElementaryTypeName","src":"27964:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3677,"mutability":"mutable","name":"data","nameLocation":"28003:4:18","nodeType":"VariableDeclaration","scope":3761,"src":"27988:19:18","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3676,"name":"bytes","nodeType":"ElementaryTypeName","src":"27988:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"27924:89:18"},"returnParameters":{"id":3682,"nodeType":"ParameterList","parameters":[],"src":"28045:0:18"},"scope":4400,"src":"27900:847:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3768,"nodeType":"Block","src":"28811:38:18","statements":[{"expression":{"id":3766,"name":"s_currentSubId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2196,"src":"28828:14:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":3765,"id":3767,"nodeType":"Return","src":"28821:21:18"}]},"functionSelector":"06bfa637","id":3769,"implemented":true,"kind":"function","modifiers":[],"name":"getCurrentSubId","nameLocation":"28762:15:18","nodeType":"FunctionDefinition","parameters":{"id":3762,"nodeType":"ParameterList","parameters":[],"src":"28777:2:18"},"returnParameters":{"id":3765,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3764,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3769,"src":"28803:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":3763,"name":"uint64","nodeType":"ElementaryTypeName","src":"28803:6:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"28802:8:18"},"scope":4400,"src":"28753:96:18","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[361],"body":{"id":3817,"nodeType":"Block","src":"29171:339:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":3785,"name":"s_subscriptionConfigs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2189,"src":"29185:21:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_SubscriptionConfig_$2178_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2.SubscriptionConfig storage ref)"}},"id":3787,"indexExpression":{"id":3786,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3772,"src":"29207:5:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"29185:28:18","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConfig_$2178_storage","typeString":"struct VRFCoordinatorV2.SubscriptionConfig storage ref"}},"id":3788,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"29214:5:18","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":2172,"src":"29185:34:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":3791,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29231:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3790,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29223:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3789,"name":"address","nodeType":"ElementaryTypeName","src":"29223:7:18","typeDescriptions":{}}},"id":3792,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29223:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"29185:48:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3798,"nodeType":"IfStatement","src":"29181:107:18","trueBody":{"id":3797,"nodeType":"Block","src":"29235:53:18","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3794,"name":"InvalidSubscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2139,"src":"29256:19:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3795,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29256:21:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3796,"nodeType":"RevertStatement","src":"29249:28:18"}]}},{"expression":{"components":[{"expression":{"baseExpression":{"id":3799,"name":"s_subscriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2194,"src":"29318:15:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_Subscription_$2170_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2.Subscription storage ref)"}},"id":3801,"indexExpression":{"id":3800,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3772,"src":"29334:5:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"29318:22:18","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$2170_storage","typeString":"struct VRFCoordinatorV2.Subscription storage ref"}},"id":3802,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"29341:7:18","memberName":"balance","nodeType":"MemberAccess","referencedDeclaration":2167,"src":"29318:30:18","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"expression":{"baseExpression":{"id":3803,"name":"s_subscriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2194,"src":"29362:15:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_Subscription_$2170_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2.Subscription storage ref)"}},"id":3805,"indexExpression":{"id":3804,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3772,"src":"29378:5:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"29362:22:18","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$2170_storage","typeString":"struct VRFCoordinatorV2.Subscription storage ref"}},"id":3806,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"29385:8:18","memberName":"reqCount","nodeType":"MemberAccess","referencedDeclaration":2169,"src":"29362:31:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"expression":{"baseExpression":{"id":3807,"name":"s_subscriptionConfigs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2189,"src":"29407:21:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_SubscriptionConfig_$2178_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2.SubscriptionConfig storage ref)"}},"id":3809,"indexExpression":{"id":3808,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3772,"src":"29429:5:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"29407:28:18","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConfig_$2178_storage","typeString":"struct VRFCoordinatorV2.SubscriptionConfig storage ref"}},"id":3810,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"29436:5:18","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":2172,"src":"29407:34:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"baseExpression":{"id":3811,"name":"s_subscriptionConfigs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2189,"src":"29455:21:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_SubscriptionConfig_$2178_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2.SubscriptionConfig storage ref)"}},"id":3813,"indexExpression":{"id":3812,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3772,"src":"29477:5:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"29455:28:18","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConfig_$2178_storage","typeString":"struct VRFCoordinatorV2.SubscriptionConfig storage ref"}},"id":3814,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"29484:9:18","memberName":"consumers","nodeType":"MemberAccess","referencedDeclaration":2177,"src":"29455:38:18","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}}],"id":3815,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"29304:199:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint96_$_t_uint64_$_t_address_$_t_array$_t_address_$dyn_storage_$","typeString":"tuple(uint96,uint64,address,address[] storage ref)"}},"functionReturnParameters":3784,"id":3816,"nodeType":"Return","src":"29297:206:18"}]},"documentation":{"id":3770,"nodeType":"StructuredDocumentation","src":"28855:56:18","text":" @inheritdoc VRFCoordinatorV2Interface"},"functionSelector":"a47c7696","id":3818,"implemented":true,"kind":"function","modifiers":[],"name":"getSubscription","nameLocation":"28925:15:18","nodeType":"FunctionDefinition","overrides":{"id":3774,"nodeType":"OverrideSpecifier","overrides":[],"src":"29007:8:18"},"parameters":{"id":3773,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3772,"mutability":"mutable","name":"subId","nameLocation":"28957:5:18","nodeType":"VariableDeclaration","scope":3818,"src":"28950:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":3771,"name":"uint64","nodeType":"ElementaryTypeName","src":"28950:6:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"28940:28:18"},"returnParameters":{"id":3784,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3776,"mutability":"mutable","name":"balance","nameLocation":"29053:7:18","nodeType":"VariableDeclaration","scope":3818,"src":"29046:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":3775,"name":"uint96","nodeType":"ElementaryTypeName","src":"29046:6:18","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":3778,"mutability":"mutable","name":"reqCount","nameLocation":"29081:8:18","nodeType":"VariableDeclaration","scope":3818,"src":"29074:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":3777,"name":"uint64","nodeType":"ElementaryTypeName","src":"29074:6:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":3780,"mutability":"mutable","name":"owner","nameLocation":"29111:5:18","nodeType":"VariableDeclaration","scope":3818,"src":"29103:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3779,"name":"address","nodeType":"ElementaryTypeName","src":"29103:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3783,"mutability":"mutable","name":"consumers","nameLocation":"29147:9:18","nodeType":"VariableDeclaration","scope":3818,"src":"29130:26:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3781,"name":"address","nodeType":"ElementaryTypeName","src":"29130:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3782,"nodeType":"ArrayTypeName","src":"29130:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"29032:134:18"},"scope":4400,"src":"28916:594:18","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[346],"body":{"id":3876,"nodeType":"Block","src":"29691:488:18","statements":[{"expression":{"id":3828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"29701:16:18","subExpression":{"id":3827,"name":"s_currentSubId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2196,"src":"29701:14:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":3829,"nodeType":"ExpressionStatement","src":"29701:16:18"},{"assignments":[3831],"declarations":[{"constant":false,"id":3831,"mutability":"mutable","name":"currentSubId","nameLocation":"29734:12:18","nodeType":"VariableDeclaration","scope":3876,"src":"29727:19:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":3830,"name":"uint64","nodeType":"ElementaryTypeName","src":"29727:6:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"id":3833,"initialValue":{"id":3832,"name":"s_currentSubId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2196,"src":"29749:14:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"VariableDeclarationStatement","src":"29727:36:18"},{"assignments":[3838],"declarations":[{"constant":false,"id":3838,"mutability":"mutable","name":"consumers","nameLocation":"29790:9:18","nodeType":"VariableDeclaration","scope":3876,"src":"29773:26:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3836,"name":"address","nodeType":"ElementaryTypeName","src":"29773:7:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3837,"nodeType":"ArrayTypeName","src":"29773:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":3844,"initialValue":{"arguments":[{"hexValue":"30","id":3842,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29816:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3841,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"29802:13:18","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (address[] memory)"},"typeName":{"baseType":{"id":3839,"name":"address","nodeType":"ElementaryTypeName","src":"29806:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3840,"nodeType":"ArrayTypeName","src":"29806:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"id":3843,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29802:16:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"VariableDeclarationStatement","src":"29773:45:18"},{"expression":{"id":3852,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3845,"name":"s_subscriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2194,"src":"29828:15:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_Subscription_$2170_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2.Subscription storage ref)"}},"id":3847,"indexExpression":{"id":3846,"name":"currentSubId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3831,"src":"29844:12:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"29828:29:18","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$2170_storage","typeString":"struct VRFCoordinatorV2.Subscription storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"30","id":3849,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29883:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":3850,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29896:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3848,"name":"Subscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2170,"src":"29860:12:18","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Subscription_$2170_storage_ptr_$","typeString":"type(struct VRFCoordinatorV2.Subscription storage pointer)"}},"id":3851,"isConstant":false,"isLValue":false,"isPure":true,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["29874:7:18","29886:8:18"],"names":["balance","reqCount"],"nodeType":"FunctionCall","src":"29860:39:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$2170_memory_ptr","typeString":"struct VRFCoordinatorV2.Subscription memory"}},"src":"29828:71:18","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$2170_storage","typeString":"struct VRFCoordinatorV2.Subscription storage ref"}},"id":3853,"nodeType":"ExpressionStatement","src":"29828:71:18"},{"expression":{"id":3866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3854,"name":"s_subscriptionConfigs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2189,"src":"29909:21:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_SubscriptionConfig_$2178_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2.SubscriptionConfig storage ref)"}},"id":3856,"indexExpression":{"id":3855,"name":"currentSubId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3831,"src":"29931:12:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"29909:35:18","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConfig_$2178_storage","typeString":"struct VRFCoordinatorV2.SubscriptionConfig storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":3858,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"29987:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"29991:6:18","memberName":"sender","nodeType":"MemberAccess","src":"29987:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":3862,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30035:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3861,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30027:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3860,"name":"address","nodeType":"ElementaryTypeName","src":"30027:7:18","typeDescriptions":{}}},"id":3863,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30027:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3864,"name":"consumers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3838,"src":"30062:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}],"id":3857,"name":"SubscriptionConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2178,"src":"29947:18:18","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_SubscriptionConfig_$2178_storage_ptr_$","typeString":"type(struct VRFCoordinatorV2.SubscriptionConfig storage pointer)"}},"id":3865,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["29980:5:18","30011:14:18","30051:9:18"],"names":["owner","requestedOwner","consumers"],"nodeType":"FunctionCall","src":"29947:135:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConfig_$2178_memory_ptr","typeString":"struct VRFCoordinatorV2.SubscriptionConfig memory"}},"src":"29909:173:18","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConfig_$2178_storage","typeString":"struct VRFCoordinatorV2.SubscriptionConfig storage ref"}},"id":3867,"nodeType":"ExpressionStatement","src":"29909:173:18"},{"eventCall":{"arguments":[{"id":3869,"name":"currentSubId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3831,"src":"30118:12:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"expression":{"id":3870,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"30132:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30136:6:18","memberName":"sender","nodeType":"MemberAccess","src":"30132:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3868,"name":"SubscriptionCreated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2204,"src":"30098:19:18","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$_t_address_$returns$__$","typeString":"function (uint64,address)"}},"id":3872,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30098:45:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3873,"nodeType":"EmitStatement","src":"30093:50:18"},{"expression":{"id":3874,"name":"currentSubId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3831,"src":"30160:12:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":3826,"id":3875,"nodeType":"Return","src":"30153:19:18"}]},"documentation":{"id":3819,"nodeType":"StructuredDocumentation","src":"29516:56:18","text":" @inheritdoc VRFCoordinatorV2Interface"},"functionSelector":"a21a23e4","id":3877,"implemented":true,"kind":"function","modifiers":[{"id":3823,"kind":"modifierInvocation","modifierName":{"id":3822,"name":"nonReentrant","nameLocations":["29649:12:18"],"nodeType":"IdentifierPath","referencedDeclaration":4389,"src":"29649:12:18"},"nodeType":"ModifierInvocation","src":"29649:12:18"}],"name":"createSubscription","nameLocation":"29586:18:18","nodeType":"FunctionDefinition","overrides":{"id":3821,"nodeType":"OverrideSpecifier","overrides":[],"src":"29632:8:18"},"parameters":{"id":3820,"nodeType":"ParameterList","parameters":[],"src":"29604:2:18"},"returnParameters":{"id":3826,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3825,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3877,"src":"29679:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":3824,"name":"uint64","nodeType":"ElementaryTypeName","src":"29679:6:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"29678:8:18"},"scope":4400,"src":"29577:602:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[369],"body":{"id":3913,"nodeType":"Block","src":"30393:384:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":3891,"name":"s_subscriptionConfigs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2189,"src":"30491:21:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_SubscriptionConfig_$2178_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2.SubscriptionConfig storage ref)"}},"id":3893,"indexExpression":{"id":3892,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3880,"src":"30513:5:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"30491:28:18","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConfig_$2178_storage","typeString":"struct VRFCoordinatorV2.SubscriptionConfig storage ref"}},"id":3894,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"30520:14:18","memberName":"requestedOwner","nodeType":"MemberAccess","referencedDeclaration":2174,"src":"30491:43:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3895,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3882,"src":"30538:8:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"30491:55:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3912,"nodeType":"IfStatement","src":"30487:284:18","trueBody":{"id":3911,"nodeType":"Block","src":"30548:223:18","statements":[{"expression":{"id":3902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":3897,"name":"s_subscriptionConfigs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2189,"src":"30562:21:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_SubscriptionConfig_$2178_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2.SubscriptionConfig storage ref)"}},"id":3899,"indexExpression":{"id":3898,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3880,"src":"30584:5:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"30562:28:18","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConfig_$2178_storage","typeString":"struct VRFCoordinatorV2.SubscriptionConfig storage ref"}},"id":3900,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"30591:14:18","memberName":"requestedOwner","nodeType":"MemberAccess","referencedDeclaration":2174,"src":"30562:43:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3901,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3882,"src":"30608:8:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"30562:54:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3903,"nodeType":"ExpressionStatement","src":"30562:54:18"},{"eventCall":{"arguments":[{"id":3905,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3880,"src":"30687:5:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"expression":{"id":3906,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"30710:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30714:6:18","memberName":"sender","nodeType":"MemberAccess","src":"30710:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3908,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3882,"src":"30738:8:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3904,"name":"SubscriptionOwnerTransferRequested","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2240,"src":"30635:34:18","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$_t_address_$_t_address_$returns$__$","typeString":"function (uint64,address,address)"}},"id":3909,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30635:125:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3910,"nodeType":"EmitStatement","src":"30630:130:18"}]}}]},"documentation":{"id":3878,"nodeType":"StructuredDocumentation","src":"30185:56:18","text":" @inheritdoc VRFCoordinatorV2Interface"},"functionSelector":"04c357cb","id":3914,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":3886,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3880,"src":"30373:5:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"id":3887,"kind":"modifierInvocation","modifierName":{"id":3885,"name":"onlySubOwner","nameLocations":["30360:12:18"],"nodeType":"IdentifierPath","referencedDeclaration":4378,"src":"30360:12:18"},"nodeType":"ModifierInvocation","src":"30360:19:18"},{"id":3889,"kind":"modifierInvocation","modifierName":{"id":3888,"name":"nonReentrant","nameLocations":["30380:12:18"],"nodeType":"IdentifierPath","referencedDeclaration":4389,"src":"30380:12:18"},"nodeType":"ModifierInvocation","src":"30380:12:18"}],"name":"requestSubscriptionOwnerTransfer","nameLocation":"30255:32:18","nodeType":"FunctionDefinition","overrides":{"id":3884,"nodeType":"OverrideSpecifier","overrides":[],"src":"30351:8:18"},"parameters":{"id":3883,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3880,"mutability":"mutable","name":"subId","nameLocation":"30304:5:18","nodeType":"VariableDeclaration","scope":3914,"src":"30297:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":3879,"name":"uint64","nodeType":"ElementaryTypeName","src":"30297:6:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":3882,"mutability":"mutable","name":"newOwner","nameLocation":"30327:8:18","nodeType":"VariableDeclaration","scope":3914,"src":"30319:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3881,"name":"address","nodeType":"ElementaryTypeName","src":"30319:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"30287:54:18"},"returnParameters":{"id":3890,"nodeType":"ParameterList","parameters":[],"src":"30393:0:18"},"scope":4400,"src":"30246:531:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[375],"body":{"id":3985,"nodeType":"Block","src":"30944:580:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":3923,"name":"s_subscriptionConfigs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2189,"src":"30958:21:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_SubscriptionConfig_$2178_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2.SubscriptionConfig storage ref)"}},"id":3925,"indexExpression":{"id":3924,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3917,"src":"30980:5:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"30958:28:18","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConfig_$2178_storage","typeString":"struct VRFCoordinatorV2.SubscriptionConfig storage ref"}},"id":3926,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"30987:5:18","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":2172,"src":"30958:34:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":3929,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31004:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3928,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30996:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3927,"name":"address","nodeType":"ElementaryTypeName","src":"30996:7:18","typeDescriptions":{}}},"id":3930,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30996:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"30958:48:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3936,"nodeType":"IfStatement","src":"30954:107:18","trueBody":{"id":3935,"nodeType":"Block","src":"31008:53:18","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3932,"name":"InvalidSubscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2139,"src":"31029:19:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3933,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31029:21:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3934,"nodeType":"RevertStatement","src":"31022:28:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":3937,"name":"s_subscriptionConfigs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2189,"src":"31074:21:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_SubscriptionConfig_$2178_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2.SubscriptionConfig storage ref)"}},"id":3939,"indexExpression":{"id":3938,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3917,"src":"31096:5:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"31074:28:18","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConfig_$2178_storage","typeString":"struct VRFCoordinatorV2.SubscriptionConfig storage ref"}},"id":3940,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"31103:14:18","memberName":"requestedOwner","nodeType":"MemberAccess","referencedDeclaration":2174,"src":"31074:43:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":3941,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"31121:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31125:6:18","memberName":"sender","nodeType":"MemberAccess","src":"31121:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"31074:57:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3952,"nodeType":"IfStatement","src":"31070:190:18","trueBody":{"id":3951,"nodeType":"Block","src":"31133:127:18","statements":[{"errorCall":{"arguments":[{"expression":{"baseExpression":{"id":3945,"name":"s_subscriptionConfigs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2189,"src":"31192:21:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_SubscriptionConfig_$2178_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2.SubscriptionConfig storage ref)"}},"id":3947,"indexExpression":{"id":3946,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3917,"src":"31214:5:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"31192:28:18","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConfig_$2178_storage","typeString":"struct VRFCoordinatorV2.SubscriptionConfig storage ref"}},"id":3948,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"31221:14:18","memberName":"requestedOwner","nodeType":"MemberAccess","referencedDeclaration":2174,"src":"31192:43:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3944,"name":"MustBeRequestedOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2153,"src":"31154:20:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":3949,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31154:95:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3950,"nodeType":"RevertStatement","src":"31147:102:18"}]}},{"assignments":[3954],"declarations":[{"constant":false,"id":3954,"mutability":"mutable","name":"oldOwner","nameLocation":"31277:8:18","nodeType":"VariableDeclaration","scope":3985,"src":"31269:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3953,"name":"address","nodeType":"ElementaryTypeName","src":"31269:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3959,"initialValue":{"expression":{"baseExpression":{"id":3955,"name":"s_subscriptionConfigs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2189,"src":"31288:21:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_SubscriptionConfig_$2178_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2.SubscriptionConfig storage ref)"}},"id":3957,"indexExpression":{"id":3956,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3917,"src":"31310:5:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"31288:28:18","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConfig_$2178_storage","typeString":"struct VRFCoordinatorV2.SubscriptionConfig storage ref"}},"id":3958,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"31317:5:18","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":2172,"src":"31288:34:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"31269:53:18"},{"expression":{"id":3966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":3960,"name":"s_subscriptionConfigs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2189,"src":"31332:21:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_SubscriptionConfig_$2178_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2.SubscriptionConfig storage ref)"}},"id":3962,"indexExpression":{"id":3961,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3917,"src":"31354:5:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"31332:28:18","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConfig_$2178_storage","typeString":"struct VRFCoordinatorV2.SubscriptionConfig storage ref"}},"id":3963,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"31361:5:18","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":2172,"src":"31332:34:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":3964,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"31369:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31373:6:18","memberName":"sender","nodeType":"MemberAccess","src":"31369:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"31332:47:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3967,"nodeType":"ExpressionStatement","src":"31332:47:18"},{"expression":{"id":3976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":3968,"name":"s_subscriptionConfigs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2189,"src":"31389:21:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_SubscriptionConfig_$2178_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2.SubscriptionConfig storage ref)"}},"id":3970,"indexExpression":{"id":3969,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3917,"src":"31411:5:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"31389:28:18","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConfig_$2178_storage","typeString":"struct VRFCoordinatorV2.SubscriptionConfig storage ref"}},"id":3971,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"31418:14:18","memberName":"requestedOwner","nodeType":"MemberAccess","referencedDeclaration":2174,"src":"31389:43:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"30","id":3974,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31443:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3973,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31435:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3972,"name":"address","nodeType":"ElementaryTypeName","src":"31435:7:18","typeDescriptions":{}}},"id":3975,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31435:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"31389:56:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3977,"nodeType":"ExpressionStatement","src":"31389:56:18"},{"eventCall":{"arguments":[{"id":3979,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3917,"src":"31489:5:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":3980,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3954,"src":"31496:8:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3981,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"31506:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31510:6:18","memberName":"sender","nodeType":"MemberAccess","src":"31506:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3978,"name":"SubscriptionOwnerTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2248,"src":"31460:28:18","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$_t_address_$_t_address_$returns$__$","typeString":"function (uint64,address,address)"}},"id":3983,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31460:57:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3984,"nodeType":"EmitStatement","src":"31455:62:18"}]},"documentation":{"id":3915,"nodeType":"StructuredDocumentation","src":"30783:56:18","text":" @inheritdoc VRFCoordinatorV2Interface"},"functionSelector":"82359740","id":3986,"implemented":true,"kind":"function","modifiers":[{"id":3921,"kind":"modifierInvocation","modifierName":{"id":3920,"name":"nonReentrant","nameLocations":["30931:12:18"],"nodeType":"IdentifierPath","referencedDeclaration":4389,"src":"30931:12:18"},"nodeType":"ModifierInvocation","src":"30931:12:18"}],"name":"acceptSubscriptionOwnerTransfer","nameLocation":"30853:31:18","nodeType":"FunctionDefinition","overrides":{"id":3919,"nodeType":"OverrideSpecifier","overrides":[],"src":"30922:8:18"},"parameters":{"id":3918,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3917,"mutability":"mutable","name":"subId","nameLocation":"30901:5:18","nodeType":"VariableDeclaration","scope":3986,"src":"30894:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":3916,"name":"uint64","nodeType":"ElementaryTypeName","src":"30894:6:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"30884:28:18"},"returnParameters":{"id":3922,"nodeType":"ParameterList","parameters":[],"src":"30944:0:18"},"scope":4400,"src":"30844:680:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[391],"body":{"id":4094,"nodeType":"Block","src":"31720:937:18","statements":[{"condition":{"arguments":[{"id":4001,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3989,"src":"31755:5:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":4000,"name":"pendingRequestExists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4344,"src":"31734:20:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint64_$returns$_t_bool_$","typeString":"function (uint64) view returns (bool)"}},"id":4002,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31734:27:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4007,"nodeType":"IfStatement","src":"31730:87:18","trueBody":{"id":4006,"nodeType":"Block","src":"31763:54:18","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4003,"name":"PendingRequestExists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2149,"src":"31784:20:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4004,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31784:22:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4005,"nodeType":"RevertStatement","src":"31777:29:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":4014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"baseExpression":{"id":4008,"name":"s_consumers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2184,"src":"31830:11:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint64_$_t_uint64_$_$","typeString":"mapping(address => mapping(uint64 => uint64))"}},"id":4010,"indexExpression":{"id":4009,"name":"consumer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3991,"src":"31842:8:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"31830:21:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_uint64_$","typeString":"mapping(uint64 => uint64)"}},"id":4012,"indexExpression":{"id":4011,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3989,"src":"31852:5:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"31830:28:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4013,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31862:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"31830:33:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4021,"nodeType":"IfStatement","src":"31826:103:18","trueBody":{"id":4020,"nodeType":"Block","src":"31865:64:18","statements":[{"errorCall":{"arguments":[{"id":4016,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3989,"src":"31902:5:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":4017,"name":"consumer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3991,"src":"31909:8:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_address","typeString":"address"}],"id":4015,"name":"InvalidConsumer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2137,"src":"31886:15:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint64_$_t_address_$returns$__$","typeString":"function (uint64,address) pure"}},"id":4018,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31886:32:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4019,"nodeType":"RevertStatement","src":"31879:39:18"}]}},{"assignments":[4026],"declarations":[{"constant":false,"id":4026,"mutability":"mutable","name":"consumers","nameLocation":"31996:9:18","nodeType":"VariableDeclaration","scope":4094,"src":"31979:26:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4024,"name":"address","nodeType":"ElementaryTypeName","src":"31979:7:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4025,"nodeType":"ArrayTypeName","src":"31979:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":4031,"initialValue":{"expression":{"baseExpression":{"id":4027,"name":"s_subscriptionConfigs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2189,"src":"32008:21:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_SubscriptionConfig_$2178_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2.SubscriptionConfig storage ref)"}},"id":4029,"indexExpression":{"id":4028,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3989,"src":"32030:5:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"32008:28:18","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConfig_$2178_storage","typeString":"struct VRFCoordinatorV2.SubscriptionConfig storage ref"}},"id":4030,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"32037:9:18","memberName":"consumers","nodeType":"MemberAccess","referencedDeclaration":2177,"src":"32008:38:18","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"nodeType":"VariableDeclarationStatement","src":"31979:67:18"},{"assignments":[4033],"declarations":[{"constant":false,"id":4033,"mutability":"mutable","name":"lastConsumerIndex","nameLocation":"32064:17:18","nodeType":"VariableDeclaration","scope":4094,"src":"32056:25:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4032,"name":"uint256","nodeType":"ElementaryTypeName","src":"32056:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4038,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4034,"name":"consumers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4026,"src":"32084:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"32094:6:18","memberName":"length","nodeType":"MemberAccess","src":"32084:16:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4036,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32103:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"32084:20:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"32056:48:18"},{"body":{"id":4080,"nodeType":"Block","src":"32161:386:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":4050,"name":"consumers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4026,"src":"32179:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4052,"indexExpression":{"id":4051,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4040,"src":"32189:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"32179:12:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4053,"name":"consumer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3991,"src":"32195:8:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"32179:24:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4079,"nodeType":"IfStatement","src":"32175:362:18","trueBody":{"id":4078,"nodeType":"Block","src":"32205:332:18","statements":[{"assignments":[4056],"declarations":[{"constant":false,"id":4056,"mutability":"mutable","name":"last","nameLocation":"32231:4:18","nodeType":"VariableDeclaration","scope":4078,"src":"32223:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4055,"name":"address","nodeType":"ElementaryTypeName","src":"32223:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":4060,"initialValue":{"baseExpression":{"id":4057,"name":"consumers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4026,"src":"32238:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4059,"indexExpression":{"id":4058,"name":"lastConsumerIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4033,"src":"32248:17:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"32238:28:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"32223:43:18"},{"expression":{"id":4068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"id":4061,"name":"s_subscriptionConfigs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2189,"src":"32342:21:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_SubscriptionConfig_$2178_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2.SubscriptionConfig storage ref)"}},"id":4063,"indexExpression":{"id":4062,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3989,"src":"32364:5:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"32342:28:18","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConfig_$2178_storage","typeString":"struct VRFCoordinatorV2.SubscriptionConfig storage ref"}},"id":4064,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"32371:9:18","memberName":"consumers","nodeType":"MemberAccess","referencedDeclaration":2177,"src":"32342:38:18","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":4066,"indexExpression":{"id":4065,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4040,"src":"32381:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"32342:41:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4067,"name":"last","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4056,"src":"32386:4:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"32342:48:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4069,"nodeType":"ExpressionStatement","src":"32342:48:18"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"expression":{"baseExpression":{"id":4070,"name":"s_subscriptionConfigs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2189,"src":"32455:21:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_SubscriptionConfig_$2178_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2.SubscriptionConfig storage ref)"}},"id":4072,"indexExpression":{"id":4071,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3989,"src":"32477:5:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"32455:28:18","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConfig_$2178_storage","typeString":"struct VRFCoordinatorV2.SubscriptionConfig storage ref"}},"id":4073,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"32484:9:18","memberName":"consumers","nodeType":"MemberAccess","referencedDeclaration":2177,"src":"32455:38:18","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":4074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"32494:3:18","memberName":"pop","nodeType":"MemberAccess","src":"32455:42:18","typeDescriptions":{"typeIdentifier":"t_function_arraypop_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$","typeString":"function (address[] storage pointer)"}},"id":4075,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32455:44:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4076,"nodeType":"ExpressionStatement","src":"32455:44:18"},{"id":4077,"nodeType":"Break","src":"32517:5:18"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4043,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4040,"src":"32134:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4044,"name":"consumers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4026,"src":"32138:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"32148:6:18","memberName":"length","nodeType":"MemberAccess","src":"32138:16:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"32134:20:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4081,"initializationExpression":{"assignments":[4040],"declarations":[{"constant":false,"id":4040,"mutability":"mutable","name":"i","nameLocation":"32127:1:18","nodeType":"VariableDeclaration","scope":4081,"src":"32119:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4039,"name":"uint256","nodeType":"ElementaryTypeName","src":"32119:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4042,"initialValue":{"hexValue":"30","id":4041,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32131:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"32119:13:18"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"32156:3:18","subExpression":{"id":4047,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4040,"src":"32156:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4049,"nodeType":"ExpressionStatement","src":"32156:3:18"},"nodeType":"ForStatement","src":"32114:433:18"},{"expression":{"id":4087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"32556:35:18","subExpression":{"baseExpression":{"baseExpression":{"id":4082,"name":"s_consumers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2184,"src":"32563:11:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint64_$_t_uint64_$_$","typeString":"mapping(address => mapping(uint64 => uint64))"}},"id":4084,"indexExpression":{"id":4083,"name":"consumer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3991,"src":"32575:8:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"32563:21:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_uint64_$","typeString":"mapping(uint64 => uint64)"}},"id":4086,"indexExpression":{"id":4085,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3989,"src":"32585:5:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"32563:28:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4088,"nodeType":"ExpressionStatement","src":"32556:35:18"},{"eventCall":{"arguments":[{"id":4090,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3989,"src":"32634:5:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":4091,"name":"consumer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3991,"src":"32641:8:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_address","typeString":"address"}],"id":4089,"name":"SubscriptionConsumerRemoved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2224,"src":"32606:27:18","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$_t_address_$returns$__$","typeString":"function (uint64,address)"}},"id":4092,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32606:44:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4093,"nodeType":"EmitStatement","src":"32601:49:18"}]},"documentation":{"id":3987,"nodeType":"StructuredDocumentation","src":"31530:56:18","text":" @inheritdoc VRFCoordinatorV2Interface"},"functionSelector":"9f87fad7","id":4095,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":3995,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3989,"src":"31700:5:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"id":3996,"kind":"modifierInvocation","modifierName":{"id":3994,"name":"onlySubOwner","nameLocations":["31687:12:18"],"nodeType":"IdentifierPath","referencedDeclaration":4378,"src":"31687:12:18"},"nodeType":"ModifierInvocation","src":"31687:19:18"},{"id":3998,"kind":"modifierInvocation","modifierName":{"id":3997,"name":"nonReentrant","nameLocations":["31707:12:18"],"nodeType":"IdentifierPath","referencedDeclaration":4389,"src":"31707:12:18"},"nodeType":"ModifierInvocation","src":"31707:12:18"}],"name":"removeConsumer","nameLocation":"31600:14:18","nodeType":"FunctionDefinition","overrides":{"id":3993,"nodeType":"OverrideSpecifier","overrides":[],"src":"31678:8:18"},"parameters":{"id":3992,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3989,"mutability":"mutable","name":"subId","nameLocation":"31631:5:18","nodeType":"VariableDeclaration","scope":4095,"src":"31624:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":3988,"name":"uint64","nodeType":"ElementaryTypeName","src":"31624:6:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":3991,"mutability":"mutable","name":"consumer","nameLocation":"31654:8:18","nodeType":"VariableDeclaration","scope":4095,"src":"31646:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3990,"name":"address","nodeType":"ElementaryTypeName","src":"31646:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"31614:54:18"},"returnParameters":{"id":3999,"nodeType":"ParameterList","parameters":[],"src":"31720:0:18"},"scope":4400,"src":"31591:1066:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[383],"body":{"id":4152,"nodeType":"Block","src":"32850:638:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"baseExpression":{"id":4109,"name":"s_subscriptionConfigs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2189,"src":"32921:21:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_SubscriptionConfig_$2178_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2.SubscriptionConfig storage ref)"}},"id":4111,"indexExpression":{"id":4110,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4098,"src":"32943:5:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"32921:28:18","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConfig_$2178_storage","typeString":"struct VRFCoordinatorV2.SubscriptionConfig storage ref"}},"id":4112,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"32950:9:18","memberName":"consumers","nodeType":"MemberAccess","referencedDeclaration":2177,"src":"32921:38:18","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":4113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"32960:6:18","memberName":"length","nodeType":"MemberAccess","src":"32921:45:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4114,"name":"MAX_CONSUMERS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2127,"src":"32970:13:18","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"32921:62:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4120,"nodeType":"IfStatement","src":"32917:118:18","trueBody":{"id":4119,"nodeType":"Block","src":"32985:50:18","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4116,"name":"TooManyConsumers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2129,"src":"33006:16:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33006:18:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4118,"nodeType":"RevertStatement","src":"32999:25:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":4127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"baseExpression":{"id":4121,"name":"s_consumers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2184,"src":"33048:11:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint64_$_t_uint64_$_$","typeString":"mapping(address => mapping(uint64 => uint64))"}},"id":4123,"indexExpression":{"id":4122,"name":"consumer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4100,"src":"33060:8:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"33048:21:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_uint64_$","typeString":"mapping(uint64 => uint64)"}},"id":4125,"indexExpression":{"id":4124,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4098,"src":"33070:5:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"33048:28:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4126,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33080:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"33048:33:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4130,"nodeType":"IfStatement","src":"33044:199:18","trueBody":{"id":4129,"nodeType":"Block","src":"33083:160:18","statements":[{"functionReturnParameters":4108,"id":4128,"nodeType":"Return","src":"33226:7:18"}]}},{"expression":{"id":4137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":4131,"name":"s_consumers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2184,"src":"33328:11:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint64_$_t_uint64_$_$","typeString":"mapping(address => mapping(uint64 => uint64))"}},"id":4134,"indexExpression":{"id":4132,"name":"consumer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4100,"src":"33340:8:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"33328:21:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_uint64_$","typeString":"mapping(uint64 => uint64)"}},"id":4135,"indexExpression":{"id":4133,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4098,"src":"33350:5:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"33328:28:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31","id":4136,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33359:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"33328:32:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":4138,"nodeType":"ExpressionStatement","src":"33328:32:18"},{"expression":{"arguments":[{"id":4144,"name":"consumer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4100,"src":"33414:8:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"expression":{"baseExpression":{"id":4139,"name":"s_subscriptionConfigs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2189,"src":"33370:21:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_SubscriptionConfig_$2178_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2.SubscriptionConfig storage ref)"}},"id":4141,"indexExpression":{"id":4140,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4098,"src":"33392:5:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"33370:28:18","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConfig_$2178_storage","typeString":"struct VRFCoordinatorV2.SubscriptionConfig storage ref"}},"id":4142,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"33399:9:18","memberName":"consumers","nodeType":"MemberAccess","referencedDeclaration":2177,"src":"33370:38:18","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":4143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"33409:4:18","memberName":"push","nodeType":"MemberAccess","src":"33370:43:18","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$","typeString":"function (address[] storage pointer,address)"}},"id":4145,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33370:53:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4146,"nodeType":"ExpressionStatement","src":"33370:53:18"},{"eventCall":{"arguments":[{"id":4148,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4098,"src":"33465:5:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":4149,"name":"consumer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4100,"src":"33472:8:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_address","typeString":"address"}],"id":4147,"name":"SubscriptionConsumerAdded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2218,"src":"33439:25:18","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$_t_address_$returns$__$","typeString":"function (uint64,address)"}},"id":4150,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33439:42:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4151,"nodeType":"EmitStatement","src":"33434:47:18"}]},"documentation":{"id":4096,"nodeType":"StructuredDocumentation","src":"32663:56:18","text":" @inheritdoc VRFCoordinatorV2Interface"},"functionSelector":"7341c10c","id":4153,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":4104,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4098,"src":"32830:5:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"id":4105,"kind":"modifierInvocation","modifierName":{"id":4103,"name":"onlySubOwner","nameLocations":["32817:12:18"],"nodeType":"IdentifierPath","referencedDeclaration":4378,"src":"32817:12:18"},"nodeType":"ModifierInvocation","src":"32817:19:18"},{"id":4107,"kind":"modifierInvocation","modifierName":{"id":4106,"name":"nonReentrant","nameLocations":["32837:12:18"],"nodeType":"IdentifierPath","referencedDeclaration":4389,"src":"32837:12:18"},"nodeType":"ModifierInvocation","src":"32837:12:18"}],"name":"addConsumer","nameLocation":"32733:11:18","nodeType":"FunctionDefinition","overrides":{"id":4102,"nodeType":"OverrideSpecifier","overrides":[],"src":"32808:8:18"},"parameters":{"id":4101,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4098,"mutability":"mutable","name":"subId","nameLocation":"32761:5:18","nodeType":"VariableDeclaration","scope":4153,"src":"32754:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4097,"name":"uint64","nodeType":"ElementaryTypeName","src":"32754:6:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":4100,"mutability":"mutable","name":"consumer","nameLocation":"32784:8:18","nodeType":"VariableDeclaration","scope":4153,"src":"32776:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4099,"name":"address","nodeType":"ElementaryTypeName","src":"32776:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"32744:54:18"},"returnParameters":{"id":4108,"nodeType":"ParameterList","parameters":[],"src":"32850:0:18"},"scope":4400,"src":"32724:764:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[399],"body":{"id":4180,"nodeType":"Block","src":"33682:148:18","statements":[{"condition":{"arguments":[{"id":4168,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4156,"src":"33717:5:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":4167,"name":"pendingRequestExists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4344,"src":"33696:20:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint64_$returns$_t_bool_$","typeString":"function (uint64) view returns (bool)"}},"id":4169,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33696:27:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4174,"nodeType":"IfStatement","src":"33692:87:18","trueBody":{"id":4173,"nodeType":"Block","src":"33725:54:18","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4170,"name":"PendingRequestExists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2149,"src":"33746:20:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4171,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33746:22:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4172,"nodeType":"RevertStatement","src":"33739:29:18"}]}},{"expression":{"arguments":[{"id":4176,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4156,"src":"33813:5:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":4177,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4158,"src":"33820:2:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_address","typeString":"address"}],"id":4175,"name":"cancelSubscriptionHelper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4268,"src":"33788:24:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint64_$_t_address_$returns$__$","typeString":"function (uint64,address)"}},"id":4178,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33788:35:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4179,"nodeType":"ExpressionStatement","src":"33788:35:18"}]},"documentation":{"id":4154,"nodeType":"StructuredDocumentation","src":"33494:56:18","text":" @inheritdoc VRFCoordinatorV2Interface"},"functionSelector":"d7ae1d30","id":4181,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":4162,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4156,"src":"33662:5:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"id":4163,"kind":"modifierInvocation","modifierName":{"id":4161,"name":"onlySubOwner","nameLocations":["33649:12:18"],"nodeType":"IdentifierPath","referencedDeclaration":4378,"src":"33649:12:18"},"nodeType":"ModifierInvocation","src":"33649:19:18"},{"id":4165,"kind":"modifierInvocation","modifierName":{"id":4164,"name":"nonReentrant","nameLocations":["33669:12:18"],"nodeType":"IdentifierPath","referencedDeclaration":4389,"src":"33669:12:18"},"nodeType":"ModifierInvocation","src":"33669:12:18"}],"name":"cancelSubscription","nameLocation":"33564:18:18","nodeType":"FunctionDefinition","overrides":{"id":4160,"nodeType":"OverrideSpecifier","overrides":[],"src":"33640:8:18"},"parameters":{"id":4159,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4156,"mutability":"mutable","name":"subId","nameLocation":"33599:5:18","nodeType":"VariableDeclaration","scope":4181,"src":"33592:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4155,"name":"uint64","nodeType":"ElementaryTypeName","src":"33592:6:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":4158,"mutability":"mutable","name":"to","nameLocation":"33622:2:18","nodeType":"VariableDeclaration","scope":4181,"src":"33614:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4157,"name":"address","nodeType":"ElementaryTypeName","src":"33614:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"33582:48:18"},"returnParameters":{"id":4166,"nodeType":"ParameterList","parameters":[],"src":"33682:0:18"},"scope":4400,"src":"33555:275:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4267,"nodeType":"Block","src":"33939:681:18","statements":[{"assignments":[4192],"declarations":[{"constant":false,"id":4192,"mutability":"mutable","name":"subConfig","nameLocation":"33975:9:18","nodeType":"VariableDeclaration","scope":4267,"src":"33949:35:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConfig_$2178_memory_ptr","typeString":"struct VRFCoordinatorV2.SubscriptionConfig"},"typeName":{"id":4191,"nodeType":"UserDefinedTypeName","pathNode":{"id":4190,"name":"SubscriptionConfig","nameLocations":["33949:18:18"],"nodeType":"IdentifierPath","referencedDeclaration":2178,"src":"33949:18:18"},"referencedDeclaration":2178,"src":"33949:18:18","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConfig_$2178_storage_ptr","typeString":"struct VRFCoordinatorV2.SubscriptionConfig"}},"visibility":"internal"}],"id":4196,"initialValue":{"baseExpression":{"id":4193,"name":"s_subscriptionConfigs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2189,"src":"33987:21:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_SubscriptionConfig_$2178_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2.SubscriptionConfig storage ref)"}},"id":4195,"indexExpression":{"id":4194,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4183,"src":"34009:5:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"33987:28:18","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConfig_$2178_storage","typeString":"struct VRFCoordinatorV2.SubscriptionConfig storage ref"}},"nodeType":"VariableDeclarationStatement","src":"33949:66:18"},{"assignments":[4199],"declarations":[{"constant":false,"id":4199,"mutability":"mutable","name":"sub","nameLocation":"34045:3:18","nodeType":"VariableDeclaration","scope":4267,"src":"34025:23:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$2170_memory_ptr","typeString":"struct VRFCoordinatorV2.Subscription"},"typeName":{"id":4198,"nodeType":"UserDefinedTypeName","pathNode":{"id":4197,"name":"Subscription","nameLocations":["34025:12:18"],"nodeType":"IdentifierPath","referencedDeclaration":2170,"src":"34025:12:18"},"referencedDeclaration":2170,"src":"34025:12:18","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$2170_storage_ptr","typeString":"struct VRFCoordinatorV2.Subscription"}},"visibility":"internal"}],"id":4203,"initialValue":{"baseExpression":{"id":4200,"name":"s_subscriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2194,"src":"34051:15:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_Subscription_$2170_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2.Subscription storage ref)"}},"id":4202,"indexExpression":{"id":4201,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4183,"src":"34067:5:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"34051:22:18","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$2170_storage","typeString":"struct VRFCoordinatorV2.Subscription storage ref"}},"nodeType":"VariableDeclarationStatement","src":"34025:48:18"},{"assignments":[4205],"declarations":[{"constant":false,"id":4205,"mutability":"mutable","name":"balance","nameLocation":"34090:7:18","nodeType":"VariableDeclaration","scope":4267,"src":"34083:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":4204,"name":"uint96","nodeType":"ElementaryTypeName","src":"34083:6:18","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"id":4208,"initialValue":{"expression":{"id":4206,"name":"sub","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4199,"src":"34100:3:18","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$2170_memory_ptr","typeString":"struct VRFCoordinatorV2.Subscription memory"}},"id":4207,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"34104:7:18","memberName":"balance","nodeType":"MemberAccess","referencedDeclaration":2167,"src":"34100:11:18","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"VariableDeclarationStatement","src":"34083:28:18"},{"body":{"id":4231,"nodeType":"Block","src":"34262:74:18","statements":[{"expression":{"id":4229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"34276:49:18","subExpression":{"baseExpression":{"baseExpression":{"id":4221,"name":"s_consumers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2184,"src":"34283:11:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint64_$_t_uint64_$_$","typeString":"mapping(address => mapping(uint64 => uint64))"}},"id":4226,"indexExpression":{"baseExpression":{"expression":{"id":4222,"name":"subConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4192,"src":"34295:9:18","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConfig_$2178_memory_ptr","typeString":"struct VRFCoordinatorV2.SubscriptionConfig memory"}},"id":4223,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"34305:9:18","memberName":"consumers","nodeType":"MemberAccess","referencedDeclaration":2177,"src":"34295:19:18","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4225,"indexExpression":{"id":4224,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4210,"src":"34315:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"34295:22:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"34283:35:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_uint64_$","typeString":"mapping(uint64 => uint64)"}},"id":4228,"indexExpression":{"id":4227,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4183,"src":"34319:5:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"34283:42:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4230,"nodeType":"ExpressionStatement","src":"34276:49:18"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4213,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4210,"src":"34225:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"expression":{"id":4214,"name":"subConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4192,"src":"34229:9:18","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConfig_$2178_memory_ptr","typeString":"struct VRFCoordinatorV2.SubscriptionConfig memory"}},"id":4215,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"34239:9:18","memberName":"consumers","nodeType":"MemberAccess","referencedDeclaration":2177,"src":"34229:19:18","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4216,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"34249:6:18","memberName":"length","nodeType":"MemberAccess","src":"34229:26:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34225:30:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4232,"initializationExpression":{"assignments":[4210],"declarations":[{"constant":false,"id":4210,"mutability":"mutable","name":"i","nameLocation":"34218:1:18","nodeType":"VariableDeclaration","scope":4232,"src":"34210:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4209,"name":"uint256","nodeType":"ElementaryTypeName","src":"34210:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4212,"initialValue":{"hexValue":"30","id":4211,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34222:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"34210:13:18"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"34257:3:18","subExpression":{"id":4218,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4210,"src":"34257:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4220,"nodeType":"ExpressionStatement","src":"34257:3:18"},"nodeType":"ForStatement","src":"34205:131:18"},{"expression":{"id":4236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"34345:35:18","subExpression":{"baseExpression":{"id":4233,"name":"s_subscriptionConfigs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2189,"src":"34352:21:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_SubscriptionConfig_$2178_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2.SubscriptionConfig storage ref)"}},"id":4235,"indexExpression":{"id":4234,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4183,"src":"34374:5:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"34352:28:18","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConfig_$2178_storage","typeString":"struct VRFCoordinatorV2.SubscriptionConfig storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4237,"nodeType":"ExpressionStatement","src":"34345:35:18"},{"expression":{"id":4241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"34390:29:18","subExpression":{"baseExpression":{"id":4238,"name":"s_subscriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2194,"src":"34397:15:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_Subscription_$2170_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2.Subscription storage ref)"}},"id":4240,"indexExpression":{"id":4239,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4183,"src":"34413:5:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"34397:22:18","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$2170_storage","typeString":"struct VRFCoordinatorV2.Subscription storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4242,"nodeType":"ExpressionStatement","src":"34390:29:18"},{"expression":{"id":4245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4243,"name":"s_totalBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2198,"src":"34429:14:18","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":4244,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4205,"src":"34447:7:18","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"34429:25:18","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"id":4246,"nodeType":"ExpressionStatement","src":"34429:25:18"},{"condition":{"id":4255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"34468:36:18","subExpression":{"arguments":[{"id":4249,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4185,"src":"34483:2:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":4252,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4205,"src":"34495:7:18","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint96","typeString":"uint96"}],"id":4251,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34487:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4250,"name":"uint256","nodeType":"ElementaryTypeName","src":"34487:7:18","typeDescriptions":{}}},"id":4253,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34487:16:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4247,"name":"LINK","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2118,"src":"34469:4:18","typeDescriptions":{"typeIdentifier":"t_contract$_LinkTokenInterface_$712","typeString":"contract LinkTokenInterface"}},"id":4248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"34474:8:18","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":689,"src":"34469:13:18","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":4254,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34469:35:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4260,"nodeType":"IfStatement","src":"34464:95:18","trueBody":{"id":4259,"nodeType":"Block","src":"34506:53:18","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4256,"name":"InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2131,"src":"34527:19:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4257,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34527:21:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4258,"nodeType":"RevertStatement","src":"34520:28:18"}]}},{"eventCall":{"arguments":[{"id":4262,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4183,"src":"34594:5:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":4263,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4185,"src":"34601:2:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4264,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4205,"src":"34605:7:18","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint96","typeString":"uint96"}],"id":4261,"name":"SubscriptionCanceled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2232,"src":"34573:20:18","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$_t_address_$_t_uint256_$returns$__$","typeString":"function (uint64,address,uint256)"}},"id":4265,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34573:40:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4266,"nodeType":"EmitStatement","src":"34568:45:18"}]},"id":4268,"implemented":true,"kind":"function","modifiers":[{"id":4188,"kind":"modifierInvocation","modifierName":{"id":4187,"name":"nonReentrant","nameLocations":["33926:12:18"],"nodeType":"IdentifierPath","referencedDeclaration":4389,"src":"33926:12:18"},"nodeType":"ModifierInvocation","src":"33926:12:18"}],"name":"cancelSubscriptionHelper","nameLocation":"33845:24:18","nodeType":"FunctionDefinition","parameters":{"id":4186,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4183,"mutability":"mutable","name":"subId","nameLocation":"33886:5:18","nodeType":"VariableDeclaration","scope":4268,"src":"33879:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4182,"name":"uint64","nodeType":"ElementaryTypeName","src":"33879:6:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":4185,"mutability":"mutable","name":"to","nameLocation":"33909:2:18","nodeType":"VariableDeclaration","scope":4268,"src":"33901:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4184,"name":"address","nodeType":"ElementaryTypeName","src":"33901:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"33869:48:18"},"returnParameters":{"id":4189,"nodeType":"ParameterList","parameters":[],"src":"33939:0:18"},"scope":4400,"src":"33836:784:18","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"baseFunctions":[406],"body":{"id":4343,"nodeType":"Block","src":"34942:623:18","statements":[{"assignments":[4279],"declarations":[{"constant":false,"id":4279,"mutability":"mutable","name":"subConfig","nameLocation":"34978:9:18","nodeType":"VariableDeclaration","scope":4343,"src":"34952:35:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConfig_$2178_memory_ptr","typeString":"struct VRFCoordinatorV2.SubscriptionConfig"},"typeName":{"id":4278,"nodeType":"UserDefinedTypeName","pathNode":{"id":4277,"name":"SubscriptionConfig","nameLocations":["34952:18:18"],"nodeType":"IdentifierPath","referencedDeclaration":2178,"src":"34952:18:18"},"referencedDeclaration":2178,"src":"34952:18:18","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConfig_$2178_storage_ptr","typeString":"struct VRFCoordinatorV2.SubscriptionConfig"}},"visibility":"internal"}],"id":4283,"initialValue":{"baseExpression":{"id":4280,"name":"s_subscriptionConfigs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2189,"src":"34990:21:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_SubscriptionConfig_$2178_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2.SubscriptionConfig storage ref)"}},"id":4282,"indexExpression":{"id":4281,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4271,"src":"35012:5:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"34990:28:18","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConfig_$2178_storage","typeString":"struct VRFCoordinatorV2.SubscriptionConfig storage ref"}},"nodeType":"VariableDeclarationStatement","src":"34952:66:18"},{"body":{"id":4339,"nodeType":"Block","src":"35085:452:18","statements":[{"body":{"id":4337,"nodeType":"Block","src":"35155:372:18","statements":[{"assignments":[4308,null],"declarations":[{"constant":false,"id":4308,"mutability":"mutable","name":"reqId","nameLocation":"35182:5:18","nodeType":"VariableDeclaration","scope":4337,"src":"35174:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4307,"name":"uint256","nodeType":"ElementaryTypeName","src":"35174:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},null],"id":4327,"initialValue":{"arguments":[{"baseExpression":{"id":4310,"name":"s_provingKeyHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2325,"src":"35231:18:18","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":4312,"indexExpression":{"id":4311,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4297,"src":"35250:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"35231:21:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"baseExpression":{"expression":{"id":4313,"name":"subConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4279,"src":"35274:9:18","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConfig_$2178_memory_ptr","typeString":"struct VRFCoordinatorV2.SubscriptionConfig memory"}},"id":4314,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"35284:9:18","memberName":"consumers","nodeType":"MemberAccess","referencedDeclaration":2177,"src":"35274:19:18","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4316,"indexExpression":{"id":4315,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4285,"src":"35294:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"35274:22:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4317,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4271,"src":"35318:5:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"baseExpression":{"baseExpression":{"id":4318,"name":"s_consumers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2184,"src":"35345:11:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint64_$_t_uint64_$_$","typeString":"mapping(address => mapping(uint64 => uint64))"}},"id":4323,"indexExpression":{"baseExpression":{"expression":{"id":4319,"name":"subConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4279,"src":"35357:9:18","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConfig_$2178_memory_ptr","typeString":"struct VRFCoordinatorV2.SubscriptionConfig memory"}},"id":4320,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"35367:9:18","memberName":"consumers","nodeType":"MemberAccess","referencedDeclaration":2177,"src":"35357:19:18","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4322,"indexExpression":{"id":4321,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4285,"src":"35377:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"35357:22:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"35345:35:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_uint64_$","typeString":"mapping(uint64 => uint64)"}},"id":4325,"indexExpression":{"id":4324,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4271,"src":"35381:5:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"35345:42:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":4309,"name":"computeRequestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3078,"src":"35193:16:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_address_$_t_uint64_$_t_uint64_$returns$_t_uint256_$_t_uint256_$","typeString":"function (bytes32,address,uint64,uint64) pure returns (uint256,uint256)"}},"id":4326,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"35193:212:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"35173:232:18"},{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":4332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":4328,"name":"s_requestCommitments","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2333,"src":"35427:20:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bytes32_$","typeString":"mapping(uint256 => bytes32)"}},"id":4330,"indexExpression":{"id":4329,"name":"reqId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4308,"src":"35448:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"35427:27:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4331,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"35458:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"35427:32:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4336,"nodeType":"IfStatement","src":"35423:90:18","trueBody":{"id":4335,"nodeType":"Block","src":"35461:52:18","statements":[{"expression":{"hexValue":"74727565","id":4333,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"35490:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":4276,"id":4334,"nodeType":"Return","src":"35483:11:18"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4300,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4297,"src":"35119:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4301,"name":"s_provingKeyHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2325,"src":"35123:18:18","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":4302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"35142:6:18","memberName":"length","nodeType":"MemberAccess","src":"35123:25:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"35119:29:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4338,"initializationExpression":{"assignments":[4297],"declarations":[{"constant":false,"id":4297,"mutability":"mutable","name":"j","nameLocation":"35112:1:18","nodeType":"VariableDeclaration","scope":4338,"src":"35104:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4296,"name":"uint256","nodeType":"ElementaryTypeName","src":"35104:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4299,"initialValue":{"hexValue":"30","id":4298,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"35116:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"35104:13:18"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"35150:3:18","subExpression":{"id":4304,"name":"j","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4297,"src":"35150:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4306,"nodeType":"ExpressionStatement","src":"35150:3:18"},"nodeType":"ForStatement","src":"35099:428:18"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4288,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4285,"src":"35048:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"expression":{"id":4289,"name":"subConfig","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4279,"src":"35052:9:18","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConfig_$2178_memory_ptr","typeString":"struct VRFCoordinatorV2.SubscriptionConfig memory"}},"id":4290,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"35062:9:18","memberName":"consumers","nodeType":"MemberAccess","referencedDeclaration":2177,"src":"35052:19:18","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":4291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"35072:6:18","memberName":"length","nodeType":"MemberAccess","src":"35052:26:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"35048:30:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4340,"initializationExpression":{"assignments":[4285],"declarations":[{"constant":false,"id":4285,"mutability":"mutable","name":"i","nameLocation":"35041:1:18","nodeType":"VariableDeclaration","scope":4340,"src":"35033:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4284,"name":"uint256","nodeType":"ElementaryTypeName","src":"35033:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4287,"initialValue":{"hexValue":"30","id":4286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"35045:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"35033:13:18"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4294,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"35080:3:18","subExpression":{"id":4293,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4285,"src":"35080:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4295,"nodeType":"ExpressionStatement","src":"35080:3:18"},"nodeType":"ForStatement","src":"35028:509:18"},{"expression":{"hexValue":"66616c7365","id":4341,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"35553:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":4276,"id":4342,"nodeType":"Return","src":"35546:12:18"}]},"documentation":{"id":4269,"nodeType":"StructuredDocumentation","src":"34626:217:18","text":" @inheritdoc VRFCoordinatorV2Interface\n @dev Looping is bounded to MAX_CONSUMERS*(number of keyhashes).\n @dev Used to disable subscription canceling while outstanding request are present."},"functionSelector":"e82ad7d4","id":4344,"implemented":true,"kind":"function","modifiers":[],"name":"pendingRequestExists","nameLocation":"34857:20:18","nodeType":"FunctionDefinition","overrides":{"id":4273,"nodeType":"OverrideSpecifier","overrides":[],"src":"34918:8:18"},"parameters":{"id":4272,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4271,"mutability":"mutable","name":"subId","nameLocation":"34894:5:18","nodeType":"VariableDeclaration","scope":4344,"src":"34887:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4270,"name":"uint64","nodeType":"ElementaryTypeName","src":"34887:6:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"34877:28:18"},"returnParameters":{"id":4276,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4275,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4344,"src":"34936:4:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4274,"name":"bool","nodeType":"ElementaryTypeName","src":"34936:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"34935:6:18"},"scope":4400,"src":"34848:717:18","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":4377,"nodeType":"Block","src":"35607:252:18","statements":[{"assignments":[4349],"declarations":[{"constant":false,"id":4349,"mutability":"mutable","name":"owner","nameLocation":"35625:5:18","nodeType":"VariableDeclaration","scope":4377,"src":"35617:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4348,"name":"address","nodeType":"ElementaryTypeName","src":"35617:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":4354,"initialValue":{"expression":{"baseExpression":{"id":4350,"name":"s_subscriptionConfigs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2189,"src":"35633:21:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_SubscriptionConfig_$2178_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2.SubscriptionConfig storage ref)"}},"id":4352,"indexExpression":{"id":4351,"name":"subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4346,"src":"35655:5:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"35633:28:18","typeDescriptions":{"typeIdentifier":"t_struct$_SubscriptionConfig_$2178_storage","typeString":"struct VRFCoordinatorV2.SubscriptionConfig storage ref"}},"id":4353,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"35662:5:18","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":2172,"src":"35633:34:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"35617:50:18"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4355,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4349,"src":"35681:5:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":4358,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"35698:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4357,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"35690:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4356,"name":"address","nodeType":"ElementaryTypeName","src":"35690:7:18","typeDescriptions":{}}},"id":4359,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"35690:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"35681:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4365,"nodeType":"IfStatement","src":"35677:78:18","trueBody":{"id":4364,"nodeType":"Block","src":"35702:53:18","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4361,"name":"InvalidSubscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2139,"src":"35723:19:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4362,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"35723:21:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4363,"nodeType":"RevertStatement","src":"35716:28:18"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4366,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"35768:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"35772:6:18","memberName":"sender","nodeType":"MemberAccess","src":"35768:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":4368,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4349,"src":"35782:5:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"35768:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4375,"nodeType":"IfStatement","src":"35764:78:18","trueBody":{"id":4374,"nodeType":"Block","src":"35789:53:18","statements":[{"errorCall":{"arguments":[{"id":4371,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4349,"src":"35825:5:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4370,"name":"MustBeSubOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2147,"src":"35810:14:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":4372,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"35810:21:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4373,"nodeType":"RevertStatement","src":"35803:28:18"}]}},{"id":4376,"nodeType":"PlaceholderStatement","src":"35851:1:18"}]},"id":4378,"name":"onlySubOwner","nameLocation":"35580:12:18","nodeType":"ModifierDefinition","parameters":{"id":4347,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4346,"mutability":"mutable","name":"subId","nameLocation":"35600:5:18","nodeType":"VariableDeclaration","scope":4378,"src":"35593:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4345,"name":"uint64","nodeType":"ElementaryTypeName","src":"35593:6:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"35592:14:18"},"src":"35571:288:18","virtual":false,"visibility":"internal"},{"body":{"id":4388,"nodeType":"Block","src":"35889:99:18","statements":[{"condition":{"expression":{"id":4380,"name":"s_config","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2389,"src":"35903:8:18","typeDescriptions":{"typeIdentifier":"t_struct$_Config_$2384_storage","typeString":"struct VRFCoordinatorV2.Config storage ref"}},"id":4381,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"35912:14:18","memberName":"reentrancyLock","nodeType":"MemberAccess","referencedDeclaration":2379,"src":"35903:23:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4386,"nodeType":"IfStatement","src":"35899:72:18","trueBody":{"id":4385,"nodeType":"Block","src":"35928:43:18","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4382,"name":"Reentrant","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2307,"src":"35949:9:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4383,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"35949:11:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4384,"nodeType":"RevertStatement","src":"35942:18:18"}]}},{"id":4387,"nodeType":"PlaceholderStatement","src":"35980:1:18"}]},"id":4389,"name":"nonReentrant","nameLocation":"35874:12:18","nodeType":"ModifierDefinition","parameters":{"id":4379,"nodeType":"ParameterList","parameters":[],"src":"35886:2:18"},"src":"35865:123:18","virtual":false,"visibility":"internal"},{"baseFunctions":[310],"body":{"id":4398,"nodeType":"Block","src":"36227:48:18","statements":[{"expression":{"hexValue":"565246436f6f7264696e61746f72563220312e302e30","id":4396,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"36244:24:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_bcc416b0563d7914fb48d8a6fcff1787610831c816d473813484a25d85a0ae03","typeString":"literal_string \"VRFCoordinatorV2 1.0.0\""},"value":"VRFCoordinatorV2 1.0.0"},"functionReturnParameters":4395,"id":4397,"nodeType":"Return","src":"36237:31:18"}]},"documentation":{"id":4390,"nodeType":"StructuredDocumentation","src":"35994:103:18","text":" @notice The type and version of this contract\n @return Type and version string"},"functionSelector":"181f5a77","id":4399,"implemented":true,"kind":"function","modifiers":[],"name":"typeAndVersion","nameLocation":"36111:14:18","nodeType":"FunctionDefinition","overrides":{"id":4392,"nodeType":"OverrideSpecifier","overrides":[],"src":"36182:8:18"},"parameters":{"id":4391,"nodeType":"ParameterList","parameters":[],"src":"36125:2:18"},"returnParameters":{"id":4395,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4394,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4399,"src":"36208:13:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4393,"name":"string","nodeType":"ElementaryTypeName","src":"36208:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"36207:15:18"},"scope":4400,"src":"36102:173:18","stateMutability":"pure","virtual":true,"visibility":"external"}],"scope":4401,"src":"506:35771:18","usedErrors":[2129,2131,2137,2139,2141,2143,2147,2149,2153,2159,2265,2271,2277,2281,2285,2289,2295,2297,2299,2303,2305,2307],"usedEvents":[443,449,2165,2204,2212,2218,2224,2232,2240,2248,2339,2345,2363,2373,2426]}],"src":"32:36246:18"},"id":18},"contracts/Raffle.sol":{"ast":{"absolutePath":"contracts/Raffle.sol","exportedSymbols":{"KeeperCompatibleInterface":[247],"Raffle":[4798],"VRFConsumerBaseV2":[2093],"VRFCoordinatorV2":[4400]},"id":4799,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4402,"literals":["solidity","^","0.8",".7"],"nodeType":"PragmaDirective","src":"32:23:19"},{"absolutePath":"@chainlink/contracts/src/v0.8/vrf/VRFCoordinatorV2.sol","file":"@chainlink/contracts/src/v0.8/vrf/VRFCoordinatorV2.sol","id":4404,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4799,"sourceUnit":4401,"src":"59:88:19","symbolAliases":[{"foreign":{"id":4403,"name":"VRFCoordinatorV2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4400,"src":"67:16:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol","file":"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol","id":4406,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4799,"sourceUnit":2094,"src":"149:90:19","symbolAliases":[{"foreign":{"id":4405,"name":"VRFConsumerBaseV2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2093,"src":"157:17:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/automation/KeeperCompatible.sol","file":"@chainlink/contracts/src/v0.8/automation/KeeperCompatible.sol","id":4408,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4799,"sourceUnit":229,"src":"241:104:19","symbolAliases":[{"foreign":{"id":4407,"name":"KeeperCompatibleInterface","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":247,"src":"249:25:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":4409,"name":"VRFConsumerBaseV2","nameLocations":["368:17:19"],"nodeType":"IdentifierPath","referencedDeclaration":2093,"src":"368:17:19"},"id":4410,"nodeType":"InheritanceSpecifier","src":"368:17:19"},{"baseName":{"id":4411,"name":"KeeperCompatibleInterface","nameLocations":["387:25:19"],"nodeType":"IdentifierPath","referencedDeclaration":247,"src":"387:25:19"},"id":4412,"nodeType":"InheritanceSpecifier","src":"387:25:19"}],"canonicalName":"Raffle","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":4798,"linearizedBaseContracts":[4798,247,2093],"name":"Raffle","nameLocation":"358:6:19","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Raffle.RaffleState","id":4415,"members":[{"id":4413,"name":"OPEN","nameLocation":"448:4:19","nodeType":"EnumValue","src":"448:4:19"},{"id":4414,"name":"CALCULATING","nameLocation":"463:11:19","nodeType":"EnumValue","src":"463:11:19"}],"name":"RaffleState","nameLocation":"425:11:19","nodeType":"EnumDefinition","src":"420:61:19"},{"constant":false,"id":4417,"mutability":"immutable","name":"i_entranceFee","nameLocation":"515:13:19","nodeType":"VariableDeclaration","scope":4798,"src":"489:39:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4416,"name":"uint256","nodeType":"ElementaryTypeName","src":"489:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":4420,"mutability":"mutable","name":"s_players","nameLocation":"561:9:19","nodeType":"VariableDeclaration","scope":4798,"src":"535:35:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage","typeString":"address payable[]"},"typeName":{"baseType":{"id":4418,"name":"address","nodeType":"ElementaryTypeName","src":"535:15:19","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":4419,"nodeType":"ArrayTypeName","src":"535:17:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage_ptr","typeString":"address payable[]"}},"visibility":"private"},{"constant":false,"id":4423,"mutability":"immutable","name":"i_vrfCoordinator","nameLocation":"612:16:19","nodeType":"VariableDeclaration","scope":4798,"src":"577:51:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_VRFCoordinatorV2_$4400","typeString":"contract VRFCoordinatorV2"},"typeName":{"id":4422,"nodeType":"UserDefinedTypeName","pathNode":{"id":4421,"name":"VRFCoordinatorV2","nameLocations":["577:16:19"],"nodeType":"IdentifierPath","referencedDeclaration":4400,"src":"577:16:19"},"referencedDeclaration":4400,"src":"577:16:19","typeDescriptions":{"typeIdentifier":"t_contract$_VRFCoordinatorV2_$4400","typeString":"contract VRFCoordinatorV2"}},"visibility":"private"},{"constant":false,"id":4425,"mutability":"immutable","name":"i_gasLane","nameLocation":"661:9:19","nodeType":"VariableDeclaration","scope":4798,"src":"635:35:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4424,"name":"bytes32","nodeType":"ElementaryTypeName","src":"635:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":4427,"mutability":"immutable","name":"i_subscriptionId","nameLocation":"703:16:19","nodeType":"VariableDeclaration","scope":4798,"src":"677:42:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4426,"name":"uint256","nodeType":"ElementaryTypeName","src":"677:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":true,"id":4430,"mutability":"constant","name":"REQUEST_CONFIRMATION","nameLocation":"750:20:19","nodeType":"VariableDeclaration","scope":4798,"src":"726:48:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":4428,"name":"uint16","nodeType":"ElementaryTypeName","src":"726:6:19","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"value":{"hexValue":"33","id":4429,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"773:1:19","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"visibility":"private"},{"constant":false,"id":4432,"mutability":"immutable","name":"i_callbackGasLimit","nameLocation":"806:18:19","nodeType":"VariableDeclaration","scope":4798,"src":"781:43:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":4431,"name":"uint32","nodeType":"ElementaryTypeName","src":"781:6:19","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"private"},{"constant":true,"id":4435,"mutability":"constant","name":"NUM_WORDS","nameLocation":"855:9:19","nodeType":"VariableDeclaration","scope":4798,"src":"831:37:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":4433,"name":"uint32","nodeType":"ElementaryTypeName","src":"831:6:19","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"value":{"hexValue":"31","id":4434,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"867:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":false,"id":4437,"mutability":"immutable","name":"i_interval","nameLocation":"901:10:19","nodeType":"VariableDeclaration","scope":4798,"src":"875:36:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4436,"name":"uint256","nodeType":"ElementaryTypeName","src":"875:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":4439,"mutability":"mutable","name":"s_recentWinner","nameLocation":"961:14:19","nodeType":"VariableDeclaration","scope":4798,"src":"945:30:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4438,"name":"address","nodeType":"ElementaryTypeName","src":"945:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":false,"id":4442,"mutability":"mutable","name":"s_raffleState","nameLocation":"1002:13:19","nodeType":"VariableDeclaration","scope":4798,"src":"982:33:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RaffleState_$4415","typeString":"enum Raffle.RaffleState"},"typeName":{"id":4441,"nodeType":"UserDefinedTypeName","pathNode":{"id":4440,"name":"RaffleState","nameLocations":["982:11:19"],"nodeType":"IdentifierPath","referencedDeclaration":4415,"src":"982:11:19"},"referencedDeclaration":4415,"src":"982:11:19","typeDescriptions":{"typeIdentifier":"t_enum$_RaffleState_$4415","typeString":"enum Raffle.RaffleState"}},"visibility":"private"},{"constant":false,"id":4444,"mutability":"mutable","name":"s_lastTimeStamp","nameLocation":"1038:15:19","nodeType":"VariableDeclaration","scope":4798,"src":"1022:31:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4443,"name":"uint256","nodeType":"ElementaryTypeName","src":"1022:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"anonymous":false,"eventSelector":"0805e1d667bddb8a95f0f09880cf94f403fb596ce79928d9f29b74203ba284d4","id":4448,"name":"RaffleEnter","nameLocation":"1068:11:19","nodeType":"EventDefinition","parameters":{"id":4447,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4446,"indexed":true,"mutability":"mutable","name":"player","nameLocation":"1096:6:19","nodeType":"VariableDeclaration","scope":4448,"src":"1080:22:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4445,"name":"address","nodeType":"ElementaryTypeName","src":"1080:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1079:24:19"},"src":"1062:42:19"},{"anonymous":false,"eventSelector":"cd6e45c8998311cab7e9d4385596cac867e20a0587194b954fa3a731c93ce78b","id":4452,"name":"RequestedRaffleWinner","nameLocation":"1116:21:19","nodeType":"EventDefinition","parameters":{"id":4451,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4450,"indexed":true,"mutability":"mutable","name":"requestId","nameLocation":"1154:9:19","nodeType":"VariableDeclaration","scope":4452,"src":"1138:25:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4449,"name":"uint256","nodeType":"ElementaryTypeName","src":"1138:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1137:27:19"},"src":"1110:55:19"},{"anonymous":false,"eventSelector":"5b690ec4a06fe979403046eaeea5b3ce38524683c3001f662c8b5a829632f7df","id":4456,"name":"WinnerPicked","nameLocation":"1177:12:19","nodeType":"EventDefinition","parameters":{"id":4455,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4454,"indexed":true,"mutability":"mutable","name":"winner","nameLocation":"1206:6:19","nodeType":"VariableDeclaration","scope":4456,"src":"1190:22:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4453,"name":"address","nodeType":"ElementaryTypeName","src":"1190:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1189:24:19"},"src":"1171:43:19"},{"body":{"id":4510,"nodeType":"Block","src":"1462:385:19","statements":[{"expression":{"id":4476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4474,"name":"i_entranceFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4417,"src":"1473:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4475,"name":"entranceFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4460,"src":"1489:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1473:27:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4477,"nodeType":"ExpressionStatement","src":"1473:27:19"},{"expression":{"id":4482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4478,"name":"i_vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4423,"src":"1545:16:19","typeDescriptions":{"typeIdentifier":"t_contract$_VRFCoordinatorV2_$4400","typeString":"contract VRFCoordinatorV2"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4480,"name":"vrfCoordinatorV2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4458,"src":"1581:16:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4479,"name":"VRFCoordinatorV2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4400,"src":"1564:16:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_VRFCoordinatorV2_$4400_$","typeString":"type(contract VRFCoordinatorV2)"}},"id":4481,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1564:34:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_VRFCoordinatorV2_$4400","typeString":"contract VRFCoordinatorV2"}},"src":"1545:53:19","typeDescriptions":{"typeIdentifier":"t_contract$_VRFCoordinatorV2_$4400","typeString":"contract VRFCoordinatorV2"}},"id":4483,"nodeType":"ExpressionStatement","src":"1545:53:19"},{"expression":{"id":4486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4484,"name":"i_gasLane","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4425,"src":"1609:9:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4485,"name":"gasLane","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4462,"src":"1621:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"1609:19:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4487,"nodeType":"ExpressionStatement","src":"1609:19:19"},{"expression":{"id":4490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4488,"name":"i_subscriptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4427,"src":"1639:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4489,"name":"subscriptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4464,"src":"1658:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1639:33:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4491,"nodeType":"ExpressionStatement","src":"1639:33:19"},{"expression":{"id":4494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4492,"name":"i_callbackGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4432,"src":"1683:18:19","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4493,"name":"callbackGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4466,"src":"1704:16:19","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"1683:37:19","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"id":4495,"nodeType":"ExpressionStatement","src":"1683:37:19"},{"expression":{"id":4499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4496,"name":"s_raffleState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4442,"src":"1731:13:19","typeDescriptions":{"typeIdentifier":"t_enum$_RaffleState_$4415","typeString":"enum Raffle.RaffleState"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":4497,"name":"RaffleState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4415,"src":"1747:11:19","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RaffleState_$4415_$","typeString":"type(enum Raffle.RaffleState)"}},"id":4498,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1759:4:19","memberName":"OPEN","nodeType":"MemberAccess","referencedDeclaration":4413,"src":"1747:16:19","typeDescriptions":{"typeIdentifier":"t_enum$_RaffleState_$4415","typeString":"enum Raffle.RaffleState"}},"src":"1731:32:19","typeDescriptions":{"typeIdentifier":"t_enum$_RaffleState_$4415","typeString":"enum Raffle.RaffleState"}},"id":4500,"nodeType":"ExpressionStatement","src":"1731:32:19"},{"expression":{"id":4504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4501,"name":"s_lastTimeStamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4444,"src":"1774:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":4502,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1792:5:19","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1798:9:19","memberName":"timestamp","nodeType":"MemberAccess","src":"1792:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1774:33:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4505,"nodeType":"ExpressionStatement","src":"1774:33:19"},{"expression":{"id":4508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4506,"name":"i_interval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4437,"src":"1818:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4507,"name":"interval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4468,"src":"1831:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1818:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4509,"nodeType":"ExpressionStatement","src":"1818:21:19"}]},"id":4511,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":4471,"name":"vrfCoordinatorV2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4458,"src":"1444:16:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":4472,"kind":"baseConstructorSpecifier","modifierName":{"id":4470,"name":"VRFConsumerBaseV2","nameLocations":["1426:17:19"],"nodeType":"IdentifierPath","referencedDeclaration":2093,"src":"1426:17:19"},"nodeType":"ModifierInvocation","src":"1426:35:19"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":4469,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4458,"mutability":"mutable","name":"vrfCoordinatorV2","nameLocation":"1252:16:19","nodeType":"VariableDeclaration","scope":4511,"src":"1244:24:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4457,"name":"address","nodeType":"ElementaryTypeName","src":"1244:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4460,"mutability":"mutable","name":"entranceFee","nameLocation":"1287:11:19","nodeType":"VariableDeclaration","scope":4511,"src":"1279:19:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4459,"name":"uint256","nodeType":"ElementaryTypeName","src":"1279:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4462,"mutability":"mutable","name":"gasLane","nameLocation":"1317:7:19","nodeType":"VariableDeclaration","scope":4511,"src":"1309:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4461,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1309:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4464,"mutability":"mutable","name":"subscriptionId","nameLocation":"1343:14:19","nodeType":"VariableDeclaration","scope":4511,"src":"1335:22:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4463,"name":"uint256","nodeType":"ElementaryTypeName","src":"1335:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4466,"mutability":"mutable","name":"callbackGasLimit","nameLocation":"1375:16:19","nodeType":"VariableDeclaration","scope":4511,"src":"1368:23:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":4465,"name":"uint32","nodeType":"ElementaryTypeName","src":"1368:6:19","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":4468,"mutability":"mutable","name":"interval","nameLocation":"1410:8:19","nodeType":"VariableDeclaration","scope":4511,"src":"1402:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4467,"name":"uint256","nodeType":"ElementaryTypeName","src":"1402:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1233:192:19"},"returnParameters":{"id":4473,"nodeType":"ParameterList","parameters":[],"src":"1462:0:19"},"scope":4798,"src":"1222:625:19","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":4545,"nodeType":"Block","src":"1893:223:19","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4515,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1912:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1916:5:19","memberName":"value","nodeType":"MemberAccess","src":"1912:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":4517,"name":"i_entranceFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4417,"src":"1925:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1912:26:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f7420656e6f7567682045544821","id":4519,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1940:17:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_15a10bfc30965e42ff8acbb34211e82f5d4dfa40cc212e627d7e731a1df1e3de","typeString":"literal_string \"Not enough ETH!\""},"value":"Not enough ETH!"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_15a10bfc30965e42ff8acbb34211e82f5d4dfa40cc212e627d7e731a1df1e3de","typeString":"literal_string \"Not enough ETH!\""}],"id":4514,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1904:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4520,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1904:54:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4521,"nodeType":"ExpressionStatement","src":"1904:54:19"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_enum$_RaffleState_$4415","typeString":"enum Raffle.RaffleState"},"id":4526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4523,"name":"s_raffleState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4442,"src":"1977:13:19","typeDescriptions":{"typeIdentifier":"t_enum$_RaffleState_$4415","typeString":"enum Raffle.RaffleState"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4524,"name":"RaffleState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4415,"src":"1994:11:19","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RaffleState_$4415_$","typeString":"type(enum Raffle.RaffleState)"}},"id":4525,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2006:4:19","memberName":"OPEN","nodeType":"MemberAccess","referencedDeclaration":4413,"src":"1994:16:19","typeDescriptions":{"typeIdentifier":"t_enum$_RaffleState_$4415","typeString":"enum Raffle.RaffleState"}},"src":"1977:33:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f74206f70656e","id":4527,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2012:10:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_0af1a4442a600edd3bde606629dbe1d858edd05765327f25ead92d55536f2d3b","typeString":"literal_string \"Not open\""},"value":"Not open"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0af1a4442a600edd3bde606629dbe1d858edd05765327f25ead92d55536f2d3b","typeString":"literal_string \"Not open\""}],"id":4522,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1969:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4528,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1969:54:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4529,"nodeType":"ExpressionStatement","src":"1969:54:19"},{"expression":{"arguments":[{"arguments":[{"expression":{"id":4535,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2057:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2061:6:19","memberName":"sender","nodeType":"MemberAccess","src":"2057:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4534,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2049:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":4533,"name":"address","nodeType":"ElementaryTypeName","src":"2049:8:19","stateMutability":"payable","typeDescriptions":{}}},"id":4537,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2049:19:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"}],"expression":{"id":4530,"name":"s_players","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4420,"src":"2034:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage","typeString":"address payable[] storage ref"}},"id":4532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2044:4:19","memberName":"push","nodeType":"MemberAccess","src":"2034:14:19","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_address_payable_$dyn_storage_ptr_$_t_address_payable_$returns$__$attached_to$_t_array$_t_address_payable_$dyn_storage_ptr_$","typeString":"function (address payable[] storage pointer,address payable)"}},"id":4538,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2034:35:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4539,"nodeType":"ExpressionStatement","src":"2034:35:19"},{"eventCall":{"arguments":[{"expression":{"id":4541,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2097:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2101:6:19","memberName":"sender","nodeType":"MemberAccess","src":"2097:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4540,"name":"RaffleEnter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4448,"src":"2085:11:19","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":4543,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2085:23:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4544,"nodeType":"EmitStatement","src":"2080:28:19"}]},"functionSelector":"2cfcc539","id":4546,"implemented":true,"kind":"function","modifiers":[],"name":"enterRaffle","nameLocation":"1864:11:19","nodeType":"FunctionDefinition","parameters":{"id":4512,"nodeType":"ParameterList","parameters":[],"src":"1875:2:19"},"returnParameters":{"id":4513,"nodeType":"ParameterList","parameters":[],"src":"1893:0:19"},"scope":4798,"src":"1855:261:19","stateMutability":"payable","virtual":false,"visibility":"public"},{"baseFunctions":[240],"body":{"id":4604,"nodeType":"Block","src":"2233:328:19","statements":[{"assignments":[4557],"declarations":[{"constant":false,"id":4557,"mutability":"mutable","name":"isOpen","nameLocation":"2249:6:19","nodeType":"VariableDeclaration","scope":4604,"src":"2244:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4556,"name":"bool","nodeType":"ElementaryTypeName","src":"2244:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":4563,"initialValue":{"components":[{"commonType":{"typeIdentifier":"t_enum$_RaffleState_$4415","typeString":"enum Raffle.RaffleState"},"id":4561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4558,"name":"RaffleState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4415,"src":"2259:11:19","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RaffleState_$4415_$","typeString":"type(enum Raffle.RaffleState)"}},"id":4559,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2271:4:19","memberName":"OPEN","nodeType":"MemberAccess","referencedDeclaration":4413,"src":"2259:16:19","typeDescriptions":{"typeIdentifier":"t_enum$_RaffleState_$4415","typeString":"enum Raffle.RaffleState"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4560,"name":"s_raffleState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4442,"src":"2279:13:19","typeDescriptions":{"typeIdentifier":"t_enum$_RaffleState_$4415","typeString":"enum Raffle.RaffleState"}},"src":"2259:33:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":4562,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2258:35:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"2244:49:19"},{"assignments":[4565],"declarations":[{"constant":false,"id":4565,"mutability":"mutable","name":"timePassed","nameLocation":"2309:10:19","nodeType":"VariableDeclaration","scope":4604,"src":"2304:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4564,"name":"bool","nodeType":"ElementaryTypeName","src":"2304:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":4574,"initialValue":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4566,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2324:5:19","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2330:9:19","memberName":"timestamp","nodeType":"MemberAccess","src":"2324:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4568,"name":"s_lastTimeStamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4444,"src":"2342:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2324:33:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4570,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2323:35:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4571,"name":"i_interval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4437,"src":"2361:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2323:48:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":4573,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2322:50:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"2304:68:19"},{"assignments":[4576],"declarations":[{"constant":false,"id":4576,"mutability":"mutable","name":"hasPlayers","nameLocation":"2388:10:19","nodeType":"VariableDeclaration","scope":4604,"src":"2383:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4575,"name":"bool","nodeType":"ElementaryTypeName","src":"2383:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":4582,"initialValue":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4577,"name":"s_players","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4420,"src":"2402:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage","typeString":"address payable[] storage ref"}},"id":4578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2412:6:19","memberName":"length","nodeType":"MemberAccess","src":"2402:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2421:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2402:20:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":4581,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2401:22:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"2383:40:19"},{"assignments":[4584],"declarations":[{"constant":false,"id":4584,"mutability":"mutable","name":"hasBalance","nameLocation":"2439:10:19","nodeType":"VariableDeclaration","scope":4604,"src":"2434:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4583,"name":"bool","nodeType":"ElementaryTypeName","src":"2434:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":4592,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":4587,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2460:4:19","typeDescriptions":{"typeIdentifier":"t_contract$_Raffle_$4798","typeString":"contract Raffle"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Raffle_$4798","typeString":"contract Raffle"}],"id":4586,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2452:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4585,"name":"address","nodeType":"ElementaryTypeName","src":"2452:7:19","typeDescriptions":{}}},"id":4588,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2452:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2466:7:19","memberName":"balance","nodeType":"MemberAccess","src":"2452:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4590,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2476:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2452:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"2434:43:19"},{"expression":{"id":4602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4593,"name":"upkeepNeeded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4552,"src":"2488:12:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4594,"name":"isOpen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4557,"src":"2504:6:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":4595,"name":"timePassed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4565,"src":"2514:10:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2504:20:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":4597,"name":"hasPlayers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4576,"src":"2528:10:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2504:34:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":4599,"name":"hasBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4584,"src":"2542:10:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2504:48:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":4601,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2503:50:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2488:65:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4603,"nodeType":"ExpressionStatement","src":"2488:65:19"}]},"functionSelector":"6e04ff0d","id":4605,"implemented":true,"kind":"function","modifiers":[],"name":"checkUpkeep","nameLocation":"2133:11:19","nodeType":"FunctionDefinition","overrides":{"id":4550,"nodeType":"OverrideSpecifier","overrides":[],"src":"2182:8:19"},"parameters":{"id":4549,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4548,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4605,"src":"2155:12:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4547,"name":"bytes","nodeType":"ElementaryTypeName","src":"2155:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2144:30:19"},"returnParameters":{"id":4555,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4552,"mutability":"mutable","name":"upkeepNeeded","nameLocation":"2205:12:19","nodeType":"VariableDeclaration","scope":4605,"src":"2200:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4551,"name":"bool","nodeType":"ElementaryTypeName","src":"2200:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4554,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4605,"src":"2219:12:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4553,"name":"bytes","nodeType":"ElementaryTypeName","src":"2219:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2199:33:19"},"scope":4798,"src":"2124:437:19","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[246],"body":{"id":4647,"nodeType":"Block","src":"2626:449:19","statements":[{"assignments":[4612,null],"declarations":[{"constant":false,"id":4612,"mutability":"mutable","name":"upKeepNeeded","nameLocation":"2643:12:19","nodeType":"VariableDeclaration","scope":4647,"src":"2638:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4611,"name":"bool","nodeType":"ElementaryTypeName","src":"2638:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":4616,"initialValue":{"arguments":[{"hexValue":"","id":4614,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2673:2:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":4613,"name":"checkUpkeep","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4605,"src":"2661:11:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":4615,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2661:15:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2637:39:19"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4618,"name":"upKeepNeeded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4612,"src":"2695:12:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"74727565","id":4619,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2711:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"2695:20:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"55706b656570206e6f74206e6565646564","id":4621,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2717:19:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_047e53bda3b1755bdcd010ea559fd4ce3f4332c889ecbf649f4153f3160f1630","typeString":"literal_string \"Upkeep not needed\""},"value":"Upkeep not needed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_047e53bda3b1755bdcd010ea559fd4ce3f4332c889ecbf649f4153f3160f1630","typeString":"literal_string \"Upkeep not needed\""}],"id":4617,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2687:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4622,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2687:50:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4623,"nodeType":"ExpressionStatement","src":"2687:50:19"},{"expression":{"id":4627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4624,"name":"s_raffleState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4442,"src":"2748:13:19","typeDescriptions":{"typeIdentifier":"t_enum$_RaffleState_$4415","typeString":"enum Raffle.RaffleState"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":4625,"name":"RaffleState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4415,"src":"2764:11:19","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RaffleState_$4415_$","typeString":"type(enum Raffle.RaffleState)"}},"id":4626,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2776:11:19","memberName":"CALCULATING","nodeType":"MemberAccess","referencedDeclaration":4414,"src":"2764:23:19","typeDescriptions":{"typeIdentifier":"t_enum$_RaffleState_$4415","typeString":"enum Raffle.RaffleState"}},"src":"2748:39:19","typeDescriptions":{"typeIdentifier":"t_enum$_RaffleState_$4415","typeString":"enum Raffle.RaffleState"}},"id":4628,"nodeType":"ExpressionStatement","src":"2748:39:19"},{"assignments":[4630],"declarations":[{"constant":false,"id":4630,"mutability":"mutable","name":"requestId","nameLocation":"2806:9:19","nodeType":"VariableDeclaration","scope":4647,"src":"2798:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4629,"name":"uint256","nodeType":"ElementaryTypeName","src":"2798:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4642,"initialValue":{"arguments":[{"id":4633,"name":"i_gasLane","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4425,"src":"2868:9:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"id":4636,"name":"i_subscriptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4427,"src":"2899:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4635,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2892:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":4634,"name":"uint64","nodeType":"ElementaryTypeName","src":"2892:6:19","typeDescriptions":{}}},"id":4637,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2892:24:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":4638,"name":"REQUEST_CONFIRMATION","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4430,"src":"2931:20:19","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":4639,"name":"i_callbackGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4432,"src":"2966:18:19","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":4640,"name":"NUM_WORDS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4435,"src":"2999:9:19","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint32","typeString":"uint32"}],"expression":{"id":4631,"name":"i_vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4423,"src":"2818:16:19","typeDescriptions":{"typeIdentifier":"t_contract$_VRFCoordinatorV2_$4400","typeString":"contract VRFCoordinatorV2"}},"id":4632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2835:18:19","memberName":"requestRandomWords","nodeType":"MemberAccess","referencedDeclaration":3021,"src":"2818:35:19","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_bytes32_$_t_uint64_$_t_uint16_$_t_uint32_$_t_uint32_$returns$_t_uint256_$","typeString":"function (bytes32,uint64,uint16,uint32,uint32) external returns (uint256)"}},"id":4641,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2818:201:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2798:221:19"},{"eventCall":{"arguments":[{"id":4644,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4630,"src":"3057:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4643,"name":"RequestedRaffleWinner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4452,"src":"3035:21:19","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":4645,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3035:32:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4646,"nodeType":"EmitStatement","src":"3030:37:19"}]},"functionSelector":"4585e33b","id":4648,"implemented":true,"kind":"function","modifiers":[],"name":"performUpkeep","nameLocation":"2578:13:19","nodeType":"FunctionDefinition","overrides":{"id":4609,"nodeType":"OverrideSpecifier","overrides":[],"src":"2617:8:19"},"parameters":{"id":4608,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4607,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4648,"src":"2592:14:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":4606,"name":"bytes","nodeType":"ElementaryTypeName","src":"2592:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2591:16:19"},"returnParameters":{"id":4610,"nodeType":"ParameterList","parameters":[],"src":"2626:0:19"},"scope":4798,"src":"2569:506:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[2066],"body":{"id":4718,"nodeType":"Block","src":"3193:494:19","statements":[{"assignments":[4658],"declarations":[{"constant":false,"id":4658,"mutability":"mutable","name":"indexOfWinner","nameLocation":"3212:13:19","nodeType":"VariableDeclaration","scope":4718,"src":"3204:21:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4657,"name":"uint256","nodeType":"ElementaryTypeName","src":"3204:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4665,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":4659,"name":"randomWords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4653,"src":"3228:11:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":4661,"indexExpression":{"hexValue":"30","id":4660,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3240:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3228:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"expression":{"id":4662,"name":"s_players","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4420,"src":"3245:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage","typeString":"address payable[] storage ref"}},"id":4663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3255:6:19","memberName":"length","nodeType":"MemberAccess","src":"3245:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3228:33:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3204:57:19"},{"assignments":[4667],"declarations":[{"constant":false,"id":4667,"mutability":"mutable","name":"recentWinner","nameLocation":"3288:12:19","nodeType":"VariableDeclaration","scope":4718,"src":"3272:28:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":4666,"name":"address","nodeType":"ElementaryTypeName","src":"3272:15:19","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"id":4671,"initialValue":{"baseExpression":{"id":4668,"name":"s_players","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4420,"src":"3303:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage","typeString":"address payable[] storage ref"}},"id":4670,"indexExpression":{"id":4669,"name":"indexOfWinner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4658,"src":"3313:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3303:24:19","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"nodeType":"VariableDeclarationStatement","src":"3272:55:19"},{"expression":{"id":4674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4672,"name":"s_recentWinner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4439,"src":"3338:14:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4673,"name":"recentWinner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4667,"src":"3355:12:19","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"3338:29:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4675,"nodeType":"ExpressionStatement","src":"3338:29:19"},{"expression":{"id":4679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4676,"name":"s_raffleState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4442,"src":"3378:13:19","typeDescriptions":{"typeIdentifier":"t_enum$_RaffleState_$4415","typeString":"enum Raffle.RaffleState"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":4677,"name":"RaffleState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4415,"src":"3394:11:19","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RaffleState_$4415_$","typeString":"type(enum Raffle.RaffleState)"}},"id":4678,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3406:4:19","memberName":"OPEN","nodeType":"MemberAccess","referencedDeclaration":4413,"src":"3394:16:19","typeDescriptions":{"typeIdentifier":"t_enum$_RaffleState_$4415","typeString":"enum Raffle.RaffleState"}},"src":"3378:32:19","typeDescriptions":{"typeIdentifier":"t_enum$_RaffleState_$4415","typeString":"enum Raffle.RaffleState"}},"id":4680,"nodeType":"ExpressionStatement","src":"3378:32:19"},{"expression":{"id":4687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4681,"name":"s_players","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4420,"src":"3421:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage","typeString":"address payable[] storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"30","id":4685,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3455:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4684,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"3433:21:19","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_payable_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (address payable[] memory)"},"typeName":{"baseType":{"id":4682,"name":"address","nodeType":"ElementaryTypeName","src":"3437:15:19","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":4683,"nodeType":"ArrayTypeName","src":"3437:17:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage_ptr","typeString":"address payable[]"}}},"id":4686,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3433:24:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_memory_ptr","typeString":"address payable[] memory"}},"src":"3421:36:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage","typeString":"address payable[] storage ref"}},"id":4688,"nodeType":"ExpressionStatement","src":"3421:36:19"},{"expression":{"id":4692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4689,"name":"s_lastTimeStamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4444,"src":"3468:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":4690,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3486:5:19","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3492:9:19","memberName":"timestamp","nodeType":"MemberAccess","src":"3486:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3468:33:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4693,"nodeType":"ExpressionStatement","src":"3468:33:19"},{"assignments":[4695,null],"declarations":[{"constant":false,"id":4695,"mutability":"mutable","name":"success","nameLocation":"3518:7:19","nodeType":"VariableDeclaration","scope":4718,"src":"3513:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4694,"name":"bool","nodeType":"ElementaryTypeName","src":"3513:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":4706,"initialValue":{"arguments":[{"hexValue":"","id":4704,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3579:2:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":4696,"name":"recentWinner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4667,"src":"3531:12:19","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":4697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3544:4:19","memberName":"call","nodeType":"MemberAccess","src":"3531:17:19","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":4703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"expression":{"arguments":[{"id":4700,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3564:4:19","typeDescriptions":{"typeIdentifier":"t_contract$_Raffle_$4798","typeString":"contract Raffle"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Raffle_$4798","typeString":"contract Raffle"}],"id":4699,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3556:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4698,"name":"address","nodeType":"ElementaryTypeName","src":"3556:7:19","typeDescriptions":{}}},"id":4701,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3556:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3570:7:19","memberName":"balance","nodeType":"MemberAccess","src":"3556:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"3531:47:19","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":4705,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3531:51:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"3512:70:19"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4708,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4695,"src":"3601:7:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"74727565","id":4709,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3612:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"3601:15:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5472616e73666572204661696c656421","id":4711,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3618:18:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_b14fb95164ea63e35a67574e2c81cbc6f6b5d123e185e0169f7323e26de6be4d","typeString":"literal_string \"Transfer Failed!\""},"value":"Transfer Failed!"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b14fb95164ea63e35a67574e2c81cbc6f6b5d123e185e0169f7323e26de6be4d","typeString":"literal_string \"Transfer Failed!\""}],"id":4707,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3593:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4712,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3593:44:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4713,"nodeType":"ExpressionStatement","src":"3593:44:19"},{"eventCall":{"arguments":[{"id":4715,"name":"recentWinner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4667,"src":"3666:12:19","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"}],"id":4714,"name":"WinnerPicked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4456,"src":"3653:12:19","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":4716,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3653:26:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4717,"nodeType":"EmitStatement","src":"3648:31:19"}]},"id":4719,"implemented":true,"kind":"function","modifiers":[],"name":"fulfillRandomWords","nameLocation":"3092:18:19","nodeType":"FunctionDefinition","overrides":{"id":4655,"nodeType":"OverrideSpecifier","overrides":[],"src":"3184:8:19"},"parameters":{"id":4654,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4650,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4719,"src":"3121:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4649,"name":"uint256","nodeType":"ElementaryTypeName","src":"3121:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4653,"mutability":"mutable","name":"randomWords","nameLocation":"3156:11:19","nodeType":"VariableDeclaration","scope":4719,"src":"3139:28:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4651,"name":"uint256","nodeType":"ElementaryTypeName","src":"3139:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4652,"nodeType":"ArrayTypeName","src":"3139:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"3110:64:19"},"returnParameters":{"id":4656,"nodeType":"ParameterList","parameters":[],"src":"3193:0:19"},"scope":4798,"src":"3083:604:19","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4726,"nodeType":"Block","src":"3751:39:19","statements":[{"expression":{"id":4724,"name":"i_entranceFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4417,"src":"3769:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4723,"id":4725,"nodeType":"Return","src":"3762:20:19"}]},"functionSelector":"09bc33a7","id":4727,"implemented":true,"kind":"function","modifiers":[],"name":"getEntranceFee","nameLocation":"3704:14:19","nodeType":"FunctionDefinition","parameters":{"id":4720,"nodeType":"ParameterList","parameters":[],"src":"3718:2:19"},"returnParameters":{"id":4723,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4722,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4727,"src":"3742:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4721,"name":"uint256","nodeType":"ElementaryTypeName","src":"3742:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3741:9:19"},"scope":4798,"src":"3695:95:19","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":4738,"nodeType":"Block","src":"3862:42:19","statements":[{"expression":{"baseExpression":{"id":4734,"name":"s_players","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4420,"src":"3880:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage","typeString":"address payable[] storage ref"}},"id":4736,"indexExpression":{"id":4735,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4729,"src":"3890:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3880:16:19","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"functionReturnParameters":4733,"id":4737,"nodeType":"Return","src":"3873:23:19"}]},"functionSelector":"e55ae4e8","id":4739,"implemented":true,"kind":"function","modifiers":[],"name":"getPlayer","nameLocation":"3807:9:19","nodeType":"FunctionDefinition","parameters":{"id":4730,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4729,"mutability":"mutable","name":"index","nameLocation":"3825:5:19","nodeType":"VariableDeclaration","scope":4739,"src":"3817:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4728,"name":"uint256","nodeType":"ElementaryTypeName","src":"3817:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3816:15:19"},"returnParameters":{"id":4733,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4732,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4739,"src":"3853:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4731,"name":"address","nodeType":"ElementaryTypeName","src":"3853:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3852:9:19"},"scope":4798,"src":"3798:106:19","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":4746,"nodeType":"Block","src":"3969:40:19","statements":[{"expression":{"id":4744,"name":"s_recentWinner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4439,"src":"3987:14:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":4743,"id":4745,"nodeType":"Return","src":"3980:21:19"}]},"functionSelector":"473f1ddc","id":4747,"implemented":true,"kind":"function","modifiers":[],"name":"getRecentWinner","nameLocation":"3921:15:19","nodeType":"FunctionDefinition","parameters":{"id":4740,"nodeType":"ParameterList","parameters":[],"src":"3936:2:19"},"returnParameters":{"id":4743,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4742,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4747,"src":"3960:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4741,"name":"address","nodeType":"ElementaryTypeName","src":"3960:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3959:9:19"},"scope":4798,"src":"3912:97:19","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":4755,"nodeType":"Block","src":"4077:39:19","statements":[{"expression":{"id":4753,"name":"s_raffleState","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4442,"src":"4095:13:19","typeDescriptions":{"typeIdentifier":"t_enum$_RaffleState_$4415","typeString":"enum Raffle.RaffleState"}},"functionReturnParameters":4752,"id":4754,"nodeType":"Return","src":"4088:20:19"}]},"functionSelector":"115cbaf5","id":4756,"implemented":true,"kind":"function","modifiers":[],"name":"getRaffleState","nameLocation":"4026:14:19","nodeType":"FunctionDefinition","parameters":{"id":4748,"nodeType":"ParameterList","parameters":[],"src":"4040:2:19"},"returnParameters":{"id":4752,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4751,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4756,"src":"4064:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RaffleState_$4415","typeString":"enum Raffle.RaffleState"},"typeName":{"id":4750,"nodeType":"UserDefinedTypeName","pathNode":{"id":4749,"name":"RaffleState","nameLocations":["4064:11:19"],"nodeType":"IdentifierPath","referencedDeclaration":4415,"src":"4064:11:19"},"referencedDeclaration":4415,"src":"4064:11:19","typeDescriptions":{"typeIdentifier":"t_enum$_RaffleState_$4415","typeString":"enum Raffle.RaffleState"}},"visibility":"internal"}],"src":"4063:13:19"},"scope":4798,"src":"4017:99:19","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":4763,"nodeType":"Block","src":"4177:35:19","statements":[{"expression":{"id":4761,"name":"NUM_WORDS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4435,"src":"4195:9:19","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":4760,"id":4762,"nodeType":"Return","src":"4188:16:19"}]},"functionSelector":"53a2c19a","id":4764,"implemented":true,"kind":"function","modifiers":[],"name":"getNumWords","nameLocation":"4133:11:19","nodeType":"FunctionDefinition","parameters":{"id":4757,"nodeType":"ParameterList","parameters":[],"src":"4144:2:19"},"returnParameters":{"id":4760,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4759,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4764,"src":"4168:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4758,"name":"uint256","nodeType":"ElementaryTypeName","src":"4168:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4167:9:19"},"scope":4798,"src":"4124:88:19","stateMutability":"pure","virtual":false,"visibility":"public"},{"body":{"id":4772,"nodeType":"Block","src":"4280:42:19","statements":[{"expression":{"expression":{"id":4769,"name":"s_players","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4420,"src":"4298:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_payable_$dyn_storage","typeString":"address payable[] storage ref"}},"id":4770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4308:6:19","memberName":"length","nodeType":"MemberAccess","src":"4298:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4768,"id":4771,"nodeType":"Return","src":"4291:23:19"}]},"functionSelector":"fd6673f5","id":4773,"implemented":true,"kind":"function","modifiers":[],"name":"getNumberOfPlayers","nameLocation":"4229:18:19","nodeType":"FunctionDefinition","parameters":{"id":4765,"nodeType":"ParameterList","parameters":[],"src":"4247:2:19"},"returnParameters":{"id":4768,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4767,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4773,"src":"4271:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4766,"name":"uint256","nodeType":"ElementaryTypeName","src":"4271:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4270:9:19"},"scope":4798,"src":"4220:102:19","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":4780,"nodeType":"Block","src":"4390:41:19","statements":[{"expression":{"id":4778,"name":"s_lastTimeStamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4444,"src":"4408:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4777,"id":4779,"nodeType":"Return","src":"4401:22:19"}]},"functionSelector":"320229eb","id":4781,"implemented":true,"kind":"function","modifiers":[],"name":"getLatestTimeStamp","nameLocation":"4339:18:19","nodeType":"FunctionDefinition","parameters":{"id":4774,"nodeType":"ParameterList","parameters":[],"src":"4357:2:19"},"returnParameters":{"id":4777,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4776,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4781,"src":"4381:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4775,"name":"uint256","nodeType":"ElementaryTypeName","src":"4381:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4380:9:19"},"scope":4798,"src":"4330:101:19","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":4788,"nodeType":"Block","src":"4503:46:19","statements":[{"expression":{"id":4786,"name":"REQUEST_CONFIRMATION","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4430,"src":"4521:20:19","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":4785,"id":4787,"nodeType":"Return","src":"4514:27:19"}]},"functionSelector":"ca6a9ef8","id":4789,"implemented":true,"kind":"function","modifiers":[],"name":"getRequestConfirmation","nameLocation":"4448:22:19","nodeType":"FunctionDefinition","parameters":{"id":4782,"nodeType":"ParameterList","parameters":[],"src":"4470:2:19"},"returnParameters":{"id":4785,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4784,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4789,"src":"4494:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4783,"name":"uint256","nodeType":"ElementaryTypeName","src":"4494:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4493:9:19"},"scope":4798,"src":"4439:110:19","stateMutability":"pure","virtual":false,"visibility":"public"},{"body":{"id":4796,"nodeType":"Block","src":"4610:36:19","statements":[{"expression":{"id":4794,"name":"i_interval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4437,"src":"4628:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4793,"id":4795,"nodeType":"Return","src":"4621:17:19"}]},"functionSelector":"91ad27b4","id":4797,"implemented":true,"kind":"function","modifiers":[],"name":"getInterval","nameLocation":"4566:11:19","nodeType":"FunctionDefinition","parameters":{"id":4790,"nodeType":"ParameterList","parameters":[],"src":"4577:2:19"},"returnParameters":{"id":4793,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4792,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4797,"src":"4601:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4791,"name":"uint256","nodeType":"ElementaryTypeName","src":"4601:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4600:9:19"},"scope":4798,"src":"4557:89:19","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":4799,"src":"349:4300:19","usedErrors":[2044],"usedEvents":[4448,4452,4456]}],"src":"32:4619:19"},"id":19}},"contracts":{"@chainlink/contracts/src/v0.8/ChainSpecificUtil.sol":{"ChainSpecificUtil":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122063438aa437a936e0fa076bea4b50a3ff9b2c69ec28bc30c49d31c6d4e816df3464736f6c63430008180033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH4 0x438AA437 0xA9 CALLDATASIZE 0xE0 STATICCALL SMOD PUSH12 0xEA4B50A3FF9B2C69EC28BC30 0xC4 SWAP14 BALANCE 0xC6 0xD4 0xE8 AND 0xDF CALLVALUE PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"492:2174:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122063438aa437a936e0fa076bea4b50a3ff9b2c69ec28bc30c49d31c6d4e816df3464736f6c63430008180033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH4 0x438AA437 0xA9 CALLDATASIZE 0xE0 STATICCALL SMOD PUSH12 0xEA4B50A3FF9B2C69EC28BC30 0xC4 SWAP14 BALANCE 0xC6 0xD4 0xE8 AND 0xDF CALLVALUE PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"492:2174:0:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"getBlockNumber()":"infinite","getBlockhash(uint64)":"infinite","getCurrentTxL1GasFees()":"infinite","getL1CalldataGasCost(uint256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/ChainSpecificUtil.sol\":\"ChainSpecificUtil\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/ChainSpecificUtil.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\n\\nimport {ArbSys} from \\\"./vendor/@arbitrum/nitro-contracts/src/precompiles/ArbSys.sol\\\";\\nimport {ArbGasInfo} from \\\"./vendor/@arbitrum/nitro-contracts/src/precompiles/ArbGasInfo.sol\\\";\\n\\n//@dev A library that abstracts out opcodes that behave differently across chains.\\n//@dev The methods below return values that are pertinent to the given chain.\\n//@dev For instance, ChainSpecificUtil.getBlockNumber() returns L2 block number in L2 chains\\nlibrary ChainSpecificUtil {\\n  address private constant ARBSYS_ADDR = address(0x0000000000000000000000000000000000000064);\\n  ArbSys private constant ARBSYS = ArbSys(ARBSYS_ADDR);\\n  address private constant ARBGAS_ADDR = address(0x000000000000000000000000000000000000006C);\\n  ArbGasInfo private constant ARBGAS = ArbGasInfo(ARBGAS_ADDR);\\n  uint256 private constant ARB_MAINNET_CHAIN_ID = 42161;\\n  uint256 private constant ARB_GOERLI_TESTNET_CHAIN_ID = 421613;\\n  uint256 private constant ARB_SEPOLIA_TESTNET_CHAIN_ID = 421614;\\n\\n  function getBlockhash(uint64 blockNumber) internal view returns (bytes32) {\\n    uint256 chainid = block.chainid;\\n    if (\\n      chainid == ARB_MAINNET_CHAIN_ID ||\\n      chainid == ARB_GOERLI_TESTNET_CHAIN_ID ||\\n      chainid == ARB_SEPOLIA_TESTNET_CHAIN_ID\\n    ) {\\n      if ((getBlockNumber() - blockNumber) > 256 || blockNumber >= getBlockNumber()) {\\n        return \\\"\\\";\\n      }\\n      return ARBSYS.arbBlockHash(blockNumber);\\n    }\\n    return blockhash(blockNumber);\\n  }\\n\\n  function getBlockNumber() internal view returns (uint256) {\\n    uint256 chainid = block.chainid;\\n    if (chainid == ARB_MAINNET_CHAIN_ID || chainid == ARB_GOERLI_TESTNET_CHAIN_ID) {\\n      return ARBSYS.arbBlockNumber();\\n    }\\n    return block.number;\\n  }\\n\\n  function getCurrentTxL1GasFees() internal view returns (uint256) {\\n    uint256 chainid = block.chainid;\\n    if (chainid == ARB_MAINNET_CHAIN_ID || chainid == ARB_GOERLI_TESTNET_CHAIN_ID) {\\n      return ARBGAS.getCurrentTxL1GasFees();\\n    }\\n    return 0;\\n  }\\n\\n  /**\\n   * @notice Returns the gas cost in wei of calldataSizeBytes of calldata being posted\\n   * @notice to L1.\\n   */\\n  function getL1CalldataGasCost(uint256 calldataSizeBytes) internal view returns (uint256) {\\n    uint256 chainid = block.chainid;\\n    if (chainid == ARB_MAINNET_CHAIN_ID || chainid == ARB_GOERLI_TESTNET_CHAIN_ID) {\\n      (, uint256 l1PricePerByte, , , , ) = ARBGAS.getPricesInWei();\\n      // see https://developer.arbitrum.io/devs-how-tos/how-to-estimate-gas#where-do-we-get-all-this-information-from\\n      // for the justification behind the 140 number.\\n      return l1PricePerByte * (calldataSizeBytes + 140);\\n    }\\n    return 0;\\n  }\\n}\\n\",\"keccak256\":\"0x5a544649bb97cde531acc7bdb25a6c4b5f4f6bcbd592b57c4e2de201c251bcd7\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/vendor/@arbitrum/nitro-contracts/src/precompiles/ArbGasInfo.sol\":{\"content\":\"// Copyright 2021-2022, Offchain Labs, Inc.\\n// For license information, see https://github.com/nitro/blob/master/LICENSE\\n// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity >=0.4.21 <0.9.0;\\n\\ninterface ArbGasInfo {\\n    // return gas prices in wei, assuming the specified aggregator is used\\n    //        (\\n    //            per L2 tx,\\n    //            per L1 calldata unit, (zero byte = 4 units, nonzero byte = 16 units)\\n    //            per storage allocation,\\n    //            per ArbGas base,\\n    //            per ArbGas congestion,\\n    //            per ArbGas total\\n    //        )\\n    function getPricesInWeiWithAggregator(address aggregator) external view returns (uint, uint, uint, uint, uint, uint);\\n\\n    // return gas prices in wei, as described above, assuming the caller's preferred aggregator is used\\n    //     if the caller hasn't specified a preferred aggregator, the default aggregator is assumed\\n    function getPricesInWei() external view returns (uint, uint, uint, uint, uint, uint);\\n\\n    // return prices in ArbGas (per L2 tx, per L1 calldata unit, per storage allocation),\\n    //       assuming the specified aggregator is used\\n    function getPricesInArbGasWithAggregator(address aggregator) external view returns (uint, uint, uint);\\n\\n    // return gas prices in ArbGas, as described above, assuming the caller's preferred aggregator is used\\n    //     if the caller hasn't specified a preferred aggregator, the default aggregator is assumed\\n    function getPricesInArbGas() external view returns (uint, uint, uint);\\n\\n    // return gas accounting parameters (speedLimitPerSecond, gasPoolMax, maxTxGasLimit)\\n    function getGasAccountingParams() external view returns (uint, uint, uint);\\n\\n    // get ArbOS's estimate of the L1 gas price in wei\\n    function getL1GasPriceEstimate() external view returns(uint);\\n\\n    // set ArbOS's estimate of the L1 gas price in wei\\n    // reverts unless called by chain owner or designated gas oracle (if any)\\n    function setL1GasPriceEstimate(uint priceInWei) external;\\n\\n    // get L1 gas fees paid by the current transaction (txBaseFeeWei, calldataFeeWei)\\n    function getCurrentTxL1GasFees() external view returns(uint);\\n}\\n\",\"keccak256\":\"0x70607287132cc13f599a31a2eb679f4259f86429ea2fdf4f8f02be3044f6db5a\",\"license\":\"BUSL-1.1\"},\"@chainlink/contracts/src/v0.8/vendor/@arbitrum/nitro-contracts/src/precompiles/ArbSys.sol\":{\"content\":\"// Copyright 2021-2022, Offchain Labs, Inc.\\n// For license information, see https://github.com/nitro/blob/master/LICENSE\\n// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity >=0.4.21 <0.9.0;\\n\\n/**\\n * @title System level functionality\\n * @notice For use by contracts to interact with core L2-specific functionality.\\n * Precompiled contract that exists in every Arbitrum chain at address(100), 0x0000000000000000000000000000000000000064.\\n */\\ninterface ArbSys {\\n    /**\\n     * @notice Get Arbitrum block number (distinct from L1 block number; Arbitrum genesis block has block number 0)\\n     * @return block number as int\\n     */\\n    function arbBlockNumber() external view returns (uint256);\\n\\n    /**\\n     * @notice Get Arbitrum block hash (reverts unless currentBlockNum-256 <= arbBlockNum < currentBlockNum)\\n     * @return block hash\\n     */\\n    function arbBlockHash(uint256 arbBlockNum) external view returns (bytes32);\\n\\n    /**\\n     * @notice Gets the rollup's unique chain identifier\\n     * @return Chain identifier as int\\n     */\\n    function arbChainID() external view returns (uint256);\\n\\n    /**\\n     * @notice Get internal version number identifying an ArbOS build\\n     * @return version number as int\\n     */\\n    function arbOSVersion() external view returns (uint256);\\n\\n    /**\\n     * @notice Returns 0 since Nitro has no concept of storage gas\\n     * @return uint 0\\n     */\\n    function getStorageGasAvailable() external view returns (uint256);\\n\\n    /**\\n     * @notice (deprecated) check if current call is top level (meaning it was triggered by an EoA or a L1 contract)\\n     * @dev this call has been deprecated and may be removed in a future release\\n     * @return true if current execution frame is not a call by another L2 contract\\n     */\\n    function isTopLevelCall() external view returns (bool);\\n\\n    /**\\n     * @notice map L1 sender contract address to its L2 alias\\n     * @param sender sender address\\n     * @param unused argument no longer used\\n     * @return aliased sender address\\n     */\\n    function mapL1SenderContractAddressToL2Alias(address sender, address unused)\\n        external\\n        pure\\n        returns (address);\\n\\n    /**\\n     * @notice check if the caller (of this caller of this) is an aliased L1 contract address\\n     * @return true iff the caller's address is an alias for an L1 contract address\\n     */\\n    function wasMyCallersAddressAliased() external view returns (bool);\\n\\n    /**\\n     * @notice return the address of the caller (of this caller of this), without applying L1 contract address aliasing\\n     * @return address of the caller's caller, without applying L1 contract address aliasing\\n     */\\n    function myCallersAddressWithoutAliasing() external view returns (address);\\n\\n    /**\\n     * @notice Send given amount of Eth to dest from sender.\\n     * This is a convenience function, which is equivalent to calling sendTxToL1 with empty data.\\n     * @param destination recipient address on L1\\n     * @return unique identifier for this L2-to-L1 transaction.\\n     */\\n    function withdrawEth(address destination)\\n        external\\n        payable\\n        returns (uint256);\\n\\n    /**\\n     * @notice Send a transaction to L1\\n     * @dev it is not possible to execute on the L1 any L2-to-L1 transaction which contains data\\n     * to a contract address without any code (as enforced by the Bridge contract).\\n     * @param destination recipient address on L1\\n     * @param data (optional) calldata for L1 contract call\\n     * @return a unique identifier for this L2-to-L1 transaction.\\n     */\\n    function sendTxToL1(address destination, bytes calldata data)\\n        external\\n        payable\\n        returns (uint256);\\n\\n    /**\\n     * @notice Get send Merkle tree state\\n     * @return size number of sends in the history\\n     * @return root root hash of the send history\\n     * @return partials hashes of partial subtrees in the send history tree\\n     */\\n    function sendMerkleTreeState()\\n        external\\n        view\\n        returns (\\n            uint256 size,\\n            bytes32 root,\\n            bytes32[] memory partials\\n        );\\n\\n    /**\\n     * @notice creates a send txn from L2 to L1\\n     * @param position = (level << 192) + leaf = (0 << 192) + leaf = leaf\\n     */\\n    event L2ToL1Tx(\\n        address caller,\\n        address indexed destination,\\n        uint256 indexed hash,\\n        uint256 indexed position,\\n        uint256 arbBlockNum,\\n        uint256 ethBlockNum,\\n        uint256 timestamp,\\n        uint256 callvalue,\\n        bytes data\\n    );\\n\\n    /// @dev DEPRECATED in favour of the new L2ToL1Tx event above after the nitro upgrade\\n    event L2ToL1Transaction(\\n        address caller,\\n        address indexed destination,\\n        uint256 indexed uniqueId,\\n        uint256 indexed batchNumber,\\n        uint256 indexInBatch,\\n        uint256 arbBlockNum,\\n        uint256 ethBlockNum,\\n        uint256 timestamp,\\n        uint256 callvalue,\\n        bytes data\\n    );\\n\\n    /**\\n     * @notice logs a merkle branch for proof synthesis\\n     * @param reserved an index meant only to align the 4th index with L2ToL1Transaction's 4th event\\n     * @param hash the merkle hash\\n     * @param position = (level << 192) + leaf\\n     */\\n    event SendMerkleUpdate(\\n        uint256 indexed reserved,\\n        bytes32 indexed hash,\\n        uint256 indexed position\\n    );\\n}\\n\",\"keccak256\":\"0xa8461b373712cb0f4950ef9cad1d12fb38442da76cd57ff916baa7920f7b5077\",\"license\":\"BUSL-1.1\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@chainlink/contracts/src/v0.8/automation/AutomationBase.sol":{"AutomationBase":{"abi":[{"inputs":[],"name":"OnlySimulatedBackend","type":"error"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea264697066735822122021acd3e0a45feaab1390c12849afb1251de7022908a2fedf7e7e1149d6d1f12764736f6c63430008180033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x21 0xAC 0xD3 0xE0 LOG4 PUSH0 0xEA 0xAB SGT SWAP1 0xC1 0x28 BLOBHASH 0xAF 0xB1 0x25 SAR 0xE7 MUL 0x29 ADDMOD LOG2 INVALID 0xDF PUSH31 0x7E1149D6D1F12764736F6C6343000818003300000000000000000000000000 ","sourceMap":"57:515:1:-:0;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"6080604052600080fdfea264697066735822122021acd3e0a45feaab1390c12849afb1251de7022908a2fedf7e7e1149d6d1f12764736f6c63430008180033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x21 0xAC 0xD3 0xE0 LOG4 PUSH0 0xEA 0xAB SGT SWAP1 0xC1 0x28 BLOBHASH 0xAF 0xB1 0x25 SAR 0xE7 MUL 0x29 ADDMOD LOG2 INVALID 0xDF PUSH31 0x7E1149D6D1F12764736F6C6343000818003300000000000000000000000000 ","sourceMap":"57:515:1:-:0;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"12600","executionCost":"66","totalCost":"12666"},"internal":{"preventExecution()":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"OnlySimulatedBackend\",\"type\":\"error\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/automation/AutomationBase.sol\":\"AutomationBase\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/automation/AutomationBase.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ncontract AutomationBase {\\n  error OnlySimulatedBackend();\\n\\n  /**\\n   * @notice method that allows it to be simulated via eth_call by checking that\\n   * the sender is the zero address.\\n   */\\n  function preventExecution() internal view {\\n    if (tx.origin != address(0)) {\\n      revert OnlySimulatedBackend();\\n    }\\n  }\\n\\n  /**\\n   * @notice modifier that allows it to be simulated via eth_call by checking\\n   * that the sender is the zero address.\\n   */\\n  modifier cannotExecute() {\\n    preventExecution();\\n    _;\\n  }\\n}\\n\",\"keccak256\":\"0x5d354afa1a97dffe66094397cdcbb0c14713cf3d609d88fd8f9891010e9a351a\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@chainlink/contracts/src/v0.8/automation/AutomationCompatible.sol":{"AutomationCompatible":{"abi":[{"inputs":[],"name":"OnlySimulatedBackend","type":"error"},{"inputs":[{"internalType":"bytes","name":"checkData","type":"bytes"}],"name":"checkUpkeep","outputs":[{"internalType":"bool","name":"upkeepNeeded","type":"bool"},{"internalType":"bytes","name":"performData","type":"bytes"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes","name":"performData","type":"bytes"}],"name":"performUpkeep","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"checkUpkeep(bytes)":{"details":"To ensure that it is never called, you may want to add the cannotExecute modifier from KeeperBase to your implementation of this method.","params":{"checkData":"specified in the upkeep registration so it is always the same for a registered upkeep. This can easily be broken down into specific arguments using `abi.decode`, so multiple upkeeps can be registered on the same contract and easily differentiated by the contract."},"returns":{"performData":"bytes that the keeper should call performUpkeep with, if upkeep is needed. If you would like to encode data to decode later, try `abi.encode`.","upkeepNeeded":"boolean to indicate whether the keeper should call performUpkeep or not."}},"performUpkeep(bytes)":{"details":"The input to this method should not be trusted, and the caller of the method should not even be restricted to any single registry. Anyone should be able call it, and the input should be validated, there is no guarantee that the data passed in is the performData returned from checkUpkeep. This could happen due to malicious keepers, racing keepers, or simply a state change while the performUpkeep transaction is waiting for confirmation. Always validate the data passed in.","params":{"performData":"is the data which was passed back from the checkData simulation. If it is encoded, it can easily be decoded into other types by calling `abi.decode`. This data should not be trusted, and should be validated against the contract's current state."}}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"checkUpkeep(bytes)":"6e04ff0d","performUpkeep(bytes)":"4585e33b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"OnlySimulatedBackend\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"checkData\",\"type\":\"bytes\"}],\"name\":\"checkUpkeep\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"upkeepNeeded\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"performData\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"performData\",\"type\":\"bytes\"}],\"name\":\"performUpkeep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"checkUpkeep(bytes)\":{\"details\":\"To ensure that it is never called, you may want to add the cannotExecute modifier from KeeperBase to your implementation of this method.\",\"params\":{\"checkData\":\"specified in the upkeep registration so it is always the same for a registered upkeep. This can easily be broken down into specific arguments using `abi.decode`, so multiple upkeeps can be registered on the same contract and easily differentiated by the contract.\"},\"returns\":{\"performData\":\"bytes that the keeper should call performUpkeep with, if upkeep is needed. If you would like to encode data to decode later, try `abi.encode`.\",\"upkeepNeeded\":\"boolean to indicate whether the keeper should call performUpkeep or not.\"}},\"performUpkeep(bytes)\":{\"details\":\"The input to this method should not be trusted, and the caller of the method should not even be restricted to any single registry. Anyone should be able call it, and the input should be validated, there is no guarantee that the data passed in is the performData returned from checkUpkeep. This could happen due to malicious keepers, racing keepers, or simply a state change while the performUpkeep transaction is waiting for confirmation. Always validate the data passed in.\",\"params\":{\"performData\":\"is the data which was passed back from the checkData simulation. If it is encoded, it can easily be decoded into other types by calling `abi.decode`. This data should not be trusted, and should be validated against the contract's current state.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"checkUpkeep(bytes)\":{\"notice\":\"method that is simulated by the keepers to see if any work actually needs to be performed. This method does does not actually need to be executable, and since it is only ever simulated it can consume lots of gas.\"},\"performUpkeep(bytes)\":{\"notice\":\"method that is actually executed by the keepers, via the registry. The data returned by the checkUpkeep simulation will be passed into this method to actually be executed.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/automation/AutomationCompatible.sol\":\"AutomationCompatible\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/automation/AutomationBase.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ncontract AutomationBase {\\n  error OnlySimulatedBackend();\\n\\n  /**\\n   * @notice method that allows it to be simulated via eth_call by checking that\\n   * the sender is the zero address.\\n   */\\n  function preventExecution() internal view {\\n    if (tx.origin != address(0)) {\\n      revert OnlySimulatedBackend();\\n    }\\n  }\\n\\n  /**\\n   * @notice modifier that allows it to be simulated via eth_call by checking\\n   * that the sender is the zero address.\\n   */\\n  modifier cannotExecute() {\\n    preventExecution();\\n    _;\\n  }\\n}\\n\",\"keccak256\":\"0x5d354afa1a97dffe66094397cdcbb0c14713cf3d609d88fd8f9891010e9a351a\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/automation/AutomationCompatible.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"./AutomationBase.sol\\\";\\nimport \\\"./interfaces/AutomationCompatibleInterface.sol\\\";\\n\\nabstract contract AutomationCompatible is AutomationBase, AutomationCompatibleInterface {}\\n\",\"keccak256\":\"0x40e5ae0eff4edd0740c1b5590d09c344f84dee031e82d5294563e99603774f80\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AutomationCompatibleInterface {\\n  /**\\n   * @notice method that is simulated by the keepers to see if any work actually\\n   * needs to be performed. This method does does not actually need to be\\n   * executable, and since it is only ever simulated it can consume lots of gas.\\n   * @dev To ensure that it is never called, you may want to add the\\n   * cannotExecute modifier from KeeperBase to your implementation of this\\n   * method.\\n   * @param checkData specified in the upkeep registration so it is always the\\n   * same for a registered upkeep. This can easily be broken down into specific\\n   * arguments using `abi.decode`, so multiple upkeeps can be registered on the\\n   * same contract and easily differentiated by the contract.\\n   * @return upkeepNeeded boolean to indicate whether the keeper should call\\n   * performUpkeep or not.\\n   * @return performData bytes that the keeper should call performUpkeep with, if\\n   * upkeep is needed. If you would like to encode data to decode later, try\\n   * `abi.encode`.\\n   */\\n  function checkUpkeep(bytes calldata checkData) external returns (bool upkeepNeeded, bytes memory performData);\\n\\n  /**\\n   * @notice method that is actually executed by the keepers, via the registry.\\n   * The data returned by the checkUpkeep simulation will be passed into\\n   * this method to actually be executed.\\n   * @dev The input to this method should not be trusted, and the caller of the\\n   * method should not even be restricted to any single registry. Anyone should\\n   * be able call it, and the input should be validated, there is no guarantee\\n   * that the data passed in is the performData returned from checkUpkeep. This\\n   * could happen due to malicious keepers, racing keepers, or simply a state\\n   * change while the performUpkeep transaction is waiting for confirmation.\\n   * Always validate the data passed in.\\n   * @param performData is the data which was passed back from the checkData\\n   * simulation. If it is encoded, it can easily be decoded into other types by\\n   * calling `abi.decode`. This data should not be trusted, and should be\\n   * validated against the contract's current state.\\n   */\\n  function performUpkeep(bytes calldata performData) external;\\n}\\n\",\"keccak256\":\"0x67076747c6f66d8d43472a56e72879c350056bff82e069addaf9064922863340\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"checkUpkeep(bytes)":{"notice":"method that is simulated by the keepers to see if any work actually needs to be performed. This method does does not actually need to be executable, and since it is only ever simulated it can consume lots of gas."},"performUpkeep(bytes)":{"notice":"method that is actually executed by the keepers, via the registry. The data returned by the checkUpkeep simulation will be passed into this method to actually be executed."}},"version":1}}},"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol":{"AutomationCompatibleInterface":{"abi":[{"inputs":[{"internalType":"bytes","name":"checkData","type":"bytes"}],"name":"checkUpkeep","outputs":[{"internalType":"bool","name":"upkeepNeeded","type":"bool"},{"internalType":"bytes","name":"performData","type":"bytes"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes","name":"performData","type":"bytes"}],"name":"performUpkeep","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"checkUpkeep(bytes)":{"details":"To ensure that it is never called, you may want to add the cannotExecute modifier from KeeperBase to your implementation of this method.","params":{"checkData":"specified in the upkeep registration so it is always the same for a registered upkeep. This can easily be broken down into specific arguments using `abi.decode`, so multiple upkeeps can be registered on the same contract and easily differentiated by the contract."},"returns":{"performData":"bytes that the keeper should call performUpkeep with, if upkeep is needed. If you would like to encode data to decode later, try `abi.encode`.","upkeepNeeded":"boolean to indicate whether the keeper should call performUpkeep or not."}},"performUpkeep(bytes)":{"details":"The input to this method should not be trusted, and the caller of the method should not even be restricted to any single registry. Anyone should be able call it, and the input should be validated, there is no guarantee that the data passed in is the performData returned from checkUpkeep. This could happen due to malicious keepers, racing keepers, or simply a state change while the performUpkeep transaction is waiting for confirmation. Always validate the data passed in.","params":{"performData":"is the data which was passed back from the checkData simulation. If it is encoded, it can easily be decoded into other types by calling `abi.decode`. This data should not be trusted, and should be validated against the contract's current state."}}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"checkUpkeep(bytes)":"6e04ff0d","performUpkeep(bytes)":"4585e33b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"checkData\",\"type\":\"bytes\"}],\"name\":\"checkUpkeep\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"upkeepNeeded\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"performData\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"performData\",\"type\":\"bytes\"}],\"name\":\"performUpkeep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"checkUpkeep(bytes)\":{\"details\":\"To ensure that it is never called, you may want to add the cannotExecute modifier from KeeperBase to your implementation of this method.\",\"params\":{\"checkData\":\"specified in the upkeep registration so it is always the same for a registered upkeep. This can easily be broken down into specific arguments using `abi.decode`, so multiple upkeeps can be registered on the same contract and easily differentiated by the contract.\"},\"returns\":{\"performData\":\"bytes that the keeper should call performUpkeep with, if upkeep is needed. If you would like to encode data to decode later, try `abi.encode`.\",\"upkeepNeeded\":\"boolean to indicate whether the keeper should call performUpkeep or not.\"}},\"performUpkeep(bytes)\":{\"details\":\"The input to this method should not be trusted, and the caller of the method should not even be restricted to any single registry. Anyone should be able call it, and the input should be validated, there is no guarantee that the data passed in is the performData returned from checkUpkeep. This could happen due to malicious keepers, racing keepers, or simply a state change while the performUpkeep transaction is waiting for confirmation. Always validate the data passed in.\",\"params\":{\"performData\":\"is the data which was passed back from the checkData simulation. If it is encoded, it can easily be decoded into other types by calling `abi.decode`. This data should not be trusted, and should be validated against the contract's current state.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"checkUpkeep(bytes)\":{\"notice\":\"method that is simulated by the keepers to see if any work actually needs to be performed. This method does does not actually need to be executable, and since it is only ever simulated it can consume lots of gas.\"},\"performUpkeep(bytes)\":{\"notice\":\"method that is actually executed by the keepers, via the registry. The data returned by the checkUpkeep simulation will be passed into this method to actually be executed.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol\":\"AutomationCompatibleInterface\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AutomationCompatibleInterface {\\n  /**\\n   * @notice method that is simulated by the keepers to see if any work actually\\n   * needs to be performed. This method does does not actually need to be\\n   * executable, and since it is only ever simulated it can consume lots of gas.\\n   * @dev To ensure that it is never called, you may want to add the\\n   * cannotExecute modifier from KeeperBase to your implementation of this\\n   * method.\\n   * @param checkData specified in the upkeep registration so it is always the\\n   * same for a registered upkeep. This can easily be broken down into specific\\n   * arguments using `abi.decode`, so multiple upkeeps can be registered on the\\n   * same contract and easily differentiated by the contract.\\n   * @return upkeepNeeded boolean to indicate whether the keeper should call\\n   * performUpkeep or not.\\n   * @return performData bytes that the keeper should call performUpkeep with, if\\n   * upkeep is needed. If you would like to encode data to decode later, try\\n   * `abi.encode`.\\n   */\\n  function checkUpkeep(bytes calldata checkData) external returns (bool upkeepNeeded, bytes memory performData);\\n\\n  /**\\n   * @notice method that is actually executed by the keepers, via the registry.\\n   * The data returned by the checkUpkeep simulation will be passed into\\n   * this method to actually be executed.\\n   * @dev The input to this method should not be trusted, and the caller of the\\n   * method should not even be restricted to any single registry. Anyone should\\n   * be able call it, and the input should be validated, there is no guarantee\\n   * that the data passed in is the performData returned from checkUpkeep. This\\n   * could happen due to malicious keepers, racing keepers, or simply a state\\n   * change while the performUpkeep transaction is waiting for confirmation.\\n   * Always validate the data passed in.\\n   * @param performData is the data which was passed back from the checkData\\n   * simulation. If it is encoded, it can easily be decoded into other types by\\n   * calling `abi.decode`. This data should not be trusted, and should be\\n   * validated against the contract's current state.\\n   */\\n  function performUpkeep(bytes calldata performData) external;\\n}\\n\",\"keccak256\":\"0x67076747c6f66d8d43472a56e72879c350056bff82e069addaf9064922863340\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"checkUpkeep(bytes)":{"notice":"method that is simulated by the keepers to see if any work actually needs to be performed. This method does does not actually need to be executable, and since it is only ever simulated it can consume lots of gas."},"performUpkeep(bytes)":{"notice":"method that is actually executed by the keepers, via the registry. The data returned by the checkUpkeep simulation will be passed into this method to actually be executed."}},"version":1}}},"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol":{"AggregatorV3Interface":{"abi":[{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"description","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint80","name":"_roundId","type":"uint80"}],"name":"getRoundData","outputs":[{"internalType":"uint80","name":"roundId","type":"uint80"},{"internalType":"int256","name":"answer","type":"int256"},{"internalType":"uint256","name":"startedAt","type":"uint256"},{"internalType":"uint256","name":"updatedAt","type":"uint256"},{"internalType":"uint80","name":"answeredInRound","type":"uint80"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"latestRoundData","outputs":[{"internalType":"uint80","name":"roundId","type":"uint80"},{"internalType":"int256","name":"answer","type":"int256"},{"internalType":"uint256","name":"startedAt","type":"uint256"},{"internalType":"uint256","name":"updatedAt","type":"uint256"},{"internalType":"uint80","name":"answeredInRound","type":"uint80"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"version","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"decimals()":"313ce567","description()":"7284e416","getRoundData(uint80)":"9a6fc8f5","latestRoundData()":"feaf968c","version()":"54fd4d50"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"description\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint80\",\"name\":\"_roundId\",\"type\":\"uint80\"}],\"name\":\"getRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":\"AggregatorV3Interface\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(\\n    uint80 _roundId\\n  ) external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n}\\n\",\"keccak256\":\"0xfe4e8bb4861bb3860ba890ab91a3b818ec66e5a8f544fb608cfcb73f433472cd\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@chainlink/contracts/src/v0.8/interfaces/BlockhashStoreInterface.sol":{"BlockhashStoreInterface":{"abi":[{"inputs":[{"internalType":"uint256","name":"number","type":"uint256"}],"name":"getBlockhash","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"getBlockhash(uint256)":"e9413d38"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"number\",\"type\":\"uint256\"}],\"name\":\"getBlockhash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/interfaces/BlockhashStoreInterface.sol\":\"BlockhashStoreInterface\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/BlockhashStoreInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface BlockhashStoreInterface {\\n  function getBlockhash(uint256 number) external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x0d39e3be84000b35faa198e8c4fcc1cfd65a876275c776f45b4e0d48c852b4cc\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@chainlink/contracts/src/v0.8/interfaces/TypeAndVersionInterface.sol":{"TypeAndVersionInterface":{"abi":[{"inputs":[],"name":"typeAndVersion","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"pure","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"typeAndVersion()":"181f5a77"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"typeAndVersion\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/interfaces/TypeAndVersionInterface.sol\":\"TypeAndVersionInterface\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/TypeAndVersionInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nabstract contract TypeAndVersionInterface {\\n  function typeAndVersion() external pure virtual returns (string memory);\\n}\\n\",\"keccak256\":\"0x805cc9a91d54db1bea60cb19f38364f1eac2735bddb3476294fb803c2f6b7097\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol":{"VRFCoordinatorV2Interface":{"abi":[{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"}],"name":"acceptSubscriptionOwnerTransfer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"},{"internalType":"address","name":"consumer","type":"address"}],"name":"addConsumer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"},{"internalType":"address","name":"to","type":"address"}],"name":"cancelSubscription","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"createSubscription","outputs":[{"internalType":"uint64","name":"subId","type":"uint64"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getRequestConfig","outputs":[{"internalType":"uint16","name":"","type":"uint16"},{"internalType":"uint32","name":"","type":"uint32"},{"internalType":"bytes32[]","name":"","type":"bytes32[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"}],"name":"getSubscription","outputs":[{"internalType":"uint96","name":"balance","type":"uint96"},{"internalType":"uint64","name":"reqCount","type":"uint64"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"address[]","name":"consumers","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"}],"name":"pendingRequestExists","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"},{"internalType":"address","name":"consumer","type":"address"}],"name":"removeConsumer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"keyHash","type":"bytes32"},{"internalType":"uint64","name":"subId","type":"uint64"},{"internalType":"uint16","name":"minimumRequestConfirmations","type":"uint16"},{"internalType":"uint32","name":"callbackGasLimit","type":"uint32"},{"internalType":"uint32","name":"numWords","type":"uint32"}],"name":"requestRandomWords","outputs":[{"internalType":"uint256","name":"requestId","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"},{"internalType":"address","name":"newOwner","type":"address"}],"name":"requestSubscriptionOwnerTransfer","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"acceptSubscriptionOwnerTransfer(uint64)":{"details":"will revert if original owner of subId has not requested that msg.sender become the new owner.","params":{"subId":"- ID of the subscription"}},"addConsumer(uint64,address)":{"params":{"consumer":"- New consumer which can use the subscription","subId":"- ID of the subscription"}},"cancelSubscription(uint64,address)":{"params":{"subId":"- ID of the subscription","to":"- Where to send the remaining LINK to"}},"createSubscription()":{"details":"You can manage the consumer set dynamically with addConsumer/removeConsumer.Note to fund the subscription, use transferAndCall. For exampleLINKTOKEN.transferAndCall(address(COORDINATOR),amount,abi.encode(subId));","returns":{"subId":"- A unique subscription id."}},"getRequestConfig()":{"returns":{"_0":"minimumRequestConfirmations global min for request confirmations","_1":"maxGasLimit global max for request gas limit","_2":"s_provingKeyHashes list of registered key hashes"}},"getSubscription(uint64)":{"params":{"subId":"- ID of the subscription"},"returns":{"balance":"- LINK balance of the subscription in juels.","consumers":"- list of consumer address which are able to use this subscription.","owner":"- owner of the subscription.","reqCount":"- number of requests for this subscription, determines fee tier."}},"removeConsumer(uint64,address)":{"params":{"consumer":"- Consumer to remove from the subscription","subId":"- ID of the subscription"}},"requestRandomWords(bytes32,uint64,uint16,uint32,uint32)":{"params":{"callbackGasLimit":"- How much gas you'd like to receive in your fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords may be slightly less than this amount because of gas used calling the function (argument decoding etc.), so you may need to request slightly more than you expect to have inside fulfillRandomWords. The acceptable range is [0, maxGasLimit]","keyHash":"- Corresponds to a particular oracle job which uses that key for generating the VRF proof. Different keyHash's have different gas price ceilings, so you can select a specific one to bound your maximum per request cost.","minimumRequestConfirmations":"- How many blocks you'd like the oracle to wait before responding to the request. See SECURITY CONSIDERATIONS for why you may want to request more. The acceptable range is [minimumRequestBlockConfirmations, 200].","numWords":"- The number of uint256 random values you'd like to receive in your fulfillRandomWords callback. Note these numbers are expanded in a secure way by the VRFCoordinator from a single random value supplied by the oracle.","subId":"- The ID of the VRF subscription. Must be funded with the minimum subscription balance required for the selected keyHash."},"returns":{"requestId":"- A unique identifier of the request. Can be used to match a request to a response in fulfillRandomWords."}},"requestSubscriptionOwnerTransfer(uint64,address)":{"params":{"newOwner":"- proposed new owner of the subscription","subId":"- ID of the subscription"}}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"acceptSubscriptionOwnerTransfer(uint64)":"82359740","addConsumer(uint64,address)":"7341c10c","cancelSubscription(uint64,address)":"d7ae1d30","createSubscription()":"a21a23e4","getRequestConfig()":"00012291","getSubscription(uint64)":"a47c7696","pendingRequestExists(uint64)":"e82ad7d4","removeConsumer(uint64,address)":"9f87fad7","requestRandomWords(bytes32,uint64,uint16,uint32,uint32)":"5d3b1d30","requestSubscriptionOwnerTransfer(uint64,address)":"04c357cb"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"}],\"name\":\"acceptSubscriptionOwnerTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"consumer\",\"type\":\"address\"}],\"name\":\"addConsumer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"cancelSubscription\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"createSubscription\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRequestConfig\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"},{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"},{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"}],\"name\":\"getSubscription\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"balance\",\"type\":\"uint96\"},{\"internalType\":\"uint64\",\"name\":\"reqCount\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"consumers\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"}],\"name\":\"pendingRequestExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"consumer\",\"type\":\"address\"}],\"name\":\"removeConsumer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"keyHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"uint16\",\"name\":\"minimumRequestConfirmations\",\"type\":\"uint16\"},{\"internalType\":\"uint32\",\"name\":\"callbackGasLimit\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"numWords\",\"type\":\"uint32\"}],\"name\":\"requestRandomWords\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"requestSubscriptionOwnerTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"acceptSubscriptionOwnerTransfer(uint64)\":{\"details\":\"will revert if original owner of subId has not requested that msg.sender become the new owner.\",\"params\":{\"subId\":\"- ID of the subscription\"}},\"addConsumer(uint64,address)\":{\"params\":{\"consumer\":\"- New consumer which can use the subscription\",\"subId\":\"- ID of the subscription\"}},\"cancelSubscription(uint64,address)\":{\"params\":{\"subId\":\"- ID of the subscription\",\"to\":\"- Where to send the remaining LINK to\"}},\"createSubscription()\":{\"details\":\"You can manage the consumer set dynamically with addConsumer/removeConsumer.Note to fund the subscription, use transferAndCall. For exampleLINKTOKEN.transferAndCall(address(COORDINATOR),amount,abi.encode(subId));\",\"returns\":{\"subId\":\"- A unique subscription id.\"}},\"getRequestConfig()\":{\"returns\":{\"_0\":\"minimumRequestConfirmations global min for request confirmations\",\"_1\":\"maxGasLimit global max for request gas limit\",\"_2\":\"s_provingKeyHashes list of registered key hashes\"}},\"getSubscription(uint64)\":{\"params\":{\"subId\":\"- ID of the subscription\"},\"returns\":{\"balance\":\"- LINK balance of the subscription in juels.\",\"consumers\":\"- list of consumer address which are able to use this subscription.\",\"owner\":\"- owner of the subscription.\",\"reqCount\":\"- number of requests for this subscription, determines fee tier.\"}},\"removeConsumer(uint64,address)\":{\"params\":{\"consumer\":\"- Consumer to remove from the subscription\",\"subId\":\"- ID of the subscription\"}},\"requestRandomWords(bytes32,uint64,uint16,uint32,uint32)\":{\"params\":{\"callbackGasLimit\":\"- How much gas you'd like to receive in your fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords may be slightly less than this amount because of gas used calling the function (argument decoding etc.), so you may need to request slightly more than you expect to have inside fulfillRandomWords. The acceptable range is [0, maxGasLimit]\",\"keyHash\":\"- Corresponds to a particular oracle job which uses that key for generating the VRF proof. Different keyHash's have different gas price ceilings, so you can select a specific one to bound your maximum per request cost.\",\"minimumRequestConfirmations\":\"- How many blocks you'd like the oracle to wait before responding to the request. See SECURITY CONSIDERATIONS for why you may want to request more. The acceptable range is [minimumRequestBlockConfirmations, 200].\",\"numWords\":\"- The number of uint256 random values you'd like to receive in your fulfillRandomWords callback. Note these numbers are expanded in a secure way by the VRFCoordinator from a single random value supplied by the oracle.\",\"subId\":\"- The ID of the VRF subscription. Must be funded with the minimum subscription balance required for the selected keyHash.\"},\"returns\":{\"requestId\":\"- A unique identifier of the request. Can be used to match a request to a response in fulfillRandomWords.\"}},\"requestSubscriptionOwnerTransfer(uint64,address)\":{\"params\":{\"newOwner\":\"- proposed new owner of the subscription\",\"subId\":\"- ID of the subscription\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptSubscriptionOwnerTransfer(uint64)\":{\"notice\":\"Request subscription owner transfer.\"},\"addConsumer(uint64,address)\":{\"notice\":\"Add a consumer to a VRF subscription.\"},\"cancelSubscription(uint64,address)\":{\"notice\":\"Cancel a subscription\"},\"createSubscription()\":{\"notice\":\"Create a VRF subscription.\"},\"getRequestConfig()\":{\"notice\":\"Get configuration relevant for making requests\"},\"getSubscription(uint64)\":{\"notice\":\"Get a VRF subscription.\"},\"removeConsumer(uint64,address)\":{\"notice\":\"Remove a consumer from a VRF subscription.\"},\"requestRandomWords(bytes32,uint64,uint16,uint32,uint32)\":{\"notice\":\"Request a set of random words.\"},\"requestSubscriptionOwnerTransfer(uint64,address)\":{\"notice\":\"Request subscription owner transfer.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol\":\"VRFCoordinatorV2Interface\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface VRFCoordinatorV2Interface {\\n  /**\\n   * @notice Get configuration relevant for making requests\\n   * @return minimumRequestConfirmations global min for request confirmations\\n   * @return maxGasLimit global max for request gas limit\\n   * @return s_provingKeyHashes list of registered key hashes\\n   */\\n  function getRequestConfig() external view returns (uint16, uint32, bytes32[] memory);\\n\\n  /**\\n   * @notice Request a set of random words.\\n   * @param keyHash - Corresponds to a particular oracle job which uses\\n   * that key for generating the VRF proof. Different keyHash's have different gas price\\n   * ceilings, so you can select a specific one to bound your maximum per request cost.\\n   * @param subId  - The ID of the VRF subscription. Must be funded\\n   * with the minimum subscription balance required for the selected keyHash.\\n   * @param minimumRequestConfirmations - How many blocks you'd like the\\n   * oracle to wait before responding to the request. See SECURITY CONSIDERATIONS\\n   * for why you may want to request more. The acceptable range is\\n   * [minimumRequestBlockConfirmations, 200].\\n   * @param callbackGasLimit - How much gas you'd like to receive in your\\n   * fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords\\n   * may be slightly less than this amount because of gas used calling the function\\n   * (argument decoding etc.), so you may need to request slightly more than you expect\\n   * to have inside fulfillRandomWords. The acceptable range is\\n   * [0, maxGasLimit]\\n   * @param numWords - The number of uint256 random values you'd like to receive\\n   * in your fulfillRandomWords callback. Note these numbers are expanded in a\\n   * secure way by the VRFCoordinator from a single random value supplied by the oracle.\\n   * @return requestId - A unique identifier of the request. Can be used to match\\n   * a request to a response in fulfillRandomWords.\\n   */\\n  function requestRandomWords(\\n    bytes32 keyHash,\\n    uint64 subId,\\n    uint16 minimumRequestConfirmations,\\n    uint32 callbackGasLimit,\\n    uint32 numWords\\n  ) external returns (uint256 requestId);\\n\\n  /**\\n   * @notice Create a VRF subscription.\\n   * @return subId - A unique subscription id.\\n   * @dev You can manage the consumer set dynamically with addConsumer/removeConsumer.\\n   * @dev Note to fund the subscription, use transferAndCall. For example\\n   * @dev  LINKTOKEN.transferAndCall(\\n   * @dev    address(COORDINATOR),\\n   * @dev    amount,\\n   * @dev    abi.encode(subId));\\n   */\\n  function createSubscription() external returns (uint64 subId);\\n\\n  /**\\n   * @notice Get a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @return balance - LINK balance of the subscription in juels.\\n   * @return reqCount - number of requests for this subscription, determines fee tier.\\n   * @return owner - owner of the subscription.\\n   * @return consumers - list of consumer address which are able to use this subscription.\\n   */\\n  function getSubscription(\\n    uint64 subId\\n  ) external view returns (uint96 balance, uint64 reqCount, address owner, address[] memory consumers);\\n\\n  /**\\n   * @notice Request subscription owner transfer.\\n   * @param subId - ID of the subscription\\n   * @param newOwner - proposed new owner of the subscription\\n   */\\n  function requestSubscriptionOwnerTransfer(uint64 subId, address newOwner) external;\\n\\n  /**\\n   * @notice Request subscription owner transfer.\\n   * @param subId - ID of the subscription\\n   * @dev will revert if original owner of subId has\\n   * not requested that msg.sender become the new owner.\\n   */\\n  function acceptSubscriptionOwnerTransfer(uint64 subId) external;\\n\\n  /**\\n   * @notice Add a consumer to a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @param consumer - New consumer which can use the subscription\\n   */\\n  function addConsumer(uint64 subId, address consumer) external;\\n\\n  /**\\n   * @notice Remove a consumer from a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @param consumer - Consumer to remove from the subscription\\n   */\\n  function removeConsumer(uint64 subId, address consumer) external;\\n\\n  /**\\n   * @notice Cancel a subscription\\n   * @param subId - ID of the subscription\\n   * @param to - Where to send the remaining LINK to\\n   */\\n  function cancelSubscription(uint64 subId, address to) external;\\n\\n  /*\\n   * @notice Check to see if there exists a request commitment consumers\\n   * for all consumers and keyhashes for a given sub.\\n   * @param subId - ID of the subscription\\n   * @return true if there exists at least one unfulfilled request for the subscription, false\\n   * otherwise.\\n   */\\n  function pendingRequestExists(uint64 subId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xa9f8b7e09811f4ac9f421116b5d6bcf50b5748025c0cb012aaf5ff7c39a6b46a\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"acceptSubscriptionOwnerTransfer(uint64)":{"notice":"Request subscription owner transfer."},"addConsumer(uint64,address)":{"notice":"Add a consumer to a VRF subscription."},"cancelSubscription(uint64,address)":{"notice":"Cancel a subscription"},"createSubscription()":{"notice":"Create a VRF subscription."},"getRequestConfig()":{"notice":"Get configuration relevant for making requests"},"getSubscription(uint64)":{"notice":"Get a VRF subscription."},"removeConsumer(uint64,address)":{"notice":"Remove a consumer from a VRF subscription."},"requestRandomWords(bytes32,uint64,uint16,uint32,uint32)":{"notice":"Request a set of random words."},"requestSubscriptionOwnerTransfer(uint64,address)":{"notice":"Request subscription owner transfer."}},"version":1}}},"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol":{"ConfirmedOwner":{"abi":[{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"}],"name":"OwnershipTransferRequested","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"acceptOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"title":"The ConfirmedOwner contract","version":1},"evm":{"bytecode":{"functionDebugData":{"@_426":{"entryPoint":null,"id":426,"parameterSlots":1,"returnSlots":0},"@_483":{"entryPoint":null,"id":483,"parameterSlots":2,"returnSlots":0},"@_transferOwnership_567":{"entryPoint":303,"id":567,"parameterSlots":1,"returnSlots":0},"abi_decode_t_address_fromMemory":{"entryPoint":681,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":702,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2_to_t_string_memory_ptr_fromStack":{"entryPoint":805,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack":{"entryPoint":913,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":840,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":948,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":747,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":640,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":608,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":603,"id":null,"parameterSlots":0,"returnSlots":0},"store_literal_in_memory_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2":{"entryPoint":764,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2":{"entryPoint":872,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":658,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:3327:20","nodeType":"YulBlock","src":"0:3327:20","statements":[{"body":{"nativeSrc":"47:35:20","nodeType":"YulBlock","src":"47:35:20","statements":[{"nativeSrc":"57:19:20","nodeType":"YulAssignment","src":"57:19:20","value":{"arguments":[{"kind":"number","nativeSrc":"73:2:20","nodeType":"YulLiteral","src":"73:2:20","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"67:5:20","nodeType":"YulIdentifier","src":"67:5:20"},"nativeSrc":"67:9:20","nodeType":"YulFunctionCall","src":"67:9:20"},"variableNames":[{"name":"memPtr","nativeSrc":"57:6:20","nodeType":"YulIdentifier","src":"57:6:20"}]}]},"name":"allocate_unbounded","nativeSrc":"7:75:20","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"40:6:20","nodeType":"YulTypedName","src":"40:6:20","type":""}],"src":"7:75:20"},{"body":{"nativeSrc":"177:28:20","nodeType":"YulBlock","src":"177:28:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"194:1:20","nodeType":"YulLiteral","src":"194:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"197:1:20","nodeType":"YulLiteral","src":"197:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"187:6:20","nodeType":"YulIdentifier","src":"187:6:20"},"nativeSrc":"187:12:20","nodeType":"YulFunctionCall","src":"187:12:20"},"nativeSrc":"187:12:20","nodeType":"YulExpressionStatement","src":"187:12:20"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"88:117:20","nodeType":"YulFunctionDefinition","src":"88:117:20"},{"body":{"nativeSrc":"300:28:20","nodeType":"YulBlock","src":"300:28:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"317:1:20","nodeType":"YulLiteral","src":"317:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"320:1:20","nodeType":"YulLiteral","src":"320:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"310:6:20","nodeType":"YulIdentifier","src":"310:6:20"},"nativeSrc":"310:12:20","nodeType":"YulFunctionCall","src":"310:12:20"},"nativeSrc":"310:12:20","nodeType":"YulExpressionStatement","src":"310:12:20"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"211:117:20","nodeType":"YulFunctionDefinition","src":"211:117:20"},{"body":{"nativeSrc":"379:81:20","nodeType":"YulBlock","src":"379:81:20","statements":[{"nativeSrc":"389:65:20","nodeType":"YulAssignment","src":"389:65:20","value":{"arguments":[{"name":"value","nativeSrc":"404:5:20","nodeType":"YulIdentifier","src":"404:5:20"},{"kind":"number","nativeSrc":"411:42:20","nodeType":"YulLiteral","src":"411:42:20","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"400:3:20","nodeType":"YulIdentifier","src":"400:3:20"},"nativeSrc":"400:54:20","nodeType":"YulFunctionCall","src":"400:54:20"},"variableNames":[{"name":"cleaned","nativeSrc":"389:7:20","nodeType":"YulIdentifier","src":"389:7:20"}]}]},"name":"cleanup_t_uint160","nativeSrc":"334:126:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"361:5:20","nodeType":"YulTypedName","src":"361:5:20","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"371:7:20","nodeType":"YulTypedName","src":"371:7:20","type":""}],"src":"334:126:20"},{"body":{"nativeSrc":"511:51:20","nodeType":"YulBlock","src":"511:51:20","statements":[{"nativeSrc":"521:35:20","nodeType":"YulAssignment","src":"521:35:20","value":{"arguments":[{"name":"value","nativeSrc":"550:5:20","nodeType":"YulIdentifier","src":"550:5:20"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"532:17:20","nodeType":"YulIdentifier","src":"532:17:20"},"nativeSrc":"532:24:20","nodeType":"YulFunctionCall","src":"532:24:20"},"variableNames":[{"name":"cleaned","nativeSrc":"521:7:20","nodeType":"YulIdentifier","src":"521:7:20"}]}]},"name":"cleanup_t_address","nativeSrc":"466:96:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"493:5:20","nodeType":"YulTypedName","src":"493:5:20","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"503:7:20","nodeType":"YulTypedName","src":"503:7:20","type":""}],"src":"466:96:20"},{"body":{"nativeSrc":"611:79:20","nodeType":"YulBlock","src":"611:79:20","statements":[{"body":{"nativeSrc":"668:16:20","nodeType":"YulBlock","src":"668:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"677:1:20","nodeType":"YulLiteral","src":"677:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"680:1:20","nodeType":"YulLiteral","src":"680:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"670:6:20","nodeType":"YulIdentifier","src":"670:6:20"},"nativeSrc":"670:12:20","nodeType":"YulFunctionCall","src":"670:12:20"},"nativeSrc":"670:12:20","nodeType":"YulExpressionStatement","src":"670:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"634:5:20","nodeType":"YulIdentifier","src":"634:5:20"},{"arguments":[{"name":"value","nativeSrc":"659:5:20","nodeType":"YulIdentifier","src":"659:5:20"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"641:17:20","nodeType":"YulIdentifier","src":"641:17:20"},"nativeSrc":"641:24:20","nodeType":"YulFunctionCall","src":"641:24:20"}],"functionName":{"name":"eq","nativeSrc":"631:2:20","nodeType":"YulIdentifier","src":"631:2:20"},"nativeSrc":"631:35:20","nodeType":"YulFunctionCall","src":"631:35:20"}],"functionName":{"name":"iszero","nativeSrc":"624:6:20","nodeType":"YulIdentifier","src":"624:6:20"},"nativeSrc":"624:43:20","nodeType":"YulFunctionCall","src":"624:43:20"},"nativeSrc":"621:63:20","nodeType":"YulIf","src":"621:63:20"}]},"name":"validator_revert_t_address","nativeSrc":"568:122:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"604:5:20","nodeType":"YulTypedName","src":"604:5:20","type":""}],"src":"568:122:20"},{"body":{"nativeSrc":"759:80:20","nodeType":"YulBlock","src":"759:80:20","statements":[{"nativeSrc":"769:22:20","nodeType":"YulAssignment","src":"769:22:20","value":{"arguments":[{"name":"offset","nativeSrc":"784:6:20","nodeType":"YulIdentifier","src":"784:6:20"}],"functionName":{"name":"mload","nativeSrc":"778:5:20","nodeType":"YulIdentifier","src":"778:5:20"},"nativeSrc":"778:13:20","nodeType":"YulFunctionCall","src":"778:13:20"},"variableNames":[{"name":"value","nativeSrc":"769:5:20","nodeType":"YulIdentifier","src":"769:5:20"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"827:5:20","nodeType":"YulIdentifier","src":"827:5:20"}],"functionName":{"name":"validator_revert_t_address","nativeSrc":"800:26:20","nodeType":"YulIdentifier","src":"800:26:20"},"nativeSrc":"800:33:20","nodeType":"YulFunctionCall","src":"800:33:20"},"nativeSrc":"800:33:20","nodeType":"YulExpressionStatement","src":"800:33:20"}]},"name":"abi_decode_t_address_fromMemory","nativeSrc":"696:143:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"737:6:20","nodeType":"YulTypedName","src":"737:6:20","type":""},{"name":"end","nativeSrc":"745:3:20","nodeType":"YulTypedName","src":"745:3:20","type":""}],"returnVariables":[{"name":"value","nativeSrc":"753:5:20","nodeType":"YulTypedName","src":"753:5:20","type":""}],"src":"696:143:20"},{"body":{"nativeSrc":"922:274:20","nodeType":"YulBlock","src":"922:274:20","statements":[{"body":{"nativeSrc":"968:83:20","nodeType":"YulBlock","src":"968:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"970:77:20","nodeType":"YulIdentifier","src":"970:77:20"},"nativeSrc":"970:79:20","nodeType":"YulFunctionCall","src":"970:79:20"},"nativeSrc":"970:79:20","nodeType":"YulExpressionStatement","src":"970:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"943:7:20","nodeType":"YulIdentifier","src":"943:7:20"},{"name":"headStart","nativeSrc":"952:9:20","nodeType":"YulIdentifier","src":"952:9:20"}],"functionName":{"name":"sub","nativeSrc":"939:3:20","nodeType":"YulIdentifier","src":"939:3:20"},"nativeSrc":"939:23:20","nodeType":"YulFunctionCall","src":"939:23:20"},{"kind":"number","nativeSrc":"964:2:20","nodeType":"YulLiteral","src":"964:2:20","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"935:3:20","nodeType":"YulIdentifier","src":"935:3:20"},"nativeSrc":"935:32:20","nodeType":"YulFunctionCall","src":"935:32:20"},"nativeSrc":"932:119:20","nodeType":"YulIf","src":"932:119:20"},{"nativeSrc":"1061:128:20","nodeType":"YulBlock","src":"1061:128:20","statements":[{"nativeSrc":"1076:15:20","nodeType":"YulVariableDeclaration","src":"1076:15:20","value":{"kind":"number","nativeSrc":"1090:1:20","nodeType":"YulLiteral","src":"1090:1:20","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"1080:6:20","nodeType":"YulTypedName","src":"1080:6:20","type":""}]},{"nativeSrc":"1105:74:20","nodeType":"YulAssignment","src":"1105:74:20","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1151:9:20","nodeType":"YulIdentifier","src":"1151:9:20"},{"name":"offset","nativeSrc":"1162:6:20","nodeType":"YulIdentifier","src":"1162:6:20"}],"functionName":{"name":"add","nativeSrc":"1147:3:20","nodeType":"YulIdentifier","src":"1147:3:20"},"nativeSrc":"1147:22:20","nodeType":"YulFunctionCall","src":"1147:22:20"},{"name":"dataEnd","nativeSrc":"1171:7:20","nodeType":"YulIdentifier","src":"1171:7:20"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nativeSrc":"1115:31:20","nodeType":"YulIdentifier","src":"1115:31:20"},"nativeSrc":"1115:64:20","nodeType":"YulFunctionCall","src":"1115:64:20"},"variableNames":[{"name":"value0","nativeSrc":"1105:6:20","nodeType":"YulIdentifier","src":"1105:6:20"}]}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nativeSrc":"845:351:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"892:9:20","nodeType":"YulTypedName","src":"892:9:20","type":""},{"name":"dataEnd","nativeSrc":"903:7:20","nodeType":"YulTypedName","src":"903:7:20","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"915:6:20","nodeType":"YulTypedName","src":"915:6:20","type":""}],"src":"845:351:20"},{"body":{"nativeSrc":"1298:73:20","nodeType":"YulBlock","src":"1298:73:20","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"1315:3:20","nodeType":"YulIdentifier","src":"1315:3:20"},{"name":"length","nativeSrc":"1320:6:20","nodeType":"YulIdentifier","src":"1320:6:20"}],"functionName":{"name":"mstore","nativeSrc":"1308:6:20","nodeType":"YulIdentifier","src":"1308:6:20"},"nativeSrc":"1308:19:20","nodeType":"YulFunctionCall","src":"1308:19:20"},"nativeSrc":"1308:19:20","nodeType":"YulExpressionStatement","src":"1308:19:20"},{"nativeSrc":"1336:29:20","nodeType":"YulAssignment","src":"1336:29:20","value":{"arguments":[{"name":"pos","nativeSrc":"1355:3:20","nodeType":"YulIdentifier","src":"1355:3:20"},{"kind":"number","nativeSrc":"1360:4:20","nodeType":"YulLiteral","src":"1360:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1351:3:20","nodeType":"YulIdentifier","src":"1351:3:20"},"nativeSrc":"1351:14:20","nodeType":"YulFunctionCall","src":"1351:14:20"},"variableNames":[{"name":"updated_pos","nativeSrc":"1336:11:20","nodeType":"YulIdentifier","src":"1336:11:20"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"1202:169:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"1270:3:20","nodeType":"YulTypedName","src":"1270:3:20","type":""},{"name":"length","nativeSrc":"1275:6:20","nodeType":"YulTypedName","src":"1275:6:20","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"1286:11:20","nodeType":"YulTypedName","src":"1286:11:20","type":""}],"src":"1202:169:20"},{"body":{"nativeSrc":"1483:68:20","nodeType":"YulBlock","src":"1483:68:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"1505:6:20","nodeType":"YulIdentifier","src":"1505:6:20"},{"kind":"number","nativeSrc":"1513:1:20","nodeType":"YulLiteral","src":"1513:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"1501:3:20","nodeType":"YulIdentifier","src":"1501:3:20"},"nativeSrc":"1501:14:20","nodeType":"YulFunctionCall","src":"1501:14:20"},{"hexValue":"43616e6e6f7420736574206f776e657220746f207a65726f","kind":"string","nativeSrc":"1517:26:20","nodeType":"YulLiteral","src":"1517:26:20","type":"","value":"Cannot set owner to zero"}],"functionName":{"name":"mstore","nativeSrc":"1494:6:20","nodeType":"YulIdentifier","src":"1494:6:20"},"nativeSrc":"1494:50:20","nodeType":"YulFunctionCall","src":"1494:50:20"},"nativeSrc":"1494:50:20","nodeType":"YulExpressionStatement","src":"1494:50:20"}]},"name":"store_literal_in_memory_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2","nativeSrc":"1377:174:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"1475:6:20","nodeType":"YulTypedName","src":"1475:6:20","type":""}],"src":"1377:174:20"},{"body":{"nativeSrc":"1703:220:20","nodeType":"YulBlock","src":"1703:220:20","statements":[{"nativeSrc":"1713:74:20","nodeType":"YulAssignment","src":"1713:74:20","value":{"arguments":[{"name":"pos","nativeSrc":"1779:3:20","nodeType":"YulIdentifier","src":"1779:3:20"},{"kind":"number","nativeSrc":"1784:2:20","nodeType":"YulLiteral","src":"1784:2:20","type":"","value":"24"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"1720:58:20","nodeType":"YulIdentifier","src":"1720:58:20"},"nativeSrc":"1720:67:20","nodeType":"YulFunctionCall","src":"1720:67:20"},"variableNames":[{"name":"pos","nativeSrc":"1713:3:20","nodeType":"YulIdentifier","src":"1713:3:20"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"1885:3:20","nodeType":"YulIdentifier","src":"1885:3:20"}],"functionName":{"name":"store_literal_in_memory_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2","nativeSrc":"1796:88:20","nodeType":"YulIdentifier","src":"1796:88:20"},"nativeSrc":"1796:93:20","nodeType":"YulFunctionCall","src":"1796:93:20"},"nativeSrc":"1796:93:20","nodeType":"YulExpressionStatement","src":"1796:93:20"},{"nativeSrc":"1898:19:20","nodeType":"YulAssignment","src":"1898:19:20","value":{"arguments":[{"name":"pos","nativeSrc":"1909:3:20","nodeType":"YulIdentifier","src":"1909:3:20"},{"kind":"number","nativeSrc":"1914:2:20","nodeType":"YulLiteral","src":"1914:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1905:3:20","nodeType":"YulIdentifier","src":"1905:3:20"},"nativeSrc":"1905:12:20","nodeType":"YulFunctionCall","src":"1905:12:20"},"variableNames":[{"name":"end","nativeSrc":"1898:3:20","nodeType":"YulIdentifier","src":"1898:3:20"}]}]},"name":"abi_encode_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2_to_t_string_memory_ptr_fromStack","nativeSrc":"1557:366:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"1691:3:20","nodeType":"YulTypedName","src":"1691:3:20","type":""}],"returnVariables":[{"name":"end","nativeSrc":"1699:3:20","nodeType":"YulTypedName","src":"1699:3:20","type":""}],"src":"1557:366:20"},{"body":{"nativeSrc":"2100:248:20","nodeType":"YulBlock","src":"2100:248:20","statements":[{"nativeSrc":"2110:26:20","nodeType":"YulAssignment","src":"2110:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"2122:9:20","nodeType":"YulIdentifier","src":"2122:9:20"},{"kind":"number","nativeSrc":"2133:2:20","nodeType":"YulLiteral","src":"2133:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2118:3:20","nodeType":"YulIdentifier","src":"2118:3:20"},"nativeSrc":"2118:18:20","nodeType":"YulFunctionCall","src":"2118:18:20"},"variableNames":[{"name":"tail","nativeSrc":"2110:4:20","nodeType":"YulIdentifier","src":"2110:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2157:9:20","nodeType":"YulIdentifier","src":"2157:9:20"},{"kind":"number","nativeSrc":"2168:1:20","nodeType":"YulLiteral","src":"2168:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"2153:3:20","nodeType":"YulIdentifier","src":"2153:3:20"},"nativeSrc":"2153:17:20","nodeType":"YulFunctionCall","src":"2153:17:20"},{"arguments":[{"name":"tail","nativeSrc":"2176:4:20","nodeType":"YulIdentifier","src":"2176:4:20"},{"name":"headStart","nativeSrc":"2182:9:20","nodeType":"YulIdentifier","src":"2182:9:20"}],"functionName":{"name":"sub","nativeSrc":"2172:3:20","nodeType":"YulIdentifier","src":"2172:3:20"},"nativeSrc":"2172:20:20","nodeType":"YulFunctionCall","src":"2172:20:20"}],"functionName":{"name":"mstore","nativeSrc":"2146:6:20","nodeType":"YulIdentifier","src":"2146:6:20"},"nativeSrc":"2146:47:20","nodeType":"YulFunctionCall","src":"2146:47:20"},"nativeSrc":"2146:47:20","nodeType":"YulExpressionStatement","src":"2146:47:20"},{"nativeSrc":"2202:139:20","nodeType":"YulAssignment","src":"2202:139:20","value":{"arguments":[{"name":"tail","nativeSrc":"2336:4:20","nodeType":"YulIdentifier","src":"2336:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2_to_t_string_memory_ptr_fromStack","nativeSrc":"2210:124:20","nodeType":"YulIdentifier","src":"2210:124:20"},"nativeSrc":"2210:131:20","nodeType":"YulFunctionCall","src":"2210:131:20"},"variableNames":[{"name":"tail","nativeSrc":"2202:4:20","nodeType":"YulIdentifier","src":"2202:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"1929:419:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2080:9:20","nodeType":"YulTypedName","src":"2080:9:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2095:4:20","nodeType":"YulTypedName","src":"2095:4:20","type":""}],"src":"1929:419:20"},{"body":{"nativeSrc":"2460:67:20","nodeType":"YulBlock","src":"2460:67:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"2482:6:20","nodeType":"YulIdentifier","src":"2482:6:20"},{"kind":"number","nativeSrc":"2490:1:20","nodeType":"YulLiteral","src":"2490:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"2478:3:20","nodeType":"YulIdentifier","src":"2478:3:20"},"nativeSrc":"2478:14:20","nodeType":"YulFunctionCall","src":"2478:14:20"},{"hexValue":"43616e6e6f74207472616e7366657220746f2073656c66","kind":"string","nativeSrc":"2494:25:20","nodeType":"YulLiteral","src":"2494:25:20","type":"","value":"Cannot transfer to self"}],"functionName":{"name":"mstore","nativeSrc":"2471:6:20","nodeType":"YulIdentifier","src":"2471:6:20"},"nativeSrc":"2471:49:20","nodeType":"YulFunctionCall","src":"2471:49:20"},"nativeSrc":"2471:49:20","nodeType":"YulExpressionStatement","src":"2471:49:20"}]},"name":"store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2","nativeSrc":"2354:173:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"2452:6:20","nodeType":"YulTypedName","src":"2452:6:20","type":""}],"src":"2354:173:20"},{"body":{"nativeSrc":"2679:220:20","nodeType":"YulBlock","src":"2679:220:20","statements":[{"nativeSrc":"2689:74:20","nodeType":"YulAssignment","src":"2689:74:20","value":{"arguments":[{"name":"pos","nativeSrc":"2755:3:20","nodeType":"YulIdentifier","src":"2755:3:20"},{"kind":"number","nativeSrc":"2760:2:20","nodeType":"YulLiteral","src":"2760:2:20","type":"","value":"23"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"2696:58:20","nodeType":"YulIdentifier","src":"2696:58:20"},"nativeSrc":"2696:67:20","nodeType":"YulFunctionCall","src":"2696:67:20"},"variableNames":[{"name":"pos","nativeSrc":"2689:3:20","nodeType":"YulIdentifier","src":"2689:3:20"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"2861:3:20","nodeType":"YulIdentifier","src":"2861:3:20"}],"functionName":{"name":"store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2","nativeSrc":"2772:88:20","nodeType":"YulIdentifier","src":"2772:88:20"},"nativeSrc":"2772:93:20","nodeType":"YulFunctionCall","src":"2772:93:20"},"nativeSrc":"2772:93:20","nodeType":"YulExpressionStatement","src":"2772:93:20"},{"nativeSrc":"2874:19:20","nodeType":"YulAssignment","src":"2874:19:20","value":{"arguments":[{"name":"pos","nativeSrc":"2885:3:20","nodeType":"YulIdentifier","src":"2885:3:20"},{"kind":"number","nativeSrc":"2890:2:20","nodeType":"YulLiteral","src":"2890:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2881:3:20","nodeType":"YulIdentifier","src":"2881:3:20"},"nativeSrc":"2881:12:20","nodeType":"YulFunctionCall","src":"2881:12:20"},"variableNames":[{"name":"end","nativeSrc":"2874:3:20","nodeType":"YulIdentifier","src":"2874:3:20"}]}]},"name":"abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack","nativeSrc":"2533:366:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"2667:3:20","nodeType":"YulTypedName","src":"2667:3:20","type":""}],"returnVariables":[{"name":"end","nativeSrc":"2675:3:20","nodeType":"YulTypedName","src":"2675:3:20","type":""}],"src":"2533:366:20"},{"body":{"nativeSrc":"3076:248:20","nodeType":"YulBlock","src":"3076:248:20","statements":[{"nativeSrc":"3086:26:20","nodeType":"YulAssignment","src":"3086:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"3098:9:20","nodeType":"YulIdentifier","src":"3098:9:20"},{"kind":"number","nativeSrc":"3109:2:20","nodeType":"YulLiteral","src":"3109:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3094:3:20","nodeType":"YulIdentifier","src":"3094:3:20"},"nativeSrc":"3094:18:20","nodeType":"YulFunctionCall","src":"3094:18:20"},"variableNames":[{"name":"tail","nativeSrc":"3086:4:20","nodeType":"YulIdentifier","src":"3086:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3133:9:20","nodeType":"YulIdentifier","src":"3133:9:20"},{"kind":"number","nativeSrc":"3144:1:20","nodeType":"YulLiteral","src":"3144:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"3129:3:20","nodeType":"YulIdentifier","src":"3129:3:20"},"nativeSrc":"3129:17:20","nodeType":"YulFunctionCall","src":"3129:17:20"},{"arguments":[{"name":"tail","nativeSrc":"3152:4:20","nodeType":"YulIdentifier","src":"3152:4:20"},{"name":"headStart","nativeSrc":"3158:9:20","nodeType":"YulIdentifier","src":"3158:9:20"}],"functionName":{"name":"sub","nativeSrc":"3148:3:20","nodeType":"YulIdentifier","src":"3148:3:20"},"nativeSrc":"3148:20:20","nodeType":"YulFunctionCall","src":"3148:20:20"}],"functionName":{"name":"mstore","nativeSrc":"3122:6:20","nodeType":"YulIdentifier","src":"3122:6:20"},"nativeSrc":"3122:47:20","nodeType":"YulFunctionCall","src":"3122:47:20"},"nativeSrc":"3122:47:20","nodeType":"YulExpressionStatement","src":"3122:47:20"},{"nativeSrc":"3178:139:20","nodeType":"YulAssignment","src":"3178:139:20","value":{"arguments":[{"name":"tail","nativeSrc":"3312:4:20","nodeType":"YulIdentifier","src":"3312:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack","nativeSrc":"3186:124:20","nodeType":"YulIdentifier","src":"3186:124:20"},"nativeSrc":"3186:131:20","nodeType":"YulFunctionCall","src":"3186:131:20"},"variableNames":[{"name":"tail","nativeSrc":"3178:4:20","nodeType":"YulIdentifier","src":"3178:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"2905:419:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3056:9:20","nodeType":"YulTypedName","src":"3056:9:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3071:4:20","nodeType":"YulTypedName","src":"3071:4:20","type":""}],"src":"2905:419:20"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cannot set owner to zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cannot transfer to self\")\n\n    }\n\n    function abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n","id":20,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"608060405234801561001057600080fd5b50604051610a40380380610a40833981810160405281019061003291906102be565b8060008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036100a3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161009a90610348565b60405180910390fd5b816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610127576101268161012f60201b60201c565b5b5050506103d4565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361019d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610194906103b4565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae127860405160405180910390a350565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061028b82610260565b9050919050565b61029b81610280565b81146102a657600080fd5b50565b6000815190506102b881610292565b92915050565b6000602082840312156102d4576102d361025b565b5b60006102e2848285016102a9565b91505092915050565b600082825260208201905092915050565b7f43616e6e6f7420736574206f776e657220746f207a65726f0000000000000000600082015250565b60006103326018836102eb565b915061033d826102fc565b602082019050919050565b6000602082019050818103600083015261036181610325565b9050919050565b7f43616e6e6f74207472616e7366657220746f2073656c66000000000000000000600082015250565b600061039e6017836102eb565b91506103a982610368565b602082019050919050565b600060208201905081810360008301526103cd81610391565b9050919050565b61065d806103e36000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806379ba5097146100465780638da5cb5b14610050578063f2fde38b1461006e575b600080fd5b61004e61008a565b005b61005861021f565b6040516100659190610459565b60405180910390f35b610088600480360381019061008391906104a5565b610248565b005b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461011a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101119061052f565b60405180910390fd5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a350565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61025061025c565b610259816102ec565b50565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102e19061059b565b60405180910390fd5b565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361035a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161035190610607565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae127860405160405180910390a350565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061044382610418565b9050919050565b61045381610438565b82525050565b600060208201905061046e600083018461044a565b92915050565b600080fd5b61048281610438565b811461048d57600080fd5b50565b60008135905061049f81610479565b92915050565b6000602082840312156104bb576104ba610474565b5b60006104c984828501610490565b91505092915050565b600082825260208201905092915050565b7f4d7573742062652070726f706f736564206f776e657200000000000000000000600082015250565b60006105196016836104d2565b9150610524826104e3565b602082019050919050565b600060208201905081810360008301526105488161050c565b9050919050565b7f4f6e6c792063616c6c61626c65206279206f776e657200000000000000000000600082015250565b60006105856016836104d2565b91506105908261054f565b602082019050919050565b600060208201905081810360008301526105b481610578565b9050919050565b7f43616e6e6f74207472616e7366657220746f2073656c66000000000000000000600082015250565b60006105f16017836104d2565b91506105fc826105bb565b602082019050919050565b60006020820190508181036000830152610620816105e4565b905091905056fea2646970667358221220da056a806e514be035e7c4549c8b12ab9ccaa0f49ee362eb4f43e9d3bba1bc7564736f6c63430008180033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xA40 CODESIZE SUB DUP1 PUSH2 0xA40 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x32 SWAP2 SWAP1 PUSH2 0x2BE JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9A SWAP1 PUSH2 0x348 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x127 JUMPI PUSH2 0x126 DUP2 PUSH2 0x12F PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST JUMPDEST POP POP POP PUSH2 0x3D4 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x19D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x194 SWAP1 PUSH2 0x3B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x28B DUP3 PUSH2 0x260 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x29B DUP2 PUSH2 0x280 JUMP JUMPDEST DUP2 EQ PUSH2 0x2A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2B8 DUP2 PUSH2 0x292 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2D4 JUMPI PUSH2 0x2D3 PUSH2 0x25B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2E2 DUP5 DUP3 DUP6 ADD PUSH2 0x2A9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x43616E6E6F7420736574206F776E657220746F207A65726F0000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x332 PUSH1 0x18 DUP4 PUSH2 0x2EB JUMP JUMPDEST SWAP2 POP PUSH2 0x33D DUP3 PUSH2 0x2FC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x361 DUP2 PUSH2 0x325 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616E6E6F74207472616E7366657220746F2073656C66000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x39E PUSH1 0x17 DUP4 PUSH2 0x2EB JUMP JUMPDEST SWAP2 POP PUSH2 0x3A9 DUP3 PUSH2 0x368 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3CD DUP2 PUSH2 0x391 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x65D DUP1 PUSH2 0x3E3 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x50 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x6E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x8A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x58 PUSH2 0x21F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x65 SWAP2 SWAP1 PUSH2 0x459 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x88 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x83 SWAP2 SWAP1 PUSH2 0x4A5 JUMP JUMPDEST PUSH2 0x248 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x11A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x111 SWAP1 PUSH2 0x52F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x250 PUSH2 0x25C JUMP JUMPDEST PUSH2 0x259 DUP2 PUSH2 0x2EC JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2EA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E1 SWAP1 PUSH2 0x59B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x35A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x351 SWAP1 PUSH2 0x607 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x443 DUP3 PUSH2 0x418 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x453 DUP2 PUSH2 0x438 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x46E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x44A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x482 DUP2 PUSH2 0x438 JUMP JUMPDEST DUP2 EQ PUSH2 0x48D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x49F DUP2 PUSH2 0x479 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4BB JUMPI PUSH2 0x4BA PUSH2 0x474 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4C9 DUP5 DUP3 DUP6 ADD PUSH2 0x490 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4D7573742062652070726F706F736564206F776E657200000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x519 PUSH1 0x16 DUP4 PUSH2 0x4D2 JUMP JUMPDEST SWAP2 POP PUSH2 0x524 DUP3 PUSH2 0x4E3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x548 DUP2 PUSH2 0x50C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F6E6C792063616C6C61626C65206279206F776E657200000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x585 PUSH1 0x16 DUP4 PUSH2 0x4D2 JUMP JUMPDEST SWAP2 POP PUSH2 0x590 DUP3 PUSH2 0x54F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5B4 DUP2 PUSH2 0x578 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616E6E6F74207472616E7366657220746F2073656C66000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5F1 PUSH1 0x17 DUP4 PUSH2 0x4D2 JUMP JUMPDEST SWAP2 POP PUSH2 0x5FC DUP3 PUSH2 0x5BB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x620 DUP2 PUSH2 0x5E4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDA SDIV PUSH11 0x806E514BE035E7C4549C8B SLT 0xAB SWAP13 0xCA LOG0 DELEGATECALL SWAP15 0xE3 PUSH3 0xEB4F43 0xE9 0xD3 0xBB LOG1 0xBC PUSH22 0x64736F6C634300081800330000000000000000000000 ","sourceMap":"212:141:9:-:0;;;270:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;327:8;345:1;557::10;537:22;;:8;:22;;;529:59;;;;;;;;;;;;:::i;:::-;;;;;;;;;605:8;595:7;;:18;;;;;;;;;;;;;;;;;;647:1;623:26;;:12;:26;;;619:79;;659:32;678:12;659:18;;;:32;;:::i;:::-;619:79;471:231;;270:81:9;212:141;;1482:188:10;1550:10;1544:16;;:2;:16;;;1536:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;1612:2;1595:14;;:19;;;;;;;;;;;;;;;;;;1662:2;1626:39;;1653:7;;;;;;;;;;1626:39;;;;;;;;;;;;1482:188;:::o;88:117:20:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;1202:169::-;1286:11;1320:6;1315:3;1308:19;1360:4;1355:3;1351:14;1336:29;;1202:169;;;;:::o;1377:174::-;1517:26;1513:1;1505:6;1501:14;1494:50;1377:174;:::o;1557:366::-;1699:3;1720:67;1784:2;1779:3;1720:67;:::i;:::-;1713:74;;1796:93;1885:3;1796:93;:::i;:::-;1914:2;1909:3;1905:12;1898:19;;1557:366;;;:::o;1929:419::-;2095:4;2133:2;2122:9;2118:18;2110:26;;2182:9;2176:4;2172:20;2168:1;2157:9;2153:17;2146:47;2210:131;2336:4;2210:131;:::i;:::-;2202:139;;1929:419;;;:::o;2354:173::-;2494:25;2490:1;2482:6;2478:14;2471:49;2354:173;:::o;2533:366::-;2675:3;2696:67;2760:2;2755:3;2696:67;:::i;:::-;2689:74;;2772:93;2861:3;2772:93;:::i;:::-;2890:2;2885:3;2881:12;2874:19;;2533:366;;;:::o;2905:419::-;3071:4;3109:2;3098:9;3094:18;3086:26;;3158:9;3152:4;3148:20;3144:1;3133:9;3129:17;3122:47;3186:131;3312:4;3186:131;:::i;:::-;3178:139;;2905:419;;;:::o;212:141:9:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_transferOwnership_567":{"entryPoint":748,"id":567,"parameterSlots":1,"returnSlots":0},"@_validateOwnership_580":{"entryPoint":604,"id":580,"parameterSlots":0,"returnSlots":0},"@acceptOwnership_533":{"entryPoint":138,"id":533,"parameterSlots":0,"returnSlots":0},"@owner_543":{"entryPoint":543,"id":543,"parameterSlots":0,"returnSlots":1},"@transferOwnership_497":{"entryPoint":584,"id":497,"parameterSlots":1,"returnSlots":0},"abi_decode_t_address":{"entryPoint":1168,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":1189,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":1098,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c_to_t_string_memory_ptr_fromStack":{"entryPoint":1292,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3_to_t_string_memory_ptr_fromStack":{"entryPoint":1400,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack":{"entryPoint":1508,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":1113,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1327,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1435,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1543,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":1234,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":1080,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":1048,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":1140,"id":null,"parameterSlots":0,"returnSlots":0},"store_literal_in_memory_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c":{"entryPoint":1251,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3":{"entryPoint":1359,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2":{"entryPoint":1467,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":1145,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:4626:20","nodeType":"YulBlock","src":"0:4626:20","statements":[{"body":{"nativeSrc":"52:81:20","nodeType":"YulBlock","src":"52:81:20","statements":[{"nativeSrc":"62:65:20","nodeType":"YulAssignment","src":"62:65:20","value":{"arguments":[{"name":"value","nativeSrc":"77:5:20","nodeType":"YulIdentifier","src":"77:5:20"},{"kind":"number","nativeSrc":"84:42:20","nodeType":"YulLiteral","src":"84:42:20","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"73:3:20","nodeType":"YulIdentifier","src":"73:3:20"},"nativeSrc":"73:54:20","nodeType":"YulFunctionCall","src":"73:54:20"},"variableNames":[{"name":"cleaned","nativeSrc":"62:7:20","nodeType":"YulIdentifier","src":"62:7:20"}]}]},"name":"cleanup_t_uint160","nativeSrc":"7:126:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"34:5:20","nodeType":"YulTypedName","src":"34:5:20","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"44:7:20","nodeType":"YulTypedName","src":"44:7:20","type":""}],"src":"7:126:20"},{"body":{"nativeSrc":"184:51:20","nodeType":"YulBlock","src":"184:51:20","statements":[{"nativeSrc":"194:35:20","nodeType":"YulAssignment","src":"194:35:20","value":{"arguments":[{"name":"value","nativeSrc":"223:5:20","nodeType":"YulIdentifier","src":"223:5:20"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"205:17:20","nodeType":"YulIdentifier","src":"205:17:20"},"nativeSrc":"205:24:20","nodeType":"YulFunctionCall","src":"205:24:20"},"variableNames":[{"name":"cleaned","nativeSrc":"194:7:20","nodeType":"YulIdentifier","src":"194:7:20"}]}]},"name":"cleanup_t_address","nativeSrc":"139:96:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"166:5:20","nodeType":"YulTypedName","src":"166:5:20","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"176:7:20","nodeType":"YulTypedName","src":"176:7:20","type":""}],"src":"139:96:20"},{"body":{"nativeSrc":"306:53:20","nodeType":"YulBlock","src":"306:53:20","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"323:3:20","nodeType":"YulIdentifier","src":"323:3:20"},{"arguments":[{"name":"value","nativeSrc":"346:5:20","nodeType":"YulIdentifier","src":"346:5:20"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"328:17:20","nodeType":"YulIdentifier","src":"328:17:20"},"nativeSrc":"328:24:20","nodeType":"YulFunctionCall","src":"328:24:20"}],"functionName":{"name":"mstore","nativeSrc":"316:6:20","nodeType":"YulIdentifier","src":"316:6:20"},"nativeSrc":"316:37:20","nodeType":"YulFunctionCall","src":"316:37:20"},"nativeSrc":"316:37:20","nodeType":"YulExpressionStatement","src":"316:37:20"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"241:118:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"294:5:20","nodeType":"YulTypedName","src":"294:5:20","type":""},{"name":"pos","nativeSrc":"301:3:20","nodeType":"YulTypedName","src":"301:3:20","type":""}],"src":"241:118:20"},{"body":{"nativeSrc":"463:124:20","nodeType":"YulBlock","src":"463:124:20","statements":[{"nativeSrc":"473:26:20","nodeType":"YulAssignment","src":"473:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"485:9:20","nodeType":"YulIdentifier","src":"485:9:20"},{"kind":"number","nativeSrc":"496:2:20","nodeType":"YulLiteral","src":"496:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"481:3:20","nodeType":"YulIdentifier","src":"481:3:20"},"nativeSrc":"481:18:20","nodeType":"YulFunctionCall","src":"481:18:20"},"variableNames":[{"name":"tail","nativeSrc":"473:4:20","nodeType":"YulIdentifier","src":"473:4:20"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"553:6:20","nodeType":"YulIdentifier","src":"553:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"566:9:20","nodeType":"YulIdentifier","src":"566:9:20"},{"kind":"number","nativeSrc":"577:1:20","nodeType":"YulLiteral","src":"577:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"562:3:20","nodeType":"YulIdentifier","src":"562:3:20"},"nativeSrc":"562:17:20","nodeType":"YulFunctionCall","src":"562:17:20"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"509:43:20","nodeType":"YulIdentifier","src":"509:43:20"},"nativeSrc":"509:71:20","nodeType":"YulFunctionCall","src":"509:71:20"},"nativeSrc":"509:71:20","nodeType":"YulExpressionStatement","src":"509:71:20"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"365:222:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"435:9:20","nodeType":"YulTypedName","src":"435:9:20","type":""},{"name":"value0","nativeSrc":"447:6:20","nodeType":"YulTypedName","src":"447:6:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"458:4:20","nodeType":"YulTypedName","src":"458:4:20","type":""}],"src":"365:222:20"},{"body":{"nativeSrc":"633:35:20","nodeType":"YulBlock","src":"633:35:20","statements":[{"nativeSrc":"643:19:20","nodeType":"YulAssignment","src":"643:19:20","value":{"arguments":[{"kind":"number","nativeSrc":"659:2:20","nodeType":"YulLiteral","src":"659:2:20","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"653:5:20","nodeType":"YulIdentifier","src":"653:5:20"},"nativeSrc":"653:9:20","nodeType":"YulFunctionCall","src":"653:9:20"},"variableNames":[{"name":"memPtr","nativeSrc":"643:6:20","nodeType":"YulIdentifier","src":"643:6:20"}]}]},"name":"allocate_unbounded","nativeSrc":"593:75:20","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"626:6:20","nodeType":"YulTypedName","src":"626:6:20","type":""}],"src":"593:75:20"},{"body":{"nativeSrc":"763:28:20","nodeType":"YulBlock","src":"763:28:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"780:1:20","nodeType":"YulLiteral","src":"780:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"783:1:20","nodeType":"YulLiteral","src":"783:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"773:6:20","nodeType":"YulIdentifier","src":"773:6:20"},"nativeSrc":"773:12:20","nodeType":"YulFunctionCall","src":"773:12:20"},"nativeSrc":"773:12:20","nodeType":"YulExpressionStatement","src":"773:12:20"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"674:117:20","nodeType":"YulFunctionDefinition","src":"674:117:20"},{"body":{"nativeSrc":"886:28:20","nodeType":"YulBlock","src":"886:28:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"903:1:20","nodeType":"YulLiteral","src":"903:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"906:1:20","nodeType":"YulLiteral","src":"906:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"896:6:20","nodeType":"YulIdentifier","src":"896:6:20"},"nativeSrc":"896:12:20","nodeType":"YulFunctionCall","src":"896:12:20"},"nativeSrc":"896:12:20","nodeType":"YulExpressionStatement","src":"896:12:20"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"797:117:20","nodeType":"YulFunctionDefinition","src":"797:117:20"},{"body":{"nativeSrc":"963:79:20","nodeType":"YulBlock","src":"963:79:20","statements":[{"body":{"nativeSrc":"1020:16:20","nodeType":"YulBlock","src":"1020:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1029:1:20","nodeType":"YulLiteral","src":"1029:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"1032:1:20","nodeType":"YulLiteral","src":"1032:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1022:6:20","nodeType":"YulIdentifier","src":"1022:6:20"},"nativeSrc":"1022:12:20","nodeType":"YulFunctionCall","src":"1022:12:20"},"nativeSrc":"1022:12:20","nodeType":"YulExpressionStatement","src":"1022:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"986:5:20","nodeType":"YulIdentifier","src":"986:5:20"},{"arguments":[{"name":"value","nativeSrc":"1011:5:20","nodeType":"YulIdentifier","src":"1011:5:20"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"993:17:20","nodeType":"YulIdentifier","src":"993:17:20"},"nativeSrc":"993:24:20","nodeType":"YulFunctionCall","src":"993:24:20"}],"functionName":{"name":"eq","nativeSrc":"983:2:20","nodeType":"YulIdentifier","src":"983:2:20"},"nativeSrc":"983:35:20","nodeType":"YulFunctionCall","src":"983:35:20"}],"functionName":{"name":"iszero","nativeSrc":"976:6:20","nodeType":"YulIdentifier","src":"976:6:20"},"nativeSrc":"976:43:20","nodeType":"YulFunctionCall","src":"976:43:20"},"nativeSrc":"973:63:20","nodeType":"YulIf","src":"973:63:20"}]},"name":"validator_revert_t_address","nativeSrc":"920:122:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"956:5:20","nodeType":"YulTypedName","src":"956:5:20","type":""}],"src":"920:122:20"},{"body":{"nativeSrc":"1100:87:20","nodeType":"YulBlock","src":"1100:87:20","statements":[{"nativeSrc":"1110:29:20","nodeType":"YulAssignment","src":"1110:29:20","value":{"arguments":[{"name":"offset","nativeSrc":"1132:6:20","nodeType":"YulIdentifier","src":"1132:6:20"}],"functionName":{"name":"calldataload","nativeSrc":"1119:12:20","nodeType":"YulIdentifier","src":"1119:12:20"},"nativeSrc":"1119:20:20","nodeType":"YulFunctionCall","src":"1119:20:20"},"variableNames":[{"name":"value","nativeSrc":"1110:5:20","nodeType":"YulIdentifier","src":"1110:5:20"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"1175:5:20","nodeType":"YulIdentifier","src":"1175:5:20"}],"functionName":{"name":"validator_revert_t_address","nativeSrc":"1148:26:20","nodeType":"YulIdentifier","src":"1148:26:20"},"nativeSrc":"1148:33:20","nodeType":"YulFunctionCall","src":"1148:33:20"},"nativeSrc":"1148:33:20","nodeType":"YulExpressionStatement","src":"1148:33:20"}]},"name":"abi_decode_t_address","nativeSrc":"1048:139:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"1078:6:20","nodeType":"YulTypedName","src":"1078:6:20","type":""},{"name":"end","nativeSrc":"1086:3:20","nodeType":"YulTypedName","src":"1086:3:20","type":""}],"returnVariables":[{"name":"value","nativeSrc":"1094:5:20","nodeType":"YulTypedName","src":"1094:5:20","type":""}],"src":"1048:139:20"},{"body":{"nativeSrc":"1259:263:20","nodeType":"YulBlock","src":"1259:263:20","statements":[{"body":{"nativeSrc":"1305:83:20","nodeType":"YulBlock","src":"1305:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"1307:77:20","nodeType":"YulIdentifier","src":"1307:77:20"},"nativeSrc":"1307:79:20","nodeType":"YulFunctionCall","src":"1307:79:20"},"nativeSrc":"1307:79:20","nodeType":"YulExpressionStatement","src":"1307:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"1280:7:20","nodeType":"YulIdentifier","src":"1280:7:20"},{"name":"headStart","nativeSrc":"1289:9:20","nodeType":"YulIdentifier","src":"1289:9:20"}],"functionName":{"name":"sub","nativeSrc":"1276:3:20","nodeType":"YulIdentifier","src":"1276:3:20"},"nativeSrc":"1276:23:20","nodeType":"YulFunctionCall","src":"1276:23:20"},{"kind":"number","nativeSrc":"1301:2:20","nodeType":"YulLiteral","src":"1301:2:20","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"1272:3:20","nodeType":"YulIdentifier","src":"1272:3:20"},"nativeSrc":"1272:32:20","nodeType":"YulFunctionCall","src":"1272:32:20"},"nativeSrc":"1269:119:20","nodeType":"YulIf","src":"1269:119:20"},{"nativeSrc":"1398:117:20","nodeType":"YulBlock","src":"1398:117:20","statements":[{"nativeSrc":"1413:15:20","nodeType":"YulVariableDeclaration","src":"1413:15:20","value":{"kind":"number","nativeSrc":"1427:1:20","nodeType":"YulLiteral","src":"1427:1:20","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"1417:6:20","nodeType":"YulTypedName","src":"1417:6:20","type":""}]},{"nativeSrc":"1442:63:20","nodeType":"YulAssignment","src":"1442:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1477:9:20","nodeType":"YulIdentifier","src":"1477:9:20"},{"name":"offset","nativeSrc":"1488:6:20","nodeType":"YulIdentifier","src":"1488:6:20"}],"functionName":{"name":"add","nativeSrc":"1473:3:20","nodeType":"YulIdentifier","src":"1473:3:20"},"nativeSrc":"1473:22:20","nodeType":"YulFunctionCall","src":"1473:22:20"},{"name":"dataEnd","nativeSrc":"1497:7:20","nodeType":"YulIdentifier","src":"1497:7:20"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"1452:20:20","nodeType":"YulIdentifier","src":"1452:20:20"},"nativeSrc":"1452:53:20","nodeType":"YulFunctionCall","src":"1452:53:20"},"variableNames":[{"name":"value0","nativeSrc":"1442:6:20","nodeType":"YulIdentifier","src":"1442:6:20"}]}]}]},"name":"abi_decode_tuple_t_address","nativeSrc":"1193:329:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1229:9:20","nodeType":"YulTypedName","src":"1229:9:20","type":""},{"name":"dataEnd","nativeSrc":"1240:7:20","nodeType":"YulTypedName","src":"1240:7:20","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"1252:6:20","nodeType":"YulTypedName","src":"1252:6:20","type":""}],"src":"1193:329:20"},{"body":{"nativeSrc":"1624:73:20","nodeType":"YulBlock","src":"1624:73:20","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"1641:3:20","nodeType":"YulIdentifier","src":"1641:3:20"},{"name":"length","nativeSrc":"1646:6:20","nodeType":"YulIdentifier","src":"1646:6:20"}],"functionName":{"name":"mstore","nativeSrc":"1634:6:20","nodeType":"YulIdentifier","src":"1634:6:20"},"nativeSrc":"1634:19:20","nodeType":"YulFunctionCall","src":"1634:19:20"},"nativeSrc":"1634:19:20","nodeType":"YulExpressionStatement","src":"1634:19:20"},{"nativeSrc":"1662:29:20","nodeType":"YulAssignment","src":"1662:29:20","value":{"arguments":[{"name":"pos","nativeSrc":"1681:3:20","nodeType":"YulIdentifier","src":"1681:3:20"},{"kind":"number","nativeSrc":"1686:4:20","nodeType":"YulLiteral","src":"1686:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1677:3:20","nodeType":"YulIdentifier","src":"1677:3:20"},"nativeSrc":"1677:14:20","nodeType":"YulFunctionCall","src":"1677:14:20"},"variableNames":[{"name":"updated_pos","nativeSrc":"1662:11:20","nodeType":"YulIdentifier","src":"1662:11:20"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"1528:169:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"1596:3:20","nodeType":"YulTypedName","src":"1596:3:20","type":""},{"name":"length","nativeSrc":"1601:6:20","nodeType":"YulTypedName","src":"1601:6:20","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"1612:11:20","nodeType":"YulTypedName","src":"1612:11:20","type":""}],"src":"1528:169:20"},{"body":{"nativeSrc":"1809:66:20","nodeType":"YulBlock","src":"1809:66:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"1831:6:20","nodeType":"YulIdentifier","src":"1831:6:20"},{"kind":"number","nativeSrc":"1839:1:20","nodeType":"YulLiteral","src":"1839:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"1827:3:20","nodeType":"YulIdentifier","src":"1827:3:20"},"nativeSrc":"1827:14:20","nodeType":"YulFunctionCall","src":"1827:14:20"},{"hexValue":"4d7573742062652070726f706f736564206f776e6572","kind":"string","nativeSrc":"1843:24:20","nodeType":"YulLiteral","src":"1843:24:20","type":"","value":"Must be proposed owner"}],"functionName":{"name":"mstore","nativeSrc":"1820:6:20","nodeType":"YulIdentifier","src":"1820:6:20"},"nativeSrc":"1820:48:20","nodeType":"YulFunctionCall","src":"1820:48:20"},"nativeSrc":"1820:48:20","nodeType":"YulExpressionStatement","src":"1820:48:20"}]},"name":"store_literal_in_memory_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c","nativeSrc":"1703:172:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"1801:6:20","nodeType":"YulTypedName","src":"1801:6:20","type":""}],"src":"1703:172:20"},{"body":{"nativeSrc":"2027:220:20","nodeType":"YulBlock","src":"2027:220:20","statements":[{"nativeSrc":"2037:74:20","nodeType":"YulAssignment","src":"2037:74:20","value":{"arguments":[{"name":"pos","nativeSrc":"2103:3:20","nodeType":"YulIdentifier","src":"2103:3:20"},{"kind":"number","nativeSrc":"2108:2:20","nodeType":"YulLiteral","src":"2108:2:20","type":"","value":"22"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"2044:58:20","nodeType":"YulIdentifier","src":"2044:58:20"},"nativeSrc":"2044:67:20","nodeType":"YulFunctionCall","src":"2044:67:20"},"variableNames":[{"name":"pos","nativeSrc":"2037:3:20","nodeType":"YulIdentifier","src":"2037:3:20"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"2209:3:20","nodeType":"YulIdentifier","src":"2209:3:20"}],"functionName":{"name":"store_literal_in_memory_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c","nativeSrc":"2120:88:20","nodeType":"YulIdentifier","src":"2120:88:20"},"nativeSrc":"2120:93:20","nodeType":"YulFunctionCall","src":"2120:93:20"},"nativeSrc":"2120:93:20","nodeType":"YulExpressionStatement","src":"2120:93:20"},{"nativeSrc":"2222:19:20","nodeType":"YulAssignment","src":"2222:19:20","value":{"arguments":[{"name":"pos","nativeSrc":"2233:3:20","nodeType":"YulIdentifier","src":"2233:3:20"},{"kind":"number","nativeSrc":"2238:2:20","nodeType":"YulLiteral","src":"2238:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2229:3:20","nodeType":"YulIdentifier","src":"2229:3:20"},"nativeSrc":"2229:12:20","nodeType":"YulFunctionCall","src":"2229:12:20"},"variableNames":[{"name":"end","nativeSrc":"2222:3:20","nodeType":"YulIdentifier","src":"2222:3:20"}]}]},"name":"abi_encode_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c_to_t_string_memory_ptr_fromStack","nativeSrc":"1881:366:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"2015:3:20","nodeType":"YulTypedName","src":"2015:3:20","type":""}],"returnVariables":[{"name":"end","nativeSrc":"2023:3:20","nodeType":"YulTypedName","src":"2023:3:20","type":""}],"src":"1881:366:20"},{"body":{"nativeSrc":"2424:248:20","nodeType":"YulBlock","src":"2424:248:20","statements":[{"nativeSrc":"2434:26:20","nodeType":"YulAssignment","src":"2434:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"2446:9:20","nodeType":"YulIdentifier","src":"2446:9:20"},{"kind":"number","nativeSrc":"2457:2:20","nodeType":"YulLiteral","src":"2457:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2442:3:20","nodeType":"YulIdentifier","src":"2442:3:20"},"nativeSrc":"2442:18:20","nodeType":"YulFunctionCall","src":"2442:18:20"},"variableNames":[{"name":"tail","nativeSrc":"2434:4:20","nodeType":"YulIdentifier","src":"2434:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2481:9:20","nodeType":"YulIdentifier","src":"2481:9:20"},{"kind":"number","nativeSrc":"2492:1:20","nodeType":"YulLiteral","src":"2492:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"2477:3:20","nodeType":"YulIdentifier","src":"2477:3:20"},"nativeSrc":"2477:17:20","nodeType":"YulFunctionCall","src":"2477:17:20"},{"arguments":[{"name":"tail","nativeSrc":"2500:4:20","nodeType":"YulIdentifier","src":"2500:4:20"},{"name":"headStart","nativeSrc":"2506:9:20","nodeType":"YulIdentifier","src":"2506:9:20"}],"functionName":{"name":"sub","nativeSrc":"2496:3:20","nodeType":"YulIdentifier","src":"2496:3:20"},"nativeSrc":"2496:20:20","nodeType":"YulFunctionCall","src":"2496:20:20"}],"functionName":{"name":"mstore","nativeSrc":"2470:6:20","nodeType":"YulIdentifier","src":"2470:6:20"},"nativeSrc":"2470:47:20","nodeType":"YulFunctionCall","src":"2470:47:20"},"nativeSrc":"2470:47:20","nodeType":"YulExpressionStatement","src":"2470:47:20"},{"nativeSrc":"2526:139:20","nodeType":"YulAssignment","src":"2526:139:20","value":{"arguments":[{"name":"tail","nativeSrc":"2660:4:20","nodeType":"YulIdentifier","src":"2660:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c_to_t_string_memory_ptr_fromStack","nativeSrc":"2534:124:20","nodeType":"YulIdentifier","src":"2534:124:20"},"nativeSrc":"2534:131:20","nodeType":"YulFunctionCall","src":"2534:131:20"},"variableNames":[{"name":"tail","nativeSrc":"2526:4:20","nodeType":"YulIdentifier","src":"2526:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"2253:419:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2404:9:20","nodeType":"YulTypedName","src":"2404:9:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2419:4:20","nodeType":"YulTypedName","src":"2419:4:20","type":""}],"src":"2253:419:20"},{"body":{"nativeSrc":"2784:66:20","nodeType":"YulBlock","src":"2784:66:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"2806:6:20","nodeType":"YulIdentifier","src":"2806:6:20"},{"kind":"number","nativeSrc":"2814:1:20","nodeType":"YulLiteral","src":"2814:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"2802:3:20","nodeType":"YulIdentifier","src":"2802:3:20"},"nativeSrc":"2802:14:20","nodeType":"YulFunctionCall","src":"2802:14:20"},{"hexValue":"4f6e6c792063616c6c61626c65206279206f776e6572","kind":"string","nativeSrc":"2818:24:20","nodeType":"YulLiteral","src":"2818:24:20","type":"","value":"Only callable by owner"}],"functionName":{"name":"mstore","nativeSrc":"2795:6:20","nodeType":"YulIdentifier","src":"2795:6:20"},"nativeSrc":"2795:48:20","nodeType":"YulFunctionCall","src":"2795:48:20"},"nativeSrc":"2795:48:20","nodeType":"YulExpressionStatement","src":"2795:48:20"}]},"name":"store_literal_in_memory_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3","nativeSrc":"2678:172:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"2776:6:20","nodeType":"YulTypedName","src":"2776:6:20","type":""}],"src":"2678:172:20"},{"body":{"nativeSrc":"3002:220:20","nodeType":"YulBlock","src":"3002:220:20","statements":[{"nativeSrc":"3012:74:20","nodeType":"YulAssignment","src":"3012:74:20","value":{"arguments":[{"name":"pos","nativeSrc":"3078:3:20","nodeType":"YulIdentifier","src":"3078:3:20"},{"kind":"number","nativeSrc":"3083:2:20","nodeType":"YulLiteral","src":"3083:2:20","type":"","value":"22"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"3019:58:20","nodeType":"YulIdentifier","src":"3019:58:20"},"nativeSrc":"3019:67:20","nodeType":"YulFunctionCall","src":"3019:67:20"},"variableNames":[{"name":"pos","nativeSrc":"3012:3:20","nodeType":"YulIdentifier","src":"3012:3:20"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"3184:3:20","nodeType":"YulIdentifier","src":"3184:3:20"}],"functionName":{"name":"store_literal_in_memory_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3","nativeSrc":"3095:88:20","nodeType":"YulIdentifier","src":"3095:88:20"},"nativeSrc":"3095:93:20","nodeType":"YulFunctionCall","src":"3095:93:20"},"nativeSrc":"3095:93:20","nodeType":"YulExpressionStatement","src":"3095:93:20"},{"nativeSrc":"3197:19:20","nodeType":"YulAssignment","src":"3197:19:20","value":{"arguments":[{"name":"pos","nativeSrc":"3208:3:20","nodeType":"YulIdentifier","src":"3208:3:20"},{"kind":"number","nativeSrc":"3213:2:20","nodeType":"YulLiteral","src":"3213:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3204:3:20","nodeType":"YulIdentifier","src":"3204:3:20"},"nativeSrc":"3204:12:20","nodeType":"YulFunctionCall","src":"3204:12:20"},"variableNames":[{"name":"end","nativeSrc":"3197:3:20","nodeType":"YulIdentifier","src":"3197:3:20"}]}]},"name":"abi_encode_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3_to_t_string_memory_ptr_fromStack","nativeSrc":"2856:366:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"2990:3:20","nodeType":"YulTypedName","src":"2990:3:20","type":""}],"returnVariables":[{"name":"end","nativeSrc":"2998:3:20","nodeType":"YulTypedName","src":"2998:3:20","type":""}],"src":"2856:366:20"},{"body":{"nativeSrc":"3399:248:20","nodeType":"YulBlock","src":"3399:248:20","statements":[{"nativeSrc":"3409:26:20","nodeType":"YulAssignment","src":"3409:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"3421:9:20","nodeType":"YulIdentifier","src":"3421:9:20"},{"kind":"number","nativeSrc":"3432:2:20","nodeType":"YulLiteral","src":"3432:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3417:3:20","nodeType":"YulIdentifier","src":"3417:3:20"},"nativeSrc":"3417:18:20","nodeType":"YulFunctionCall","src":"3417:18:20"},"variableNames":[{"name":"tail","nativeSrc":"3409:4:20","nodeType":"YulIdentifier","src":"3409:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3456:9:20","nodeType":"YulIdentifier","src":"3456:9:20"},{"kind":"number","nativeSrc":"3467:1:20","nodeType":"YulLiteral","src":"3467:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"3452:3:20","nodeType":"YulIdentifier","src":"3452:3:20"},"nativeSrc":"3452:17:20","nodeType":"YulFunctionCall","src":"3452:17:20"},{"arguments":[{"name":"tail","nativeSrc":"3475:4:20","nodeType":"YulIdentifier","src":"3475:4:20"},{"name":"headStart","nativeSrc":"3481:9:20","nodeType":"YulIdentifier","src":"3481:9:20"}],"functionName":{"name":"sub","nativeSrc":"3471:3:20","nodeType":"YulIdentifier","src":"3471:3:20"},"nativeSrc":"3471:20:20","nodeType":"YulFunctionCall","src":"3471:20:20"}],"functionName":{"name":"mstore","nativeSrc":"3445:6:20","nodeType":"YulIdentifier","src":"3445:6:20"},"nativeSrc":"3445:47:20","nodeType":"YulFunctionCall","src":"3445:47:20"},"nativeSrc":"3445:47:20","nodeType":"YulExpressionStatement","src":"3445:47:20"},{"nativeSrc":"3501:139:20","nodeType":"YulAssignment","src":"3501:139:20","value":{"arguments":[{"name":"tail","nativeSrc":"3635:4:20","nodeType":"YulIdentifier","src":"3635:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3_to_t_string_memory_ptr_fromStack","nativeSrc":"3509:124:20","nodeType":"YulIdentifier","src":"3509:124:20"},"nativeSrc":"3509:131:20","nodeType":"YulFunctionCall","src":"3509:131:20"},"variableNames":[{"name":"tail","nativeSrc":"3501:4:20","nodeType":"YulIdentifier","src":"3501:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"3228:419:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3379:9:20","nodeType":"YulTypedName","src":"3379:9:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3394:4:20","nodeType":"YulTypedName","src":"3394:4:20","type":""}],"src":"3228:419:20"},{"body":{"nativeSrc":"3759:67:20","nodeType":"YulBlock","src":"3759:67:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"3781:6:20","nodeType":"YulIdentifier","src":"3781:6:20"},{"kind":"number","nativeSrc":"3789:1:20","nodeType":"YulLiteral","src":"3789:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"3777:3:20","nodeType":"YulIdentifier","src":"3777:3:20"},"nativeSrc":"3777:14:20","nodeType":"YulFunctionCall","src":"3777:14:20"},{"hexValue":"43616e6e6f74207472616e7366657220746f2073656c66","kind":"string","nativeSrc":"3793:25:20","nodeType":"YulLiteral","src":"3793:25:20","type":"","value":"Cannot transfer to self"}],"functionName":{"name":"mstore","nativeSrc":"3770:6:20","nodeType":"YulIdentifier","src":"3770:6:20"},"nativeSrc":"3770:49:20","nodeType":"YulFunctionCall","src":"3770:49:20"},"nativeSrc":"3770:49:20","nodeType":"YulExpressionStatement","src":"3770:49:20"}]},"name":"store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2","nativeSrc":"3653:173:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"3751:6:20","nodeType":"YulTypedName","src":"3751:6:20","type":""}],"src":"3653:173:20"},{"body":{"nativeSrc":"3978:220:20","nodeType":"YulBlock","src":"3978:220:20","statements":[{"nativeSrc":"3988:74:20","nodeType":"YulAssignment","src":"3988:74:20","value":{"arguments":[{"name":"pos","nativeSrc":"4054:3:20","nodeType":"YulIdentifier","src":"4054:3:20"},{"kind":"number","nativeSrc":"4059:2:20","nodeType":"YulLiteral","src":"4059:2:20","type":"","value":"23"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"3995:58:20","nodeType":"YulIdentifier","src":"3995:58:20"},"nativeSrc":"3995:67:20","nodeType":"YulFunctionCall","src":"3995:67:20"},"variableNames":[{"name":"pos","nativeSrc":"3988:3:20","nodeType":"YulIdentifier","src":"3988:3:20"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"4160:3:20","nodeType":"YulIdentifier","src":"4160:3:20"}],"functionName":{"name":"store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2","nativeSrc":"4071:88:20","nodeType":"YulIdentifier","src":"4071:88:20"},"nativeSrc":"4071:93:20","nodeType":"YulFunctionCall","src":"4071:93:20"},"nativeSrc":"4071:93:20","nodeType":"YulExpressionStatement","src":"4071:93:20"},{"nativeSrc":"4173:19:20","nodeType":"YulAssignment","src":"4173:19:20","value":{"arguments":[{"name":"pos","nativeSrc":"4184:3:20","nodeType":"YulIdentifier","src":"4184:3:20"},{"kind":"number","nativeSrc":"4189:2:20","nodeType":"YulLiteral","src":"4189:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4180:3:20","nodeType":"YulIdentifier","src":"4180:3:20"},"nativeSrc":"4180:12:20","nodeType":"YulFunctionCall","src":"4180:12:20"},"variableNames":[{"name":"end","nativeSrc":"4173:3:20","nodeType":"YulIdentifier","src":"4173:3:20"}]}]},"name":"abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack","nativeSrc":"3832:366:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"3966:3:20","nodeType":"YulTypedName","src":"3966:3:20","type":""}],"returnVariables":[{"name":"end","nativeSrc":"3974:3:20","nodeType":"YulTypedName","src":"3974:3:20","type":""}],"src":"3832:366:20"},{"body":{"nativeSrc":"4375:248:20","nodeType":"YulBlock","src":"4375:248:20","statements":[{"nativeSrc":"4385:26:20","nodeType":"YulAssignment","src":"4385:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"4397:9:20","nodeType":"YulIdentifier","src":"4397:9:20"},{"kind":"number","nativeSrc":"4408:2:20","nodeType":"YulLiteral","src":"4408:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4393:3:20","nodeType":"YulIdentifier","src":"4393:3:20"},"nativeSrc":"4393:18:20","nodeType":"YulFunctionCall","src":"4393:18:20"},"variableNames":[{"name":"tail","nativeSrc":"4385:4:20","nodeType":"YulIdentifier","src":"4385:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4432:9:20","nodeType":"YulIdentifier","src":"4432:9:20"},{"kind":"number","nativeSrc":"4443:1:20","nodeType":"YulLiteral","src":"4443:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"4428:3:20","nodeType":"YulIdentifier","src":"4428:3:20"},"nativeSrc":"4428:17:20","nodeType":"YulFunctionCall","src":"4428:17:20"},{"arguments":[{"name":"tail","nativeSrc":"4451:4:20","nodeType":"YulIdentifier","src":"4451:4:20"},{"name":"headStart","nativeSrc":"4457:9:20","nodeType":"YulIdentifier","src":"4457:9:20"}],"functionName":{"name":"sub","nativeSrc":"4447:3:20","nodeType":"YulIdentifier","src":"4447:3:20"},"nativeSrc":"4447:20:20","nodeType":"YulFunctionCall","src":"4447:20:20"}],"functionName":{"name":"mstore","nativeSrc":"4421:6:20","nodeType":"YulIdentifier","src":"4421:6:20"},"nativeSrc":"4421:47:20","nodeType":"YulFunctionCall","src":"4421:47:20"},"nativeSrc":"4421:47:20","nodeType":"YulExpressionStatement","src":"4421:47:20"},{"nativeSrc":"4477:139:20","nodeType":"YulAssignment","src":"4477:139:20","value":{"arguments":[{"name":"tail","nativeSrc":"4611:4:20","nodeType":"YulIdentifier","src":"4611:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack","nativeSrc":"4485:124:20","nodeType":"YulIdentifier","src":"4485:124:20"},"nativeSrc":"4485:131:20","nodeType":"YulFunctionCall","src":"4485:131:20"},"variableNames":[{"name":"tail","nativeSrc":"4477:4:20","nodeType":"YulIdentifier","src":"4477:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"4204:419:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4355:9:20","nodeType":"YulTypedName","src":"4355:9:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4370:4:20","nodeType":"YulTypedName","src":"4370:4:20","type":""}],"src":"4204:419:20"}]},"contents":"{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Must be proposed owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3(memPtr) {\n\n        mstore(add(memPtr, 0), \"Only callable by owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cannot transfer to self\")\n\n    }\n\n    function abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n","id":20,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100415760003560e01c806379ba5097146100465780638da5cb5b14610050578063f2fde38b1461006e575b600080fd5b61004e61008a565b005b61005861021f565b6040516100659190610459565b60405180910390f35b610088600480360381019061008391906104a5565b610248565b005b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461011a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101119061052f565b60405180910390fd5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a350565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61025061025c565b610259816102ec565b50565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102e19061059b565b60405180910390fd5b565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361035a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161035190610607565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae127860405160405180910390a350565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061044382610418565b9050919050565b61045381610438565b82525050565b600060208201905061046e600083018461044a565b92915050565b600080fd5b61048281610438565b811461048d57600080fd5b50565b60008135905061049f81610479565b92915050565b6000602082840312156104bb576104ba610474565b5b60006104c984828501610490565b91505092915050565b600082825260208201905092915050565b7f4d7573742062652070726f706f736564206f776e657200000000000000000000600082015250565b60006105196016836104d2565b9150610524826104e3565b602082019050919050565b600060208201905081810360008301526105488161050c565b9050919050565b7f4f6e6c792063616c6c61626c65206279206f776e657200000000000000000000600082015250565b60006105856016836104d2565b91506105908261054f565b602082019050919050565b600060208201905081810360008301526105b481610578565b9050919050565b7f43616e6e6f74207472616e7366657220746f2073656c66000000000000000000600082015250565b60006105f16017836104d2565b91506105fc826105bb565b602082019050919050565b60006020820190508181036000830152610620816105e4565b905091905056fea2646970667358221220da056a806e514be035e7c4549c8b12ab9ccaa0f49ee362eb4f43e9d3bba1bc7564736f6c63430008180033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x50 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x6E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x8A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x58 PUSH2 0x21F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x65 SWAP2 SWAP1 PUSH2 0x459 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x88 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x83 SWAP2 SWAP1 PUSH2 0x4A5 JUMP JUMPDEST PUSH2 0x248 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x11A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x111 SWAP1 PUSH2 0x52F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x250 PUSH2 0x25C JUMP JUMPDEST PUSH2 0x259 DUP2 PUSH2 0x2EC JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2EA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E1 SWAP1 PUSH2 0x59B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x35A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x351 SWAP1 PUSH2 0x607 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x443 DUP3 PUSH2 0x418 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x453 DUP2 PUSH2 0x438 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x46E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x44A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x482 DUP2 PUSH2 0x438 JUMP JUMPDEST DUP2 EQ PUSH2 0x48D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x49F DUP2 PUSH2 0x479 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4BB JUMPI PUSH2 0x4BA PUSH2 0x474 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4C9 DUP5 DUP3 DUP6 ADD PUSH2 0x490 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4D7573742062652070726F706F736564206F776E657200000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x519 PUSH1 0x16 DUP4 PUSH2 0x4D2 JUMP JUMPDEST SWAP2 POP PUSH2 0x524 DUP3 PUSH2 0x4E3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x548 DUP2 PUSH2 0x50C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F6E6C792063616C6C61626C65206279206F776E657200000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x585 PUSH1 0x16 DUP4 PUSH2 0x4D2 JUMP JUMPDEST SWAP2 POP PUSH2 0x590 DUP3 PUSH2 0x54F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5B4 DUP2 PUSH2 0x578 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616E6E6F74207472616E7366657220746F2073656C66000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5F1 PUSH1 0x17 DUP4 PUSH2 0x4D2 JUMP JUMPDEST SWAP2 POP PUSH2 0x5FC DUP3 PUSH2 0x5BB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x620 DUP2 PUSH2 0x5E4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDA SDIV PUSH11 0x806E514BE035E7C4549C8B SLT 0xAB SWAP13 0xCA LOG0 DELEGATECALL SWAP15 0xE3 PUSH3 0xEB4F43 0xE9 0xD3 0xBB LOG1 0xBC PUSH22 0x64736F6C634300081800330000000000000000000000 ","sourceMap":"212:141:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1001:265:10;;;:::i;:::-;;1317:81;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;811:98;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1001:265;1074:14;;;;;;;;;;;1060:28;;:10;:28;;;1052:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1122:16;1141:7;;;;;;;;;;;1122:26;;1164:10;1154:7;;:20;;;;;;;;;;;;;;;;;;1205:1;1180:14;;:27;;;;;;;;;;;;;;;;;;1250:10;1219:42;;1240:8;1219:42;;;;;;;;;;;;1046:220;1001:265::o;1317:81::-;1364:7;1386;;;;;;;;;;;1379:14;;1317:81;:::o;811:98::-;1941:20;:18;:20::i;:::-;882:22:::1;901:2;882:18;:22::i;:::-;811:98:::0;:::o;1715:111::-;1787:7;;;;;;;;;;1773:21;;:10;:21;;;1765:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;1715:111::o;1482:188::-;1550:10;1544:16;;:2;:16;;;1536:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;1612:2;1595:14;;:19;;;;;;;;;;;;;;;;;;1662:2;1626:39;;1653:7;;;;;;;;;;1626:39;;;;;;;;;;;;1482:188;:::o;7:126:20:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;674:117::-;783:1;780;773:12;920:122;993:24;1011:5;993:24;:::i;:::-;986:5;983:35;973:63;;1032:1;1029;1022:12;973:63;920:122;:::o;1048:139::-;1094:5;1132:6;1119:20;1110:29;;1148:33;1175:5;1148:33;:::i;:::-;1048:139;;;;:::o;1193:329::-;1252:6;1301:2;1289:9;1280:7;1276:23;1272:32;1269:119;;;1307:79;;:::i;:::-;1269:119;1427:1;1452:53;1497:7;1488:6;1477:9;1473:22;1452:53;:::i;:::-;1442:63;;1398:117;1193:329;;;;:::o;1528:169::-;1612:11;1646:6;1641:3;1634:19;1686:4;1681:3;1677:14;1662:29;;1528:169;;;;:::o;1703:172::-;1843:24;1839:1;1831:6;1827:14;1820:48;1703:172;:::o;1881:366::-;2023:3;2044:67;2108:2;2103:3;2044:67;:::i;:::-;2037:74;;2120:93;2209:3;2120:93;:::i;:::-;2238:2;2233:3;2229:12;2222:19;;1881:366;;;:::o;2253:419::-;2419:4;2457:2;2446:9;2442:18;2434:26;;2506:9;2500:4;2496:20;2492:1;2481:9;2477:17;2470:47;2534:131;2660:4;2534:131;:::i;:::-;2526:139;;2253:419;;;:::o;2678:172::-;2818:24;2814:1;2806:6;2802:14;2795:48;2678:172;:::o;2856:366::-;2998:3;3019:67;3083:2;3078:3;3019:67;:::i;:::-;3012:74;;3095:93;3184:3;3095:93;:::i;:::-;3213:2;3208:3;3204:12;3197:19;;2856:366;;;:::o;3228:419::-;3394:4;3432:2;3421:9;3417:18;3409:26;;3481:9;3475:4;3471:20;3467:1;3456:9;3452:17;3445:47;3509:131;3635:4;3509:131;:::i;:::-;3501:139;;3228:419;;;:::o;3653:173::-;3793:25;3789:1;3781:6;3777:14;3770:49;3653:173;:::o;3832:366::-;3974:3;3995:67;4059:2;4054:3;3995:67;:::i;:::-;3988:74;;4071:93;4160:3;4071:93;:::i;:::-;4189:2;4184:3;4180:12;4173:19;;3832:366;;;:::o;4204:419::-;4370:4;4408:2;4397:9;4393:18;4385:26;;4457:9;4451:4;4447:20;4443:1;4432:9;4428:17;4421:47;4485:131;4611:4;4485:131;:::i;:::-;4477:139;;4204:419;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"325800","executionCost":"infinite","totalCost":"infinite"},"external":{"acceptOwnership()":"54518","owner()":"2522","transferOwnership(address)":"30676"}},"methodIdentifiers":{"acceptOwnership()":"79ba5097","owner()":"8da5cb5b","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"The ConfirmedOwner contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptOwnership()\":{\"notice\":\"Allows an ownership transfer to be completed by the recipient.\"},\"owner()\":{\"notice\":\"Get the current owner\"},\"transferOwnership(address)\":{\"notice\":\"Allows an owner to begin transferring ownership to a new address, pending.\"}},\"notice\":\"A contract with helpers for basic contract ownership.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol\":\"ConfirmedOwner\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"./ConfirmedOwnerWithProposal.sol\\\";\\n\\n/**\\n * @title The ConfirmedOwner contract\\n * @notice A contract with helpers for basic contract ownership.\\n */\\ncontract ConfirmedOwner is ConfirmedOwnerWithProposal {\\n  constructor(address newOwner) ConfirmedOwnerWithProposal(newOwner, address(0)) {}\\n}\\n\",\"keccak256\":\"0x99d0b0786fe368970009c703f2249bfbc56340ddf1a28b60d2915bb58c34cd72\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"../interfaces/IOwnable.sol\\\";\\n\\n/**\\n * @title The ConfirmedOwner contract\\n * @notice A contract with helpers for basic contract ownership.\\n */\\ncontract ConfirmedOwnerWithProposal is IOwnable {\\n  address private s_owner;\\n  address private s_pendingOwner;\\n\\n  event OwnershipTransferRequested(address indexed from, address indexed to);\\n  event OwnershipTransferred(address indexed from, address indexed to);\\n\\n  constructor(address newOwner, address pendingOwner) {\\n    require(newOwner != address(0), \\\"Cannot set owner to zero\\\");\\n\\n    s_owner = newOwner;\\n    if (pendingOwner != address(0)) {\\n      _transferOwnership(pendingOwner);\\n    }\\n  }\\n\\n  /**\\n   * @notice Allows an owner to begin transferring ownership to a new address,\\n   * pending.\\n   */\\n  function transferOwnership(address to) public override onlyOwner {\\n    _transferOwnership(to);\\n  }\\n\\n  /**\\n   * @notice Allows an ownership transfer to be completed by the recipient.\\n   */\\n  function acceptOwnership() external override {\\n    require(msg.sender == s_pendingOwner, \\\"Must be proposed owner\\\");\\n\\n    address oldOwner = s_owner;\\n    s_owner = msg.sender;\\n    s_pendingOwner = address(0);\\n\\n    emit OwnershipTransferred(oldOwner, msg.sender);\\n  }\\n\\n  /**\\n   * @notice Get the current owner\\n   */\\n  function owner() public view override returns (address) {\\n    return s_owner;\\n  }\\n\\n  /**\\n   * @notice validate, transfer ownership, and emit relevant events\\n   */\\n  function _transferOwnership(address to) private {\\n    require(to != msg.sender, \\\"Cannot transfer to self\\\");\\n\\n    s_pendingOwner = to;\\n\\n    emit OwnershipTransferRequested(s_owner, to);\\n  }\\n\\n  /**\\n   * @notice validate access\\n   */\\n  function _validateOwnership() internal view {\\n    require(msg.sender == s_owner, \\\"Only callable by owner\\\");\\n  }\\n\\n  /**\\n   * @notice Reverts if called by anyone other than the contract owner.\\n   */\\n  modifier onlyOwner() {\\n    _validateOwnership();\\n    _;\\n  }\\n}\\n\",\"keccak256\":\"0x215529a99534a40e6257ef2282a91ea4a95b66debc3997866406907622efb405\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/shared/interfaces/IOwnable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface IOwnable {\\n  function owner() external returns (address);\\n\\n  function transferOwnership(address recipient) external;\\n\\n  function acceptOwnership() external;\\n}\\n\",\"keccak256\":\"0x885de72b7b4e4f1bf8ba817a3f2bcc37fd9022d342c4ce76782151c30122d767\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":435,"contract":"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol:ConfirmedOwner","label":"s_owner","offset":0,"slot":"0","type":"t_address"},{"astId":437,"contract":"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol:ConfirmedOwner","label":"s_pendingOwner","offset":0,"slot":"1","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"}}},"userdoc":{"kind":"user","methods":{"acceptOwnership()":{"notice":"Allows an ownership transfer to be completed by the recipient."},"owner()":{"notice":"Get the current owner"},"transferOwnership(address)":{"notice":"Allows an owner to begin transferring ownership to a new address, pending."}},"notice":"A contract with helpers for basic contract ownership.","version":1}}},"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol":{"ConfirmedOwnerWithProposal":{"abi":[{"inputs":[{"internalType":"address","name":"newOwner","type":"address"},{"internalType":"address","name":"pendingOwner","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"}],"name":"OwnershipTransferRequested","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"acceptOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"title":"The ConfirmedOwner contract","version":1},"evm":{"bytecode":{"functionDebugData":{"@_483":{"entryPoint":null,"id":483,"parameterSlots":2,"returnSlots":0},"@_transferOwnership_567":{"entryPoint":300,"id":567,"parameterSlots":1,"returnSlots":0},"abi_decode_t_address_fromMemory":{"entryPoint":678,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address_fromMemory":{"entryPoint":699,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2_to_t_string_memory_ptr_fromStack":{"entryPoint":821,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack":{"entryPoint":929,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":856,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":964,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":763,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":637,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":605,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":600,"id":null,"parameterSlots":0,"returnSlots":0},"store_literal_in_memory_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2":{"entryPoint":780,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2":{"entryPoint":888,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":655,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:3483:20","nodeType":"YulBlock","src":"0:3483:20","statements":[{"body":{"nativeSrc":"47:35:20","nodeType":"YulBlock","src":"47:35:20","statements":[{"nativeSrc":"57:19:20","nodeType":"YulAssignment","src":"57:19:20","value":{"arguments":[{"kind":"number","nativeSrc":"73:2:20","nodeType":"YulLiteral","src":"73:2:20","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"67:5:20","nodeType":"YulIdentifier","src":"67:5:20"},"nativeSrc":"67:9:20","nodeType":"YulFunctionCall","src":"67:9:20"},"variableNames":[{"name":"memPtr","nativeSrc":"57:6:20","nodeType":"YulIdentifier","src":"57:6:20"}]}]},"name":"allocate_unbounded","nativeSrc":"7:75:20","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"40:6:20","nodeType":"YulTypedName","src":"40:6:20","type":""}],"src":"7:75:20"},{"body":{"nativeSrc":"177:28:20","nodeType":"YulBlock","src":"177:28:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"194:1:20","nodeType":"YulLiteral","src":"194:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"197:1:20","nodeType":"YulLiteral","src":"197:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"187:6:20","nodeType":"YulIdentifier","src":"187:6:20"},"nativeSrc":"187:12:20","nodeType":"YulFunctionCall","src":"187:12:20"},"nativeSrc":"187:12:20","nodeType":"YulExpressionStatement","src":"187:12:20"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"88:117:20","nodeType":"YulFunctionDefinition","src":"88:117:20"},{"body":{"nativeSrc":"300:28:20","nodeType":"YulBlock","src":"300:28:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"317:1:20","nodeType":"YulLiteral","src":"317:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"320:1:20","nodeType":"YulLiteral","src":"320:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"310:6:20","nodeType":"YulIdentifier","src":"310:6:20"},"nativeSrc":"310:12:20","nodeType":"YulFunctionCall","src":"310:12:20"},"nativeSrc":"310:12:20","nodeType":"YulExpressionStatement","src":"310:12:20"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"211:117:20","nodeType":"YulFunctionDefinition","src":"211:117:20"},{"body":{"nativeSrc":"379:81:20","nodeType":"YulBlock","src":"379:81:20","statements":[{"nativeSrc":"389:65:20","nodeType":"YulAssignment","src":"389:65:20","value":{"arguments":[{"name":"value","nativeSrc":"404:5:20","nodeType":"YulIdentifier","src":"404:5:20"},{"kind":"number","nativeSrc":"411:42:20","nodeType":"YulLiteral","src":"411:42:20","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"400:3:20","nodeType":"YulIdentifier","src":"400:3:20"},"nativeSrc":"400:54:20","nodeType":"YulFunctionCall","src":"400:54:20"},"variableNames":[{"name":"cleaned","nativeSrc":"389:7:20","nodeType":"YulIdentifier","src":"389:7:20"}]}]},"name":"cleanup_t_uint160","nativeSrc":"334:126:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"361:5:20","nodeType":"YulTypedName","src":"361:5:20","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"371:7:20","nodeType":"YulTypedName","src":"371:7:20","type":""}],"src":"334:126:20"},{"body":{"nativeSrc":"511:51:20","nodeType":"YulBlock","src":"511:51:20","statements":[{"nativeSrc":"521:35:20","nodeType":"YulAssignment","src":"521:35:20","value":{"arguments":[{"name":"value","nativeSrc":"550:5:20","nodeType":"YulIdentifier","src":"550:5:20"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"532:17:20","nodeType":"YulIdentifier","src":"532:17:20"},"nativeSrc":"532:24:20","nodeType":"YulFunctionCall","src":"532:24:20"},"variableNames":[{"name":"cleaned","nativeSrc":"521:7:20","nodeType":"YulIdentifier","src":"521:7:20"}]}]},"name":"cleanup_t_address","nativeSrc":"466:96:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"493:5:20","nodeType":"YulTypedName","src":"493:5:20","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"503:7:20","nodeType":"YulTypedName","src":"503:7:20","type":""}],"src":"466:96:20"},{"body":{"nativeSrc":"611:79:20","nodeType":"YulBlock","src":"611:79:20","statements":[{"body":{"nativeSrc":"668:16:20","nodeType":"YulBlock","src":"668:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"677:1:20","nodeType":"YulLiteral","src":"677:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"680:1:20","nodeType":"YulLiteral","src":"680:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"670:6:20","nodeType":"YulIdentifier","src":"670:6:20"},"nativeSrc":"670:12:20","nodeType":"YulFunctionCall","src":"670:12:20"},"nativeSrc":"670:12:20","nodeType":"YulExpressionStatement","src":"670:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"634:5:20","nodeType":"YulIdentifier","src":"634:5:20"},{"arguments":[{"name":"value","nativeSrc":"659:5:20","nodeType":"YulIdentifier","src":"659:5:20"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"641:17:20","nodeType":"YulIdentifier","src":"641:17:20"},"nativeSrc":"641:24:20","nodeType":"YulFunctionCall","src":"641:24:20"}],"functionName":{"name":"eq","nativeSrc":"631:2:20","nodeType":"YulIdentifier","src":"631:2:20"},"nativeSrc":"631:35:20","nodeType":"YulFunctionCall","src":"631:35:20"}],"functionName":{"name":"iszero","nativeSrc":"624:6:20","nodeType":"YulIdentifier","src":"624:6:20"},"nativeSrc":"624:43:20","nodeType":"YulFunctionCall","src":"624:43:20"},"nativeSrc":"621:63:20","nodeType":"YulIf","src":"621:63:20"}]},"name":"validator_revert_t_address","nativeSrc":"568:122:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"604:5:20","nodeType":"YulTypedName","src":"604:5:20","type":""}],"src":"568:122:20"},{"body":{"nativeSrc":"759:80:20","nodeType":"YulBlock","src":"759:80:20","statements":[{"nativeSrc":"769:22:20","nodeType":"YulAssignment","src":"769:22:20","value":{"arguments":[{"name":"offset","nativeSrc":"784:6:20","nodeType":"YulIdentifier","src":"784:6:20"}],"functionName":{"name":"mload","nativeSrc":"778:5:20","nodeType":"YulIdentifier","src":"778:5:20"},"nativeSrc":"778:13:20","nodeType":"YulFunctionCall","src":"778:13:20"},"variableNames":[{"name":"value","nativeSrc":"769:5:20","nodeType":"YulIdentifier","src":"769:5:20"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"827:5:20","nodeType":"YulIdentifier","src":"827:5:20"}],"functionName":{"name":"validator_revert_t_address","nativeSrc":"800:26:20","nodeType":"YulIdentifier","src":"800:26:20"},"nativeSrc":"800:33:20","nodeType":"YulFunctionCall","src":"800:33:20"},"nativeSrc":"800:33:20","nodeType":"YulExpressionStatement","src":"800:33:20"}]},"name":"abi_decode_t_address_fromMemory","nativeSrc":"696:143:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"737:6:20","nodeType":"YulTypedName","src":"737:6:20","type":""},{"name":"end","nativeSrc":"745:3:20","nodeType":"YulTypedName","src":"745:3:20","type":""}],"returnVariables":[{"name":"value","nativeSrc":"753:5:20","nodeType":"YulTypedName","src":"753:5:20","type":""}],"src":"696:143:20"},{"body":{"nativeSrc":"939:413:20","nodeType":"YulBlock","src":"939:413:20","statements":[{"body":{"nativeSrc":"985:83:20","nodeType":"YulBlock","src":"985:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"987:77:20","nodeType":"YulIdentifier","src":"987:77:20"},"nativeSrc":"987:79:20","nodeType":"YulFunctionCall","src":"987:79:20"},"nativeSrc":"987:79:20","nodeType":"YulExpressionStatement","src":"987:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"960:7:20","nodeType":"YulIdentifier","src":"960:7:20"},{"name":"headStart","nativeSrc":"969:9:20","nodeType":"YulIdentifier","src":"969:9:20"}],"functionName":{"name":"sub","nativeSrc":"956:3:20","nodeType":"YulIdentifier","src":"956:3:20"},"nativeSrc":"956:23:20","nodeType":"YulFunctionCall","src":"956:23:20"},{"kind":"number","nativeSrc":"981:2:20","nodeType":"YulLiteral","src":"981:2:20","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"952:3:20","nodeType":"YulIdentifier","src":"952:3:20"},"nativeSrc":"952:32:20","nodeType":"YulFunctionCall","src":"952:32:20"},"nativeSrc":"949:119:20","nodeType":"YulIf","src":"949:119:20"},{"nativeSrc":"1078:128:20","nodeType":"YulBlock","src":"1078:128:20","statements":[{"nativeSrc":"1093:15:20","nodeType":"YulVariableDeclaration","src":"1093:15:20","value":{"kind":"number","nativeSrc":"1107:1:20","nodeType":"YulLiteral","src":"1107:1:20","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"1097:6:20","nodeType":"YulTypedName","src":"1097:6:20","type":""}]},{"nativeSrc":"1122:74:20","nodeType":"YulAssignment","src":"1122:74:20","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1168:9:20","nodeType":"YulIdentifier","src":"1168:9:20"},{"name":"offset","nativeSrc":"1179:6:20","nodeType":"YulIdentifier","src":"1179:6:20"}],"functionName":{"name":"add","nativeSrc":"1164:3:20","nodeType":"YulIdentifier","src":"1164:3:20"},"nativeSrc":"1164:22:20","nodeType":"YulFunctionCall","src":"1164:22:20"},{"name":"dataEnd","nativeSrc":"1188:7:20","nodeType":"YulIdentifier","src":"1188:7:20"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nativeSrc":"1132:31:20","nodeType":"YulIdentifier","src":"1132:31:20"},"nativeSrc":"1132:64:20","nodeType":"YulFunctionCall","src":"1132:64:20"},"variableNames":[{"name":"value0","nativeSrc":"1122:6:20","nodeType":"YulIdentifier","src":"1122:6:20"}]}]},{"nativeSrc":"1216:129:20","nodeType":"YulBlock","src":"1216:129:20","statements":[{"nativeSrc":"1231:16:20","nodeType":"YulVariableDeclaration","src":"1231:16:20","value":{"kind":"number","nativeSrc":"1245:2:20","nodeType":"YulLiteral","src":"1245:2:20","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"1235:6:20","nodeType":"YulTypedName","src":"1235:6:20","type":""}]},{"nativeSrc":"1261:74:20","nodeType":"YulAssignment","src":"1261:74:20","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1307:9:20","nodeType":"YulIdentifier","src":"1307:9:20"},{"name":"offset","nativeSrc":"1318:6:20","nodeType":"YulIdentifier","src":"1318:6:20"}],"functionName":{"name":"add","nativeSrc":"1303:3:20","nodeType":"YulIdentifier","src":"1303:3:20"},"nativeSrc":"1303:22:20","nodeType":"YulFunctionCall","src":"1303:22:20"},{"name":"dataEnd","nativeSrc":"1327:7:20","nodeType":"YulIdentifier","src":"1327:7:20"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nativeSrc":"1271:31:20","nodeType":"YulIdentifier","src":"1271:31:20"},"nativeSrc":"1271:64:20","nodeType":"YulFunctionCall","src":"1271:64:20"},"variableNames":[{"name":"value1","nativeSrc":"1261:6:20","nodeType":"YulIdentifier","src":"1261:6:20"}]}]}]},"name":"abi_decode_tuple_t_addresst_address_fromMemory","nativeSrc":"845:507:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"901:9:20","nodeType":"YulTypedName","src":"901:9:20","type":""},{"name":"dataEnd","nativeSrc":"912:7:20","nodeType":"YulTypedName","src":"912:7:20","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"924:6:20","nodeType":"YulTypedName","src":"924:6:20","type":""},{"name":"value1","nativeSrc":"932:6:20","nodeType":"YulTypedName","src":"932:6:20","type":""}],"src":"845:507:20"},{"body":{"nativeSrc":"1454:73:20","nodeType":"YulBlock","src":"1454:73:20","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"1471:3:20","nodeType":"YulIdentifier","src":"1471:3:20"},{"name":"length","nativeSrc":"1476:6:20","nodeType":"YulIdentifier","src":"1476:6:20"}],"functionName":{"name":"mstore","nativeSrc":"1464:6:20","nodeType":"YulIdentifier","src":"1464:6:20"},"nativeSrc":"1464:19:20","nodeType":"YulFunctionCall","src":"1464:19:20"},"nativeSrc":"1464:19:20","nodeType":"YulExpressionStatement","src":"1464:19:20"},{"nativeSrc":"1492:29:20","nodeType":"YulAssignment","src":"1492:29:20","value":{"arguments":[{"name":"pos","nativeSrc":"1511:3:20","nodeType":"YulIdentifier","src":"1511:3:20"},{"kind":"number","nativeSrc":"1516:4:20","nodeType":"YulLiteral","src":"1516:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1507:3:20","nodeType":"YulIdentifier","src":"1507:3:20"},"nativeSrc":"1507:14:20","nodeType":"YulFunctionCall","src":"1507:14:20"},"variableNames":[{"name":"updated_pos","nativeSrc":"1492:11:20","nodeType":"YulIdentifier","src":"1492:11:20"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"1358:169:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"1426:3:20","nodeType":"YulTypedName","src":"1426:3:20","type":""},{"name":"length","nativeSrc":"1431:6:20","nodeType":"YulTypedName","src":"1431:6:20","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"1442:11:20","nodeType":"YulTypedName","src":"1442:11:20","type":""}],"src":"1358:169:20"},{"body":{"nativeSrc":"1639:68:20","nodeType":"YulBlock","src":"1639:68:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"1661:6:20","nodeType":"YulIdentifier","src":"1661:6:20"},{"kind":"number","nativeSrc":"1669:1:20","nodeType":"YulLiteral","src":"1669:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"1657:3:20","nodeType":"YulIdentifier","src":"1657:3:20"},"nativeSrc":"1657:14:20","nodeType":"YulFunctionCall","src":"1657:14:20"},{"hexValue":"43616e6e6f7420736574206f776e657220746f207a65726f","kind":"string","nativeSrc":"1673:26:20","nodeType":"YulLiteral","src":"1673:26:20","type":"","value":"Cannot set owner to zero"}],"functionName":{"name":"mstore","nativeSrc":"1650:6:20","nodeType":"YulIdentifier","src":"1650:6:20"},"nativeSrc":"1650:50:20","nodeType":"YulFunctionCall","src":"1650:50:20"},"nativeSrc":"1650:50:20","nodeType":"YulExpressionStatement","src":"1650:50:20"}]},"name":"store_literal_in_memory_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2","nativeSrc":"1533:174:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"1631:6:20","nodeType":"YulTypedName","src":"1631:6:20","type":""}],"src":"1533:174:20"},{"body":{"nativeSrc":"1859:220:20","nodeType":"YulBlock","src":"1859:220:20","statements":[{"nativeSrc":"1869:74:20","nodeType":"YulAssignment","src":"1869:74:20","value":{"arguments":[{"name":"pos","nativeSrc":"1935:3:20","nodeType":"YulIdentifier","src":"1935:3:20"},{"kind":"number","nativeSrc":"1940:2:20","nodeType":"YulLiteral","src":"1940:2:20","type":"","value":"24"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"1876:58:20","nodeType":"YulIdentifier","src":"1876:58:20"},"nativeSrc":"1876:67:20","nodeType":"YulFunctionCall","src":"1876:67:20"},"variableNames":[{"name":"pos","nativeSrc":"1869:3:20","nodeType":"YulIdentifier","src":"1869:3:20"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"2041:3:20","nodeType":"YulIdentifier","src":"2041:3:20"}],"functionName":{"name":"store_literal_in_memory_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2","nativeSrc":"1952:88:20","nodeType":"YulIdentifier","src":"1952:88:20"},"nativeSrc":"1952:93:20","nodeType":"YulFunctionCall","src":"1952:93:20"},"nativeSrc":"1952:93:20","nodeType":"YulExpressionStatement","src":"1952:93:20"},{"nativeSrc":"2054:19:20","nodeType":"YulAssignment","src":"2054:19:20","value":{"arguments":[{"name":"pos","nativeSrc":"2065:3:20","nodeType":"YulIdentifier","src":"2065:3:20"},{"kind":"number","nativeSrc":"2070:2:20","nodeType":"YulLiteral","src":"2070:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2061:3:20","nodeType":"YulIdentifier","src":"2061:3:20"},"nativeSrc":"2061:12:20","nodeType":"YulFunctionCall","src":"2061:12:20"},"variableNames":[{"name":"end","nativeSrc":"2054:3:20","nodeType":"YulIdentifier","src":"2054:3:20"}]}]},"name":"abi_encode_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2_to_t_string_memory_ptr_fromStack","nativeSrc":"1713:366:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"1847:3:20","nodeType":"YulTypedName","src":"1847:3:20","type":""}],"returnVariables":[{"name":"end","nativeSrc":"1855:3:20","nodeType":"YulTypedName","src":"1855:3:20","type":""}],"src":"1713:366:20"},{"body":{"nativeSrc":"2256:248:20","nodeType":"YulBlock","src":"2256:248:20","statements":[{"nativeSrc":"2266:26:20","nodeType":"YulAssignment","src":"2266:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"2278:9:20","nodeType":"YulIdentifier","src":"2278:9:20"},{"kind":"number","nativeSrc":"2289:2:20","nodeType":"YulLiteral","src":"2289:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2274:3:20","nodeType":"YulIdentifier","src":"2274:3:20"},"nativeSrc":"2274:18:20","nodeType":"YulFunctionCall","src":"2274:18:20"},"variableNames":[{"name":"tail","nativeSrc":"2266:4:20","nodeType":"YulIdentifier","src":"2266:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2313:9:20","nodeType":"YulIdentifier","src":"2313:9:20"},{"kind":"number","nativeSrc":"2324:1:20","nodeType":"YulLiteral","src":"2324:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"2309:3:20","nodeType":"YulIdentifier","src":"2309:3:20"},"nativeSrc":"2309:17:20","nodeType":"YulFunctionCall","src":"2309:17:20"},{"arguments":[{"name":"tail","nativeSrc":"2332:4:20","nodeType":"YulIdentifier","src":"2332:4:20"},{"name":"headStart","nativeSrc":"2338:9:20","nodeType":"YulIdentifier","src":"2338:9:20"}],"functionName":{"name":"sub","nativeSrc":"2328:3:20","nodeType":"YulIdentifier","src":"2328:3:20"},"nativeSrc":"2328:20:20","nodeType":"YulFunctionCall","src":"2328:20:20"}],"functionName":{"name":"mstore","nativeSrc":"2302:6:20","nodeType":"YulIdentifier","src":"2302:6:20"},"nativeSrc":"2302:47:20","nodeType":"YulFunctionCall","src":"2302:47:20"},"nativeSrc":"2302:47:20","nodeType":"YulExpressionStatement","src":"2302:47:20"},{"nativeSrc":"2358:139:20","nodeType":"YulAssignment","src":"2358:139:20","value":{"arguments":[{"name":"tail","nativeSrc":"2492:4:20","nodeType":"YulIdentifier","src":"2492:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2_to_t_string_memory_ptr_fromStack","nativeSrc":"2366:124:20","nodeType":"YulIdentifier","src":"2366:124:20"},"nativeSrc":"2366:131:20","nodeType":"YulFunctionCall","src":"2366:131:20"},"variableNames":[{"name":"tail","nativeSrc":"2358:4:20","nodeType":"YulIdentifier","src":"2358:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"2085:419:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2236:9:20","nodeType":"YulTypedName","src":"2236:9:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2251:4:20","nodeType":"YulTypedName","src":"2251:4:20","type":""}],"src":"2085:419:20"},{"body":{"nativeSrc":"2616:67:20","nodeType":"YulBlock","src":"2616:67:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"2638:6:20","nodeType":"YulIdentifier","src":"2638:6:20"},{"kind":"number","nativeSrc":"2646:1:20","nodeType":"YulLiteral","src":"2646:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"2634:3:20","nodeType":"YulIdentifier","src":"2634:3:20"},"nativeSrc":"2634:14:20","nodeType":"YulFunctionCall","src":"2634:14:20"},{"hexValue":"43616e6e6f74207472616e7366657220746f2073656c66","kind":"string","nativeSrc":"2650:25:20","nodeType":"YulLiteral","src":"2650:25:20","type":"","value":"Cannot transfer to self"}],"functionName":{"name":"mstore","nativeSrc":"2627:6:20","nodeType":"YulIdentifier","src":"2627:6:20"},"nativeSrc":"2627:49:20","nodeType":"YulFunctionCall","src":"2627:49:20"},"nativeSrc":"2627:49:20","nodeType":"YulExpressionStatement","src":"2627:49:20"}]},"name":"store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2","nativeSrc":"2510:173:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"2608:6:20","nodeType":"YulTypedName","src":"2608:6:20","type":""}],"src":"2510:173:20"},{"body":{"nativeSrc":"2835:220:20","nodeType":"YulBlock","src":"2835:220:20","statements":[{"nativeSrc":"2845:74:20","nodeType":"YulAssignment","src":"2845:74:20","value":{"arguments":[{"name":"pos","nativeSrc":"2911:3:20","nodeType":"YulIdentifier","src":"2911:3:20"},{"kind":"number","nativeSrc":"2916:2:20","nodeType":"YulLiteral","src":"2916:2:20","type":"","value":"23"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"2852:58:20","nodeType":"YulIdentifier","src":"2852:58:20"},"nativeSrc":"2852:67:20","nodeType":"YulFunctionCall","src":"2852:67:20"},"variableNames":[{"name":"pos","nativeSrc":"2845:3:20","nodeType":"YulIdentifier","src":"2845:3:20"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"3017:3:20","nodeType":"YulIdentifier","src":"3017:3:20"}],"functionName":{"name":"store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2","nativeSrc":"2928:88:20","nodeType":"YulIdentifier","src":"2928:88:20"},"nativeSrc":"2928:93:20","nodeType":"YulFunctionCall","src":"2928:93:20"},"nativeSrc":"2928:93:20","nodeType":"YulExpressionStatement","src":"2928:93:20"},{"nativeSrc":"3030:19:20","nodeType":"YulAssignment","src":"3030:19:20","value":{"arguments":[{"name":"pos","nativeSrc":"3041:3:20","nodeType":"YulIdentifier","src":"3041:3:20"},{"kind":"number","nativeSrc":"3046:2:20","nodeType":"YulLiteral","src":"3046:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3037:3:20","nodeType":"YulIdentifier","src":"3037:3:20"},"nativeSrc":"3037:12:20","nodeType":"YulFunctionCall","src":"3037:12:20"},"variableNames":[{"name":"end","nativeSrc":"3030:3:20","nodeType":"YulIdentifier","src":"3030:3:20"}]}]},"name":"abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack","nativeSrc":"2689:366:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"2823:3:20","nodeType":"YulTypedName","src":"2823:3:20","type":""}],"returnVariables":[{"name":"end","nativeSrc":"2831:3:20","nodeType":"YulTypedName","src":"2831:3:20","type":""}],"src":"2689:366:20"},{"body":{"nativeSrc":"3232:248:20","nodeType":"YulBlock","src":"3232:248:20","statements":[{"nativeSrc":"3242:26:20","nodeType":"YulAssignment","src":"3242:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"3254:9:20","nodeType":"YulIdentifier","src":"3254:9:20"},{"kind":"number","nativeSrc":"3265:2:20","nodeType":"YulLiteral","src":"3265:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3250:3:20","nodeType":"YulIdentifier","src":"3250:3:20"},"nativeSrc":"3250:18:20","nodeType":"YulFunctionCall","src":"3250:18:20"},"variableNames":[{"name":"tail","nativeSrc":"3242:4:20","nodeType":"YulIdentifier","src":"3242:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3289:9:20","nodeType":"YulIdentifier","src":"3289:9:20"},{"kind":"number","nativeSrc":"3300:1:20","nodeType":"YulLiteral","src":"3300:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"3285:3:20","nodeType":"YulIdentifier","src":"3285:3:20"},"nativeSrc":"3285:17:20","nodeType":"YulFunctionCall","src":"3285:17:20"},{"arguments":[{"name":"tail","nativeSrc":"3308:4:20","nodeType":"YulIdentifier","src":"3308:4:20"},{"name":"headStart","nativeSrc":"3314:9:20","nodeType":"YulIdentifier","src":"3314:9:20"}],"functionName":{"name":"sub","nativeSrc":"3304:3:20","nodeType":"YulIdentifier","src":"3304:3:20"},"nativeSrc":"3304:20:20","nodeType":"YulFunctionCall","src":"3304:20:20"}],"functionName":{"name":"mstore","nativeSrc":"3278:6:20","nodeType":"YulIdentifier","src":"3278:6:20"},"nativeSrc":"3278:47:20","nodeType":"YulFunctionCall","src":"3278:47:20"},"nativeSrc":"3278:47:20","nodeType":"YulExpressionStatement","src":"3278:47:20"},{"nativeSrc":"3334:139:20","nodeType":"YulAssignment","src":"3334:139:20","value":{"arguments":[{"name":"tail","nativeSrc":"3468:4:20","nodeType":"YulIdentifier","src":"3468:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack","nativeSrc":"3342:124:20","nodeType":"YulIdentifier","src":"3342:124:20"},"nativeSrc":"3342:131:20","nodeType":"YulFunctionCall","src":"3342:131:20"},"variableNames":[{"name":"tail","nativeSrc":"3334:4:20","nodeType":"YulIdentifier","src":"3334:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"3061:419:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3212:9:20","nodeType":"YulTypedName","src":"3212:9:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3227:4:20","nodeType":"YulTypedName","src":"3227:4:20","type":""}],"src":"3061:419:20"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cannot set owner to zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cannot transfer to self\")\n\n    }\n\n    function abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n","id":20,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"608060405234801561001057600080fd5b50604051610a50380380610a50833981810160405281019061003291906102bb565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036100a1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161009890610358565b60405180910390fd5b816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610125576101248161012c60201b60201c565b5b50506103e4565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361019a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610191906103c4565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae127860405160405180910390a350565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006102888261025d565b9050919050565b6102988161027d565b81146102a357600080fd5b50565b6000815190506102b58161028f565b92915050565b600080604083850312156102d2576102d1610258565b5b60006102e0858286016102a6565b92505060206102f1858286016102a6565b9150509250929050565b600082825260208201905092915050565b7f43616e6e6f7420736574206f776e657220746f207a65726f0000000000000000600082015250565b60006103426018836102fb565b915061034d8261030c565b602082019050919050565b6000602082019050818103600083015261037181610335565b9050919050565b7f43616e6e6f74207472616e7366657220746f2073656c66000000000000000000600082015250565b60006103ae6017836102fb565b91506103b982610378565b602082019050919050565b600060208201905081810360008301526103dd816103a1565b9050919050565b61065d806103f36000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806379ba5097146100465780638da5cb5b14610050578063f2fde38b1461006e575b600080fd5b61004e61008a565b005b61005861021f565b6040516100659190610459565b60405180910390f35b610088600480360381019061008391906104a5565b610248565b005b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461011a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101119061052f565b60405180910390fd5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a350565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61025061025c565b610259816102ec565b50565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102e19061059b565b60405180910390fd5b565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361035a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161035190610607565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae127860405160405180910390a350565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061044382610418565b9050919050565b61045381610438565b82525050565b600060208201905061046e600083018461044a565b92915050565b600080fd5b61048281610438565b811461048d57600080fd5b50565b60008135905061049f81610479565b92915050565b6000602082840312156104bb576104ba610474565b5b60006104c984828501610490565b91505092915050565b600082825260208201905092915050565b7f4d7573742062652070726f706f736564206f776e657200000000000000000000600082015250565b60006105196016836104d2565b9150610524826104e3565b602082019050919050565b600060208201905081810360008301526105488161050c565b9050919050565b7f4f6e6c792063616c6c61626c65206279206f776e657200000000000000000000600082015250565b60006105856016836104d2565b91506105908261054f565b602082019050919050565b600060208201905081810360008301526105b481610578565b9050919050565b7f43616e6e6f74207472616e7366657220746f2073656c66000000000000000000600082015250565b60006105f16017836104d2565b91506105fc826105bb565b602082019050919050565b60006020820190508181036000830152610620816105e4565b905091905056fea26469706673582212201498ae09ac2a21621bde514ec05ad7a74fcec6b4d8ab8678279ac4a78a270b7664736f6c63430008180033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xA50 CODESIZE SUB DUP1 PUSH2 0xA50 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x32 SWAP2 SWAP1 PUSH2 0x2BB JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x98 SWAP1 PUSH2 0x358 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x125 JUMPI PUSH2 0x124 DUP2 PUSH2 0x12C PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST JUMPDEST POP POP PUSH2 0x3E4 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x19A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x191 SWAP1 PUSH2 0x3C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x288 DUP3 PUSH2 0x25D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x298 DUP2 PUSH2 0x27D JUMP JUMPDEST DUP2 EQ PUSH2 0x2A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2B5 DUP2 PUSH2 0x28F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2D2 JUMPI PUSH2 0x2D1 PUSH2 0x258 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2E0 DUP6 DUP3 DUP7 ADD PUSH2 0x2A6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2F1 DUP6 DUP3 DUP7 ADD PUSH2 0x2A6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x43616E6E6F7420736574206F776E657220746F207A65726F0000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x342 PUSH1 0x18 DUP4 PUSH2 0x2FB JUMP JUMPDEST SWAP2 POP PUSH2 0x34D DUP3 PUSH2 0x30C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x371 DUP2 PUSH2 0x335 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616E6E6F74207472616E7366657220746F2073656C66000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3AE PUSH1 0x17 DUP4 PUSH2 0x2FB JUMP JUMPDEST SWAP2 POP PUSH2 0x3B9 DUP3 PUSH2 0x378 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3DD DUP2 PUSH2 0x3A1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x65D DUP1 PUSH2 0x3F3 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x50 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x6E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x8A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x58 PUSH2 0x21F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x65 SWAP2 SWAP1 PUSH2 0x459 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x88 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x83 SWAP2 SWAP1 PUSH2 0x4A5 JUMP JUMPDEST PUSH2 0x248 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x11A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x111 SWAP1 PUSH2 0x52F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x250 PUSH2 0x25C JUMP JUMPDEST PUSH2 0x259 DUP2 PUSH2 0x2EC JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2EA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E1 SWAP1 PUSH2 0x59B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x35A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x351 SWAP1 PUSH2 0x607 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x443 DUP3 PUSH2 0x418 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x453 DUP2 PUSH2 0x438 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x46E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x44A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x482 DUP2 PUSH2 0x438 JUMP JUMPDEST DUP2 EQ PUSH2 0x48D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x49F DUP2 PUSH2 0x479 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4BB JUMPI PUSH2 0x4BA PUSH2 0x474 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4C9 DUP5 DUP3 DUP6 ADD PUSH2 0x490 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4D7573742062652070726F706F736564206F776E657200000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x519 PUSH1 0x16 DUP4 PUSH2 0x4D2 JUMP JUMPDEST SWAP2 POP PUSH2 0x524 DUP3 PUSH2 0x4E3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x548 DUP2 PUSH2 0x50C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F6E6C792063616C6C61626C65206279206F776E657200000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x585 PUSH1 0x16 DUP4 PUSH2 0x4D2 JUMP JUMPDEST SWAP2 POP PUSH2 0x590 DUP3 PUSH2 0x54F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5B4 DUP2 PUSH2 0x578 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616E6E6F74207472616E7366657220746F2073656C66000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5F1 PUSH1 0x17 DUP4 PUSH2 0x4D2 JUMP JUMPDEST SWAP2 POP PUSH2 0x5FC DUP3 PUSH2 0x5BB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x620 DUP2 PUSH2 0x5E4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EQ SWAP9 0xAE MULMOD 0xAC 0x2A 0x21 PUSH3 0x1BDE51 0x4E 0xC0 GAS 0xD7 0xA7 0x4F 0xCE 0xC6 0xB4 0xD8 0xAB DUP7 PUSH25 0x279AC4A78A270B7664736F6C63430008180033000000000000 ","sourceMap":"206:1769:10:-:0;;;471:231;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;557:1;537:22;;:8;:22;;;529:59;;;;;;;;;;;;:::i;:::-;;;;;;;;;605:8;595:7;;:18;;;;;;;;;;;;;;;;;;647:1;623:26;;:12;:26;;;619:79;;659:32;678:12;659:18;;;:32;;:::i;:::-;619:79;471:231;;206:1769;;1482:188;1550:10;1544:16;;:2;:16;;;1536:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;1612:2;1595:14;;:19;;;;;;;;;;;;;;;;;;1662:2;1626:39;;1653:7;;;;;;;;;;1626:39;;;;;;;;;;;;1482:188;:::o;88:117:20:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:507::-;924:6;932;981:2;969:9;960:7;956:23;952:32;949:119;;;987:79;;:::i;:::-;949:119;1107:1;1132:64;1188:7;1179:6;1168:9;1164:22;1132:64;:::i;:::-;1122:74;;1078:128;1245:2;1271:64;1327:7;1318:6;1307:9;1303:22;1271:64;:::i;:::-;1261:74;;1216:129;845:507;;;;;:::o;1358:169::-;1442:11;1476:6;1471:3;1464:19;1516:4;1511:3;1507:14;1492:29;;1358:169;;;;:::o;1533:174::-;1673:26;1669:1;1661:6;1657:14;1650:50;1533:174;:::o;1713:366::-;1855:3;1876:67;1940:2;1935:3;1876:67;:::i;:::-;1869:74;;1952:93;2041:3;1952:93;:::i;:::-;2070:2;2065:3;2061:12;2054:19;;1713:366;;;:::o;2085:419::-;2251:4;2289:2;2278:9;2274:18;2266:26;;2338:9;2332:4;2328:20;2324:1;2313:9;2309:17;2302:47;2366:131;2492:4;2366:131;:::i;:::-;2358:139;;2085:419;;;:::o;2510:173::-;2650:25;2646:1;2638:6;2634:14;2627:49;2510:173;:::o;2689:366::-;2831:3;2852:67;2916:2;2911:3;2852:67;:::i;:::-;2845:74;;2928:93;3017:3;2928:93;:::i;:::-;3046:2;3041:3;3037:12;3030:19;;2689:366;;;:::o;3061:419::-;3227:4;3265:2;3254:9;3250:18;3242:26;;3314:9;3308:4;3304:20;3300:1;3289:9;3285:17;3278:47;3342:131;3468:4;3342:131;:::i;:::-;3334:139;;3061:419;;;:::o;206:1769:10:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_transferOwnership_567":{"entryPoint":748,"id":567,"parameterSlots":1,"returnSlots":0},"@_validateOwnership_580":{"entryPoint":604,"id":580,"parameterSlots":0,"returnSlots":0},"@acceptOwnership_533":{"entryPoint":138,"id":533,"parameterSlots":0,"returnSlots":0},"@owner_543":{"entryPoint":543,"id":543,"parameterSlots":0,"returnSlots":1},"@transferOwnership_497":{"entryPoint":584,"id":497,"parameterSlots":1,"returnSlots":0},"abi_decode_t_address":{"entryPoint":1168,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":1189,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":1098,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c_to_t_string_memory_ptr_fromStack":{"entryPoint":1292,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3_to_t_string_memory_ptr_fromStack":{"entryPoint":1400,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack":{"entryPoint":1508,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":1113,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1327,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1435,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1543,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":1234,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":1080,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":1048,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":1140,"id":null,"parameterSlots":0,"returnSlots":0},"store_literal_in_memory_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c":{"entryPoint":1251,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3":{"entryPoint":1359,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2":{"entryPoint":1467,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":1145,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:4626:20","nodeType":"YulBlock","src":"0:4626:20","statements":[{"body":{"nativeSrc":"52:81:20","nodeType":"YulBlock","src":"52:81:20","statements":[{"nativeSrc":"62:65:20","nodeType":"YulAssignment","src":"62:65:20","value":{"arguments":[{"name":"value","nativeSrc":"77:5:20","nodeType":"YulIdentifier","src":"77:5:20"},{"kind":"number","nativeSrc":"84:42:20","nodeType":"YulLiteral","src":"84:42:20","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"73:3:20","nodeType":"YulIdentifier","src":"73:3:20"},"nativeSrc":"73:54:20","nodeType":"YulFunctionCall","src":"73:54:20"},"variableNames":[{"name":"cleaned","nativeSrc":"62:7:20","nodeType":"YulIdentifier","src":"62:7:20"}]}]},"name":"cleanup_t_uint160","nativeSrc":"7:126:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"34:5:20","nodeType":"YulTypedName","src":"34:5:20","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"44:7:20","nodeType":"YulTypedName","src":"44:7:20","type":""}],"src":"7:126:20"},{"body":{"nativeSrc":"184:51:20","nodeType":"YulBlock","src":"184:51:20","statements":[{"nativeSrc":"194:35:20","nodeType":"YulAssignment","src":"194:35:20","value":{"arguments":[{"name":"value","nativeSrc":"223:5:20","nodeType":"YulIdentifier","src":"223:5:20"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"205:17:20","nodeType":"YulIdentifier","src":"205:17:20"},"nativeSrc":"205:24:20","nodeType":"YulFunctionCall","src":"205:24:20"},"variableNames":[{"name":"cleaned","nativeSrc":"194:7:20","nodeType":"YulIdentifier","src":"194:7:20"}]}]},"name":"cleanup_t_address","nativeSrc":"139:96:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"166:5:20","nodeType":"YulTypedName","src":"166:5:20","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"176:7:20","nodeType":"YulTypedName","src":"176:7:20","type":""}],"src":"139:96:20"},{"body":{"nativeSrc":"306:53:20","nodeType":"YulBlock","src":"306:53:20","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"323:3:20","nodeType":"YulIdentifier","src":"323:3:20"},{"arguments":[{"name":"value","nativeSrc":"346:5:20","nodeType":"YulIdentifier","src":"346:5:20"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"328:17:20","nodeType":"YulIdentifier","src":"328:17:20"},"nativeSrc":"328:24:20","nodeType":"YulFunctionCall","src":"328:24:20"}],"functionName":{"name":"mstore","nativeSrc":"316:6:20","nodeType":"YulIdentifier","src":"316:6:20"},"nativeSrc":"316:37:20","nodeType":"YulFunctionCall","src":"316:37:20"},"nativeSrc":"316:37:20","nodeType":"YulExpressionStatement","src":"316:37:20"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"241:118:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"294:5:20","nodeType":"YulTypedName","src":"294:5:20","type":""},{"name":"pos","nativeSrc":"301:3:20","nodeType":"YulTypedName","src":"301:3:20","type":""}],"src":"241:118:20"},{"body":{"nativeSrc":"463:124:20","nodeType":"YulBlock","src":"463:124:20","statements":[{"nativeSrc":"473:26:20","nodeType":"YulAssignment","src":"473:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"485:9:20","nodeType":"YulIdentifier","src":"485:9:20"},{"kind":"number","nativeSrc":"496:2:20","nodeType":"YulLiteral","src":"496:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"481:3:20","nodeType":"YulIdentifier","src":"481:3:20"},"nativeSrc":"481:18:20","nodeType":"YulFunctionCall","src":"481:18:20"},"variableNames":[{"name":"tail","nativeSrc":"473:4:20","nodeType":"YulIdentifier","src":"473:4:20"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"553:6:20","nodeType":"YulIdentifier","src":"553:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"566:9:20","nodeType":"YulIdentifier","src":"566:9:20"},{"kind":"number","nativeSrc":"577:1:20","nodeType":"YulLiteral","src":"577:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"562:3:20","nodeType":"YulIdentifier","src":"562:3:20"},"nativeSrc":"562:17:20","nodeType":"YulFunctionCall","src":"562:17:20"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"509:43:20","nodeType":"YulIdentifier","src":"509:43:20"},"nativeSrc":"509:71:20","nodeType":"YulFunctionCall","src":"509:71:20"},"nativeSrc":"509:71:20","nodeType":"YulExpressionStatement","src":"509:71:20"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"365:222:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"435:9:20","nodeType":"YulTypedName","src":"435:9:20","type":""},{"name":"value0","nativeSrc":"447:6:20","nodeType":"YulTypedName","src":"447:6:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"458:4:20","nodeType":"YulTypedName","src":"458:4:20","type":""}],"src":"365:222:20"},{"body":{"nativeSrc":"633:35:20","nodeType":"YulBlock","src":"633:35:20","statements":[{"nativeSrc":"643:19:20","nodeType":"YulAssignment","src":"643:19:20","value":{"arguments":[{"kind":"number","nativeSrc":"659:2:20","nodeType":"YulLiteral","src":"659:2:20","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"653:5:20","nodeType":"YulIdentifier","src":"653:5:20"},"nativeSrc":"653:9:20","nodeType":"YulFunctionCall","src":"653:9:20"},"variableNames":[{"name":"memPtr","nativeSrc":"643:6:20","nodeType":"YulIdentifier","src":"643:6:20"}]}]},"name":"allocate_unbounded","nativeSrc":"593:75:20","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"626:6:20","nodeType":"YulTypedName","src":"626:6:20","type":""}],"src":"593:75:20"},{"body":{"nativeSrc":"763:28:20","nodeType":"YulBlock","src":"763:28:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"780:1:20","nodeType":"YulLiteral","src":"780:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"783:1:20","nodeType":"YulLiteral","src":"783:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"773:6:20","nodeType":"YulIdentifier","src":"773:6:20"},"nativeSrc":"773:12:20","nodeType":"YulFunctionCall","src":"773:12:20"},"nativeSrc":"773:12:20","nodeType":"YulExpressionStatement","src":"773:12:20"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"674:117:20","nodeType":"YulFunctionDefinition","src":"674:117:20"},{"body":{"nativeSrc":"886:28:20","nodeType":"YulBlock","src":"886:28:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"903:1:20","nodeType":"YulLiteral","src":"903:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"906:1:20","nodeType":"YulLiteral","src":"906:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"896:6:20","nodeType":"YulIdentifier","src":"896:6:20"},"nativeSrc":"896:12:20","nodeType":"YulFunctionCall","src":"896:12:20"},"nativeSrc":"896:12:20","nodeType":"YulExpressionStatement","src":"896:12:20"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"797:117:20","nodeType":"YulFunctionDefinition","src":"797:117:20"},{"body":{"nativeSrc":"963:79:20","nodeType":"YulBlock","src":"963:79:20","statements":[{"body":{"nativeSrc":"1020:16:20","nodeType":"YulBlock","src":"1020:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1029:1:20","nodeType":"YulLiteral","src":"1029:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"1032:1:20","nodeType":"YulLiteral","src":"1032:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1022:6:20","nodeType":"YulIdentifier","src":"1022:6:20"},"nativeSrc":"1022:12:20","nodeType":"YulFunctionCall","src":"1022:12:20"},"nativeSrc":"1022:12:20","nodeType":"YulExpressionStatement","src":"1022:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"986:5:20","nodeType":"YulIdentifier","src":"986:5:20"},{"arguments":[{"name":"value","nativeSrc":"1011:5:20","nodeType":"YulIdentifier","src":"1011:5:20"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"993:17:20","nodeType":"YulIdentifier","src":"993:17:20"},"nativeSrc":"993:24:20","nodeType":"YulFunctionCall","src":"993:24:20"}],"functionName":{"name":"eq","nativeSrc":"983:2:20","nodeType":"YulIdentifier","src":"983:2:20"},"nativeSrc":"983:35:20","nodeType":"YulFunctionCall","src":"983:35:20"}],"functionName":{"name":"iszero","nativeSrc":"976:6:20","nodeType":"YulIdentifier","src":"976:6:20"},"nativeSrc":"976:43:20","nodeType":"YulFunctionCall","src":"976:43:20"},"nativeSrc":"973:63:20","nodeType":"YulIf","src":"973:63:20"}]},"name":"validator_revert_t_address","nativeSrc":"920:122:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"956:5:20","nodeType":"YulTypedName","src":"956:5:20","type":""}],"src":"920:122:20"},{"body":{"nativeSrc":"1100:87:20","nodeType":"YulBlock","src":"1100:87:20","statements":[{"nativeSrc":"1110:29:20","nodeType":"YulAssignment","src":"1110:29:20","value":{"arguments":[{"name":"offset","nativeSrc":"1132:6:20","nodeType":"YulIdentifier","src":"1132:6:20"}],"functionName":{"name":"calldataload","nativeSrc":"1119:12:20","nodeType":"YulIdentifier","src":"1119:12:20"},"nativeSrc":"1119:20:20","nodeType":"YulFunctionCall","src":"1119:20:20"},"variableNames":[{"name":"value","nativeSrc":"1110:5:20","nodeType":"YulIdentifier","src":"1110:5:20"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"1175:5:20","nodeType":"YulIdentifier","src":"1175:5:20"}],"functionName":{"name":"validator_revert_t_address","nativeSrc":"1148:26:20","nodeType":"YulIdentifier","src":"1148:26:20"},"nativeSrc":"1148:33:20","nodeType":"YulFunctionCall","src":"1148:33:20"},"nativeSrc":"1148:33:20","nodeType":"YulExpressionStatement","src":"1148:33:20"}]},"name":"abi_decode_t_address","nativeSrc":"1048:139:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"1078:6:20","nodeType":"YulTypedName","src":"1078:6:20","type":""},{"name":"end","nativeSrc":"1086:3:20","nodeType":"YulTypedName","src":"1086:3:20","type":""}],"returnVariables":[{"name":"value","nativeSrc":"1094:5:20","nodeType":"YulTypedName","src":"1094:5:20","type":""}],"src":"1048:139:20"},{"body":{"nativeSrc":"1259:263:20","nodeType":"YulBlock","src":"1259:263:20","statements":[{"body":{"nativeSrc":"1305:83:20","nodeType":"YulBlock","src":"1305:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"1307:77:20","nodeType":"YulIdentifier","src":"1307:77:20"},"nativeSrc":"1307:79:20","nodeType":"YulFunctionCall","src":"1307:79:20"},"nativeSrc":"1307:79:20","nodeType":"YulExpressionStatement","src":"1307:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"1280:7:20","nodeType":"YulIdentifier","src":"1280:7:20"},{"name":"headStart","nativeSrc":"1289:9:20","nodeType":"YulIdentifier","src":"1289:9:20"}],"functionName":{"name":"sub","nativeSrc":"1276:3:20","nodeType":"YulIdentifier","src":"1276:3:20"},"nativeSrc":"1276:23:20","nodeType":"YulFunctionCall","src":"1276:23:20"},{"kind":"number","nativeSrc":"1301:2:20","nodeType":"YulLiteral","src":"1301:2:20","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"1272:3:20","nodeType":"YulIdentifier","src":"1272:3:20"},"nativeSrc":"1272:32:20","nodeType":"YulFunctionCall","src":"1272:32:20"},"nativeSrc":"1269:119:20","nodeType":"YulIf","src":"1269:119:20"},{"nativeSrc":"1398:117:20","nodeType":"YulBlock","src":"1398:117:20","statements":[{"nativeSrc":"1413:15:20","nodeType":"YulVariableDeclaration","src":"1413:15:20","value":{"kind":"number","nativeSrc":"1427:1:20","nodeType":"YulLiteral","src":"1427:1:20","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"1417:6:20","nodeType":"YulTypedName","src":"1417:6:20","type":""}]},{"nativeSrc":"1442:63:20","nodeType":"YulAssignment","src":"1442:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1477:9:20","nodeType":"YulIdentifier","src":"1477:9:20"},{"name":"offset","nativeSrc":"1488:6:20","nodeType":"YulIdentifier","src":"1488:6:20"}],"functionName":{"name":"add","nativeSrc":"1473:3:20","nodeType":"YulIdentifier","src":"1473:3:20"},"nativeSrc":"1473:22:20","nodeType":"YulFunctionCall","src":"1473:22:20"},{"name":"dataEnd","nativeSrc":"1497:7:20","nodeType":"YulIdentifier","src":"1497:7:20"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"1452:20:20","nodeType":"YulIdentifier","src":"1452:20:20"},"nativeSrc":"1452:53:20","nodeType":"YulFunctionCall","src":"1452:53:20"},"variableNames":[{"name":"value0","nativeSrc":"1442:6:20","nodeType":"YulIdentifier","src":"1442:6:20"}]}]}]},"name":"abi_decode_tuple_t_address","nativeSrc":"1193:329:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1229:9:20","nodeType":"YulTypedName","src":"1229:9:20","type":""},{"name":"dataEnd","nativeSrc":"1240:7:20","nodeType":"YulTypedName","src":"1240:7:20","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"1252:6:20","nodeType":"YulTypedName","src":"1252:6:20","type":""}],"src":"1193:329:20"},{"body":{"nativeSrc":"1624:73:20","nodeType":"YulBlock","src":"1624:73:20","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"1641:3:20","nodeType":"YulIdentifier","src":"1641:3:20"},{"name":"length","nativeSrc":"1646:6:20","nodeType":"YulIdentifier","src":"1646:6:20"}],"functionName":{"name":"mstore","nativeSrc":"1634:6:20","nodeType":"YulIdentifier","src":"1634:6:20"},"nativeSrc":"1634:19:20","nodeType":"YulFunctionCall","src":"1634:19:20"},"nativeSrc":"1634:19:20","nodeType":"YulExpressionStatement","src":"1634:19:20"},{"nativeSrc":"1662:29:20","nodeType":"YulAssignment","src":"1662:29:20","value":{"arguments":[{"name":"pos","nativeSrc":"1681:3:20","nodeType":"YulIdentifier","src":"1681:3:20"},{"kind":"number","nativeSrc":"1686:4:20","nodeType":"YulLiteral","src":"1686:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1677:3:20","nodeType":"YulIdentifier","src":"1677:3:20"},"nativeSrc":"1677:14:20","nodeType":"YulFunctionCall","src":"1677:14:20"},"variableNames":[{"name":"updated_pos","nativeSrc":"1662:11:20","nodeType":"YulIdentifier","src":"1662:11:20"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"1528:169:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"1596:3:20","nodeType":"YulTypedName","src":"1596:3:20","type":""},{"name":"length","nativeSrc":"1601:6:20","nodeType":"YulTypedName","src":"1601:6:20","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"1612:11:20","nodeType":"YulTypedName","src":"1612:11:20","type":""}],"src":"1528:169:20"},{"body":{"nativeSrc":"1809:66:20","nodeType":"YulBlock","src":"1809:66:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"1831:6:20","nodeType":"YulIdentifier","src":"1831:6:20"},{"kind":"number","nativeSrc":"1839:1:20","nodeType":"YulLiteral","src":"1839:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"1827:3:20","nodeType":"YulIdentifier","src":"1827:3:20"},"nativeSrc":"1827:14:20","nodeType":"YulFunctionCall","src":"1827:14:20"},{"hexValue":"4d7573742062652070726f706f736564206f776e6572","kind":"string","nativeSrc":"1843:24:20","nodeType":"YulLiteral","src":"1843:24:20","type":"","value":"Must be proposed owner"}],"functionName":{"name":"mstore","nativeSrc":"1820:6:20","nodeType":"YulIdentifier","src":"1820:6:20"},"nativeSrc":"1820:48:20","nodeType":"YulFunctionCall","src":"1820:48:20"},"nativeSrc":"1820:48:20","nodeType":"YulExpressionStatement","src":"1820:48:20"}]},"name":"store_literal_in_memory_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c","nativeSrc":"1703:172:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"1801:6:20","nodeType":"YulTypedName","src":"1801:6:20","type":""}],"src":"1703:172:20"},{"body":{"nativeSrc":"2027:220:20","nodeType":"YulBlock","src":"2027:220:20","statements":[{"nativeSrc":"2037:74:20","nodeType":"YulAssignment","src":"2037:74:20","value":{"arguments":[{"name":"pos","nativeSrc":"2103:3:20","nodeType":"YulIdentifier","src":"2103:3:20"},{"kind":"number","nativeSrc":"2108:2:20","nodeType":"YulLiteral","src":"2108:2:20","type":"","value":"22"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"2044:58:20","nodeType":"YulIdentifier","src":"2044:58:20"},"nativeSrc":"2044:67:20","nodeType":"YulFunctionCall","src":"2044:67:20"},"variableNames":[{"name":"pos","nativeSrc":"2037:3:20","nodeType":"YulIdentifier","src":"2037:3:20"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"2209:3:20","nodeType":"YulIdentifier","src":"2209:3:20"}],"functionName":{"name":"store_literal_in_memory_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c","nativeSrc":"2120:88:20","nodeType":"YulIdentifier","src":"2120:88:20"},"nativeSrc":"2120:93:20","nodeType":"YulFunctionCall","src":"2120:93:20"},"nativeSrc":"2120:93:20","nodeType":"YulExpressionStatement","src":"2120:93:20"},{"nativeSrc":"2222:19:20","nodeType":"YulAssignment","src":"2222:19:20","value":{"arguments":[{"name":"pos","nativeSrc":"2233:3:20","nodeType":"YulIdentifier","src":"2233:3:20"},{"kind":"number","nativeSrc":"2238:2:20","nodeType":"YulLiteral","src":"2238:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2229:3:20","nodeType":"YulIdentifier","src":"2229:3:20"},"nativeSrc":"2229:12:20","nodeType":"YulFunctionCall","src":"2229:12:20"},"variableNames":[{"name":"end","nativeSrc":"2222:3:20","nodeType":"YulIdentifier","src":"2222:3:20"}]}]},"name":"abi_encode_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c_to_t_string_memory_ptr_fromStack","nativeSrc":"1881:366:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"2015:3:20","nodeType":"YulTypedName","src":"2015:3:20","type":""}],"returnVariables":[{"name":"end","nativeSrc":"2023:3:20","nodeType":"YulTypedName","src":"2023:3:20","type":""}],"src":"1881:366:20"},{"body":{"nativeSrc":"2424:248:20","nodeType":"YulBlock","src":"2424:248:20","statements":[{"nativeSrc":"2434:26:20","nodeType":"YulAssignment","src":"2434:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"2446:9:20","nodeType":"YulIdentifier","src":"2446:9:20"},{"kind":"number","nativeSrc":"2457:2:20","nodeType":"YulLiteral","src":"2457:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2442:3:20","nodeType":"YulIdentifier","src":"2442:3:20"},"nativeSrc":"2442:18:20","nodeType":"YulFunctionCall","src":"2442:18:20"},"variableNames":[{"name":"tail","nativeSrc":"2434:4:20","nodeType":"YulIdentifier","src":"2434:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2481:9:20","nodeType":"YulIdentifier","src":"2481:9:20"},{"kind":"number","nativeSrc":"2492:1:20","nodeType":"YulLiteral","src":"2492:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"2477:3:20","nodeType":"YulIdentifier","src":"2477:3:20"},"nativeSrc":"2477:17:20","nodeType":"YulFunctionCall","src":"2477:17:20"},{"arguments":[{"name":"tail","nativeSrc":"2500:4:20","nodeType":"YulIdentifier","src":"2500:4:20"},{"name":"headStart","nativeSrc":"2506:9:20","nodeType":"YulIdentifier","src":"2506:9:20"}],"functionName":{"name":"sub","nativeSrc":"2496:3:20","nodeType":"YulIdentifier","src":"2496:3:20"},"nativeSrc":"2496:20:20","nodeType":"YulFunctionCall","src":"2496:20:20"}],"functionName":{"name":"mstore","nativeSrc":"2470:6:20","nodeType":"YulIdentifier","src":"2470:6:20"},"nativeSrc":"2470:47:20","nodeType":"YulFunctionCall","src":"2470:47:20"},"nativeSrc":"2470:47:20","nodeType":"YulExpressionStatement","src":"2470:47:20"},{"nativeSrc":"2526:139:20","nodeType":"YulAssignment","src":"2526:139:20","value":{"arguments":[{"name":"tail","nativeSrc":"2660:4:20","nodeType":"YulIdentifier","src":"2660:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c_to_t_string_memory_ptr_fromStack","nativeSrc":"2534:124:20","nodeType":"YulIdentifier","src":"2534:124:20"},"nativeSrc":"2534:131:20","nodeType":"YulFunctionCall","src":"2534:131:20"},"variableNames":[{"name":"tail","nativeSrc":"2526:4:20","nodeType":"YulIdentifier","src":"2526:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"2253:419:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2404:9:20","nodeType":"YulTypedName","src":"2404:9:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2419:4:20","nodeType":"YulTypedName","src":"2419:4:20","type":""}],"src":"2253:419:20"},{"body":{"nativeSrc":"2784:66:20","nodeType":"YulBlock","src":"2784:66:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"2806:6:20","nodeType":"YulIdentifier","src":"2806:6:20"},{"kind":"number","nativeSrc":"2814:1:20","nodeType":"YulLiteral","src":"2814:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"2802:3:20","nodeType":"YulIdentifier","src":"2802:3:20"},"nativeSrc":"2802:14:20","nodeType":"YulFunctionCall","src":"2802:14:20"},{"hexValue":"4f6e6c792063616c6c61626c65206279206f776e6572","kind":"string","nativeSrc":"2818:24:20","nodeType":"YulLiteral","src":"2818:24:20","type":"","value":"Only callable by owner"}],"functionName":{"name":"mstore","nativeSrc":"2795:6:20","nodeType":"YulIdentifier","src":"2795:6:20"},"nativeSrc":"2795:48:20","nodeType":"YulFunctionCall","src":"2795:48:20"},"nativeSrc":"2795:48:20","nodeType":"YulExpressionStatement","src":"2795:48:20"}]},"name":"store_literal_in_memory_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3","nativeSrc":"2678:172:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"2776:6:20","nodeType":"YulTypedName","src":"2776:6:20","type":""}],"src":"2678:172:20"},{"body":{"nativeSrc":"3002:220:20","nodeType":"YulBlock","src":"3002:220:20","statements":[{"nativeSrc":"3012:74:20","nodeType":"YulAssignment","src":"3012:74:20","value":{"arguments":[{"name":"pos","nativeSrc":"3078:3:20","nodeType":"YulIdentifier","src":"3078:3:20"},{"kind":"number","nativeSrc":"3083:2:20","nodeType":"YulLiteral","src":"3083:2:20","type":"","value":"22"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"3019:58:20","nodeType":"YulIdentifier","src":"3019:58:20"},"nativeSrc":"3019:67:20","nodeType":"YulFunctionCall","src":"3019:67:20"},"variableNames":[{"name":"pos","nativeSrc":"3012:3:20","nodeType":"YulIdentifier","src":"3012:3:20"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"3184:3:20","nodeType":"YulIdentifier","src":"3184:3:20"}],"functionName":{"name":"store_literal_in_memory_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3","nativeSrc":"3095:88:20","nodeType":"YulIdentifier","src":"3095:88:20"},"nativeSrc":"3095:93:20","nodeType":"YulFunctionCall","src":"3095:93:20"},"nativeSrc":"3095:93:20","nodeType":"YulExpressionStatement","src":"3095:93:20"},{"nativeSrc":"3197:19:20","nodeType":"YulAssignment","src":"3197:19:20","value":{"arguments":[{"name":"pos","nativeSrc":"3208:3:20","nodeType":"YulIdentifier","src":"3208:3:20"},{"kind":"number","nativeSrc":"3213:2:20","nodeType":"YulLiteral","src":"3213:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3204:3:20","nodeType":"YulIdentifier","src":"3204:3:20"},"nativeSrc":"3204:12:20","nodeType":"YulFunctionCall","src":"3204:12:20"},"variableNames":[{"name":"end","nativeSrc":"3197:3:20","nodeType":"YulIdentifier","src":"3197:3:20"}]}]},"name":"abi_encode_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3_to_t_string_memory_ptr_fromStack","nativeSrc":"2856:366:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"2990:3:20","nodeType":"YulTypedName","src":"2990:3:20","type":""}],"returnVariables":[{"name":"end","nativeSrc":"2998:3:20","nodeType":"YulTypedName","src":"2998:3:20","type":""}],"src":"2856:366:20"},{"body":{"nativeSrc":"3399:248:20","nodeType":"YulBlock","src":"3399:248:20","statements":[{"nativeSrc":"3409:26:20","nodeType":"YulAssignment","src":"3409:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"3421:9:20","nodeType":"YulIdentifier","src":"3421:9:20"},{"kind":"number","nativeSrc":"3432:2:20","nodeType":"YulLiteral","src":"3432:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3417:3:20","nodeType":"YulIdentifier","src":"3417:3:20"},"nativeSrc":"3417:18:20","nodeType":"YulFunctionCall","src":"3417:18:20"},"variableNames":[{"name":"tail","nativeSrc":"3409:4:20","nodeType":"YulIdentifier","src":"3409:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3456:9:20","nodeType":"YulIdentifier","src":"3456:9:20"},{"kind":"number","nativeSrc":"3467:1:20","nodeType":"YulLiteral","src":"3467:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"3452:3:20","nodeType":"YulIdentifier","src":"3452:3:20"},"nativeSrc":"3452:17:20","nodeType":"YulFunctionCall","src":"3452:17:20"},{"arguments":[{"name":"tail","nativeSrc":"3475:4:20","nodeType":"YulIdentifier","src":"3475:4:20"},{"name":"headStart","nativeSrc":"3481:9:20","nodeType":"YulIdentifier","src":"3481:9:20"}],"functionName":{"name":"sub","nativeSrc":"3471:3:20","nodeType":"YulIdentifier","src":"3471:3:20"},"nativeSrc":"3471:20:20","nodeType":"YulFunctionCall","src":"3471:20:20"}],"functionName":{"name":"mstore","nativeSrc":"3445:6:20","nodeType":"YulIdentifier","src":"3445:6:20"},"nativeSrc":"3445:47:20","nodeType":"YulFunctionCall","src":"3445:47:20"},"nativeSrc":"3445:47:20","nodeType":"YulExpressionStatement","src":"3445:47:20"},{"nativeSrc":"3501:139:20","nodeType":"YulAssignment","src":"3501:139:20","value":{"arguments":[{"name":"tail","nativeSrc":"3635:4:20","nodeType":"YulIdentifier","src":"3635:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3_to_t_string_memory_ptr_fromStack","nativeSrc":"3509:124:20","nodeType":"YulIdentifier","src":"3509:124:20"},"nativeSrc":"3509:131:20","nodeType":"YulFunctionCall","src":"3509:131:20"},"variableNames":[{"name":"tail","nativeSrc":"3501:4:20","nodeType":"YulIdentifier","src":"3501:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"3228:419:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3379:9:20","nodeType":"YulTypedName","src":"3379:9:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3394:4:20","nodeType":"YulTypedName","src":"3394:4:20","type":""}],"src":"3228:419:20"},{"body":{"nativeSrc":"3759:67:20","nodeType":"YulBlock","src":"3759:67:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"3781:6:20","nodeType":"YulIdentifier","src":"3781:6:20"},{"kind":"number","nativeSrc":"3789:1:20","nodeType":"YulLiteral","src":"3789:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"3777:3:20","nodeType":"YulIdentifier","src":"3777:3:20"},"nativeSrc":"3777:14:20","nodeType":"YulFunctionCall","src":"3777:14:20"},{"hexValue":"43616e6e6f74207472616e7366657220746f2073656c66","kind":"string","nativeSrc":"3793:25:20","nodeType":"YulLiteral","src":"3793:25:20","type":"","value":"Cannot transfer to self"}],"functionName":{"name":"mstore","nativeSrc":"3770:6:20","nodeType":"YulIdentifier","src":"3770:6:20"},"nativeSrc":"3770:49:20","nodeType":"YulFunctionCall","src":"3770:49:20"},"nativeSrc":"3770:49:20","nodeType":"YulExpressionStatement","src":"3770:49:20"}]},"name":"store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2","nativeSrc":"3653:173:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"3751:6:20","nodeType":"YulTypedName","src":"3751:6:20","type":""}],"src":"3653:173:20"},{"body":{"nativeSrc":"3978:220:20","nodeType":"YulBlock","src":"3978:220:20","statements":[{"nativeSrc":"3988:74:20","nodeType":"YulAssignment","src":"3988:74:20","value":{"arguments":[{"name":"pos","nativeSrc":"4054:3:20","nodeType":"YulIdentifier","src":"4054:3:20"},{"kind":"number","nativeSrc":"4059:2:20","nodeType":"YulLiteral","src":"4059:2:20","type":"","value":"23"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"3995:58:20","nodeType":"YulIdentifier","src":"3995:58:20"},"nativeSrc":"3995:67:20","nodeType":"YulFunctionCall","src":"3995:67:20"},"variableNames":[{"name":"pos","nativeSrc":"3988:3:20","nodeType":"YulIdentifier","src":"3988:3:20"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"4160:3:20","nodeType":"YulIdentifier","src":"4160:3:20"}],"functionName":{"name":"store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2","nativeSrc":"4071:88:20","nodeType":"YulIdentifier","src":"4071:88:20"},"nativeSrc":"4071:93:20","nodeType":"YulFunctionCall","src":"4071:93:20"},"nativeSrc":"4071:93:20","nodeType":"YulExpressionStatement","src":"4071:93:20"},{"nativeSrc":"4173:19:20","nodeType":"YulAssignment","src":"4173:19:20","value":{"arguments":[{"name":"pos","nativeSrc":"4184:3:20","nodeType":"YulIdentifier","src":"4184:3:20"},{"kind":"number","nativeSrc":"4189:2:20","nodeType":"YulLiteral","src":"4189:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4180:3:20","nodeType":"YulIdentifier","src":"4180:3:20"},"nativeSrc":"4180:12:20","nodeType":"YulFunctionCall","src":"4180:12:20"},"variableNames":[{"name":"end","nativeSrc":"4173:3:20","nodeType":"YulIdentifier","src":"4173:3:20"}]}]},"name":"abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack","nativeSrc":"3832:366:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"3966:3:20","nodeType":"YulTypedName","src":"3966:3:20","type":""}],"returnVariables":[{"name":"end","nativeSrc":"3974:3:20","nodeType":"YulTypedName","src":"3974:3:20","type":""}],"src":"3832:366:20"},{"body":{"nativeSrc":"4375:248:20","nodeType":"YulBlock","src":"4375:248:20","statements":[{"nativeSrc":"4385:26:20","nodeType":"YulAssignment","src":"4385:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"4397:9:20","nodeType":"YulIdentifier","src":"4397:9:20"},{"kind":"number","nativeSrc":"4408:2:20","nodeType":"YulLiteral","src":"4408:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4393:3:20","nodeType":"YulIdentifier","src":"4393:3:20"},"nativeSrc":"4393:18:20","nodeType":"YulFunctionCall","src":"4393:18:20"},"variableNames":[{"name":"tail","nativeSrc":"4385:4:20","nodeType":"YulIdentifier","src":"4385:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4432:9:20","nodeType":"YulIdentifier","src":"4432:9:20"},{"kind":"number","nativeSrc":"4443:1:20","nodeType":"YulLiteral","src":"4443:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"4428:3:20","nodeType":"YulIdentifier","src":"4428:3:20"},"nativeSrc":"4428:17:20","nodeType":"YulFunctionCall","src":"4428:17:20"},{"arguments":[{"name":"tail","nativeSrc":"4451:4:20","nodeType":"YulIdentifier","src":"4451:4:20"},{"name":"headStart","nativeSrc":"4457:9:20","nodeType":"YulIdentifier","src":"4457:9:20"}],"functionName":{"name":"sub","nativeSrc":"4447:3:20","nodeType":"YulIdentifier","src":"4447:3:20"},"nativeSrc":"4447:20:20","nodeType":"YulFunctionCall","src":"4447:20:20"}],"functionName":{"name":"mstore","nativeSrc":"4421:6:20","nodeType":"YulIdentifier","src":"4421:6:20"},"nativeSrc":"4421:47:20","nodeType":"YulFunctionCall","src":"4421:47:20"},"nativeSrc":"4421:47:20","nodeType":"YulExpressionStatement","src":"4421:47:20"},{"nativeSrc":"4477:139:20","nodeType":"YulAssignment","src":"4477:139:20","value":{"arguments":[{"name":"tail","nativeSrc":"4611:4:20","nodeType":"YulIdentifier","src":"4611:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack","nativeSrc":"4485:124:20","nodeType":"YulIdentifier","src":"4485:124:20"},"nativeSrc":"4485:131:20","nodeType":"YulFunctionCall","src":"4485:131:20"},"variableNames":[{"name":"tail","nativeSrc":"4477:4:20","nodeType":"YulIdentifier","src":"4477:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"4204:419:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4355:9:20","nodeType":"YulTypedName","src":"4355:9:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4370:4:20","nodeType":"YulTypedName","src":"4370:4:20","type":""}],"src":"4204:419:20"}]},"contents":"{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Must be proposed owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3(memPtr) {\n\n        mstore(add(memPtr, 0), \"Only callable by owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cannot transfer to self\")\n\n    }\n\n    function abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n","id":20,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100415760003560e01c806379ba5097146100465780638da5cb5b14610050578063f2fde38b1461006e575b600080fd5b61004e61008a565b005b61005861021f565b6040516100659190610459565b60405180910390f35b610088600480360381019061008391906104a5565b610248565b005b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461011a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101119061052f565b60405180910390fd5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a350565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61025061025c565b610259816102ec565b50565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102e19061059b565b60405180910390fd5b565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361035a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161035190610607565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae127860405160405180910390a350565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061044382610418565b9050919050565b61045381610438565b82525050565b600060208201905061046e600083018461044a565b92915050565b600080fd5b61048281610438565b811461048d57600080fd5b50565b60008135905061049f81610479565b92915050565b6000602082840312156104bb576104ba610474565b5b60006104c984828501610490565b91505092915050565b600082825260208201905092915050565b7f4d7573742062652070726f706f736564206f776e657200000000000000000000600082015250565b60006105196016836104d2565b9150610524826104e3565b602082019050919050565b600060208201905081810360008301526105488161050c565b9050919050565b7f4f6e6c792063616c6c61626c65206279206f776e657200000000000000000000600082015250565b60006105856016836104d2565b91506105908261054f565b602082019050919050565b600060208201905081810360008301526105b481610578565b9050919050565b7f43616e6e6f74207472616e7366657220746f2073656c66000000000000000000600082015250565b60006105f16017836104d2565b91506105fc826105bb565b602082019050919050565b60006020820190508181036000830152610620816105e4565b905091905056fea26469706673582212201498ae09ac2a21621bde514ec05ad7a74fcec6b4d8ab8678279ac4a78a270b7664736f6c63430008180033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x50 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x6E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x8A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x58 PUSH2 0x21F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x65 SWAP2 SWAP1 PUSH2 0x459 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x88 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x83 SWAP2 SWAP1 PUSH2 0x4A5 JUMP JUMPDEST PUSH2 0x248 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x11A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x111 SWAP1 PUSH2 0x52F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x250 PUSH2 0x25C JUMP JUMPDEST PUSH2 0x259 DUP2 PUSH2 0x2EC JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2EA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E1 SWAP1 PUSH2 0x59B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x35A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x351 SWAP1 PUSH2 0x607 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x443 DUP3 PUSH2 0x418 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x453 DUP2 PUSH2 0x438 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x46E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x44A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x482 DUP2 PUSH2 0x438 JUMP JUMPDEST DUP2 EQ PUSH2 0x48D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x49F DUP2 PUSH2 0x479 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4BB JUMPI PUSH2 0x4BA PUSH2 0x474 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4C9 DUP5 DUP3 DUP6 ADD PUSH2 0x490 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4D7573742062652070726F706F736564206F776E657200000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x519 PUSH1 0x16 DUP4 PUSH2 0x4D2 JUMP JUMPDEST SWAP2 POP PUSH2 0x524 DUP3 PUSH2 0x4E3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x548 DUP2 PUSH2 0x50C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F6E6C792063616C6C61626C65206279206F776E657200000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x585 PUSH1 0x16 DUP4 PUSH2 0x4D2 JUMP JUMPDEST SWAP2 POP PUSH2 0x590 DUP3 PUSH2 0x54F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x5B4 DUP2 PUSH2 0x578 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616E6E6F74207472616E7366657220746F2073656C66000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5F1 PUSH1 0x17 DUP4 PUSH2 0x4D2 JUMP JUMPDEST SWAP2 POP PUSH2 0x5FC DUP3 PUSH2 0x5BB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x620 DUP2 PUSH2 0x5E4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EQ SWAP9 0xAE MULMOD 0xAC 0x2A 0x21 PUSH3 0x1BDE51 0x4E 0xC0 GAS 0xD7 0xA7 0x4F 0xCE 0xC6 0xB4 0xD8 0xAB DUP7 PUSH25 0x279AC4A78A270B7664736F6C63430008180033000000000000 ","sourceMap":"206:1769:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1001:265;;;:::i;:::-;;1317:81;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;811:98;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1001:265;1074:14;;;;;;;;;;;1060:28;;:10;:28;;;1052:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1122:16;1141:7;;;;;;;;;;;1122:26;;1164:10;1154:7;;:20;;;;;;;;;;;;;;;;;;1205:1;1180:14;;:27;;;;;;;;;;;;;;;;;;1250:10;1219:42;;1240:8;1219:42;;;;;;;;;;;;1046:220;1001:265::o;1317:81::-;1364:7;1386;;;;;;;;;;;1379:14;;1317:81;:::o;811:98::-;1941:20;:18;:20::i;:::-;882:22:::1;901:2;882:18;:22::i;:::-;811:98:::0;:::o;1715:111::-;1787:7;;;;;;;;;;1773:21;;:10;:21;;;1765:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;1715:111::o;1482:188::-;1550:10;1544:16;;:2;:16;;;1536:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;1612:2;1595:14;;:19;;;;;;;;;;;;;;;;;;1662:2;1626:39;;1653:7;;;;;;;;;;1626:39;;;;;;;;;;;;1482:188;:::o;7:126:20:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;674:117::-;783:1;780;773:12;920:122;993:24;1011:5;993:24;:::i;:::-;986:5;983:35;973:63;;1032:1;1029;1022:12;973:63;920:122;:::o;1048:139::-;1094:5;1132:6;1119:20;1110:29;;1148:33;1175:5;1148:33;:::i;:::-;1048:139;;;;:::o;1193:329::-;1252:6;1301:2;1289:9;1280:7;1276:23;1272:32;1269:119;;;1307:79;;:::i;:::-;1269:119;1427:1;1452:53;1497:7;1488:6;1477:9;1473:22;1452:53;:::i;:::-;1442:63;;1398:117;1193:329;;;;:::o;1528:169::-;1612:11;1646:6;1641:3;1634:19;1686:4;1681:3;1677:14;1662:29;;1528:169;;;;:::o;1703:172::-;1843:24;1839:1;1831:6;1827:14;1820:48;1703:172;:::o;1881:366::-;2023:3;2044:67;2108:2;2103:3;2044:67;:::i;:::-;2037:74;;2120:93;2209:3;2120:93;:::i;:::-;2238:2;2233:3;2229:12;2222:19;;1881:366;;;:::o;2253:419::-;2419:4;2457:2;2446:9;2442:18;2434:26;;2506:9;2500:4;2496:20;2492:1;2481:9;2477:17;2470:47;2534:131;2660:4;2534:131;:::i;:::-;2526:139;;2253:419;;;:::o;2678:172::-;2818:24;2814:1;2806:6;2802:14;2795:48;2678:172;:::o;2856:366::-;2998:3;3019:67;3083:2;3078:3;3019:67;:::i;:::-;3012:74;;3095:93;3184:3;3095:93;:::i;:::-;3213:2;3208:3;3204:12;3197:19;;2856:366;;;:::o;3228:419::-;3394:4;3432:2;3421:9;3417:18;3409:26;;3481:9;3475:4;3471:20;3467:1;3456:9;3452:17;3445:47;3509:131;3635:4;3509:131;:::i;:::-;3501:139;;3228:419;;;:::o;3653:173::-;3793:25;3789:1;3781:6;3777:14;3770:49;3653:173;:::o;3832:366::-;3974:3;3995:67;4059:2;4054:3;3995:67;:::i;:::-;3988:74;;4071:93;4160:3;4071:93;:::i;:::-;4189:2;4184:3;4180:12;4173:19;;3832:366;;;:::o;4204:419::-;4370:4;4408:2;4397:9;4393:18;4385:26;;4457:9;4451:4;4447:20;4443:1;4432:9;4428:17;4421:47;4485:131;4611:4;4485:131;:::i;:::-;4477:139;;4204:419;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"325800","executionCost":"infinite","totalCost":"infinite"},"external":{"acceptOwnership()":"54518","owner()":"2522","transferOwnership(address)":"30676"},"internal":{"_transferOwnership(address)":"infinite","_validateOwnership()":"infinite"}},"methodIdentifiers":{"acceptOwnership()":"79ba5097","owner()":"8da5cb5b","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pendingOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"The ConfirmedOwner contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptOwnership()\":{\"notice\":\"Allows an ownership transfer to be completed by the recipient.\"},\"owner()\":{\"notice\":\"Get the current owner\"},\"transferOwnership(address)\":{\"notice\":\"Allows an owner to begin transferring ownership to a new address, pending.\"}},\"notice\":\"A contract with helpers for basic contract ownership.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":\"ConfirmedOwnerWithProposal\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"../interfaces/IOwnable.sol\\\";\\n\\n/**\\n * @title The ConfirmedOwner contract\\n * @notice A contract with helpers for basic contract ownership.\\n */\\ncontract ConfirmedOwnerWithProposal is IOwnable {\\n  address private s_owner;\\n  address private s_pendingOwner;\\n\\n  event OwnershipTransferRequested(address indexed from, address indexed to);\\n  event OwnershipTransferred(address indexed from, address indexed to);\\n\\n  constructor(address newOwner, address pendingOwner) {\\n    require(newOwner != address(0), \\\"Cannot set owner to zero\\\");\\n\\n    s_owner = newOwner;\\n    if (pendingOwner != address(0)) {\\n      _transferOwnership(pendingOwner);\\n    }\\n  }\\n\\n  /**\\n   * @notice Allows an owner to begin transferring ownership to a new address,\\n   * pending.\\n   */\\n  function transferOwnership(address to) public override onlyOwner {\\n    _transferOwnership(to);\\n  }\\n\\n  /**\\n   * @notice Allows an ownership transfer to be completed by the recipient.\\n   */\\n  function acceptOwnership() external override {\\n    require(msg.sender == s_pendingOwner, \\\"Must be proposed owner\\\");\\n\\n    address oldOwner = s_owner;\\n    s_owner = msg.sender;\\n    s_pendingOwner = address(0);\\n\\n    emit OwnershipTransferred(oldOwner, msg.sender);\\n  }\\n\\n  /**\\n   * @notice Get the current owner\\n   */\\n  function owner() public view override returns (address) {\\n    return s_owner;\\n  }\\n\\n  /**\\n   * @notice validate, transfer ownership, and emit relevant events\\n   */\\n  function _transferOwnership(address to) private {\\n    require(to != msg.sender, \\\"Cannot transfer to self\\\");\\n\\n    s_pendingOwner = to;\\n\\n    emit OwnershipTransferRequested(s_owner, to);\\n  }\\n\\n  /**\\n   * @notice validate access\\n   */\\n  function _validateOwnership() internal view {\\n    require(msg.sender == s_owner, \\\"Only callable by owner\\\");\\n  }\\n\\n  /**\\n   * @notice Reverts if called by anyone other than the contract owner.\\n   */\\n  modifier onlyOwner() {\\n    _validateOwnership();\\n    _;\\n  }\\n}\\n\",\"keccak256\":\"0x215529a99534a40e6257ef2282a91ea4a95b66debc3997866406907622efb405\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/shared/interfaces/IOwnable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface IOwnable {\\n  function owner() external returns (address);\\n\\n  function transferOwnership(address recipient) external;\\n\\n  function acceptOwnership() external;\\n}\\n\",\"keccak256\":\"0x885de72b7b4e4f1bf8ba817a3f2bcc37fd9022d342c4ce76782151c30122d767\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":435,"contract":"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol:ConfirmedOwnerWithProposal","label":"s_owner","offset":0,"slot":"0","type":"t_address"},{"astId":437,"contract":"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol:ConfirmedOwnerWithProposal","label":"s_pendingOwner","offset":0,"slot":"1","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"}}},"userdoc":{"kind":"user","methods":{"acceptOwnership()":{"notice":"Allows an ownership transfer to be completed by the recipient."},"owner()":{"notice":"Get the current owner"},"transferOwnership(address)":{"notice":"Allows an owner to begin transferring ownership to a new address, pending."}},"notice":"A contract with helpers for basic contract ownership.","version":1}}},"@chainlink/contracts/src/v0.8/shared/interfaces/IERC677Receiver.sol":{"IERC677Receiver":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onTokenTransfer","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"onTokenTransfer(address,uint256,bytes)":"a4c0ed36"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onTokenTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/shared/interfaces/IERC677Receiver.sol\":\"IERC677Receiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/shared/interfaces/IERC677Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.6;\\n\\ninterface IERC677Receiver {\\n  function onTokenTransfer(address sender, uint256 amount, bytes calldata data) external;\\n}\\n\",\"keccak256\":\"0x5f9ee31598e2250815033c2f4e1e7e747f917815378938505063df1d4ae603ec\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@chainlink/contracts/src/v0.8/shared/interfaces/IOwnable.sol":{"IOwnable":{"abi":[{"inputs":[],"name":"acceptOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"acceptOwnership()":"79ba5097","owner()":"8da5cb5b","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/shared/interfaces/IOwnable.sol\":\"IOwnable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/shared/interfaces/IOwnable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface IOwnable {\\n  function owner() external returns (address);\\n\\n  function transferOwnership(address recipient) external;\\n\\n  function acceptOwnership() external;\\n}\\n\",\"keccak256\":\"0x885de72b7b4e4f1bf8ba817a3f2bcc37fd9022d342c4ce76782151c30122d767\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@chainlink/contracts/src/v0.8/shared/interfaces/LinkTokenInterface.sol":{"LinkTokenInterface":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"remaining","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"decimalPlaces","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"decreaseApproval","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"increaseApproval","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"tokenName","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"tokenSymbol","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"totalTokensIssued","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"transferAndCall","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","decreaseApproval(address,uint256)":"66188463","increaseApproval(address,uint256)":"d73dd623","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferAndCall(address,uint256,bytes)":"4000aea0","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"remaining\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"decimalPlaces\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseApproval\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"increaseApproval\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"tokenName\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"tokenSymbol\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalTokensIssued\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/shared/interfaces/LinkTokenInterface.sol\":\"LinkTokenInterface\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/shared/interfaces/LinkTokenInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface LinkTokenInterface {\\n  function allowance(address owner, address spender) external view returns (uint256 remaining);\\n\\n  function approve(address spender, uint256 value) external returns (bool success);\\n\\n  function balanceOf(address owner) external view returns (uint256 balance);\\n\\n  function decimals() external view returns (uint8 decimalPlaces);\\n\\n  function decreaseApproval(address spender, uint256 addedValue) external returns (bool success);\\n\\n  function increaseApproval(address spender, uint256 subtractedValue) external;\\n\\n  function name() external view returns (string memory tokenName);\\n\\n  function symbol() external view returns (string memory tokenSymbol);\\n\\n  function totalSupply() external view returns (uint256 totalTokensIssued);\\n\\n  function transfer(address to, uint256 value) external returns (bool success);\\n\\n  function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool success);\\n\\n  function transferFrom(address from, address to, uint256 value) external returns (bool success);\\n}\\n\",\"keccak256\":\"0xac02fbc0c7d194e525a71f524d1f7c472df73e19c2b527d7b529badaeaf0ec51\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@chainlink/contracts/src/v0.8/vendor/@arbitrum/nitro-contracts/src/precompiles/ArbGasInfo.sol":{"ArbGasInfo":{"abi":[{"inputs":[],"name":"getCurrentTxL1GasFees","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getGasAccountingParams","outputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getL1GasPriceEstimate","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getPricesInArbGas","outputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"aggregator","type":"address"}],"name":"getPricesInArbGasWithAggregator","outputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getPricesInWei","outputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"aggregator","type":"address"}],"name":"getPricesInWeiWithAggregator","outputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"priceInWei","type":"uint256"}],"name":"setL1GasPriceEstimate","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"getCurrentTxL1GasFees()":"c6f7de0e","getGasAccountingParams()":"612af178","getL1GasPriceEstimate()":"055f362f","getPricesInArbGas()":"02199f34","getPricesInArbGasWithAggregator(address)":"7a1ea732","getPricesInWei()":"41b247a8","getPricesInWeiWithAggregator(address)":"ba9c916e","setL1GasPriceEstimate(uint256)":"4290549e"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"getCurrentTxL1GasFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getGasAccountingParams\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getL1GasPriceEstimate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPricesInArbGas\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"aggregator\",\"type\":\"address\"}],\"name\":\"getPricesInArbGasWithAggregator\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPricesInWei\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"aggregator\",\"type\":\"address\"}],\"name\":\"getPricesInWeiWithAggregator\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"priceInWei\",\"type\":\"uint256\"}],\"name\":\"setL1GasPriceEstimate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/vendor/@arbitrum/nitro-contracts/src/precompiles/ArbGasInfo.sol\":\"ArbGasInfo\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/vendor/@arbitrum/nitro-contracts/src/precompiles/ArbGasInfo.sol\":{\"content\":\"// Copyright 2021-2022, Offchain Labs, Inc.\\n// For license information, see https://github.com/nitro/blob/master/LICENSE\\n// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity >=0.4.21 <0.9.0;\\n\\ninterface ArbGasInfo {\\n    // return gas prices in wei, assuming the specified aggregator is used\\n    //        (\\n    //            per L2 tx,\\n    //            per L1 calldata unit, (zero byte = 4 units, nonzero byte = 16 units)\\n    //            per storage allocation,\\n    //            per ArbGas base,\\n    //            per ArbGas congestion,\\n    //            per ArbGas total\\n    //        )\\n    function getPricesInWeiWithAggregator(address aggregator) external view returns (uint, uint, uint, uint, uint, uint);\\n\\n    // return gas prices in wei, as described above, assuming the caller's preferred aggregator is used\\n    //     if the caller hasn't specified a preferred aggregator, the default aggregator is assumed\\n    function getPricesInWei() external view returns (uint, uint, uint, uint, uint, uint);\\n\\n    // return prices in ArbGas (per L2 tx, per L1 calldata unit, per storage allocation),\\n    //       assuming the specified aggregator is used\\n    function getPricesInArbGasWithAggregator(address aggregator) external view returns (uint, uint, uint);\\n\\n    // return gas prices in ArbGas, as described above, assuming the caller's preferred aggregator is used\\n    //     if the caller hasn't specified a preferred aggregator, the default aggregator is assumed\\n    function getPricesInArbGas() external view returns (uint, uint, uint);\\n\\n    // return gas accounting parameters (speedLimitPerSecond, gasPoolMax, maxTxGasLimit)\\n    function getGasAccountingParams() external view returns (uint, uint, uint);\\n\\n    // get ArbOS's estimate of the L1 gas price in wei\\n    function getL1GasPriceEstimate() external view returns(uint);\\n\\n    // set ArbOS's estimate of the L1 gas price in wei\\n    // reverts unless called by chain owner or designated gas oracle (if any)\\n    function setL1GasPriceEstimate(uint priceInWei) external;\\n\\n    // get L1 gas fees paid by the current transaction (txBaseFeeWei, calldataFeeWei)\\n    function getCurrentTxL1GasFees() external view returns(uint);\\n}\\n\",\"keccak256\":\"0x70607287132cc13f599a31a2eb679f4259f86429ea2fdf4f8f02be3044f6db5a\",\"license\":\"BUSL-1.1\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@chainlink/contracts/src/v0.8/vendor/@arbitrum/nitro-contracts/src/precompiles/ArbSys.sol":{"ArbSys":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"caller","type":"address"},{"indexed":true,"internalType":"address","name":"destination","type":"address"},{"indexed":true,"internalType":"uint256","name":"uniqueId","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"batchNumber","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"indexInBatch","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"arbBlockNum","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"ethBlockNum","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"callvalue","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"data","type":"bytes"}],"name":"L2ToL1Transaction","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"caller","type":"address"},{"indexed":true,"internalType":"address","name":"destination","type":"address"},{"indexed":true,"internalType":"uint256","name":"hash","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"position","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"arbBlockNum","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"ethBlockNum","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"callvalue","type":"uint256"},{"indexed":false,"internalType":"bytes","name":"data","type":"bytes"}],"name":"L2ToL1Tx","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"reserved","type":"uint256"},{"indexed":true,"internalType":"bytes32","name":"hash","type":"bytes32"},{"indexed":true,"internalType":"uint256","name":"position","type":"uint256"}],"name":"SendMerkleUpdate","type":"event"},{"inputs":[{"internalType":"uint256","name":"arbBlockNum","type":"uint256"}],"name":"arbBlockHash","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"arbBlockNumber","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"arbChainID","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"arbOSVersion","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getStorageGasAvailable","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"isTopLevelCall","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"unused","type":"address"}],"name":"mapL1SenderContractAddressToL2Alias","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"myCallersAddressWithoutAliasing","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"sendMerkleTreeState","outputs":[{"internalType":"uint256","name":"size","type":"uint256"},{"internalType":"bytes32","name":"root","type":"bytes32"},{"internalType":"bytes32[]","name":"partials","type":"bytes32[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"destination","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"sendTxToL1","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"wasMyCallersAddressAliased","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"destination","type":"address"}],"name":"withdrawEth","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"payable","type":"function"}],"devdoc":{"events":{"L2ToL1Transaction(address,address,uint256,uint256,uint256,uint256,uint256,uint256,uint256,bytes)":{"details":"DEPRECATED in favour of the new L2ToL1Tx event above after the nitro upgrade"},"L2ToL1Tx(address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes)":{"params":{"position":"= (level << 192) + leaf = (0 << 192) + leaf = leaf"}},"SendMerkleUpdate(uint256,bytes32,uint256)":{"params":{"hash":"the merkle hash","position":"= (level << 192) + leaf","reserved":"an index meant only to align the 4th index with L2ToL1Transaction's 4th event"}}},"kind":"dev","methods":{"arbBlockHash(uint256)":{"returns":{"_0":"block hash"}},"arbBlockNumber()":{"returns":{"_0":"block number as int"}},"arbChainID()":{"returns":{"_0":"Chain identifier as int"}},"arbOSVersion()":{"returns":{"_0":"version number as int"}},"getStorageGasAvailable()":{"returns":{"_0":"uint 0"}},"isTopLevelCall()":{"details":"this call has been deprecated and may be removed in a future release","returns":{"_0":"true if current execution frame is not a call by another L2 contract"}},"mapL1SenderContractAddressToL2Alias(address,address)":{"params":{"sender":"sender address","unused":"argument no longer used"},"returns":{"_0":"aliased sender address"}},"myCallersAddressWithoutAliasing()":{"returns":{"_0":"address of the caller's caller, without applying L1 contract address aliasing"}},"sendMerkleTreeState()":{"returns":{"partials":"hashes of partial subtrees in the send history tree","root":"root hash of the send history","size":"number of sends in the history"}},"sendTxToL1(address,bytes)":{"details":"it is not possible to execute on the L1 any L2-to-L1 transaction which contains data to a contract address without any code (as enforced by the Bridge contract).","params":{"data":"(optional) calldata for L1 contract call","destination":"recipient address on L1"},"returns":{"_0":"a unique identifier for this L2-to-L1 transaction."}},"wasMyCallersAddressAliased()":{"returns":{"_0":"true iff the caller's address is an alias for an L1 contract address"}},"withdrawEth(address)":{"params":{"destination":"recipient address on L1"},"returns":{"_0":"unique identifier for this L2-to-L1 transaction."}}},"title":"System level functionality","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"arbBlockHash(uint256)":"2b407a82","arbBlockNumber()":"a3b1b31d","arbChainID()":"d127f54a","arbOSVersion()":"051038f2","getStorageGasAvailable()":"a94597ff","isTopLevelCall()":"08bd624c","mapL1SenderContractAddressToL2Alias(address,address)":"4dbbd506","myCallersAddressWithoutAliasing()":"d74523b3","sendMerkleTreeState()":"7aeecd2a","sendTxToL1(address,bytes)":"928c169a","wasMyCallersAddressAliased()":"175a260b","withdrawEth(address)":"25e16063"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"uniqueId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"batchNumber\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"indexInBatch\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"arbBlockNum\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"ethBlockNum\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"callvalue\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"L2ToL1Transaction\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"hash\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"position\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"arbBlockNum\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"ethBlockNum\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"callvalue\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"L2ToL1Tx\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"reserved\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"position\",\"type\":\"uint256\"}],\"name\":\"SendMerkleUpdate\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"arbBlockNum\",\"type\":\"uint256\"}],\"name\":\"arbBlockHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"arbBlockNumber\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"arbChainID\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"arbOSVersion\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStorageGasAvailable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isTopLevelCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"unused\",\"type\":\"address\"}],\"name\":\"mapL1SenderContractAddressToL2Alias\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"myCallersAddressWithoutAliasing\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sendMerkleTreeState\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"size\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"root\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"partials\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"sendTxToL1\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wasMyCallersAddressAliased\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"}],\"name\":\"withdrawEth\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"L2ToL1Transaction(address,address,uint256,uint256,uint256,uint256,uint256,uint256,uint256,bytes)\":{\"details\":\"DEPRECATED in favour of the new L2ToL1Tx event above after the nitro upgrade\"},\"L2ToL1Tx(address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes)\":{\"params\":{\"position\":\"= (level << 192) + leaf = (0 << 192) + leaf = leaf\"}},\"SendMerkleUpdate(uint256,bytes32,uint256)\":{\"params\":{\"hash\":\"the merkle hash\",\"position\":\"= (level << 192) + leaf\",\"reserved\":\"an index meant only to align the 4th index with L2ToL1Transaction's 4th event\"}}},\"kind\":\"dev\",\"methods\":{\"arbBlockHash(uint256)\":{\"returns\":{\"_0\":\"block hash\"}},\"arbBlockNumber()\":{\"returns\":{\"_0\":\"block number as int\"}},\"arbChainID()\":{\"returns\":{\"_0\":\"Chain identifier as int\"}},\"arbOSVersion()\":{\"returns\":{\"_0\":\"version number as int\"}},\"getStorageGasAvailable()\":{\"returns\":{\"_0\":\"uint 0\"}},\"isTopLevelCall()\":{\"details\":\"this call has been deprecated and may be removed in a future release\",\"returns\":{\"_0\":\"true if current execution frame is not a call by another L2 contract\"}},\"mapL1SenderContractAddressToL2Alias(address,address)\":{\"params\":{\"sender\":\"sender address\",\"unused\":\"argument no longer used\"},\"returns\":{\"_0\":\"aliased sender address\"}},\"myCallersAddressWithoutAliasing()\":{\"returns\":{\"_0\":\"address of the caller's caller, without applying L1 contract address aliasing\"}},\"sendMerkleTreeState()\":{\"returns\":{\"partials\":\"hashes of partial subtrees in the send history tree\",\"root\":\"root hash of the send history\",\"size\":\"number of sends in the history\"}},\"sendTxToL1(address,bytes)\":{\"details\":\"it is not possible to execute on the L1 any L2-to-L1 transaction which contains data to a contract address without any code (as enforced by the Bridge contract).\",\"params\":{\"data\":\"(optional) calldata for L1 contract call\",\"destination\":\"recipient address on L1\"},\"returns\":{\"_0\":\"a unique identifier for this L2-to-L1 transaction.\"}},\"wasMyCallersAddressAliased()\":{\"returns\":{\"_0\":\"true iff the caller's address is an alias for an L1 contract address\"}},\"withdrawEth(address)\":{\"params\":{\"destination\":\"recipient address on L1\"},\"returns\":{\"_0\":\"unique identifier for this L2-to-L1 transaction.\"}}},\"title\":\"System level functionality\",\"version\":1},\"userdoc\":{\"events\":{\"L2ToL1Tx(address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes)\":{\"notice\":\"creates a send txn from L2 to L1\"},\"SendMerkleUpdate(uint256,bytes32,uint256)\":{\"notice\":\"logs a merkle branch for proof synthesis\"}},\"kind\":\"user\",\"methods\":{\"arbBlockHash(uint256)\":{\"notice\":\"Get Arbitrum block hash (reverts unless currentBlockNum-256 <= arbBlockNum < currentBlockNum)\"},\"arbBlockNumber()\":{\"notice\":\"Get Arbitrum block number (distinct from L1 block number; Arbitrum genesis block has block number 0)\"},\"arbChainID()\":{\"notice\":\"Gets the rollup's unique chain identifier\"},\"arbOSVersion()\":{\"notice\":\"Get internal version number identifying an ArbOS build\"},\"getStorageGasAvailable()\":{\"notice\":\"Returns 0 since Nitro has no concept of storage gas\"},\"isTopLevelCall()\":{\"notice\":\"(deprecated) check if current call is top level (meaning it was triggered by an EoA or a L1 contract)\"},\"mapL1SenderContractAddressToL2Alias(address,address)\":{\"notice\":\"map L1 sender contract address to its L2 alias\"},\"myCallersAddressWithoutAliasing()\":{\"notice\":\"return the address of the caller (of this caller of this), without applying L1 contract address aliasing\"},\"sendMerkleTreeState()\":{\"notice\":\"Get send Merkle tree state\"},\"sendTxToL1(address,bytes)\":{\"notice\":\"Send a transaction to L1\"},\"wasMyCallersAddressAliased()\":{\"notice\":\"check if the caller (of this caller of this) is an aliased L1 contract address\"},\"withdrawEth(address)\":{\"notice\":\"Send given amount of Eth to dest from sender. This is a convenience function, which is equivalent to calling sendTxToL1 with empty data.\"}},\"notice\":\"For use by contracts to interact with core L2-specific functionality. Precompiled contract that exists in every Arbitrum chain at address(100), 0x0000000000000000000000000000000000000064.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/vendor/@arbitrum/nitro-contracts/src/precompiles/ArbSys.sol\":\"ArbSys\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/vendor/@arbitrum/nitro-contracts/src/precompiles/ArbSys.sol\":{\"content\":\"// Copyright 2021-2022, Offchain Labs, Inc.\\n// For license information, see https://github.com/nitro/blob/master/LICENSE\\n// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity >=0.4.21 <0.9.0;\\n\\n/**\\n * @title System level functionality\\n * @notice For use by contracts to interact with core L2-specific functionality.\\n * Precompiled contract that exists in every Arbitrum chain at address(100), 0x0000000000000000000000000000000000000064.\\n */\\ninterface ArbSys {\\n    /**\\n     * @notice Get Arbitrum block number (distinct from L1 block number; Arbitrum genesis block has block number 0)\\n     * @return block number as int\\n     */\\n    function arbBlockNumber() external view returns (uint256);\\n\\n    /**\\n     * @notice Get Arbitrum block hash (reverts unless currentBlockNum-256 <= arbBlockNum < currentBlockNum)\\n     * @return block hash\\n     */\\n    function arbBlockHash(uint256 arbBlockNum) external view returns (bytes32);\\n\\n    /**\\n     * @notice Gets the rollup's unique chain identifier\\n     * @return Chain identifier as int\\n     */\\n    function arbChainID() external view returns (uint256);\\n\\n    /**\\n     * @notice Get internal version number identifying an ArbOS build\\n     * @return version number as int\\n     */\\n    function arbOSVersion() external view returns (uint256);\\n\\n    /**\\n     * @notice Returns 0 since Nitro has no concept of storage gas\\n     * @return uint 0\\n     */\\n    function getStorageGasAvailable() external view returns (uint256);\\n\\n    /**\\n     * @notice (deprecated) check if current call is top level (meaning it was triggered by an EoA or a L1 contract)\\n     * @dev this call has been deprecated and may be removed in a future release\\n     * @return true if current execution frame is not a call by another L2 contract\\n     */\\n    function isTopLevelCall() external view returns (bool);\\n\\n    /**\\n     * @notice map L1 sender contract address to its L2 alias\\n     * @param sender sender address\\n     * @param unused argument no longer used\\n     * @return aliased sender address\\n     */\\n    function mapL1SenderContractAddressToL2Alias(address sender, address unused)\\n        external\\n        pure\\n        returns (address);\\n\\n    /**\\n     * @notice check if the caller (of this caller of this) is an aliased L1 contract address\\n     * @return true iff the caller's address is an alias for an L1 contract address\\n     */\\n    function wasMyCallersAddressAliased() external view returns (bool);\\n\\n    /**\\n     * @notice return the address of the caller (of this caller of this), without applying L1 contract address aliasing\\n     * @return address of the caller's caller, without applying L1 contract address aliasing\\n     */\\n    function myCallersAddressWithoutAliasing() external view returns (address);\\n\\n    /**\\n     * @notice Send given amount of Eth to dest from sender.\\n     * This is a convenience function, which is equivalent to calling sendTxToL1 with empty data.\\n     * @param destination recipient address on L1\\n     * @return unique identifier for this L2-to-L1 transaction.\\n     */\\n    function withdrawEth(address destination)\\n        external\\n        payable\\n        returns (uint256);\\n\\n    /**\\n     * @notice Send a transaction to L1\\n     * @dev it is not possible to execute on the L1 any L2-to-L1 transaction which contains data\\n     * to a contract address without any code (as enforced by the Bridge contract).\\n     * @param destination recipient address on L1\\n     * @param data (optional) calldata for L1 contract call\\n     * @return a unique identifier for this L2-to-L1 transaction.\\n     */\\n    function sendTxToL1(address destination, bytes calldata data)\\n        external\\n        payable\\n        returns (uint256);\\n\\n    /**\\n     * @notice Get send Merkle tree state\\n     * @return size number of sends in the history\\n     * @return root root hash of the send history\\n     * @return partials hashes of partial subtrees in the send history tree\\n     */\\n    function sendMerkleTreeState()\\n        external\\n        view\\n        returns (\\n            uint256 size,\\n            bytes32 root,\\n            bytes32[] memory partials\\n        );\\n\\n    /**\\n     * @notice creates a send txn from L2 to L1\\n     * @param position = (level << 192) + leaf = (0 << 192) + leaf = leaf\\n     */\\n    event L2ToL1Tx(\\n        address caller,\\n        address indexed destination,\\n        uint256 indexed hash,\\n        uint256 indexed position,\\n        uint256 arbBlockNum,\\n        uint256 ethBlockNum,\\n        uint256 timestamp,\\n        uint256 callvalue,\\n        bytes data\\n    );\\n\\n    /// @dev DEPRECATED in favour of the new L2ToL1Tx event above after the nitro upgrade\\n    event L2ToL1Transaction(\\n        address caller,\\n        address indexed destination,\\n        uint256 indexed uniqueId,\\n        uint256 indexed batchNumber,\\n        uint256 indexInBatch,\\n        uint256 arbBlockNum,\\n        uint256 ethBlockNum,\\n        uint256 timestamp,\\n        uint256 callvalue,\\n        bytes data\\n    );\\n\\n    /**\\n     * @notice logs a merkle branch for proof synthesis\\n     * @param reserved an index meant only to align the 4th index with L2ToL1Transaction's 4th event\\n     * @param hash the merkle hash\\n     * @param position = (level << 192) + leaf\\n     */\\n    event SendMerkleUpdate(\\n        uint256 indexed reserved,\\n        bytes32 indexed hash,\\n        uint256 indexed position\\n    );\\n}\\n\",\"keccak256\":\"0xa8461b373712cb0f4950ef9cad1d12fb38442da76cd57ff916baa7920f7b5077\",\"license\":\"BUSL-1.1\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"events":{"L2ToL1Tx(address,address,uint256,uint256,uint256,uint256,uint256,uint256,bytes)":{"notice":"creates a send txn from L2 to L1"},"SendMerkleUpdate(uint256,bytes32,uint256)":{"notice":"logs a merkle branch for proof synthesis"}},"kind":"user","methods":{"arbBlockHash(uint256)":{"notice":"Get Arbitrum block hash (reverts unless currentBlockNum-256 <= arbBlockNum < currentBlockNum)"},"arbBlockNumber()":{"notice":"Get Arbitrum block number (distinct from L1 block number; Arbitrum genesis block has block number 0)"},"arbChainID()":{"notice":"Gets the rollup's unique chain identifier"},"arbOSVersion()":{"notice":"Get internal version number identifying an ArbOS build"},"getStorageGasAvailable()":{"notice":"Returns 0 since Nitro has no concept of storage gas"},"isTopLevelCall()":{"notice":"(deprecated) check if current call is top level (meaning it was triggered by an EoA or a L1 contract)"},"mapL1SenderContractAddressToL2Alias(address,address)":{"notice":"map L1 sender contract address to its L2 alias"},"myCallersAddressWithoutAliasing()":{"notice":"return the address of the caller (of this caller of this), without applying L1 contract address aliasing"},"sendMerkleTreeState()":{"notice":"Get send Merkle tree state"},"sendTxToL1(address,bytes)":{"notice":"Send a transaction to L1"},"wasMyCallersAddressAliased()":{"notice":"check if the caller (of this caller of this) is an aliased L1 contract address"},"withdrawEth(address)":{"notice":"Send given amount of Eth to dest from sender. This is a convenience function, which is equivalent to calling sendTxToL1 with empty data."}},"notice":"For use by contracts to interact with core L2-specific functionality. Precompiled contract that exists in every Arbitrum chain at address(100), 0x0000000000000000000000000000000000000064.","version":1}}},"@chainlink/contracts/src/v0.8/vrf/VRF.sol":{"VRF":{"abi":[],"devdoc":{"details":"Bibliographic references:Goldberg, et al., \"Verifiable Random Functions (VRFs)\", Internet Draftdraft-irtf-cfrg-vrf-05, IETF, Aug 11 2019,https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05Papadopoulos, et al., \"Making NSEC5 Practical for DNSSEC\", CryptologyePrint Archive, Report 2017/099, https://eprint.iacr.org/2017/099.pdf ****************************************************************************USAGEThe main entry point is randomValueFromVRFProof. See its docstring. ****************************************************************************PURPOSEReggie the Random Oracle (not his real job) wants to provide randomnessto Vera the verifier in such a way that Vera can be sure he's notmaking his output up to suit himself. Reggie provides Vera a public keyto which he knows the secret key. Each time Vera provides a seed toReggie, he gives back a value which is computed completelydeterministically from the seed and the secret key.Reggie provides a proof by which Vera can verify that the output wascorrectly computed once Reggie tells it to her, but without that proof,the output is computationally indistinguishable to her from a uniformrandom sample from the output space.The purpose of this contract is to perform that verification. ****************************************************************************DESIGN NOTESThe VRF algorithm verified here satisfies the full uniqueness, fullcollision resistance, and full pseudo-randomness security properties.See \"SECURITY PROPERTIES\" below, andhttps://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-3An elliptic curve point is generally represented in the solidity codeas a uint256[2], corresponding to its affine coordinates inGF(FIELD_SIZE).For the sake of efficiency, this implementation deviates from the specin some minor ways:- Keccak hash rather than the SHA256 hash recommended inhttps://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-5.5Keccak costs much less gas on the EVM, and provides similar security.- Secp256k1 curve instead of the P-256 or ED25519 curves recommended inhttps://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-5.5For curve-point multiplication, it's much cheaper to abuse ECRECOVER- hashToCurve recursively hashes until it finds a curve x-ordinate. Onthe EVM, this is slightly more efficient than the recommendation inhttps://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-5.4.1.1step 5, to concatenate with a nonce then hash, and rehash with thenonce updated until a valid x-ordinate is found.- hashToCurve does not include a cipher version string or the byte 0x1in the hash message, as recommended in step 5.B of the draftstandard. They are unnecessary here because no variation in thecipher suite is allowed.- Similarly, the hash input in scalarFromCurvePoints does not include acommitment to the cipher suite, either, which differs from step 2 ofhttps://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-5.4.3. Also, the hash input is the concatenation of the uncompressedpoints, not the compressed points as recommended in step 3.- In the calculation of the challenge value \"c\", the \"u\" value (i.e.the value computed by Reggie as the nonce times the secp256k1generator point, see steps 5 and 7 ofhttps://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-5.3) is replaced by its ethereum address, i.e. the lower 160 bits of thekeccak hash of the original u. This is because we only verify thecalculation of u up to its address, by abusing ECRECOVER. ****************************************************************************SECURITY PROPERTIESHere are the security properties for this VRF:Full uniqueness: For any seed and valid VRF public key, there isexactly one VRF output which can be proved to come from that seed, inthe sense that the proof will pass verifyVRFProof.Full collision resistance: It's cryptographically infeasible to findtwo seeds with same VRF output from a fixed, valid VRF keyFull pseudorandomness: Absent the proofs that the VRF outputs arederived from a given seed, the outputs are computationallyindistinguishable from randomness.https://eprint.iacr.org/2017/099.pdf, Appendix B contains the proofsfor these properties.For secp256k1, the key validation described in sectionhttps://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-5.6is unnecessary, because secp256k1 has cofactor 1, and therepresentation of the public key used here (affine x- and y-ordinatesof the secp256k1 point on the standard y^2=x^3+7 curve) cannot refer tothe point at infinity. ****************************************************************************OTHER SECURITY CONSIDERATIONSThe seed input to the VRF could in principle force an arbitrary amountof work in hashToCurve, by requiring extra rounds of hashing andchecking whether that's yielded the x ordinate of a secp256k1 point.However, under the Random Oracle Model the probability of choosing apoint which forces n extra rounds in hashToCurve is 2⁻ⁿ. The base costfor calling hashToCurve is about 25,000 gas, and each round of checkingfor a valid x ordinate costs about 15,555 gas, so to find a seed forwhich hashToCurve would cost more than 2,017,000 gas, one would have totry, in expectation, about 2¹²⁸ seeds, which is infeasible for anyforeseeable computational resources. (25,000 + 128 * 15,555 < 2,017,000.)Since the gas block limit for the Ethereum main net is 10,000,000 gas,this means it is infeasible for an adversary to prevent correctoperation of this contract by choosing an adverse seed.(See TestMeasureHashToCurveGasCost for verification of the gas cost forhashToCurve.)It may be possible to make a secure constant-time hashToCurve function.See notes in hashToCurve docstring.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea2646970667358221220bef7741d4c2b3d6383e3699129beec0bad86e61ac2e40628e345fd731303354e64736f6c63430008180033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBE 0xF7 PUSH21 0x1D4C2B3D6383E3699129BEEC0BAD86E61AC2E40628 0xE3 GASLIMIT REVERT PUSH20 0x1303354E64736F6C634300081800330000000000 ","sourceMap":"7170:19148:16:-:0;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"6080604052600080fdfea2646970667358221220bef7741d4c2b3d6383e3699129beec0bad86e61ac2e40628e345fd731303354e64736f6c63430008180033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBE 0xF7 PUSH21 0x1D4C2B3D6383E3699129BEEC0BAD86E61AC2E40628 0xE3 GASLIMIT REVERT PUSH20 0x1303354E64736F6C634300081800330000000000 ","sourceMap":"7170:19148:16:-:0;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"12600","executionCost":"66","totalCost":"12666"},"internal":{"affineECAdd(uint256[2] memory,uint256[2] memory,uint256)":"infinite","bigModExp(uint256,uint256)":"infinite","ecmulVerify(uint256[2] memory,uint256,uint256[2] memory)":"infinite","fieldHash(bytes memory)":"infinite","hashToCurve(uint256[2] memory,uint256)":"infinite","isOnCurve(uint256[2] memory)":"infinite","linearCombination(uint256,uint256[2] memory,uint256[2] memory,uint256,uint256[2] memory,uint256[2] memory,uint256)":"infinite","newCandidateSecp256k1Point(bytes memory)":"infinite","projectiveECAdd(uint256,uint256,uint256,uint256)":"infinite","projectiveMul(uint256,uint256,uint256,uint256)":"infinite","projectiveSub(uint256,uint256,uint256,uint256)":"infinite","randomValueFromVRFProof(struct VRF.Proof memory,uint256)":"infinite","scalarFromCurvePoints(uint256[2] memory,uint256[2] memory,uint256[2] memory,address,uint256[2] memory)":"infinite","squareRoot(uint256)":"infinite","verifyLinearCombinationWithGenerator(uint256,uint256[2] memory,uint256,address)":"infinite","verifyVRFProof(uint256[2] memory,uint256[2] memory,uint256,uint256,uint256,address,uint256[2] memory,uint256[2] memory,uint256)":"infinite","ySquared(uint256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Bibliographic references:Goldberg, et al., \\\"Verifiable Random Functions (VRFs)\\\", Internet Draftdraft-irtf-cfrg-vrf-05, IETF, Aug 11 2019,https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05Papadopoulos, et al., \\\"Making NSEC5 Practical for DNSSEC\\\", CryptologyePrint Archive, Report 2017/099, https://eprint.iacr.org/2017/099.pdf ****************************************************************************USAGEThe main entry point is randomValueFromVRFProof. See its docstring. ****************************************************************************PURPOSEReggie the Random Oracle (not his real job) wants to provide randomnessto Vera the verifier in such a way that Vera can be sure he's notmaking his output up to suit himself. Reggie provides Vera a public keyto which he knows the secret key. Each time Vera provides a seed toReggie, he gives back a value which is computed completelydeterministically from the seed and the secret key.Reggie provides a proof by which Vera can verify that the output wascorrectly computed once Reggie tells it to her, but without that proof,the output is computationally indistinguishable to her from a uniformrandom sample from the output space.The purpose of this contract is to perform that verification. ****************************************************************************DESIGN NOTESThe VRF algorithm verified here satisfies the full uniqueness, fullcollision resistance, and full pseudo-randomness security properties.See \\\"SECURITY PROPERTIES\\\" below, andhttps://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-3An elliptic curve point is generally represented in the solidity codeas a uint256[2], corresponding to its affine coordinates inGF(FIELD_SIZE).For the sake of efficiency, this implementation deviates from the specin some minor ways:- Keccak hash rather than the SHA256 hash recommended inhttps://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-5.5Keccak costs much less gas on the EVM, and provides similar security.- Secp256k1 curve instead of the P-256 or ED25519 curves recommended inhttps://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-5.5For curve-point multiplication, it's much cheaper to abuse ECRECOVER- hashToCurve recursively hashes until it finds a curve x-ordinate. Onthe EVM, this is slightly more efficient than the recommendation inhttps://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-5.4.1.1step 5, to concatenate with a nonce then hash, and rehash with thenonce updated until a valid x-ordinate is found.- hashToCurve does not include a cipher version string or the byte 0x1in the hash message, as recommended in step 5.B of the draftstandard. They are unnecessary here because no variation in thecipher suite is allowed.- Similarly, the hash input in scalarFromCurvePoints does not include acommitment to the cipher suite, either, which differs from step 2 ofhttps://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-5.4.3. Also, the hash input is the concatenation of the uncompressedpoints, not the compressed points as recommended in step 3.- In the calculation of the challenge value \\\"c\\\", the \\\"u\\\" value (i.e.the value computed by Reggie as the nonce times the secp256k1generator point, see steps 5 and 7 ofhttps://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-5.3) is replaced by its ethereum address, i.e. the lower 160 bits of thekeccak hash of the original u. This is because we only verify thecalculation of u up to its address, by abusing ECRECOVER. ****************************************************************************SECURITY PROPERTIESHere are the security properties for this VRF:Full uniqueness: For any seed and valid VRF public key, there isexactly one VRF output which can be proved to come from that seed, inthe sense that the proof will pass verifyVRFProof.Full collision resistance: It's cryptographically infeasible to findtwo seeds with same VRF output from a fixed, valid VRF keyFull pseudorandomness: Absent the proofs that the VRF outputs arederived from a given seed, the outputs are computationallyindistinguishable from randomness.https://eprint.iacr.org/2017/099.pdf, Appendix B contains the proofsfor these properties.For secp256k1, the key validation described in sectionhttps://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-5.6is unnecessary, because secp256k1 has cofactor 1, and therepresentation of the public key used here (affine x- and y-ordinatesof the secp256k1 point on the standard y^2=x^3+7 curve) cannot refer tothe point at infinity. ****************************************************************************OTHER SECURITY CONSIDERATIONSThe seed input to the VRF could in principle force an arbitrary amountof work in hashToCurve, by requiring extra rounds of hashing andchecking whether that's yielded the x ordinate of a secp256k1 point.However, under the Random Oracle Model the probability of choosing apoint which forces n extra rounds in hashToCurve is 2\\u207b\\u207f. The base costfor calling hashToCurve is about 25,000 gas, and each round of checkingfor a valid x ordinate costs about 15,555 gas, so to find a seed forwhich hashToCurve would cost more than 2,017,000 gas, one would have totry, in expectation, about 2\\u00b9\\u00b2\\u2078 seeds, which is infeasible for anyforeseeable computational resources. (25,000 + 128 * 15,555 < 2,017,000.)Since the gas block limit for the Ethereum main net is 10,000,000 gas,this means it is infeasible for an adversary to prevent correctoperation of this contract by choosing an adverse seed.(See TestMeasureHashToCurveGasCost for verification of the gas cost forhashToCurve.)It may be possible to make a secure constant-time hashToCurve function.See notes in hashToCurve docstring.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"****************************************************************************Verification of verifiable-random-function (VRF) proofs, followinghttps://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-5.3See https://eprint.iacr.org/2017/099.pdf for security proofs.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/vrf/VRF.sol\":\"VRF\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/vrf/VRF.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n/** ****************************************************************************\\n  * @notice Verification of verifiable-random-function (VRF) proofs, following\\n  * @notice https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-5.3\\n  * @notice See https://eprint.iacr.org/2017/099.pdf for security proofs.\\n\\n  * @dev Bibliographic references:\\n\\n  * @dev Goldberg, et al., \\\"Verifiable Random Functions (VRFs)\\\", Internet Draft\\n  * @dev draft-irtf-cfrg-vrf-05, IETF, Aug 11 2019,\\n  * @dev https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05\\n\\n  * @dev Papadopoulos, et al., \\\"Making NSEC5 Practical for DNSSEC\\\", Cryptology\\n  * @dev ePrint Archive, Report 2017/099, https://eprint.iacr.org/2017/099.pdf\\n  * ****************************************************************************\\n  * @dev USAGE\\n\\n  * @dev The main entry point is randomValueFromVRFProof. See its docstring.\\n  * ****************************************************************************\\n  * @dev PURPOSE\\n\\n  * @dev Reggie the Random Oracle (not his real job) wants to provide randomness\\n  * @dev to Vera the verifier in such a way that Vera can be sure he's not\\n  * @dev making his output up to suit himself. Reggie provides Vera a public key\\n  * @dev to which he knows the secret key. Each time Vera provides a seed to\\n  * @dev Reggie, he gives back a value which is computed completely\\n  * @dev deterministically from the seed and the secret key.\\n\\n  * @dev Reggie provides a proof by which Vera can verify that the output was\\n  * @dev correctly computed once Reggie tells it to her, but without that proof,\\n  * @dev the output is computationally indistinguishable to her from a uniform\\n  * @dev random sample from the output space.\\n\\n  * @dev The purpose of this contract is to perform that verification.\\n  * ****************************************************************************\\n  * @dev DESIGN NOTES\\n\\n  * @dev The VRF algorithm verified here satisfies the full uniqueness, full\\n  * @dev collision resistance, and full pseudo-randomness security properties.\\n  * @dev See \\\"SECURITY PROPERTIES\\\" below, and\\n  * @dev https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-3\\n\\n  * @dev An elliptic curve point is generally represented in the solidity code\\n  * @dev as a uint256[2], corresponding to its affine coordinates in\\n  * @dev GF(FIELD_SIZE).\\n\\n  * @dev For the sake of efficiency, this implementation deviates from the spec\\n  * @dev in some minor ways:\\n\\n  * @dev - Keccak hash rather than the SHA256 hash recommended in\\n  * @dev   https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-5.5\\n  * @dev   Keccak costs much less gas on the EVM, and provides similar security.\\n\\n  * @dev - Secp256k1 curve instead of the P-256 or ED25519 curves recommended in\\n  * @dev   https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-5.5\\n  * @dev   For curve-point multiplication, it's much cheaper to abuse ECRECOVER\\n\\n  * @dev - hashToCurve recursively hashes until it finds a curve x-ordinate. On\\n  * @dev   the EVM, this is slightly more efficient than the recommendation in\\n  * @dev   https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-5.4.1.1\\n  * @dev   step 5, to concatenate with a nonce then hash, and rehash with the\\n  * @dev   nonce updated until a valid x-ordinate is found.\\n\\n  * @dev - hashToCurve does not include a cipher version string or the byte 0x1\\n  * @dev   in the hash message, as recommended in step 5.B of the draft\\n  * @dev   standard. They are unnecessary here because no variation in the\\n  * @dev   cipher suite is allowed.\\n\\n  * @dev - Similarly, the hash input in scalarFromCurvePoints does not include a\\n  * @dev   commitment to the cipher suite, either, which differs from step 2 of\\n  * @dev   https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-5.4.3\\n  * @dev   . Also, the hash input is the concatenation of the uncompressed\\n  * @dev   points, not the compressed points as recommended in step 3.\\n\\n  * @dev - In the calculation of the challenge value \\\"c\\\", the \\\"u\\\" value (i.e.\\n  * @dev   the value computed by Reggie as the nonce times the secp256k1\\n  * @dev   generator point, see steps 5 and 7 of\\n  * @dev   https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-5.3\\n  * @dev   ) is replaced by its ethereum address, i.e. the lower 160 bits of the\\n  * @dev   keccak hash of the original u. This is because we only verify the\\n  * @dev   calculation of u up to its address, by abusing ECRECOVER.\\n  * ****************************************************************************\\n  * @dev   SECURITY PROPERTIES\\n\\n  * @dev Here are the security properties for this VRF:\\n\\n  * @dev Full uniqueness: For any seed and valid VRF public key, there is\\n  * @dev   exactly one VRF output which can be proved to come from that seed, in\\n  * @dev   the sense that the proof will pass verifyVRFProof.\\n\\n  * @dev Full collision resistance: It's cryptographically infeasible to find\\n  * @dev   two seeds with same VRF output from a fixed, valid VRF key\\n\\n  * @dev Full pseudorandomness: Absent the proofs that the VRF outputs are\\n  * @dev   derived from a given seed, the outputs are computationally\\n  * @dev   indistinguishable from randomness.\\n\\n  * @dev https://eprint.iacr.org/2017/099.pdf, Appendix B contains the proofs\\n  * @dev for these properties.\\n\\n  * @dev For secp256k1, the key validation described in section\\n  * @dev https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-5.6\\n  * @dev is unnecessary, because secp256k1 has cofactor 1, and the\\n  * @dev representation of the public key used here (affine x- and y-ordinates\\n  * @dev of the secp256k1 point on the standard y^2=x^3+7 curve) cannot refer to\\n  * @dev the point at infinity.\\n  * ****************************************************************************\\n  * @dev OTHER SECURITY CONSIDERATIONS\\n  *\\n  * @dev The seed input to the VRF could in principle force an arbitrary amount\\n  * @dev of work in hashToCurve, by requiring extra rounds of hashing and\\n  * @dev checking whether that's yielded the x ordinate of a secp256k1 point.\\n  * @dev However, under the Random Oracle Model the probability of choosing a\\n  * @dev point which forces n extra rounds in hashToCurve is 2\\u207b\\u207f. The base cost\\n  * @dev for calling hashToCurve is about 25,000 gas, and each round of checking\\n  * @dev for a valid x ordinate costs about 15,555 gas, so to find a seed for\\n  * @dev which hashToCurve would cost more than 2,017,000 gas, one would have to\\n  * @dev try, in expectation, about 2\\u00b9\\u00b2\\u2078 seeds, which is infeasible for any\\n  * @dev foreseeable computational resources. (25,000 + 128 * 15,555 < 2,017,000.)\\n\\n  * @dev Since the gas block limit for the Ethereum main net is 10,000,000 gas,\\n  * @dev this means it is infeasible for an adversary to prevent correct\\n  * @dev operation of this contract by choosing an adverse seed.\\n\\n  * @dev (See TestMeasureHashToCurveGasCost for verification of the gas cost for\\n  * @dev hashToCurve.)\\n\\n  * @dev It may be possible to make a secure constant-time hashToCurve function.\\n  * @dev See notes in hashToCurve docstring.\\n*/\\ncontract VRF {\\n  // See https://www.secg.org/sec2-v2.pdf, section 2.4.1, for these constants.\\n  // Number of points in Secp256k1\\n  uint256 private constant GROUP_ORDER = 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141;\\n  // Prime characteristic of the galois field over which Secp256k1 is defined\\n  uint256 private constant FIELD_SIZE =\\n    // solium-disable-next-line indentation\\n    0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F;\\n  uint256 private constant WORD_LENGTH_BYTES = 0x20;\\n\\n  // (base^exponent) % FIELD_SIZE\\n  // Cribbed from https://medium.com/@rbkhmrcr/precompiles-solidity-e5d29bd428c4\\n  function bigModExp(uint256 base, uint256 exponent) internal view returns (uint256 exponentiation) {\\n    uint256 callResult;\\n    uint256[6] memory bigModExpContractInputs;\\n    bigModExpContractInputs[0] = WORD_LENGTH_BYTES; // Length of base\\n    bigModExpContractInputs[1] = WORD_LENGTH_BYTES; // Length of exponent\\n    bigModExpContractInputs[2] = WORD_LENGTH_BYTES; // Length of modulus\\n    bigModExpContractInputs[3] = base;\\n    bigModExpContractInputs[4] = exponent;\\n    bigModExpContractInputs[5] = FIELD_SIZE;\\n    uint256[1] memory output;\\n    assembly {\\n      // solhint-disable-line no-inline-assembly\\n      callResult := staticcall(\\n        not(0), // Gas cost: no limit\\n        0x05, // Bigmodexp contract address\\n        bigModExpContractInputs,\\n        0xc0, // Length of input segment: 6*0x20-bytes\\n        output,\\n        0x20 // Length of output segment\\n      )\\n    }\\n    if (callResult == 0) {\\n      revert(\\\"bigModExp failure!\\\");\\n    }\\n    return output[0];\\n  }\\n\\n  // Let q=FIELD_SIZE. q % 4 = 3, \\u2234 x\\u2261r^2 mod q \\u21d2 x^SQRT_POWER\\u2261\\u00b1r mod q.  See\\n  // https://en.wikipedia.org/wiki/Modular_square_root#Prime_or_prime_power_modulus\\n  uint256 private constant SQRT_POWER = (FIELD_SIZE + 1) >> 2;\\n\\n  // Computes a s.t. a^2 = x in the field. Assumes a exists\\n  function squareRoot(uint256 x) internal view returns (uint256) {\\n    return bigModExp(x, SQRT_POWER);\\n  }\\n\\n  // The value of y^2 given that (x,y) is on secp256k1.\\n  function ySquared(uint256 x) internal pure returns (uint256) {\\n    // Curve is y^2=x^3+7. See section 2.4.1 of https://www.secg.org/sec2-v2.pdf\\n    uint256 xCubed = mulmod(x, mulmod(x, x, FIELD_SIZE), FIELD_SIZE);\\n    return addmod(xCubed, 7, FIELD_SIZE);\\n  }\\n\\n  // True iff p is on secp256k1\\n  function isOnCurve(uint256[2] memory p) internal pure returns (bool) {\\n    // Section 2.3.6. in https://www.secg.org/sec1-v2.pdf\\n    // requires each ordinate to be in [0, ..., FIELD_SIZE-1]\\n    require(p[0] < FIELD_SIZE, \\\"invalid x-ordinate\\\");\\n    require(p[1] < FIELD_SIZE, \\\"invalid y-ordinate\\\");\\n    return ySquared(p[0]) == mulmod(p[1], p[1], FIELD_SIZE);\\n  }\\n\\n  // Hash x uniformly into {0, ..., FIELD_SIZE-1}.\\n  function fieldHash(bytes memory b) internal pure returns (uint256 x_) {\\n    x_ = uint256(keccak256(b));\\n    // Rejecting if x >= FIELD_SIZE corresponds to step 2.1 in section 2.3.4 of\\n    // http://www.secg.org/sec1-v2.pdf , which is part of the definition of\\n    // string_to_point in the IETF draft\\n    while (x_ >= FIELD_SIZE) {\\n      x_ = uint256(keccak256(abi.encodePacked(x_)));\\n    }\\n  }\\n\\n  // Hash b to a random point which hopefully lies on secp256k1. The y ordinate\\n  // is always even, due to\\n  // https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-5.4.1.1\\n  // step 5.C, which references arbitrary_string_to_point, defined in\\n  // https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-5.5 as\\n  // returning the point with given x ordinate, and even y ordinate.\\n  function newCandidateSecp256k1Point(bytes memory b) internal view returns (uint256[2] memory p) {\\n    unchecked {\\n      p[0] = fieldHash(b);\\n      p[1] = squareRoot(ySquared(p[0]));\\n      if (p[1] % 2 == 1) {\\n        // Note that 0 <= p[1] < FIELD_SIZE\\n        // so this cannot wrap, we use unchecked to save gas.\\n        p[1] = FIELD_SIZE - p[1];\\n      }\\n    }\\n  }\\n\\n  // Domain-separation tag for initial hash in hashToCurve. Corresponds to\\n  // vrf.go/hashToCurveHashPrefix\\n  uint256 internal constant HASH_TO_CURVE_HASH_PREFIX = 1;\\n\\n  // Cryptographic hash function onto the curve.\\n  //\\n  // Corresponds to algorithm in section 5.4.1.1 of the draft standard. (But see\\n  // DESIGN NOTES above for slight differences.)\\n  //\\n  // TODO(alx): Implement a bounded-computation hash-to-curve, as described in\\n  // \\\"Construction of Rational Points on Elliptic Curves over Finite Fields\\\"\\n  // http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.831.5299&rep=rep1&type=pdf\\n  // and suggested by\\n  // https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-hash-to-curve-01#section-5.2.2\\n  // (Though we can't used exactly that because secp256k1's j-invariant is 0.)\\n  //\\n  // This would greatly simplify the analysis in \\\"OTHER SECURITY CONSIDERATIONS\\\"\\n  // https://www.pivotaltracker.com/story/show/171120900\\n  function hashToCurve(uint256[2] memory pk, uint256 input) internal view returns (uint256[2] memory rv) {\\n    rv = newCandidateSecp256k1Point(abi.encodePacked(HASH_TO_CURVE_HASH_PREFIX, pk, input));\\n    while (!isOnCurve(rv)) {\\n      rv = newCandidateSecp256k1Point(abi.encodePacked(rv[0]));\\n    }\\n  }\\n\\n  /** *********************************************************************\\n   * @notice Check that product==scalar*multiplicand\\n   *\\n   * @dev Based on Vitalik Buterin's idea in ethresear.ch post cited below.\\n   *\\n   * @param multiplicand: secp256k1 point\\n   * @param scalar: non-zero GF(GROUP_ORDER) scalar\\n   * @param product: secp256k1 expected to be multiplier * multiplicand\\n   * @return verifies true iff product==scalar*multiplicand, with cryptographically high probability\\n   */\\n  function ecmulVerify(\\n    uint256[2] memory multiplicand,\\n    uint256 scalar,\\n    uint256[2] memory product\\n  ) internal pure returns (bool verifies) {\\n    require(scalar != 0, \\\"zero scalar\\\"); // Rules out an ecrecover failure case\\n    uint256 x = multiplicand[0]; // x ordinate of multiplicand\\n    uint8 v = multiplicand[1] % 2 == 0 ? 27 : 28; // parity of y ordinate\\n    // https://ethresear.ch/t/you-can-kinda-abuse-ecrecover-to-do-ecmul-in-secp256k1-today/2384/9\\n    // Point corresponding to address ecrecover(0, v, x, s=scalar*x) is\\n    // (x\\u207b\\u00b9 mod GROUP_ORDER) * (scalar * x * multiplicand - 0 * g), i.e.\\n    // scalar*multiplicand. See https://crypto.stackexchange.com/a/18106\\n    bytes32 scalarTimesX = bytes32(mulmod(scalar, x, GROUP_ORDER));\\n    address actual = ecrecover(bytes32(0), v, bytes32(x), scalarTimesX);\\n    // Explicit conversion to address takes bottom 160 bits\\n    address expected = address(uint160(uint256(keccak256(abi.encodePacked(product)))));\\n    return (actual == expected);\\n  }\\n\\n  // Returns x1/z1-x2/z2=(x1z2-x2z1)/(z1z2) in projective coordinates on P\\u00b9(\\ud835\\udd3d\\u2099)\\n  function projectiveSub(\\n    uint256 x1,\\n    uint256 z1,\\n    uint256 x2,\\n    uint256 z2\\n  ) internal pure returns (uint256 x3, uint256 z3) {\\n    unchecked {\\n      uint256 num1 = mulmod(z2, x1, FIELD_SIZE);\\n      // Note this cannot wrap since x2 is a point in [0, FIELD_SIZE-1]\\n      // we use unchecked to save gas.\\n      uint256 num2 = mulmod(FIELD_SIZE - x2, z1, FIELD_SIZE);\\n      (x3, z3) = (addmod(num1, num2, FIELD_SIZE), mulmod(z1, z2, FIELD_SIZE));\\n    }\\n  }\\n\\n  // Returns x1/z1*x2/z2=(x1x2)/(z1z2), in projective coordinates on P\\u00b9(\\ud835\\udd3d\\u2099)\\n  function projectiveMul(\\n    uint256 x1,\\n    uint256 z1,\\n    uint256 x2,\\n    uint256 z2\\n  ) internal pure returns (uint256 x3, uint256 z3) {\\n    (x3, z3) = (mulmod(x1, x2, FIELD_SIZE), mulmod(z1, z2, FIELD_SIZE));\\n  }\\n\\n  /** **************************************************************************\\n        @notice Computes elliptic-curve sum, in projective co-ordinates\\n\\n        @dev Using projective coordinates avoids costly divisions\\n\\n        @dev To use this with p and q in affine coordinates, call\\n        @dev projectiveECAdd(px, py, qx, qy). This will return\\n        @dev the addition of (px, py, 1) and (qx, qy, 1), in the\\n        @dev secp256k1 group.\\n\\n        @dev This can be used to calculate the z which is the inverse to zInv\\n        @dev in isValidVRFOutput. But consider using a faster\\n        @dev re-implementation such as ProjectiveECAdd in the golang vrf package.\\n\\n        @dev This function assumes [px,py,1],[qx,qy,1] are valid projective\\n             coordinates of secp256k1 points. That is safe in this contract,\\n             because this method is only used by linearCombination, which checks\\n             points are on the curve via ecrecover.\\n        **************************************************************************\\n        @param px The first affine coordinate of the first summand\\n        @param py The second affine coordinate of the first summand\\n        @param qx The first affine coordinate of the second summand\\n        @param qy The second affine coordinate of the second summand\\n\\n        (px,py) and (qx,qy) must be distinct, valid secp256k1 points.\\n        **************************************************************************\\n        Return values are projective coordinates of [px,py,1]+[qx,qy,1] as points\\n        on secp256k1, in P\\u00b2(\\ud835\\udd3d\\u2099)\\n        @return sx\\n        @return sy\\n        @return sz\\n    */\\n  function projectiveECAdd(\\n    uint256 px,\\n    uint256 py,\\n    uint256 qx,\\n    uint256 qy\\n  ) internal pure returns (uint256 sx, uint256 sy, uint256 sz) {\\n    unchecked {\\n      // See \\\"Group law for E/K : y^2 = x^3 + ax + b\\\", in section 3.1.2, p. 80,\\n      // \\\"Guide to Elliptic Curve Cryptography\\\" by Hankerson, Menezes and Vanstone\\n      // We take the equations there for (sx,sy), and homogenize them to\\n      // projective coordinates. That way, no inverses are required, here, and we\\n      // only need the one inverse in affineECAdd.\\n\\n      // We only need the \\\"point addition\\\" equations from Hankerson et al. Can\\n      // skip the \\\"point doubling\\\" equations because p1 == p2 is cryptographically\\n      // impossible, and required not to be the case in linearCombination.\\n\\n      // Add extra \\\"projective coordinate\\\" to the two points\\n      (uint256 z1, uint256 z2) = (1, 1);\\n\\n      // (lx, lz) = (qy-py)/(qx-px), i.e., gradient of secant line.\\n      // Cannot wrap since px and py are in [0, FIELD_SIZE-1]\\n      uint256 lx = addmod(qy, FIELD_SIZE - py, FIELD_SIZE);\\n      uint256 lz = addmod(qx, FIELD_SIZE - px, FIELD_SIZE);\\n\\n      uint256 dx; // Accumulates denominator from sx calculation\\n      // sx=((qy-py)/(qx-px))^2-px-qx\\n      (sx, dx) = projectiveMul(lx, lz, lx, lz); // ((qy-py)/(qx-px))^2\\n      (sx, dx) = projectiveSub(sx, dx, px, z1); // ((qy-py)/(qx-px))^2-px\\n      (sx, dx) = projectiveSub(sx, dx, qx, z2); // ((qy-py)/(qx-px))^2-px-qx\\n\\n      uint256 dy; // Accumulates denominator from sy calculation\\n      // sy=((qy-py)/(qx-px))(px-sx)-py\\n      (sy, dy) = projectiveSub(px, z1, sx, dx); // px-sx\\n      (sy, dy) = projectiveMul(sy, dy, lx, lz); // ((qy-py)/(qx-px))(px-sx)\\n      (sy, dy) = projectiveSub(sy, dy, py, z1); // ((qy-py)/(qx-px))(px-sx)-py\\n\\n      if (dx != dy) {\\n        // Cross-multiply to put everything over a common denominator\\n        sx = mulmod(sx, dy, FIELD_SIZE);\\n        sy = mulmod(sy, dx, FIELD_SIZE);\\n        sz = mulmod(dx, dy, FIELD_SIZE);\\n      } else {\\n        // Already over a common denominator, use that for z ordinate\\n        sz = dx;\\n      }\\n    }\\n  }\\n\\n  // p1+p2, as affine points on secp256k1.\\n  //\\n  // invZ must be the inverse of the z returned by projectiveECAdd(p1, p2).\\n  // It is computed off-chain to save gas.\\n  //\\n  // p1 and p2 must be distinct, because projectiveECAdd doesn't handle\\n  // point doubling.\\n  function affineECAdd(\\n    uint256[2] memory p1,\\n    uint256[2] memory p2,\\n    uint256 invZ\\n  ) internal pure returns (uint256[2] memory) {\\n    uint256 x;\\n    uint256 y;\\n    uint256 z;\\n    (x, y, z) = projectiveECAdd(p1[0], p1[1], p2[0], p2[1]);\\n    require(mulmod(z, invZ, FIELD_SIZE) == 1, \\\"invZ must be inverse of z\\\");\\n    // Clear the z ordinate of the projective representation by dividing through\\n    // by it, to obtain the affine representation\\n    return [mulmod(x, invZ, FIELD_SIZE), mulmod(y, invZ, FIELD_SIZE)];\\n  }\\n\\n  // True iff address(c*p+s*g) == lcWitness, where g is generator. (With\\n  // cryptographically high probability.)\\n  function verifyLinearCombinationWithGenerator(\\n    uint256 c,\\n    uint256[2] memory p,\\n    uint256 s,\\n    address lcWitness\\n  ) internal pure returns (bool) {\\n    // Rule out ecrecover failure modes which return address 0.\\n    unchecked {\\n      require(lcWitness != address(0), \\\"bad witness\\\");\\n      uint8 v = (p[1] % 2 == 0) ? 27 : 28; // parity of y-ordinate of p\\n      // Note this cannot wrap (X - Y % X), but we use unchecked to save\\n      // gas.\\n      bytes32 pseudoHash = bytes32(GROUP_ORDER - mulmod(p[0], s, GROUP_ORDER)); // -s*p[0]\\n      bytes32 pseudoSignature = bytes32(mulmod(c, p[0], GROUP_ORDER)); // c*p[0]\\n      // https://ethresear.ch/t/you-can-kinda-abuse-ecrecover-to-do-ecmul-in-secp256k1-today/2384/9\\n      // The point corresponding to the address returned by\\n      // ecrecover(-s*p[0],v,p[0],c*p[0]) is\\n      // (p[0]\\u207b\\u00b9 mod GROUP_ORDER)*(c*p[0]-(-s)*p[0]*g)=c*p+s*g.\\n      // See https://crypto.stackexchange.com/a/18106\\n      // https://bitcoin.stackexchange.com/questions/38351/ecdsa-v-r-s-what-is-v\\n      address computed = ecrecover(pseudoHash, v, bytes32(p[0]), pseudoSignature);\\n      return computed == lcWitness;\\n    }\\n  }\\n\\n  // c*p1 + s*p2. Requires cp1Witness=c*p1 and sp2Witness=s*p2. Also\\n  // requires cp1Witness != sp2Witness (which is fine for this application,\\n  // since it is cryptographically impossible for them to be equal. In the\\n  // (cryptographically impossible) case that a prover accidentally derives\\n  // a proof with equal c*p1 and s*p2, they should retry with a different\\n  // proof nonce.) Assumes that all points are on secp256k1\\n  // (which is checked in verifyVRFProof below.)\\n  function linearCombination(\\n    uint256 c,\\n    uint256[2] memory p1,\\n    uint256[2] memory cp1Witness,\\n    uint256 s,\\n    uint256[2] memory p2,\\n    uint256[2] memory sp2Witness,\\n    uint256 zInv\\n  ) internal pure returns (uint256[2] memory) {\\n    unchecked {\\n      // Note we are relying on the wrap around here\\n      require((cp1Witness[0] % FIELD_SIZE) != (sp2Witness[0] % FIELD_SIZE), \\\"points in sum must be distinct\\\");\\n      require(ecmulVerify(p1, c, cp1Witness), \\\"First mul check failed\\\");\\n      require(ecmulVerify(p2, s, sp2Witness), \\\"Second mul check failed\\\");\\n      return affineECAdd(cp1Witness, sp2Witness, zInv);\\n    }\\n  }\\n\\n  // Domain-separation tag for the hash taken in scalarFromCurvePoints.\\n  // Corresponds to scalarFromCurveHashPrefix in vrf.go\\n  uint256 internal constant SCALAR_FROM_CURVE_POINTS_HASH_PREFIX = 2;\\n\\n  // Pseudo-random number from inputs. Matches vrf.go/scalarFromCurvePoints, and\\n  // https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-5.4.3\\n  // The draft calls (in step 7, via the definition of string_to_int, in\\n  // https://datatracker.ietf.org/doc/html/rfc8017#section-4.2 ) for taking the\\n  // first hash without checking that it corresponds to a number less than the\\n  // group order, which will lead to a slight bias in the sample.\\n  //\\n  // TODO(alx): We could save a bit of gas by following the standard here and\\n  // using the compressed representation of the points, if we collated the y\\n  // parities into a single bytes32.\\n  // https://www.pivotaltracker.com/story/show/171120588\\n  function scalarFromCurvePoints(\\n    uint256[2] memory hash,\\n    uint256[2] memory pk,\\n    uint256[2] memory gamma,\\n    address uWitness,\\n    uint256[2] memory v\\n  ) internal pure returns (uint256 s) {\\n    return uint256(keccak256(abi.encodePacked(SCALAR_FROM_CURVE_POINTS_HASH_PREFIX, hash, pk, gamma, v, uWitness)));\\n  }\\n\\n  // True if (gamma, c, s) is a correctly constructed randomness proof from pk\\n  // and seed. zInv must be the inverse of the third ordinate from\\n  // projectiveECAdd applied to cGammaWitness and sHashWitness. Corresponds to\\n  // section 5.3 of the IETF draft.\\n  //\\n  // TODO(alx): Since I'm only using pk in the ecrecover call, I could only pass\\n  // the x ordinate, and the parity of the y ordinate in the top bit of uWitness\\n  // (which I could make a uint256 without using any extra space.) Would save\\n  // about 2000 gas. https://www.pivotaltracker.com/story/show/170828567\\n  function verifyVRFProof(\\n    uint256[2] memory pk,\\n    uint256[2] memory gamma,\\n    uint256 c,\\n    uint256 s,\\n    uint256 seed,\\n    address uWitness,\\n    uint256[2] memory cGammaWitness,\\n    uint256[2] memory sHashWitness,\\n    uint256 zInv\\n  ) internal view {\\n    unchecked {\\n      require(isOnCurve(pk), \\\"public key is not on curve\\\");\\n      require(isOnCurve(gamma), \\\"gamma is not on curve\\\");\\n      require(isOnCurve(cGammaWitness), \\\"cGammaWitness is not on curve\\\");\\n      require(isOnCurve(sHashWitness), \\\"sHashWitness is not on curve\\\");\\n      // Step 5. of IETF draft section 5.3 (pk corresponds to 5.3's Y, and here\\n      // we use the address of u instead of u itself. Also, here we add the\\n      // terms instead of taking the difference, and in the proof construction in\\n      // vrf.GenerateProof, we correspondingly take the difference instead of\\n      // taking the sum as they do in step 7 of section 5.1.)\\n      require(verifyLinearCombinationWithGenerator(c, pk, s, uWitness), \\\"addr(c*pk+s*g)!=_uWitness\\\");\\n      // Step 4. of IETF draft section 5.3 (pk corresponds to Y, seed to alpha_string)\\n      uint256[2] memory hash = hashToCurve(pk, seed);\\n      // Step 6. of IETF draft section 5.3, but see note for step 5 about +/- terms\\n      uint256[2] memory v = linearCombination(c, gamma, cGammaWitness, s, hash, sHashWitness, zInv);\\n      // Steps 7. and 8. of IETF draft section 5.3\\n      uint256 derivedC = scalarFromCurvePoints(hash, pk, gamma, uWitness, v);\\n      require(c == derivedC, \\\"invalid proof\\\");\\n    }\\n  }\\n\\n  // Domain-separation tag for the hash used as the final VRF output.\\n  // Corresponds to vrfRandomOutputHashPrefix in vrf.go\\n  uint256 internal constant VRF_RANDOM_OUTPUT_HASH_PREFIX = 3;\\n\\n  struct Proof {\\n    uint256[2] pk;\\n    uint256[2] gamma;\\n    uint256 c;\\n    uint256 s;\\n    uint256 seed;\\n    address uWitness;\\n    uint256[2] cGammaWitness;\\n    uint256[2] sHashWitness;\\n    uint256 zInv;\\n  }\\n\\n  /* ***************************************************************************\\n     * @notice Returns proof's output, if proof is valid. Otherwise reverts\\n\\n     * @param proof vrf proof components\\n     * @param seed  seed used to generate the vrf output\\n     *\\n     * Throws if proof is invalid, otherwise:\\n     * @return output i.e., the random output implied by the proof\\n     * ***************************************************************************\\n     */\\n  function randomValueFromVRFProof(Proof memory proof, uint256 seed) internal view returns (uint256 output) {\\n    verifyVRFProof(\\n      proof.pk,\\n      proof.gamma,\\n      proof.c,\\n      proof.s,\\n      seed,\\n      proof.uWitness,\\n      proof.cGammaWitness,\\n      proof.sHashWitness,\\n      proof.zInv\\n    );\\n    output = uint256(keccak256(abi.encode(VRF_RANDOM_OUTPUT_HASH_PREFIX, proof.gamma)));\\n  }\\n}\\n\",\"keccak256\":\"0x5efe574be3a5b871ef7bcc7704355d21c1244f1a39a1266422a1b904d7b41944\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"notice":"****************************************************************************Verification of verifiable-random-function (VRF) proofs, followinghttps://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-5.3See https://eprint.iacr.org/2017/099.pdf for security proofs.","version":1}}},"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol":{"VRFConsumerBaseV2":{"abi":[{"inputs":[{"internalType":"address","name":"have","type":"address"},{"internalType":"address","name":"want","type":"address"}],"name":"OnlyCoordinatorCanFulfill","type":"error"},{"inputs":[{"internalType":"uint256","name":"requestId","type":"uint256"},{"internalType":"uint256[]","name":"randomWords","type":"uint256[]"}],"name":"rawFulfillRandomWords","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"PURPOSEReggie the Random Oracle (not his real job) wants to provide randomnessto Vera the verifier in such a way that Vera can be sure he's notmaking his output up to suit himself. Reggie provides Vera a public keyto which he knows the secret key. Each time Vera provides a seed toReggie, he gives back a value which is computed completelydeterministically from the seed and the secret key.Reggie provides a proof by which Vera can verify that the output wascorrectly computed once Reggie tells it to her, but without that proof,the output is indistinguishable to her from a uniform random samplefrom the output space.The purpose of this contract is to make it easy for unrelated contractsto talk to Vera the verifier about the work Reggie is doing, to providesimple access to a verifiable source of randomness. It ensures 2 things:1. The fulfillment came from the VRFCoordinator2. The consumer contract implements fulfillRandomWords. *****************************************************************************USAGECalling contracts must inherit from VRFConsumerBase, and caninitialize VRFConsumerBase's attributes in their constructor asshown:contract VRFConsumer {constructor(<other arguments>, address _vrfCoordinator, address _link)VRFConsumerBase(_vrfCoordinator) public {<initialization with other arguments goes here>}}The oracle will have given you an ID for the VRF keypair they havecommitted to (let's call it keyHash). Create subscription, fund itand your consumer contract as a consumer of it (see VRFCoordinatorInterfacesubscription management functions).Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,callbackGasLimit, numWords),see (VRFCoordinatorInterface for a description of the arguments).Once the VRFCoordinator has received and validated the oracle's responseto your request, it will call your contract's fulfillRandomWords method.The randomness argument to fulfillRandomWords is a set of random wordsgenerated from your requestId and the blockHash of the request.If your contract could have concurrent requests open, you can use therequestId returned from requestRandomWords to track which response is associatedwith which randomness request.See \"SECURITY CONSIDERATIONS\" for principles to keep in mind,if your contract could have multiple requests in flight simultaneously.Colliding `requestId`s are cryptographically impossible as long as seedsdiffer. *****************************************************************************SECURITY CONSIDERATIONSA method with the ability to call your fulfillRandomness method directlycould spoof a VRF response with any random value, so it's critical thatit cannot be directly called by anything other than this base contract(specifically, by the VRFConsumerBase.rawFulfillRandomness method).For your users to trust that your contract's random behavior is freefrom malicious interference, it's best if you can write it so that allbehaviors implied by a VRF response are executed *during* yourfulfillRandomness method. If your contract must store the response (oranything derived from it) and use it later, you must ensure that anyuser-significant behavior which depends on that stored value cannot bemanipulated by a subsequent VRF request.Similarly, both miners and the VRF oracle itself have some influenceover the order in which VRF responses appear on the blockchain, so ifyour contract could have multiple VRF requests in flight simultaneously,you must ensure that the order in which the VRF responses arrive cannotbe used to manipulate your contract's user-significant behavior.Since the block hash of the block which contains the requestRandomnesscall is mixed into the input to the VRF *last*, a sufficiently powerfulminer could, in principle, fork the blockchain to evict the blockcontaining the request, forcing the request to be included in adifferent block with a different hash, and therefore a different inputto the VRF. However, such an attack would incur a substantial economiccost. This cost scales with the number of blocks the VRF oracle waitsuntil it calls responds to a request. It is for this reason thatthat you can signal to an oracle you'd like them to wait longer beforeresponding to the request (however this is not enforced in the contractand so remains effective only in the case of unmodified oracle software).","kind":"dev","methods":{"constructor":{"params":{"_vrfCoordinator":"address of VRFCoordinator contract"}}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"rawFulfillRandomWords(uint256,uint256[])":"1fe543e3"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"have\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"want\",\"type\":\"address\"}],\"name\":\"OnlyCoordinatorCanFulfill\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"randomWords\",\"type\":\"uint256[]\"}],\"name\":\"rawFulfillRandomWords\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"PURPOSEReggie the Random Oracle (not his real job) wants to provide randomnessto Vera the verifier in such a way that Vera can be sure he's notmaking his output up to suit himself. Reggie provides Vera a public keyto which he knows the secret key. Each time Vera provides a seed toReggie, he gives back a value which is computed completelydeterministically from the seed and the secret key.Reggie provides a proof by which Vera can verify that the output wascorrectly computed once Reggie tells it to her, but without that proof,the output is indistinguishable to her from a uniform random samplefrom the output space.The purpose of this contract is to make it easy for unrelated contractsto talk to Vera the verifier about the work Reggie is doing, to providesimple access to a verifiable source of randomness. It ensures 2 things:1. The fulfillment came from the VRFCoordinator2. The consumer contract implements fulfillRandomWords. *****************************************************************************USAGECalling contracts must inherit from VRFConsumerBase, and caninitialize VRFConsumerBase's attributes in their constructor asshown:contract VRFConsumer {constructor(<other arguments>, address _vrfCoordinator, address _link)VRFConsumerBase(_vrfCoordinator) public {<initialization with other arguments goes here>}}The oracle will have given you an ID for the VRF keypair they havecommitted to (let's call it keyHash). Create subscription, fund itand your consumer contract as a consumer of it (see VRFCoordinatorInterfacesubscription management functions).Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,callbackGasLimit, numWords),see (VRFCoordinatorInterface for a description of the arguments).Once the VRFCoordinator has received and validated the oracle's responseto your request, it will call your contract's fulfillRandomWords method.The randomness argument to fulfillRandomWords is a set of random wordsgenerated from your requestId and the blockHash of the request.If your contract could have concurrent requests open, you can use therequestId returned from requestRandomWords to track which response is associatedwith which randomness request.See \\\"SECURITY CONSIDERATIONS\\\" for principles to keep in mind,if your contract could have multiple requests in flight simultaneously.Colliding `requestId`s are cryptographically impossible as long as seedsdiffer. *****************************************************************************SECURITY CONSIDERATIONSA method with the ability to call your fulfillRandomness method directlycould spoof a VRF response with any random value, so it's critical thatit cannot be directly called by anything other than this base contract(specifically, by the VRFConsumerBase.rawFulfillRandomness method).For your users to trust that your contract's random behavior is freefrom malicious interference, it's best if you can write it so that allbehaviors implied by a VRF response are executed *during* yourfulfillRandomness method. If your contract must store the response (oranything derived from it) and use it later, you must ensure that anyuser-significant behavior which depends on that stored value cannot bemanipulated by a subsequent VRF request.Similarly, both miners and the VRF oracle itself have some influenceover the order in which VRF responses appear on the blockchain, so ifyour contract could have multiple VRF requests in flight simultaneously,you must ensure that the order in which the VRF responses arrive cannotbe used to manipulate your contract's user-significant behavior.Since the block hash of the block which contains the requestRandomnesscall is mixed into the input to the VRF *last*, a sufficiently powerfulminer could, in principle, fork the blockchain to evict the blockcontaining the request, forcing the request to be included in adifferent block with a different hash, and therefore a different inputto the VRF. However, such an attack would incur a substantial economiccost. This cost scales with the number of blocks the VRF oracle waitsuntil it calls responds to a request. It is for this reason thatthat you can signal to an oracle you'd like them to wait longer beforeresponding to the request (however this is not enforced in the contractand so remains effective only in the case of unmodified oracle software).\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"_vrfCoordinator\":\"address of VRFCoordinator contract\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"****************************************************************************Interface for contracts using VRF randomness *****************************************************************************\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol\":\"VRFConsumerBaseV2\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\n\\n/** ****************************************************************************\\n * @notice Interface for contracts using VRF randomness\\n * *****************************************************************************\\n * @dev PURPOSE\\n *\\n * @dev Reggie the Random Oracle (not his real job) wants to provide randomness\\n * @dev to Vera the verifier in such a way that Vera can be sure he's not\\n * @dev making his output up to suit himself. Reggie provides Vera a public key\\n * @dev to which he knows the secret key. Each time Vera provides a seed to\\n * @dev Reggie, he gives back a value which is computed completely\\n * @dev deterministically from the seed and the secret key.\\n *\\n * @dev Reggie provides a proof by which Vera can verify that the output was\\n * @dev correctly computed once Reggie tells it to her, but without that proof,\\n * @dev the output is indistinguishable to her from a uniform random sample\\n * @dev from the output space.\\n *\\n * @dev The purpose of this contract is to make it easy for unrelated contracts\\n * @dev to talk to Vera the verifier about the work Reggie is doing, to provide\\n * @dev simple access to a verifiable source of randomness. It ensures 2 things:\\n * @dev 1. The fulfillment came from the VRFCoordinator\\n * @dev 2. The consumer contract implements fulfillRandomWords.\\n * *****************************************************************************\\n * @dev USAGE\\n *\\n * @dev Calling contracts must inherit from VRFConsumerBase, and can\\n * @dev initialize VRFConsumerBase's attributes in their constructor as\\n * @dev shown:\\n *\\n * @dev   contract VRFConsumer {\\n * @dev     constructor(<other arguments>, address _vrfCoordinator, address _link)\\n * @dev       VRFConsumerBase(_vrfCoordinator) public {\\n * @dev         <initialization with other arguments goes here>\\n * @dev       }\\n * @dev   }\\n *\\n * @dev The oracle will have given you an ID for the VRF keypair they have\\n * @dev committed to (let's call it keyHash). Create subscription, fund it\\n * @dev and your consumer contract as a consumer of it (see VRFCoordinatorInterface\\n * @dev subscription management functions).\\n * @dev Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,\\n * @dev callbackGasLimit, numWords),\\n * @dev see (VRFCoordinatorInterface for a description of the arguments).\\n *\\n * @dev Once the VRFCoordinator has received and validated the oracle's response\\n * @dev to your request, it will call your contract's fulfillRandomWords method.\\n *\\n * @dev The randomness argument to fulfillRandomWords is a set of random words\\n * @dev generated from your requestId and the blockHash of the request.\\n *\\n * @dev If your contract could have concurrent requests open, you can use the\\n * @dev requestId returned from requestRandomWords to track which response is associated\\n * @dev with which randomness request.\\n * @dev See \\\"SECURITY CONSIDERATIONS\\\" for principles to keep in mind,\\n * @dev if your contract could have multiple requests in flight simultaneously.\\n *\\n * @dev Colliding `requestId`s are cryptographically impossible as long as seeds\\n * @dev differ.\\n *\\n * *****************************************************************************\\n * @dev SECURITY CONSIDERATIONS\\n *\\n * @dev A method with the ability to call your fulfillRandomness method directly\\n * @dev could spoof a VRF response with any random value, so it's critical that\\n * @dev it cannot be directly called by anything other than this base contract\\n * @dev (specifically, by the VRFConsumerBase.rawFulfillRandomness method).\\n *\\n * @dev For your users to trust that your contract's random behavior is free\\n * @dev from malicious interference, it's best if you can write it so that all\\n * @dev behaviors implied by a VRF response are executed *during* your\\n * @dev fulfillRandomness method. If your contract must store the response (or\\n * @dev anything derived from it) and use it later, you must ensure that any\\n * @dev user-significant behavior which depends on that stored value cannot be\\n * @dev manipulated by a subsequent VRF request.\\n *\\n * @dev Similarly, both miners and the VRF oracle itself have some influence\\n * @dev over the order in which VRF responses appear on the blockchain, so if\\n * @dev your contract could have multiple VRF requests in flight simultaneously,\\n * @dev you must ensure that the order in which the VRF responses arrive cannot\\n * @dev be used to manipulate your contract's user-significant behavior.\\n *\\n * @dev Since the block hash of the block which contains the requestRandomness\\n * @dev call is mixed into the input to the VRF *last*, a sufficiently powerful\\n * @dev miner could, in principle, fork the blockchain to evict the block\\n * @dev containing the request, forcing the request to be included in a\\n * @dev different block with a different hash, and therefore a different input\\n * @dev to the VRF. However, such an attack would incur a substantial economic\\n * @dev cost. This cost scales with the number of blocks the VRF oracle waits\\n * @dev until it calls responds to a request. It is for this reason that\\n * @dev that you can signal to an oracle you'd like them to wait longer before\\n * @dev responding to the request (however this is not enforced in the contract\\n * @dev and so remains effective only in the case of unmodified oracle software).\\n */\\nabstract contract VRFConsumerBaseV2 {\\n  error OnlyCoordinatorCanFulfill(address have, address want);\\n  address private immutable vrfCoordinator;\\n\\n  /**\\n   * @param _vrfCoordinator address of VRFCoordinator contract\\n   */\\n  constructor(address _vrfCoordinator) {\\n    vrfCoordinator = _vrfCoordinator;\\n  }\\n\\n  /**\\n   * @notice fulfillRandomness handles the VRF response. Your contract must\\n   * @notice implement it. See \\\"SECURITY CONSIDERATIONS\\\" above for important\\n   * @notice principles to keep in mind when implementing your fulfillRandomness\\n   * @notice method.\\n   *\\n   * @dev VRFConsumerBaseV2 expects its subcontracts to have a method with this\\n   * @dev signature, and will call it once it has verified the proof\\n   * @dev associated with the randomness. (It is triggered via a call to\\n   * @dev rawFulfillRandomness, below.)\\n   *\\n   * @param requestId The Id initially returned by requestRandomness\\n   * @param randomWords the VRF output expanded to the requested number of words\\n   */\\n  function fulfillRandomWords(uint256 requestId, uint256[] memory randomWords) internal virtual;\\n\\n  // rawFulfillRandomness is called by VRFCoordinator when it receives a valid VRF\\n  // proof. rawFulfillRandomness then calls fulfillRandomness, after validating\\n  // the origin of the call\\n  function rawFulfillRandomWords(uint256 requestId, uint256[] memory randomWords) external {\\n    if (msg.sender != vrfCoordinator) {\\n      revert OnlyCoordinatorCanFulfill(msg.sender, vrfCoordinator);\\n    }\\n    fulfillRandomWords(requestId, randomWords);\\n  }\\n}\\n\",\"keccak256\":\"0x3d709a5e0f1f9b8841172b10ba8af785dd51a13eda9fc395723a706e51329904\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"notice":"****************************************************************************Interface for contracts using VRF randomness *****************************************************************************","version":1}}},"@chainlink/contracts/src/v0.8/vrf/VRFCoordinatorV2.sol":{"VRFCoordinatorV2":{"abi":[{"inputs":[{"internalType":"address","name":"link","type":"address"},{"internalType":"address","name":"blockhashStore","type":"address"},{"internalType":"address","name":"linkEthFeed","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"uint256","name":"internalBalance","type":"uint256"},{"internalType":"uint256","name":"externalBalance","type":"uint256"}],"name":"BalanceInvariantViolated","type":"error"},{"inputs":[{"internalType":"uint256","name":"blockNum","type":"uint256"}],"name":"BlockhashNotInStore","type":"error"},{"inputs":[{"internalType":"uint32","name":"have","type":"uint32"},{"internalType":"uint32","name":"want","type":"uint32"}],"name":"GasLimitTooBig","type":"error"},{"inputs":[],"name":"IncorrectCommitment","type":"error"},{"inputs":[],"name":"InsufficientBalance","type":"error"},{"inputs":[{"internalType":"uint256","name":"have","type":"uint256"},{"internalType":"uint256","name":"want","type":"uint256"}],"name":"InsufficientGasForConsumer","type":"error"},{"inputs":[],"name":"InvalidCalldata","type":"error"},{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"},{"internalType":"address","name":"consumer","type":"address"}],"name":"InvalidConsumer","type":"error"},{"inputs":[{"internalType":"int256","name":"linkWei","type":"int256"}],"name":"InvalidLinkWeiPrice","type":"error"},{"inputs":[{"internalType":"uint16","name":"have","type":"uint16"},{"internalType":"uint16","name":"min","type":"uint16"},{"internalType":"uint16","name":"max","type":"uint16"}],"name":"InvalidRequestConfirmations","type":"error"},{"inputs":[],"name":"InvalidSubscription","type":"error"},{"inputs":[{"internalType":"address","name":"proposedOwner","type":"address"}],"name":"MustBeRequestedOwner","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"MustBeSubOwner","type":"error"},{"inputs":[],"name":"NoCorrespondingRequest","type":"error"},{"inputs":[{"internalType":"bytes32","name":"keyHash","type":"bytes32"}],"name":"NoSuchProvingKey","type":"error"},{"inputs":[{"internalType":"uint32","name":"have","type":"uint32"},{"internalType":"uint32","name":"want","type":"uint32"}],"name":"NumWordsTooBig","type":"error"},{"inputs":[],"name":"OnlyCallableFromLink","type":"error"},{"inputs":[],"name":"PaymentTooLarge","type":"error"},{"inputs":[],"name":"PendingRequestExists","type":"error"},{"inputs":[{"internalType":"bytes32","name":"keyHash","type":"bytes32"}],"name":"ProvingKeyAlreadyRegistered","type":"error"},{"inputs":[],"name":"Reentrant","type":"error"},{"inputs":[],"name":"TooManyConsumers","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint16","name":"minimumRequestConfirmations","type":"uint16"},{"indexed":false,"internalType":"uint32","name":"maxGasLimit","type":"uint32"},{"indexed":false,"internalType":"uint32","name":"stalenessSeconds","type":"uint32"},{"indexed":false,"internalType":"uint32","name":"gasAfterPaymentCalculation","type":"uint32"},{"indexed":false,"internalType":"int256","name":"fallbackWeiPerUnitLink","type":"int256"},{"components":[{"internalType":"uint32","name":"fulfillmentFlatFeeLinkPPMTier1","type":"uint32"},{"internalType":"uint32","name":"fulfillmentFlatFeeLinkPPMTier2","type":"uint32"},{"internalType":"uint32","name":"fulfillmentFlatFeeLinkPPMTier3","type":"uint32"},{"internalType":"uint32","name":"fulfillmentFlatFeeLinkPPMTier4","type":"uint32"},{"internalType":"uint32","name":"fulfillmentFlatFeeLinkPPMTier5","type":"uint32"},{"internalType":"uint24","name":"reqsForTier2","type":"uint24"},{"internalType":"uint24","name":"reqsForTier3","type":"uint24"},{"internalType":"uint24","name":"reqsForTier4","type":"uint24"},{"internalType":"uint24","name":"reqsForTier5","type":"uint24"}],"indexed":false,"internalType":"struct VRFCoordinatorV2.FeeConfig","name":"feeConfig","type":"tuple"}],"name":"ConfigSet","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"FundsRecovered","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"}],"name":"OwnershipTransferRequested","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bytes32","name":"keyHash","type":"bytes32"},{"indexed":true,"internalType":"address","name":"oracle","type":"address"}],"name":"ProvingKeyDeregistered","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"bytes32","name":"keyHash","type":"bytes32"},{"indexed":true,"internalType":"address","name":"oracle","type":"address"}],"name":"ProvingKeyRegistered","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"requestId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"outputSeed","type":"uint256"},{"indexed":false,"internalType":"uint96","name":"payment","type":"uint96"},{"indexed":false,"internalType":"bool","name":"success","type":"bool"}],"name":"RandomWordsFulfilled","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"keyHash","type":"bytes32"},{"indexed":false,"internalType":"uint256","name":"requestId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"preSeed","type":"uint256"},{"indexed":true,"internalType":"uint64","name":"subId","type":"uint64"},{"indexed":false,"internalType":"uint16","name":"minimumRequestConfirmations","type":"uint16"},{"indexed":false,"internalType":"uint32","name":"callbackGasLimit","type":"uint32"},{"indexed":false,"internalType":"uint32","name":"numWords","type":"uint32"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RandomWordsRequested","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint64","name":"subId","type":"uint64"},{"indexed":false,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"SubscriptionCanceled","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint64","name":"subId","type":"uint64"},{"indexed":false,"internalType":"address","name":"consumer","type":"address"}],"name":"SubscriptionConsumerAdded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint64","name":"subId","type":"uint64"},{"indexed":false,"internalType":"address","name":"consumer","type":"address"}],"name":"SubscriptionConsumerRemoved","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint64","name":"subId","type":"uint64"},{"indexed":false,"internalType":"address","name":"owner","type":"address"}],"name":"SubscriptionCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint64","name":"subId","type":"uint64"},{"indexed":false,"internalType":"uint256","name":"oldBalance","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newBalance","type":"uint256"}],"name":"SubscriptionFunded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint64","name":"subId","type":"uint64"},{"indexed":false,"internalType":"address","name":"from","type":"address"},{"indexed":false,"internalType":"address","name":"to","type":"address"}],"name":"SubscriptionOwnerTransferRequested","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint64","name":"subId","type":"uint64"},{"indexed":false,"internalType":"address","name":"from","type":"address"},{"indexed":false,"internalType":"address","name":"to","type":"address"}],"name":"SubscriptionOwnerTransferred","type":"event"},{"inputs":[],"name":"BLOCKHASH_STORE","outputs":[{"internalType":"contract BlockhashStoreInterface","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"LINK","outputs":[{"internalType":"contract LinkTokenInterface","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"LINK_ETH_FEED","outputs":[{"internalType":"contract AggregatorV3Interface","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MAX_CONSUMERS","outputs":[{"internalType":"uint16","name":"","type":"uint16"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MAX_NUM_WORDS","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MAX_REQUEST_CONFIRMATIONS","outputs":[{"internalType":"uint16","name":"","type":"uint16"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"acceptOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"}],"name":"acceptSubscriptionOwnerTransfer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"},{"internalType":"address","name":"consumer","type":"address"}],"name":"addConsumer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"},{"internalType":"address","name":"to","type":"address"}],"name":"cancelSubscription","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"createSubscription","outputs":[{"internalType":"uint64","name":"","type":"uint64"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256[2]","name":"publicProvingKey","type":"uint256[2]"}],"name":"deregisterProvingKey","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"uint256[2]","name":"pk","type":"uint256[2]"},{"internalType":"uint256[2]","name":"gamma","type":"uint256[2]"},{"internalType":"uint256","name":"c","type":"uint256"},{"internalType":"uint256","name":"s","type":"uint256"},{"internalType":"uint256","name":"seed","type":"uint256"},{"internalType":"address","name":"uWitness","type":"address"},{"internalType":"uint256[2]","name":"cGammaWitness","type":"uint256[2]"},{"internalType":"uint256[2]","name":"sHashWitness","type":"uint256[2]"},{"internalType":"uint256","name":"zInv","type":"uint256"}],"internalType":"struct VRF.Proof","name":"proof","type":"tuple"},{"components":[{"internalType":"uint64","name":"blockNum","type":"uint64"},{"internalType":"uint64","name":"subId","type":"uint64"},{"internalType":"uint32","name":"callbackGasLimit","type":"uint32"},{"internalType":"uint32","name":"numWords","type":"uint32"},{"internalType":"address","name":"sender","type":"address"}],"internalType":"struct VRFCoordinatorV2.RequestCommitment","name":"rc","type":"tuple"}],"name":"fulfillRandomWords","outputs":[{"internalType":"uint96","name":"","type":"uint96"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"requestId","type":"uint256"}],"name":"getCommitment","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getConfig","outputs":[{"internalType":"uint16","name":"minimumRequestConfirmations","type":"uint16"},{"internalType":"uint32","name":"maxGasLimit","type":"uint32"},{"internalType":"uint32","name":"stalenessSeconds","type":"uint32"},{"internalType":"uint32","name":"gasAfterPaymentCalculation","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getCurrentSubId","outputs":[{"internalType":"uint64","name":"","type":"uint64"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getFallbackWeiPerUnitLink","outputs":[{"internalType":"int256","name":"","type":"int256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getFeeConfig","outputs":[{"internalType":"uint32","name":"fulfillmentFlatFeeLinkPPMTier1","type":"uint32"},{"internalType":"uint32","name":"fulfillmentFlatFeeLinkPPMTier2","type":"uint32"},{"internalType":"uint32","name":"fulfillmentFlatFeeLinkPPMTier3","type":"uint32"},{"internalType":"uint32","name":"fulfillmentFlatFeeLinkPPMTier4","type":"uint32"},{"internalType":"uint32","name":"fulfillmentFlatFeeLinkPPMTier5","type":"uint32"},{"internalType":"uint24","name":"reqsForTier2","type":"uint24"},{"internalType":"uint24","name":"reqsForTier3","type":"uint24"},{"internalType":"uint24","name":"reqsForTier4","type":"uint24"},{"internalType":"uint24","name":"reqsForTier5","type":"uint24"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint64","name":"reqCount","type":"uint64"}],"name":"getFeeTier","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getRequestConfig","outputs":[{"internalType":"uint16","name":"","type":"uint16"},{"internalType":"uint32","name":"","type":"uint32"},{"internalType":"bytes32[]","name":"","type":"bytes32[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"}],"name":"getSubscription","outputs":[{"internalType":"uint96","name":"balance","type":"uint96"},{"internalType":"uint64","name":"reqCount","type":"uint64"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"address[]","name":"consumers","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getTotalBalance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256[2]","name":"publicKey","type":"uint256[2]"}],"name":"hashOfKey","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onTokenTransfer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint96","name":"amount","type":"uint96"}],"name":"oracleWithdraw","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"}],"name":"ownerCancelSubscription","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"}],"name":"pendingRequestExists","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"}],"name":"recoverFunds","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"oracle","type":"address"},{"internalType":"uint256[2]","name":"publicProvingKey","type":"uint256[2]"}],"name":"registerProvingKey","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"},{"internalType":"address","name":"consumer","type":"address"}],"name":"removeConsumer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"keyHash","type":"bytes32"},{"internalType":"uint64","name":"subId","type":"uint64"},{"internalType":"uint16","name":"requestConfirmations","type":"uint16"},{"internalType":"uint32","name":"callbackGasLimit","type":"uint32"},{"internalType":"uint32","name":"numWords","type":"uint32"}],"name":"requestRandomWords","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"},{"internalType":"address","name":"newOwner","type":"address"}],"name":"requestSubscriptionOwnerTransfer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"minimumRequestConfirmations","type":"uint16"},{"internalType":"uint32","name":"maxGasLimit","type":"uint32"},{"internalType":"uint32","name":"stalenessSeconds","type":"uint32"},{"internalType":"uint32","name":"gasAfterPaymentCalculation","type":"uint32"},{"internalType":"int256","name":"fallbackWeiPerUnitLink","type":"int256"},{"components":[{"internalType":"uint32","name":"fulfillmentFlatFeeLinkPPMTier1","type":"uint32"},{"internalType":"uint32","name":"fulfillmentFlatFeeLinkPPMTier2","type":"uint32"},{"internalType":"uint32","name":"fulfillmentFlatFeeLinkPPMTier3","type":"uint32"},{"internalType":"uint32","name":"fulfillmentFlatFeeLinkPPMTier4","type":"uint32"},{"internalType":"uint32","name":"fulfillmentFlatFeeLinkPPMTier5","type":"uint32"},{"internalType":"uint24","name":"reqsForTier2","type":"uint24"},{"internalType":"uint24","name":"reqsForTier3","type":"uint24"},{"internalType":"uint24","name":"reqsForTier4","type":"uint24"},{"internalType":"uint24","name":"reqsForTier5","type":"uint24"}],"internalType":"struct VRFCoordinatorV2.FeeConfig","name":"feeConfig","type":"tuple"}],"name":"setConfig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"typeAndVersion","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"pure","type":"function"}],"devdoc":{"kind":"dev","methods":{"acceptSubscriptionOwnerTransfer(uint64)":{"details":"will revert if original owner of subId has not requested that msg.sender become the new owner.","params":{"subId":"- ID of the subscription"}},"addConsumer(uint64,address)":{"params":{"consumer":"- New consumer which can use the subscription","subId":"- ID of the subscription"}},"cancelSubscription(uint64,address)":{"params":{"subId":"- ID of the subscription","to":"- Where to send the remaining LINK to"}},"createSubscription()":{"details":"You can manage the consumer set dynamically with addConsumer/removeConsumer.Note to fund the subscription, use transferAndCall. For exampleLINKTOKEN.transferAndCall(address(COORDINATOR),amount,abi.encode(subId));","returns":{"_0":"- A unique subscription id."}},"deregisterProvingKey(uint256[2])":{"params":{"publicProvingKey":"key that oracle can use to submit vrf fulfillments"}},"getCommitment(uint256)":{"details":"used to determine if a request is fulfilled or not","params":{"requestId":"id of request"}},"getRequestConfig()":{"returns":{"_0":"minimumRequestConfirmations global min for request confirmations","_1":"maxGasLimit global max for request gas limit","_2":"s_provingKeyHashes list of registered key hashes"}},"getSubscription(uint64)":{"params":{"subId":"- ID of the subscription"},"returns":{"balance":"- LINK balance of the subscription in juels.","consumers":"- list of consumer address which are able to use this subscription.","owner":"- owner of the subscription.","reqCount":"- number of requests for this subscription, determines fee tier."}},"hashOfKey(uint256[2])":{"params":{"publicKey":"the key to return the hash of"}},"ownerCancelSubscription(uint64)":{"details":"notably can be called even if there are pending requests, outstanding ones may fail onchain","params":{"subId":"subscription id"}},"pendingRequestExists(uint64)":{"details":"Looping is bounded to MAX_CONSUMERS*(number of keyhashes).Used to disable subscription canceling while outstanding request are present."},"recoverFunds(address)":{"params":{"to":"address to send link to"}},"registerProvingKey(address,uint256[2])":{"params":{"oracle":"address of the oracle","publicProvingKey":"key that oracle can use to submit vrf fulfillments"}},"removeConsumer(uint64,address)":{"params":{"consumer":"- Consumer to remove from the subscription","subId":"- ID of the subscription"}},"requestRandomWords(bytes32,uint64,uint16,uint32,uint32)":{"params":{"callbackGasLimit":"- How much gas you'd like to receive in your fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords may be slightly less than this amount because of gas used calling the function (argument decoding etc.), so you may need to request slightly more than you expect to have inside fulfillRandomWords. The acceptable range is [0, maxGasLimit]","keyHash":"- Corresponds to a particular oracle job which uses that key for generating the VRF proof. Different keyHash's have different gas price ceilings, so you can select a specific one to bound your maximum per request cost.","minimumRequestConfirmations":"- How many blocks you'd like the oracle to wait before responding to the request. See SECURITY CONSIDERATIONS for why you may want to request more. The acceptable range is [minimumRequestBlockConfirmations, 200].","numWords":"- The number of uint256 random values you'd like to receive in your fulfillRandomWords callback. Note these numbers are expanded in a secure way by the VRFCoordinator from a single random value supplied by the oracle.","subId":"- The ID of the VRF subscription. Must be funded with the minimum subscription balance required for the selected keyHash."},"returns":{"_0":"- A unique identifier of the request. Can be used to match a request to a response in fulfillRandomWords."}},"requestSubscriptionOwnerTransfer(uint64,address)":{"params":{"newOwner":"- proposed new owner of the subscription","subId":"- ID of the subscription"}},"setConfig(uint16,uint32,uint32,uint32,int256,(uint32,uint32,uint32,uint32,uint32,uint24,uint24,uint24,uint24))":{"params":{"fallbackWeiPerUnitLink":"fallback eth/link price in the case of a stale feed","feeConfig":"fee tier configuration","gasAfterPaymentCalculation":"gas used in doing accounting after completing the gas measurement","maxGasLimit":"global max for request gas limit","minimumRequestConfirmations":"global min for request confirmations","stalenessSeconds":"if the eth/link feed is more stale then this, use the fallback price"}},"typeAndVersion()":{"returns":{"_0":"Type and version string"}}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_2458":{"entryPoint":null,"id":2458,"parameterSlots":3,"returnSlots":0},"@_426":{"entryPoint":null,"id":426,"parameterSlots":1,"returnSlots":0},"@_483":{"entryPoint":null,"id":483,"parameterSlots":2,"returnSlots":0},"@_transferOwnership_567":{"entryPoint":475,"id":567,"parameterSlots":1,"returnSlots":0},"abi_decode_t_address_fromMemory":{"entryPoint":861,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_addresst_address_fromMemory":{"entryPoint":884,"id":null,"parameterSlots":2,"returnSlots":3},"abi_encode_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2_to_t_string_memory_ptr_fromStack":{"entryPoint":1034,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack":{"entryPoint":1148,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1073,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1187,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":976,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":815,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":783,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":778,"id":null,"parameterSlots":0,"returnSlots":0},"store_literal_in_memory_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2":{"entryPoint":993,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2":{"entryPoint":1107,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":835,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:3639:20","nodeType":"YulBlock","src":"0:3639:20","statements":[{"body":{"nativeSrc":"47:35:20","nodeType":"YulBlock","src":"47:35:20","statements":[{"nativeSrc":"57:19:20","nodeType":"YulAssignment","src":"57:19:20","value":{"arguments":[{"kind":"number","nativeSrc":"73:2:20","nodeType":"YulLiteral","src":"73:2:20","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"67:5:20","nodeType":"YulIdentifier","src":"67:5:20"},"nativeSrc":"67:9:20","nodeType":"YulFunctionCall","src":"67:9:20"},"variableNames":[{"name":"memPtr","nativeSrc":"57:6:20","nodeType":"YulIdentifier","src":"57:6:20"}]}]},"name":"allocate_unbounded","nativeSrc":"7:75:20","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"40:6:20","nodeType":"YulTypedName","src":"40:6:20","type":""}],"src":"7:75:20"},{"body":{"nativeSrc":"177:28:20","nodeType":"YulBlock","src":"177:28:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"194:1:20","nodeType":"YulLiteral","src":"194:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"197:1:20","nodeType":"YulLiteral","src":"197:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"187:6:20","nodeType":"YulIdentifier","src":"187:6:20"},"nativeSrc":"187:12:20","nodeType":"YulFunctionCall","src":"187:12:20"},"nativeSrc":"187:12:20","nodeType":"YulExpressionStatement","src":"187:12:20"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"88:117:20","nodeType":"YulFunctionDefinition","src":"88:117:20"},{"body":{"nativeSrc":"300:28:20","nodeType":"YulBlock","src":"300:28:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"317:1:20","nodeType":"YulLiteral","src":"317:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"320:1:20","nodeType":"YulLiteral","src":"320:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"310:6:20","nodeType":"YulIdentifier","src":"310:6:20"},"nativeSrc":"310:12:20","nodeType":"YulFunctionCall","src":"310:12:20"},"nativeSrc":"310:12:20","nodeType":"YulExpressionStatement","src":"310:12:20"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"211:117:20","nodeType":"YulFunctionDefinition","src":"211:117:20"},{"body":{"nativeSrc":"379:81:20","nodeType":"YulBlock","src":"379:81:20","statements":[{"nativeSrc":"389:65:20","nodeType":"YulAssignment","src":"389:65:20","value":{"arguments":[{"name":"value","nativeSrc":"404:5:20","nodeType":"YulIdentifier","src":"404:5:20"},{"kind":"number","nativeSrc":"411:42:20","nodeType":"YulLiteral","src":"411:42:20","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"400:3:20","nodeType":"YulIdentifier","src":"400:3:20"},"nativeSrc":"400:54:20","nodeType":"YulFunctionCall","src":"400:54:20"},"variableNames":[{"name":"cleaned","nativeSrc":"389:7:20","nodeType":"YulIdentifier","src":"389:7:20"}]}]},"name":"cleanup_t_uint160","nativeSrc":"334:126:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"361:5:20","nodeType":"YulTypedName","src":"361:5:20","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"371:7:20","nodeType":"YulTypedName","src":"371:7:20","type":""}],"src":"334:126:20"},{"body":{"nativeSrc":"511:51:20","nodeType":"YulBlock","src":"511:51:20","statements":[{"nativeSrc":"521:35:20","nodeType":"YulAssignment","src":"521:35:20","value":{"arguments":[{"name":"value","nativeSrc":"550:5:20","nodeType":"YulIdentifier","src":"550:5:20"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"532:17:20","nodeType":"YulIdentifier","src":"532:17:20"},"nativeSrc":"532:24:20","nodeType":"YulFunctionCall","src":"532:24:20"},"variableNames":[{"name":"cleaned","nativeSrc":"521:7:20","nodeType":"YulIdentifier","src":"521:7:20"}]}]},"name":"cleanup_t_address","nativeSrc":"466:96:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"493:5:20","nodeType":"YulTypedName","src":"493:5:20","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"503:7:20","nodeType":"YulTypedName","src":"503:7:20","type":""}],"src":"466:96:20"},{"body":{"nativeSrc":"611:79:20","nodeType":"YulBlock","src":"611:79:20","statements":[{"body":{"nativeSrc":"668:16:20","nodeType":"YulBlock","src":"668:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"677:1:20","nodeType":"YulLiteral","src":"677:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"680:1:20","nodeType":"YulLiteral","src":"680:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"670:6:20","nodeType":"YulIdentifier","src":"670:6:20"},"nativeSrc":"670:12:20","nodeType":"YulFunctionCall","src":"670:12:20"},"nativeSrc":"670:12:20","nodeType":"YulExpressionStatement","src":"670:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"634:5:20","nodeType":"YulIdentifier","src":"634:5:20"},{"arguments":[{"name":"value","nativeSrc":"659:5:20","nodeType":"YulIdentifier","src":"659:5:20"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"641:17:20","nodeType":"YulIdentifier","src":"641:17:20"},"nativeSrc":"641:24:20","nodeType":"YulFunctionCall","src":"641:24:20"}],"functionName":{"name":"eq","nativeSrc":"631:2:20","nodeType":"YulIdentifier","src":"631:2:20"},"nativeSrc":"631:35:20","nodeType":"YulFunctionCall","src":"631:35:20"}],"functionName":{"name":"iszero","nativeSrc":"624:6:20","nodeType":"YulIdentifier","src":"624:6:20"},"nativeSrc":"624:43:20","nodeType":"YulFunctionCall","src":"624:43:20"},"nativeSrc":"621:63:20","nodeType":"YulIf","src":"621:63:20"}]},"name":"validator_revert_t_address","nativeSrc":"568:122:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"604:5:20","nodeType":"YulTypedName","src":"604:5:20","type":""}],"src":"568:122:20"},{"body":{"nativeSrc":"759:80:20","nodeType":"YulBlock","src":"759:80:20","statements":[{"nativeSrc":"769:22:20","nodeType":"YulAssignment","src":"769:22:20","value":{"arguments":[{"name":"offset","nativeSrc":"784:6:20","nodeType":"YulIdentifier","src":"784:6:20"}],"functionName":{"name":"mload","nativeSrc":"778:5:20","nodeType":"YulIdentifier","src":"778:5:20"},"nativeSrc":"778:13:20","nodeType":"YulFunctionCall","src":"778:13:20"},"variableNames":[{"name":"value","nativeSrc":"769:5:20","nodeType":"YulIdentifier","src":"769:5:20"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"827:5:20","nodeType":"YulIdentifier","src":"827:5:20"}],"functionName":{"name":"validator_revert_t_address","nativeSrc":"800:26:20","nodeType":"YulIdentifier","src":"800:26:20"},"nativeSrc":"800:33:20","nodeType":"YulFunctionCall","src":"800:33:20"},"nativeSrc":"800:33:20","nodeType":"YulExpressionStatement","src":"800:33:20"}]},"name":"abi_decode_t_address_fromMemory","nativeSrc":"696:143:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"737:6:20","nodeType":"YulTypedName","src":"737:6:20","type":""},{"name":"end","nativeSrc":"745:3:20","nodeType":"YulTypedName","src":"745:3:20","type":""}],"returnVariables":[{"name":"value","nativeSrc":"753:5:20","nodeType":"YulTypedName","src":"753:5:20","type":""}],"src":"696:143:20"},{"body":{"nativeSrc":"956:552:20","nodeType":"YulBlock","src":"956:552:20","statements":[{"body":{"nativeSrc":"1002:83:20","nodeType":"YulBlock","src":"1002:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"1004:77:20","nodeType":"YulIdentifier","src":"1004:77:20"},"nativeSrc":"1004:79:20","nodeType":"YulFunctionCall","src":"1004:79:20"},"nativeSrc":"1004:79:20","nodeType":"YulExpressionStatement","src":"1004:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"977:7:20","nodeType":"YulIdentifier","src":"977:7:20"},{"name":"headStart","nativeSrc":"986:9:20","nodeType":"YulIdentifier","src":"986:9:20"}],"functionName":{"name":"sub","nativeSrc":"973:3:20","nodeType":"YulIdentifier","src":"973:3:20"},"nativeSrc":"973:23:20","nodeType":"YulFunctionCall","src":"973:23:20"},{"kind":"number","nativeSrc":"998:2:20","nodeType":"YulLiteral","src":"998:2:20","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"969:3:20","nodeType":"YulIdentifier","src":"969:3:20"},"nativeSrc":"969:32:20","nodeType":"YulFunctionCall","src":"969:32:20"},"nativeSrc":"966:119:20","nodeType":"YulIf","src":"966:119:20"},{"nativeSrc":"1095:128:20","nodeType":"YulBlock","src":"1095:128:20","statements":[{"nativeSrc":"1110:15:20","nodeType":"YulVariableDeclaration","src":"1110:15:20","value":{"kind":"number","nativeSrc":"1124:1:20","nodeType":"YulLiteral","src":"1124:1:20","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"1114:6:20","nodeType":"YulTypedName","src":"1114:6:20","type":""}]},{"nativeSrc":"1139:74:20","nodeType":"YulAssignment","src":"1139:74:20","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1185:9:20","nodeType":"YulIdentifier","src":"1185:9:20"},{"name":"offset","nativeSrc":"1196:6:20","nodeType":"YulIdentifier","src":"1196:6:20"}],"functionName":{"name":"add","nativeSrc":"1181:3:20","nodeType":"YulIdentifier","src":"1181:3:20"},"nativeSrc":"1181:22:20","nodeType":"YulFunctionCall","src":"1181:22:20"},{"name":"dataEnd","nativeSrc":"1205:7:20","nodeType":"YulIdentifier","src":"1205:7:20"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nativeSrc":"1149:31:20","nodeType":"YulIdentifier","src":"1149:31:20"},"nativeSrc":"1149:64:20","nodeType":"YulFunctionCall","src":"1149:64:20"},"variableNames":[{"name":"value0","nativeSrc":"1139:6:20","nodeType":"YulIdentifier","src":"1139:6:20"}]}]},{"nativeSrc":"1233:129:20","nodeType":"YulBlock","src":"1233:129:20","statements":[{"nativeSrc":"1248:16:20","nodeType":"YulVariableDeclaration","src":"1248:16:20","value":{"kind":"number","nativeSrc":"1262:2:20","nodeType":"YulLiteral","src":"1262:2:20","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"1252:6:20","nodeType":"YulTypedName","src":"1252:6:20","type":""}]},{"nativeSrc":"1278:74:20","nodeType":"YulAssignment","src":"1278:74:20","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1324:9:20","nodeType":"YulIdentifier","src":"1324:9:20"},{"name":"offset","nativeSrc":"1335:6:20","nodeType":"YulIdentifier","src":"1335:6:20"}],"functionName":{"name":"add","nativeSrc":"1320:3:20","nodeType":"YulIdentifier","src":"1320:3:20"},"nativeSrc":"1320:22:20","nodeType":"YulFunctionCall","src":"1320:22:20"},{"name":"dataEnd","nativeSrc":"1344:7:20","nodeType":"YulIdentifier","src":"1344:7:20"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nativeSrc":"1288:31:20","nodeType":"YulIdentifier","src":"1288:31:20"},"nativeSrc":"1288:64:20","nodeType":"YulFunctionCall","src":"1288:64:20"},"variableNames":[{"name":"value1","nativeSrc":"1278:6:20","nodeType":"YulIdentifier","src":"1278:6:20"}]}]},{"nativeSrc":"1372:129:20","nodeType":"YulBlock","src":"1372:129:20","statements":[{"nativeSrc":"1387:16:20","nodeType":"YulVariableDeclaration","src":"1387:16:20","value":{"kind":"number","nativeSrc":"1401:2:20","nodeType":"YulLiteral","src":"1401:2:20","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"1391:6:20","nodeType":"YulTypedName","src":"1391:6:20","type":""}]},{"nativeSrc":"1417:74:20","nodeType":"YulAssignment","src":"1417:74:20","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1463:9:20","nodeType":"YulIdentifier","src":"1463:9:20"},{"name":"offset","nativeSrc":"1474:6:20","nodeType":"YulIdentifier","src":"1474:6:20"}],"functionName":{"name":"add","nativeSrc":"1459:3:20","nodeType":"YulIdentifier","src":"1459:3:20"},"nativeSrc":"1459:22:20","nodeType":"YulFunctionCall","src":"1459:22:20"},{"name":"dataEnd","nativeSrc":"1483:7:20","nodeType":"YulIdentifier","src":"1483:7:20"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nativeSrc":"1427:31:20","nodeType":"YulIdentifier","src":"1427:31:20"},"nativeSrc":"1427:64:20","nodeType":"YulFunctionCall","src":"1427:64:20"},"variableNames":[{"name":"value2","nativeSrc":"1417:6:20","nodeType":"YulIdentifier","src":"1417:6:20"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_address_fromMemory","nativeSrc":"845:663:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"910:9:20","nodeType":"YulTypedName","src":"910:9:20","type":""},{"name":"dataEnd","nativeSrc":"921:7:20","nodeType":"YulTypedName","src":"921:7:20","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"933:6:20","nodeType":"YulTypedName","src":"933:6:20","type":""},{"name":"value1","nativeSrc":"941:6:20","nodeType":"YulTypedName","src":"941:6:20","type":""},{"name":"value2","nativeSrc":"949:6:20","nodeType":"YulTypedName","src":"949:6:20","type":""}],"src":"845:663:20"},{"body":{"nativeSrc":"1610:73:20","nodeType":"YulBlock","src":"1610:73:20","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"1627:3:20","nodeType":"YulIdentifier","src":"1627:3:20"},{"name":"length","nativeSrc":"1632:6:20","nodeType":"YulIdentifier","src":"1632:6:20"}],"functionName":{"name":"mstore","nativeSrc":"1620:6:20","nodeType":"YulIdentifier","src":"1620:6:20"},"nativeSrc":"1620:19:20","nodeType":"YulFunctionCall","src":"1620:19:20"},"nativeSrc":"1620:19:20","nodeType":"YulExpressionStatement","src":"1620:19:20"},{"nativeSrc":"1648:29:20","nodeType":"YulAssignment","src":"1648:29:20","value":{"arguments":[{"name":"pos","nativeSrc":"1667:3:20","nodeType":"YulIdentifier","src":"1667:3:20"},{"kind":"number","nativeSrc":"1672:4:20","nodeType":"YulLiteral","src":"1672:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1663:3:20","nodeType":"YulIdentifier","src":"1663:3:20"},"nativeSrc":"1663:14:20","nodeType":"YulFunctionCall","src":"1663:14:20"},"variableNames":[{"name":"updated_pos","nativeSrc":"1648:11:20","nodeType":"YulIdentifier","src":"1648:11:20"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"1514:169:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"1582:3:20","nodeType":"YulTypedName","src":"1582:3:20","type":""},{"name":"length","nativeSrc":"1587:6:20","nodeType":"YulTypedName","src":"1587:6:20","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"1598:11:20","nodeType":"YulTypedName","src":"1598:11:20","type":""}],"src":"1514:169:20"},{"body":{"nativeSrc":"1795:68:20","nodeType":"YulBlock","src":"1795:68:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"1817:6:20","nodeType":"YulIdentifier","src":"1817:6:20"},{"kind":"number","nativeSrc":"1825:1:20","nodeType":"YulLiteral","src":"1825:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"1813:3:20","nodeType":"YulIdentifier","src":"1813:3:20"},"nativeSrc":"1813:14:20","nodeType":"YulFunctionCall","src":"1813:14:20"},{"hexValue":"43616e6e6f7420736574206f776e657220746f207a65726f","kind":"string","nativeSrc":"1829:26:20","nodeType":"YulLiteral","src":"1829:26:20","type":"","value":"Cannot set owner to zero"}],"functionName":{"name":"mstore","nativeSrc":"1806:6:20","nodeType":"YulIdentifier","src":"1806:6:20"},"nativeSrc":"1806:50:20","nodeType":"YulFunctionCall","src":"1806:50:20"},"nativeSrc":"1806:50:20","nodeType":"YulExpressionStatement","src":"1806:50:20"}]},"name":"store_literal_in_memory_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2","nativeSrc":"1689:174:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"1787:6:20","nodeType":"YulTypedName","src":"1787:6:20","type":""}],"src":"1689:174:20"},{"body":{"nativeSrc":"2015:220:20","nodeType":"YulBlock","src":"2015:220:20","statements":[{"nativeSrc":"2025:74:20","nodeType":"YulAssignment","src":"2025:74:20","value":{"arguments":[{"name":"pos","nativeSrc":"2091:3:20","nodeType":"YulIdentifier","src":"2091:3:20"},{"kind":"number","nativeSrc":"2096:2:20","nodeType":"YulLiteral","src":"2096:2:20","type":"","value":"24"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"2032:58:20","nodeType":"YulIdentifier","src":"2032:58:20"},"nativeSrc":"2032:67:20","nodeType":"YulFunctionCall","src":"2032:67:20"},"variableNames":[{"name":"pos","nativeSrc":"2025:3:20","nodeType":"YulIdentifier","src":"2025:3:20"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"2197:3:20","nodeType":"YulIdentifier","src":"2197:3:20"}],"functionName":{"name":"store_literal_in_memory_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2","nativeSrc":"2108:88:20","nodeType":"YulIdentifier","src":"2108:88:20"},"nativeSrc":"2108:93:20","nodeType":"YulFunctionCall","src":"2108:93:20"},"nativeSrc":"2108:93:20","nodeType":"YulExpressionStatement","src":"2108:93:20"},{"nativeSrc":"2210:19:20","nodeType":"YulAssignment","src":"2210:19:20","value":{"arguments":[{"name":"pos","nativeSrc":"2221:3:20","nodeType":"YulIdentifier","src":"2221:3:20"},{"kind":"number","nativeSrc":"2226:2:20","nodeType":"YulLiteral","src":"2226:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2217:3:20","nodeType":"YulIdentifier","src":"2217:3:20"},"nativeSrc":"2217:12:20","nodeType":"YulFunctionCall","src":"2217:12:20"},"variableNames":[{"name":"end","nativeSrc":"2210:3:20","nodeType":"YulIdentifier","src":"2210:3:20"}]}]},"name":"abi_encode_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2_to_t_string_memory_ptr_fromStack","nativeSrc":"1869:366:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"2003:3:20","nodeType":"YulTypedName","src":"2003:3:20","type":""}],"returnVariables":[{"name":"end","nativeSrc":"2011:3:20","nodeType":"YulTypedName","src":"2011:3:20","type":""}],"src":"1869:366:20"},{"body":{"nativeSrc":"2412:248:20","nodeType":"YulBlock","src":"2412:248:20","statements":[{"nativeSrc":"2422:26:20","nodeType":"YulAssignment","src":"2422:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"2434:9:20","nodeType":"YulIdentifier","src":"2434:9:20"},{"kind":"number","nativeSrc":"2445:2:20","nodeType":"YulLiteral","src":"2445:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2430:3:20","nodeType":"YulIdentifier","src":"2430:3:20"},"nativeSrc":"2430:18:20","nodeType":"YulFunctionCall","src":"2430:18:20"},"variableNames":[{"name":"tail","nativeSrc":"2422:4:20","nodeType":"YulIdentifier","src":"2422:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2469:9:20","nodeType":"YulIdentifier","src":"2469:9:20"},{"kind":"number","nativeSrc":"2480:1:20","nodeType":"YulLiteral","src":"2480:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"2465:3:20","nodeType":"YulIdentifier","src":"2465:3:20"},"nativeSrc":"2465:17:20","nodeType":"YulFunctionCall","src":"2465:17:20"},{"arguments":[{"name":"tail","nativeSrc":"2488:4:20","nodeType":"YulIdentifier","src":"2488:4:20"},{"name":"headStart","nativeSrc":"2494:9:20","nodeType":"YulIdentifier","src":"2494:9:20"}],"functionName":{"name":"sub","nativeSrc":"2484:3:20","nodeType":"YulIdentifier","src":"2484:3:20"},"nativeSrc":"2484:20:20","nodeType":"YulFunctionCall","src":"2484:20:20"}],"functionName":{"name":"mstore","nativeSrc":"2458:6:20","nodeType":"YulIdentifier","src":"2458:6:20"},"nativeSrc":"2458:47:20","nodeType":"YulFunctionCall","src":"2458:47:20"},"nativeSrc":"2458:47:20","nodeType":"YulExpressionStatement","src":"2458:47:20"},{"nativeSrc":"2514:139:20","nodeType":"YulAssignment","src":"2514:139:20","value":{"arguments":[{"name":"tail","nativeSrc":"2648:4:20","nodeType":"YulIdentifier","src":"2648:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2_to_t_string_memory_ptr_fromStack","nativeSrc":"2522:124:20","nodeType":"YulIdentifier","src":"2522:124:20"},"nativeSrc":"2522:131:20","nodeType":"YulFunctionCall","src":"2522:131:20"},"variableNames":[{"name":"tail","nativeSrc":"2514:4:20","nodeType":"YulIdentifier","src":"2514:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"2241:419:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2392:9:20","nodeType":"YulTypedName","src":"2392:9:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2407:4:20","nodeType":"YulTypedName","src":"2407:4:20","type":""}],"src":"2241:419:20"},{"body":{"nativeSrc":"2772:67:20","nodeType":"YulBlock","src":"2772:67:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"2794:6:20","nodeType":"YulIdentifier","src":"2794:6:20"},{"kind":"number","nativeSrc":"2802:1:20","nodeType":"YulLiteral","src":"2802:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"2790:3:20","nodeType":"YulIdentifier","src":"2790:3:20"},"nativeSrc":"2790:14:20","nodeType":"YulFunctionCall","src":"2790:14:20"},{"hexValue":"43616e6e6f74207472616e7366657220746f2073656c66","kind":"string","nativeSrc":"2806:25:20","nodeType":"YulLiteral","src":"2806:25:20","type":"","value":"Cannot transfer to self"}],"functionName":{"name":"mstore","nativeSrc":"2783:6:20","nodeType":"YulIdentifier","src":"2783:6:20"},"nativeSrc":"2783:49:20","nodeType":"YulFunctionCall","src":"2783:49:20"},"nativeSrc":"2783:49:20","nodeType":"YulExpressionStatement","src":"2783:49:20"}]},"name":"store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2","nativeSrc":"2666:173:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"2764:6:20","nodeType":"YulTypedName","src":"2764:6:20","type":""}],"src":"2666:173:20"},{"body":{"nativeSrc":"2991:220:20","nodeType":"YulBlock","src":"2991:220:20","statements":[{"nativeSrc":"3001:74:20","nodeType":"YulAssignment","src":"3001:74:20","value":{"arguments":[{"name":"pos","nativeSrc":"3067:3:20","nodeType":"YulIdentifier","src":"3067:3:20"},{"kind":"number","nativeSrc":"3072:2:20","nodeType":"YulLiteral","src":"3072:2:20","type":"","value":"23"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"3008:58:20","nodeType":"YulIdentifier","src":"3008:58:20"},"nativeSrc":"3008:67:20","nodeType":"YulFunctionCall","src":"3008:67:20"},"variableNames":[{"name":"pos","nativeSrc":"3001:3:20","nodeType":"YulIdentifier","src":"3001:3:20"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"3173:3:20","nodeType":"YulIdentifier","src":"3173:3:20"}],"functionName":{"name":"store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2","nativeSrc":"3084:88:20","nodeType":"YulIdentifier","src":"3084:88:20"},"nativeSrc":"3084:93:20","nodeType":"YulFunctionCall","src":"3084:93:20"},"nativeSrc":"3084:93:20","nodeType":"YulExpressionStatement","src":"3084:93:20"},{"nativeSrc":"3186:19:20","nodeType":"YulAssignment","src":"3186:19:20","value":{"arguments":[{"name":"pos","nativeSrc":"3197:3:20","nodeType":"YulIdentifier","src":"3197:3:20"},{"kind":"number","nativeSrc":"3202:2:20","nodeType":"YulLiteral","src":"3202:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3193:3:20","nodeType":"YulIdentifier","src":"3193:3:20"},"nativeSrc":"3193:12:20","nodeType":"YulFunctionCall","src":"3193:12:20"},"variableNames":[{"name":"end","nativeSrc":"3186:3:20","nodeType":"YulIdentifier","src":"3186:3:20"}]}]},"name":"abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack","nativeSrc":"2845:366:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"2979:3:20","nodeType":"YulTypedName","src":"2979:3:20","type":""}],"returnVariables":[{"name":"end","nativeSrc":"2987:3:20","nodeType":"YulTypedName","src":"2987:3:20","type":""}],"src":"2845:366:20"},{"body":{"nativeSrc":"3388:248:20","nodeType":"YulBlock","src":"3388:248:20","statements":[{"nativeSrc":"3398:26:20","nodeType":"YulAssignment","src":"3398:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"3410:9:20","nodeType":"YulIdentifier","src":"3410:9:20"},{"kind":"number","nativeSrc":"3421:2:20","nodeType":"YulLiteral","src":"3421:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3406:3:20","nodeType":"YulIdentifier","src":"3406:3:20"},"nativeSrc":"3406:18:20","nodeType":"YulFunctionCall","src":"3406:18:20"},"variableNames":[{"name":"tail","nativeSrc":"3398:4:20","nodeType":"YulIdentifier","src":"3398:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3445:9:20","nodeType":"YulIdentifier","src":"3445:9:20"},{"kind":"number","nativeSrc":"3456:1:20","nodeType":"YulLiteral","src":"3456:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"3441:3:20","nodeType":"YulIdentifier","src":"3441:3:20"},"nativeSrc":"3441:17:20","nodeType":"YulFunctionCall","src":"3441:17:20"},{"arguments":[{"name":"tail","nativeSrc":"3464:4:20","nodeType":"YulIdentifier","src":"3464:4:20"},{"name":"headStart","nativeSrc":"3470:9:20","nodeType":"YulIdentifier","src":"3470:9:20"}],"functionName":{"name":"sub","nativeSrc":"3460:3:20","nodeType":"YulIdentifier","src":"3460:3:20"},"nativeSrc":"3460:20:20","nodeType":"YulFunctionCall","src":"3460:20:20"}],"functionName":{"name":"mstore","nativeSrc":"3434:6:20","nodeType":"YulIdentifier","src":"3434:6:20"},"nativeSrc":"3434:47:20","nodeType":"YulFunctionCall","src":"3434:47:20"},"nativeSrc":"3434:47:20","nodeType":"YulExpressionStatement","src":"3434:47:20"},{"nativeSrc":"3490:139:20","nodeType":"YulAssignment","src":"3490:139:20","value":{"arguments":[{"name":"tail","nativeSrc":"3624:4:20","nodeType":"YulIdentifier","src":"3624:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack","nativeSrc":"3498:124:20","nodeType":"YulIdentifier","src":"3498:124:20"},"nativeSrc":"3498:131:20","nodeType":"YulFunctionCall","src":"3498:131:20"},"variableNames":[{"name":"tail","nativeSrc":"3490:4:20","nodeType":"YulIdentifier","src":"3490:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"3217:419:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3368:9:20","nodeType":"YulTypedName","src":"3368:9:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"3383:4:20","nodeType":"YulTypedName","src":"3383:4:20","type":""}],"src":"3217:419:20"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cannot set owner to zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cannot transfer to self\")\n\n    }\n\n    function abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n","id":20,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"","opcodes":"PUSH1 0xE0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x90CA CODESIZE SUB DUP1 PUSH3 0x90CA DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x374 JUMP JUMPDEST CALLER DUP1 PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0xAC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xA3 SWAP1 PUSH3 0x431 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH3 0x133 JUMPI PUSH3 0x132 DUP2 PUSH3 0x1DB PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST JUMPDEST POP POP POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xC0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP POP POP PUSH3 0x4C5 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x24C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x243 SWAP1 PUSH3 0x4A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x33C DUP3 PUSH3 0x30F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x34E DUP2 PUSH3 0x32F JUMP JUMPDEST DUP2 EQ PUSH3 0x35A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x36E DUP2 PUSH3 0x343 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x390 JUMPI PUSH3 0x38F PUSH3 0x30A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x3A0 DUP7 DUP3 DUP8 ADD PUSH3 0x35D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH3 0x3B3 DUP7 DUP3 DUP8 ADD PUSH3 0x35D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH3 0x3C6 DUP7 DUP3 DUP8 ADD PUSH3 0x35D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x43616E6E6F7420736574206F776E657220746F207A65726F0000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x419 PUSH1 0x18 DUP4 PUSH3 0x3D0 JUMP JUMPDEST SWAP2 POP PUSH3 0x426 DUP3 PUSH3 0x3E1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x44C DUP2 PUSH3 0x40A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616E6E6F74207472616E7366657220746F2073656C66000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x48B PUSH1 0x17 DUP4 PUSH3 0x3D0 JUMP JUMPDEST SWAP2 POP PUSH3 0x498 DUP3 PUSH3 0x453 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x4BE DUP2 PUSH3 0x47C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH2 0x8BA4 PUSH3 0x526 PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x198F ADD MSTORE PUSH2 0x4AEC ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x32B9 ADD MSTORE PUSH2 0x5075 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0xDCA ADD MSTORE DUP2 DUP2 PUSH2 0x18B7 ADD MSTORE DUP2 DUP2 PUSH2 0x2FB2 ADD MSTORE DUP2 DUP2 PUSH2 0x3D01 ADD MSTORE DUP2 DUP2 PUSH2 0x3E29 ADD MSTORE PUSH2 0x46D5 ADD MSTORE PUSH2 0x8BA4 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x21B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6F64F03F GT PUSH2 0x125 JUMPI DUP1 PUSH4 0xAD178361 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xD2F9F9A7 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xD2F9F9A7 EQ PUSH2 0x604 JUMPI DUP1 PUSH4 0xD7AE1D30 EQ PUSH2 0x634 JUMPI DUP1 PUSH4 0xE72F6E30 EQ PUSH2 0x650 JUMPI DUP1 PUSH4 0xE82AD7D4 EQ PUSH2 0x66C JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x69C JUMPI PUSH2 0x21B JUMP JUMPDEST DUP1 PUSH4 0xAD178361 EQ PUSH2 0x565 JUMPI DUP1 PUSH4 0xAF198B97 EQ PUSH2 0x583 JUMPI DUP1 PUSH4 0xC3F909D4 EQ PUSH2 0x5B3 JUMPI DUP1 PUSH4 0xCAF70C4A EQ PUSH2 0x5D4 JUMPI PUSH2 0x21B JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x4BE JUMPI DUP1 PUSH4 0x9F87FAD7 EQ PUSH2 0x4DC JUMPI DUP1 PUSH4 0xA21A23E4 EQ PUSH2 0x4F8 JUMPI DUP1 PUSH4 0xA47C7696 EQ PUSH2 0x516 JUMPI DUP1 PUSH4 0xA4C0ED36 EQ PUSH2 0x549 JUMPI PUSH2 0x21B JUMP JUMPDEST DUP1 PUSH4 0x6F64F03F EQ PUSH2 0x460 JUMPI DUP1 PUSH4 0x7341C10C EQ PUSH2 0x47C JUMPI DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x498 JUMPI DUP1 PUSH4 0x82359740 EQ PUSH2 0x4A2 JUMPI PUSH2 0x21B JUMP JUMPDEST DUP1 PUSH4 0x356DAC71 GT PUSH2 0x1A8 JUMPI DUP1 PUSH4 0x5FBBC0D2 GT PUSH2 0x177 JUMPI DUP1 PUSH4 0x5FBBC0D2 EQ PUSH2 0x3B2 JUMPI DUP1 PUSH4 0x64D51A2A EQ PUSH2 0x3D8 JUMPI DUP1 PUSH4 0x66316D8D EQ PUSH2 0x3F6 JUMPI DUP1 PUSH4 0x689C4517 EQ PUSH2 0x412 JUMPI DUP1 PUSH4 0x69BCDB7D EQ PUSH2 0x430 JUMPI PUSH2 0x21B JUMP JUMPDEST DUP1 PUSH4 0x356DAC71 EQ PUSH2 0x32A JUMPI DUP1 PUSH4 0x40D6BB82 EQ PUSH2 0x348 JUMPI DUP1 PUSH4 0x4CB48A54 EQ PUSH2 0x366 JUMPI DUP1 PUSH4 0x5D3B1D30 EQ PUSH2 0x382 JUMPI PUSH2 0x21B JUMP JUMPDEST DUP1 PUSH4 0x8821D58 GT PUSH2 0x1EF JUMPI DUP1 PUSH4 0x8821D58 EQ PUSH2 0x296 JUMPI DUP1 PUSH4 0x12B58349 EQ PUSH2 0x2B2 JUMPI DUP1 PUSH4 0x15C48B84 EQ PUSH2 0x2D0 JUMPI DUP1 PUSH4 0x181F5A77 EQ PUSH2 0x2EE JUMPI DUP1 PUSH4 0x1B6B6D23 EQ PUSH2 0x30C JUMPI PUSH2 0x21B JUMP JUMPDEST DUP1 PUSH3 0x12291 EQ PUSH2 0x220 JUMPI DUP1 PUSH4 0x2BCC5B6 EQ PUSH2 0x240 JUMPI DUP1 PUSH4 0x4C357CB EQ PUSH2 0x25C JUMPI DUP1 PUSH4 0x6BFA637 EQ PUSH2 0x278 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x228 PUSH2 0x6B8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x237 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x6639 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x25A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x255 SWAP2 SWAP1 PUSH2 0x66CB JUMP JUMPDEST PUSH2 0x746 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x276 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x271 SWAP2 SWAP1 PUSH2 0x6756 JUMP JUMPDEST PUSH2 0x855 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x280 PUSH2 0xAF6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28D SWAP2 SWAP1 PUSH2 0x67A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2AB SWAP2 SWAP1 PUSH2 0x67E7 JUMP JUMPDEST PUSH2 0xB14 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2BA PUSH2 0xD56 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C7 SWAP2 SWAP1 PUSH2 0x682D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D8 PUSH2 0xD86 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E5 SWAP2 SWAP1 PUSH2 0x6848 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F6 PUSH2 0xD8B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x303 SWAP2 SWAP1 PUSH2 0x68F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x314 PUSH2 0xDC8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x321 SWAP2 SWAP1 PUSH2 0x6974 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x332 PUSH2 0xDEC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x33F SWAP2 SWAP1 PUSH2 0x69A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x350 PUSH2 0xDF6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x35D SWAP2 SWAP1 PUSH2 0x69C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x380 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x37B SWAP2 SWAP1 PUSH2 0x6BFD JUMP JUMPDEST PUSH2 0xDFC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x39C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x397 SWAP2 SWAP1 PUSH2 0x6CB7 JUMP JUMPDEST PUSH2 0x1148 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A9 SWAP2 SWAP1 PUSH2 0x682D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3BA PUSH2 0x15E1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3CF SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x6D41 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3E0 PUSH2 0x16CE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3ED SWAP2 SWAP1 PUSH2 0x6848 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x410 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x40B SWAP2 SWAP1 PUSH2 0x6E12 JUMP JUMPDEST PUSH2 0x16D3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x41A PUSH2 0x198D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x427 SWAP2 SWAP1 PUSH2 0x6E73 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x44A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x445 SWAP2 SWAP1 PUSH2 0x6EBA JUMP JUMPDEST PUSH2 0x19B1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x457 SWAP2 SWAP1 PUSH2 0x6EF6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x47A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x475 SWAP2 SWAP1 PUSH2 0x6F11 JUMP JUMPDEST PUSH2 0x19CE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x496 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x491 SWAP2 SWAP1 PUSH2 0x6756 JUMP JUMPDEST PUSH2 0x1B8C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4A0 PUSH2 0x1F51 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4BC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4B7 SWAP2 SWAP1 PUSH2 0x66CB JUMP JUMPDEST PUSH2 0x20E6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4C6 PUSH2 0x244E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4D3 SWAP2 SWAP1 PUSH2 0x6F60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4F6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4F1 SWAP2 SWAP1 PUSH2 0x6756 JUMP JUMPDEST PUSH2 0x2477 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x500 PUSH2 0x29FA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x50D SWAP2 SWAP1 PUSH2 0x67A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x530 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x52B SWAP2 SWAP1 PUSH2 0x66CB JUMP JUMPDEST PUSH2 0x2D21 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x540 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x7048 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x563 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x55E SWAP2 SWAP1 PUSH2 0x70F4 JUMP JUMPDEST PUSH2 0x2F66 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x56D PUSH2 0x32B7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x57A SWAP2 SWAP1 PUSH2 0x7189 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x59D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x598 SWAP2 SWAP1 PUSH2 0x73C3 JUMP JUMPDEST PUSH2 0x32DB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5AA SWAP2 SWAP1 PUSH2 0x7405 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5BB PUSH2 0x381A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5CB SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x7420 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5EE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5E9 SWAP2 SWAP1 PUSH2 0x7465 JUMP JUMPDEST PUSH2 0x3884 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5FB SWAP2 SWAP1 PUSH2 0x6EF6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x61E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x619 SWAP2 SWAP1 PUSH2 0x66CB JUMP JUMPDEST PUSH2 0x38B4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x62B SWAP2 SWAP1 PUSH2 0x69C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x64E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x649 SWAP2 SWAP1 PUSH2 0x6756 JUMP JUMPDEST PUSH2 0x3B35 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x66A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x665 SWAP2 SWAP1 PUSH2 0x7492 JUMP JUMPDEST PUSH2 0x3CF5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x686 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x681 SWAP2 SWAP1 PUSH2 0x66CB JUMP JUMPDEST PUSH2 0x3F06 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x693 SWAP2 SWAP1 PUSH2 0x74DA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6B6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6B1 SWAP2 SWAP1 PUSH2 0x7492 JUMP JUMPDEST PUSH2 0x41CC JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x60 PUSH1 0xB PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND PUSH1 0xB PUSH1 0x0 ADD PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH1 0x7 DUP1 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x734 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x720 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 POP SWAP1 SWAP2 SWAP3 JUMP JUMPDEST PUSH2 0x74E PUSH2 0x41E0 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x7FE JUMPI PUSH1 0x40 MLOAD PUSH32 0x1F6A65B600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x852 DUP2 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x4270 JUMP JUMPDEST POP JUMP JUMPDEST DUP2 PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x90B JUMPI PUSH1 0x40 MLOAD PUSH32 0x1F6A65B600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x97B JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xD8A3FB5200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x972 SWAP2 SWAP1 PUSH2 0x6F60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xB PUSH1 0x0 ADD PUSH1 0x6 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x9C5 JUMPI PUSH1 0x40 MLOAD PUSH32 0xED3BA6A600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 DUP7 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xAF0 JUMPI DUP3 PUSH1 0x3 PUSH1 0x0 DUP7 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH32 0x69436EA6DF009049404F564EFF6622CD00522B0BD6A89EFD9E52A355C4A879BE CALLER DUP6 PUSH1 0x40 MLOAD PUSH2 0xAE7 SWAP3 SWAP2 SWAP1 PUSH2 0x74F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xB1C PUSH2 0x41E0 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB5E DUP3 PUSH1 0x2 DUP1 PUSH1 0x20 MUL PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP3 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP PUSH2 0x3884 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC09 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x77F5B84C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC00 SWAP2 SWAP1 PUSH2 0x6EF6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x0 JUMPDEST PUSH1 0x7 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0xD02 JUMPI DUP3 PUSH1 0x7 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xC64 JUMPI PUSH2 0xC63 PUSH2 0x751E JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SUB PUSH2 0xCF5 JUMPI PUSH1 0x0 PUSH1 0x7 PUSH1 0x1 PUSH1 0x7 DUP1 SLOAD SWAP1 POP PUSH2 0xC8A SWAP2 SWAP1 PUSH2 0x757C JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0xC9B JUMPI PUSH2 0xC9A PUSH2 0x751E JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 PUSH1 0x7 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0xCBD JUMPI PUSH2 0xCBC PUSH2 0x751E JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x7 DUP1 SLOAD DUP1 PUSH2 0xCDD JUMPI PUSH2 0xCDC PUSH2 0x75B0 JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE POP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0xC42 JUMP JUMPDEST POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x72BE339577868F868798BAC2C93E52D6F034FEF4689A9848996C14EBB7416C0D DUP4 PUSH1 0x40 MLOAD PUSH2 0xD49 SWAP2 SWAP1 PUSH2 0x6EF6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xC8 DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x16 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x565246436F6F7264696E61746F72563220312E302E3000000000000000000000 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1F4 DUP2 JUMP JUMPDEST PUSH2 0xE04 PUSH2 0x41E0 JUMP JUMPDEST PUSH1 0xC8 PUSH2 0xFFFF AND DUP7 PUSH2 0xFFFF AND GT ISZERO PUSH2 0xE57 JUMPI DUP6 DUP7 PUSH1 0xC8 PUSH1 0x40 MLOAD PUSH32 0xA738697600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE4E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x75DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 SGT PUSH2 0xE9C JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x43D4CF6600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE93 SWAP2 SWAP1 PUSH2 0x69A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 DUP8 PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH4 0xFFFFFFFF AND DUP2 MSTORE POP PUSH1 0xB PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH2 0xFFFF MUL NOT AND SWAP1 DUP4 PUSH2 0xFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x6 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x7 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0xB PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP DUP1 PUSH1 0xC PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0xC PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x10 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH3 0xFFFFFF MUL NOT AND SWAP1 DUP4 PUSH3 0xFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x17 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH3 0xFFFFFF MUL NOT AND SWAP1 DUP4 PUSH3 0xFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xE0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x1A PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH3 0xFFFFFF MUL NOT AND SWAP1 DUP4 PUSH3 0xFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x100 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x1D PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH3 0xFFFFFF MUL NOT AND SWAP1 DUP4 PUSH3 0xFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP DUP2 PUSH1 0xA DUP2 SWAP1 SSTORE POP PUSH32 0xC21E3BD2E0B339D2848F0DD956947A88966C242C0C0C582A33137A5C1CEB5CB2 DUP7 DUP7 DUP7 DUP7 DUP7 PUSH1 0xC PUSH1 0x40 MLOAD PUSH2 0x1138 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x7895 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xB PUSH1 0x0 ADD PUSH1 0x6 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1194 JUMPI PUSH1 0x40 MLOAD PUSH32 0xED3BA6A600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 DUP8 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1244 JUMPI PUSH1 0x40 MLOAD PUSH32 0x1F6A65B600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP8 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1312 JUMPI DUP6 CALLER PUSH1 0x40 MLOAD PUSH32 0xF0019FE600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1309 SWAP3 SWAP2 SWAP1 PUSH2 0x78F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xB PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND PUSH2 0xFFFF AND DUP6 PUSH2 0xFFFF AND LT DUP1 PUSH2 0x1343 JUMPI POP PUSH1 0xC8 PUSH2 0xFFFF AND DUP6 PUSH2 0xFFFF AND GT JUMPDEST ISZERO PUSH2 0x139D JUMPI DUP5 PUSH1 0xB PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND PUSH1 0xC8 PUSH1 0x40 MLOAD PUSH32 0xA738697600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1394 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x75DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xB PUSH1 0x0 ADD PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP5 PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x141A JUMPI DUP4 PUSH1 0xB PUSH1 0x0 ADD PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH1 0x40 MLOAD PUSH32 0xF5D7E01E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1411 SWAP3 SWAP2 SWAP1 PUSH2 0x7920 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1F4 PUSH4 0xFFFFFFFF AND DUP4 PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x1471 JUMPI DUP3 PUSH2 0x1F4 PUSH1 0x40 MLOAD PUSH32 0x47386BEC00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1468 SWAP3 SWAP2 SWAP1 PUSH2 0x7920 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 PUSH2 0x1480 SWAP2 SWAP1 PUSH2 0x7949 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH2 0x1491 DUP11 CALLER DUP12 DUP7 PUSH2 0x4800 JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP2 PUSH2 0x149E PUSH2 0x4872 JUMP JUMPDEST DUP11 DUP10 DUP10 CALLER PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x14B7 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x7985 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x9 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP10 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP12 PUSH32 0x63373D1C4696214B898952999C9AAEC57DAC1EE2723CEC59BEA6888F489A9772 DUP6 DUP6 DUP14 DUP14 DUP14 PUSH1 0x40 MLOAD PUSH2 0x153E SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x79E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP3 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP12 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 SWAP5 POP POP POP POP POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xC PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH1 0xC PUSH1 0x0 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH1 0xC PUSH1 0x0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH1 0xC PUSH1 0x0 ADD PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH1 0xC PUSH1 0x0 ADD PUSH1 0x10 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH1 0xC PUSH1 0x0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH3 0xFFFFFF AND PUSH1 0xC PUSH1 0x0 ADD PUSH1 0x17 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH3 0xFFFFFF AND PUSH1 0xC PUSH1 0x0 ADD PUSH1 0x1A SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH3 0xFFFFFF AND PUSH1 0xC PUSH1 0x0 ADD PUSH1 0x1D SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH3 0xFFFFFF AND SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 SWAP8 SWAP9 JUMP JUMPDEST PUSH1 0x64 DUP2 JUMP JUMPDEST PUSH1 0xB PUSH1 0x0 ADD PUSH1 0x6 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x171D JUMPI PUSH1 0x40 MLOAD PUSH32 0xED3BA6A600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND LT ISZERO PUSH2 0x17CA JUMPI PUSH1 0x40 MLOAD PUSH32 0xF4D678B800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x8 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1830 SWAP2 SWAP1 PUSH2 0x7A39 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x5 PUSH1 0x8 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1887 SWAP2 SWAP1 PUSH2 0x7A39 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1910 SWAP3 SWAP2 SWAP1 PUSH2 0x7AAA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x192F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1953 SWAP2 SWAP1 PUSH2 0x7AFF JUMP JUMPDEST PUSH2 0x1989 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF4D678B800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19D6 PUSH2 0x41E0 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A18 DUP3 PUSH1 0x2 DUP1 PUSH1 0x20 MUL PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP3 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP PUSH2 0x3884 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x6 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1ABE JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x4A0B8FA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AB5 SWAP2 SWAP1 PUSH2 0x6EF6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x6 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x7 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE729AE16526293F74ADE739043022254F1489F616295A25BF72DFB4511ED73B8 DUP3 PUSH1 0x40 MLOAD PUSH2 0x1B7F SWAP2 SWAP1 PUSH2 0x6EF6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1C42 JUMPI PUSH1 0x40 MLOAD PUSH32 0x1F6A65B600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1CB2 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xD8A3FB5200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CA9 SWAP2 SWAP1 PUSH2 0x6F60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xB PUSH1 0x0 ADD PUSH1 0x6 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1CFC JUMPI PUSH1 0x40 MLOAD PUSH32 0xED3BA6A600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x64 PUSH2 0xFFFF AND PUSH1 0x3 PUSH1 0x0 DUP7 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD SWAP1 POP SUB PUSH2 0x1D67 JUMPI PUSH1 0x40 MLOAD PUSH32 0x5A48E0F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1F4B JUMPI PUSH1 0x1 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x3 PUSH1 0x0 DUP6 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD DUP4 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH32 0x43DC749A04AC8FB825CBD514F7C0E13F13BC6F2EE66043B76629D51776CFF8E0 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1F42 SWAP2 SWAP1 PUSH2 0x6F60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1FE1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1FD8 SWAP1 PUSH2 0x7B78 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0xB PUSH1 0x0 ADD PUSH1 0x6 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x2130 JUMPI PUSH1 0x40 MLOAD PUSH32 0xED3BA6A600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x21E0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x1F6A65B600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x22E4 JUMPI PUSH1 0x3 PUSH1 0x0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD PUSH32 0xD084E97500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x22DB SWAP2 SWAP1 PUSH2 0x6F60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP CALLER PUSH1 0x3 PUSH1 0x0 DUP5 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH32 0x6F1DC65165FFFFEDFD8E507B4A0F1FCFDADA045ED11F6C26BA27CEDFE87802F0 DUP3 CALLER PUSH1 0x40 MLOAD PUSH2 0x2442 SWAP3 SWAP2 SWAP1 PUSH2 0x74F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x252D JUMPI PUSH1 0x40 MLOAD PUSH32 0x1F6A65B600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x259D JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xD8A3FB5200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2594 SWAP2 SWAP1 PUSH2 0x6F60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xB PUSH1 0x0 ADD PUSH1 0x6 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x25E7 JUMPI PUSH1 0x40 MLOAD PUSH32 0xED3BA6A600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x25F0 DUP5 PUSH2 0x3F06 JUMP JUMPDEST ISZERO PUSH2 0x2627 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB42F66E800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND SUB PUSH2 0x26F0 JUMPI DUP4 DUP4 PUSH1 0x40 MLOAD PUSH32 0xF0019FE600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x26E7 SWAP3 SWAP2 SWAP1 PUSH2 0x78F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP7 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x279C JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x2752 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP3 MLOAD PUSH2 0x27B3 SWAP2 SWAP1 PUSH2 0x757C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x2934 JUMPI DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x27EB JUMPI PUSH2 0x27EA PUSH2 0x751E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2927 JUMPI PUSH1 0x0 DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x2823 JUMPI PUSH2 0x2822 PUSH2 0x751E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP DUP1 PUSH1 0x3 PUSH1 0x0 DUP11 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x286A JUMPI PUSH2 0x2869 PUSH2 0x751E JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x3 PUSH1 0x0 DUP10 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD DUP1 PUSH2 0x28EC JUMPI PUSH2 0x28EB PUSH2 0x75B0 JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE SWAP1 SSTORE POP PUSH2 0x2934 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x27B8 JUMP JUMPDEST POP PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP8 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE DUP6 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH32 0x182BFF9831466789164CA77075FFFD84916D35A8180BA73C27E45634549B445B DUP7 PUSH1 0x40 MLOAD PUSH2 0x29EA SWAP2 SWAP1 PUSH2 0x6F60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xB PUSH1 0x0 ADD PUSH1 0x6 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x2A46 JUMPI PUSH1 0x40 MLOAD PUSH32 0xED3BA6A600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP2 DUP2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x2A6C SWAP1 PUSH2 0x7B98 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2ACA JUMPI PUSH2 0x2AC9 PUSH2 0x6A67 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2AF8 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP PUSH1 0x4 PUSH1 0x0 DUP5 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0xC PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE POP PUSH1 0x3 PUSH1 0x0 DUP5 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x2CD3 SWAP3 SWAP2 SWAP1 PUSH2 0x6407 JUMP JUMPDEST POP SWAP1 POP POP DUP2 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH32 0x464722B4166576D3DCBBA877B999BC35CF911F4EAF434B7EBA68FA113951D0BF CALLER PUSH1 0x40 MLOAD PUSH2 0x2D11 SWAP2 SWAP1 PUSH2 0x6F60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP2 SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 DUP8 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2DD8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x1F6A65B600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP7 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x4 PUSH1 0x0 DUP8 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 DUP9 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 DUP10 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD DUP1 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x2F50 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x2F06 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP SWAP2 SWAP4 POP SWAP2 SWAP4 JUMP JUMPDEST PUSH1 0xB PUSH1 0x0 ADD PUSH1 0x6 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x2FB0 JUMPI PUSH1 0x40 MLOAD PUSH32 0xED3BA6A600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x3035 JUMPI PUSH1 0x40 MLOAD PUSH32 0x44B0E3C300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x20 DUP3 DUP3 SWAP1 POP EQ PUSH2 0x3072 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8129BBCD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 DUP2 ADD SWAP1 PUSH2 0x3083 SWAP2 SWAP1 PUSH2 0x66CB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x3135 JUMPI PUSH1 0x40 MLOAD PUSH32 0x1F6A65B600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP5 PUSH1 0x4 PUSH1 0x0 DUP5 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x31DB SWAP2 SWAP1 PUSH2 0x7BC8 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP5 PUSH1 0x5 PUSH1 0x8 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3232 SWAP2 SWAP1 PUSH2 0x7BC8 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH32 0xD39EC07F4E209F627A4C427971473820DC129761BA28DE8906BD56F57101D4F8 DUP3 DUP8 DUP5 PUSH2 0x3299 SWAP2 SWAP1 PUSH2 0x7C08 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x32A7 SWAP3 SWAP2 SWAP1 PUSH2 0x7C3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xB PUSH1 0x0 ADD PUSH1 0x6 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x3327 JUMPI PUSH1 0x40 MLOAD PUSH32 0xED3BA6A600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 GAS SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x333B DUP8 DUP8 PUSH2 0x490F JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH1 0x0 DUP7 PUSH1 0x60 ADD MLOAD PUSH4 0xFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3367 JUMPI PUSH2 0x3366 PUSH2 0x6A67 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x3395 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP8 PUSH1 0x60 ADD MLOAD PUSH4 0xFFFFFFFF AND DUP2 LT ISZERO PUSH2 0x3405 JUMPI DUP3 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x33C0 SWAP3 SWAP2 SWAP1 PUSH2 0x7C3C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x33EC JUMPI PUSH2 0x33EB PUSH2 0x751E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x339B JUMP JUMPDEST POP PUSH1 0x9 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x0 DUP1 PUSH4 0x1FE543E3 PUSH1 0xE0 SHL DUP6 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x343B SWAP3 SWAP2 SWAP1 PUSH2 0x7D23 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP SWAP1 POP PUSH1 0x1 PUSH1 0xB PUSH1 0x0 ADD PUSH1 0x6 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH2 0x34D3 DUP11 PUSH1 0x40 ADD MLOAD PUSH4 0xFFFFFFFF AND DUP12 PUSH1 0x80 ADD MLOAD DUP5 PUSH2 0x4C21 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0xB PUSH1 0x0 ADD PUSH1 0x6 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP13 PUSH1 0x20 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x1 PUSH1 0x4 PUSH1 0x0 DUP14 PUSH1 0x20 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0xC DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH2 0x358C SWAP2 SWAP1 PUSH2 0x7949 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH2 0x35E3 DUP11 PUSH1 0xB PUSH1 0x0 ADD PUSH1 0xB SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH2 0x35DD DUP6 PUSH2 0x38B4 JUMP JUMPDEST GASPRICE PUSH2 0x4C6E JUMP JUMPDEST SWAP1 POP DUP1 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x4 PUSH1 0x0 DUP15 PUSH1 0x20 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND LT ISZERO PUSH2 0x3681 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF4D678B800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x4 PUSH1 0x0 DUP15 PUSH1 0x20 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x36D6 SWAP2 SWAP1 PUSH2 0x7A39 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x8 PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP14 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x379D SWAP2 SWAP1 PUSH2 0x7BC8 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP8 PUSH32 0x7DFFC5AE5EE4E2E4DF1651CF6AD329A73CEBDB728F37EA0187B9B17E036756E4 DUP9 DUP4 DUP7 PUSH1 0x40 MLOAD PUSH2 0x37FF SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x7D53 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP1 SWAP11 POP POP POP POP POP POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xB PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND PUSH1 0xB PUSH1 0x0 ADD PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH1 0xB PUSH1 0x0 ADD PUSH1 0x7 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH1 0xB PUSH1 0x0 ADD PUSH1 0xB SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP SWAP1 SWAP2 SWAP3 SWAP4 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x3897 SWAP2 SWAP1 PUSH2 0x7E0E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xC PUSH1 0x40 MLOAD DUP1 PUSH2 0x120 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x10 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH3 0xFFFFFF AND PUSH3 0xFFFFFF AND PUSH3 0xFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x17 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH3 0xFFFFFF AND PUSH3 0xFFFFFF AND PUSH3 0xFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x1A SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH3 0xFFFFFF AND PUSH3 0xFFFFFF AND PUSH3 0xFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x1D SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH3 0xFFFFFF AND PUSH3 0xFFFFFF AND PUSH3 0xFFFFFF AND DUP2 MSTORE POP POP SWAP1 POP DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x0 GT ISZERO DUP1 ISZERO PUSH2 0x3A3F JUMPI POP DUP1 PUSH1 0xA0 ADD MLOAD PUSH3 0xFFFFFF AND DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND GT ISZERO JUMPDEST ISZERO PUSH2 0x3A51 JUMPI DUP1 PUSH1 0x0 ADD MLOAD SWAP2 POP POP PUSH2 0x3B30 JUMP JUMPDEST DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0xA0 ADD MLOAD PUSH3 0xFFFFFF AND LT DUP1 ISZERO PUSH2 0x3A86 JUMPI POP DUP1 PUSH1 0xC0 ADD MLOAD PUSH3 0xFFFFFF AND DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND GT ISZERO JUMPDEST ISZERO PUSH2 0x3A98 JUMPI DUP1 PUSH1 0x20 ADD MLOAD SWAP2 POP POP PUSH2 0x3B30 JUMP JUMPDEST DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0xC0 ADD MLOAD PUSH3 0xFFFFFF AND LT DUP1 ISZERO PUSH2 0x3ACD JUMPI POP DUP1 PUSH1 0xE0 ADD MLOAD PUSH3 0xFFFFFF AND DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND GT ISZERO JUMPDEST ISZERO PUSH2 0x3ADF JUMPI DUP1 PUSH1 0x40 ADD MLOAD SWAP2 POP POP PUSH2 0x3B30 JUMP JUMPDEST DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0xE0 ADD MLOAD PUSH3 0xFFFFFF AND LT DUP1 ISZERO PUSH2 0x3B15 JUMPI POP DUP1 PUSH2 0x100 ADD MLOAD PUSH3 0xFFFFFF AND DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND GT ISZERO JUMPDEST ISZERO PUSH2 0x3B27 JUMPI DUP1 PUSH1 0x60 ADD MLOAD SWAP2 POP POP PUSH2 0x3B30 JUMP JUMPDEST DUP1 PUSH1 0x80 ADD MLOAD SWAP2 POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x3BEB JUMPI PUSH1 0x40 MLOAD PUSH32 0x1F6A65B600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x3C5B JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xD8A3FB5200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3C52 SWAP2 SWAP1 PUSH2 0x6F60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xB PUSH1 0x0 ADD PUSH1 0x6 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x3CA5 JUMPI PUSH1 0x40 MLOAD PUSH32 0xED3BA6A600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3CAE DUP5 PUSH2 0x3F06 JUMP JUMPDEST ISZERO PUSH2 0x3CE5 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB42F66E800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3CEF DUP5 DUP5 PUSH2 0x4270 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x3CFD PUSH2 0x41E0 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3D58 SWAP2 SWAP1 PUSH2 0x6F60 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3D75 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3D99 SWAP2 SWAP1 PUSH2 0x7E3E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x5 PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x3E0F JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xA99DA30200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3E06 SWAP3 SWAP2 SWAP1 PUSH2 0x7C3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3F01 JUMPI PUSH1 0x0 DUP2 DUP4 PUSH2 0x3E25 SWAP2 SWAP1 PUSH2 0x757C JUMP JUMPDEST SWAP1 POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3E82 SWAP3 SWAP2 SWAP1 PUSH2 0x7E6B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3EA1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3EC5 SWAP2 SWAP1 PUSH2 0x7AFF JUMP JUMPDEST POP PUSH32 0x59BFC682B673F8CBF945F1E454DF9334834ABF7DFE7F92237CA29ECB9B436600 DUP5 DUP3 PUSH1 0x40 MLOAD PUSH2 0x3EF7 SWAP3 SWAP2 SWAP1 PUSH2 0x7E6B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x406C JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x4022 JUMPI JUMPDEST POP POP POP POP POP DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 PUSH1 0x40 ADD MLOAD MLOAD DUP2 LT ISZERO PUSH2 0x41C0 JUMPI PUSH1 0x0 JUMPDEST PUSH1 0x7 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x41B2 JUMPI PUSH1 0x0 PUSH2 0x4177 PUSH1 0x7 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x40B0 JUMPI PUSH2 0x40AF PUSH2 0x751E JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP6 PUSH1 0x40 ADD MLOAD DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x40D2 JUMPI PUSH2 0x40D1 PUSH2 0x751E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP9 PUSH1 0x2 PUSH1 0x0 DUP10 PUSH1 0x40 ADD MLOAD DUP10 DUP2 MLOAD DUP2 LT PUSH2 0x40F6 JUMPI PUSH2 0x40F5 PUSH2 0x751E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP12 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH2 0x4800 JUMP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 SHL PUSH1 0x9 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ PUSH2 0x41A4 JUMPI PUSH1 0x1 SWAP5 POP POP POP POP POP PUSH2 0x41C7 JUMP JUMPDEST POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x408A JUMP JUMPDEST POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x407A JUMP JUMPDEST POP PUSH1 0x0 SWAP2 POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x41D4 PUSH2 0x41E0 JUMP JUMPDEST PUSH2 0x41DD DUP2 PUSH2 0x4DA1 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x426E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4265 SWAP1 PUSH2 0x7EE0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0xB PUSH1 0x0 ADD PUSH1 0x6 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x42BA JUMPI PUSH1 0x40 MLOAD PUSH32 0xED3BA6A600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x441F JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x43D5 JUMPI JUMPDEST POP POP POP POP POP DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP6 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD MLOAD SWAP1 POP PUSH1 0x0 JUMPDEST DUP4 PUSH1 0x40 ADD MLOAD MLOAD DUP2 LT ISZERO PUSH2 0x458F JUMPI PUSH1 0x2 PUSH1 0x0 DUP6 PUSH1 0x40 ADD MLOAD DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x4504 JUMPI PUSH2 0x4503 PUSH2 0x751E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP8 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x44DC JUMP JUMPDEST POP PUSH1 0x3 PUSH1 0x0 DUP7 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x0 PUSH2 0x4616 SWAP2 SWAP1 PUSH2 0x6491 JUMP JUMPDEST POP POP PUSH1 0x4 PUSH1 0x0 DUP7 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x0 DUP3 ADD PUSH1 0xC PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE POP POP DUP1 PUSH1 0x5 PUSH1 0x8 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x46A5 SWAP2 SWAP1 PUSH2 0x7A39 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x473C SWAP3 SWAP2 SWAP1 PUSH2 0x7E6B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x475B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x477F SWAP2 SWAP1 PUSH2 0x7AFF JUMP JUMPDEST PUSH2 0x47B5 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF4D678B800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH32 0xE8ED5B475A5B5987AA9165E8731BB78043F39EEE32EC5A1169A89E27FCD49815 DUP6 DUP4 PUSH1 0x40 MLOAD PUSH2 0x47F1 SWAP3 SWAP2 SWAP1 PUSH2 0x7AAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP7 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x481C SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x7F00 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR SWAP1 POP DUP7 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x484A SWAP3 SWAP2 SWAP1 PUSH2 0x7F45 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR DUP2 SWAP3 POP SWAP3 POP POP SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 CHAINID SWAP1 POP PUSH2 0xA4B1 DUP2 EQ DUP1 PUSH2 0x488A JUMPI POP PUSH3 0x66EED DUP2 EQ JUMPDEST ISZERO PUSH2 0x4907 JUMPI PUSH1 0x64 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA3B1B31D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x48DB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x48FF SWAP2 SWAP1 PUSH2 0x7E3E JUMP JUMPDEST SWAP2 POP POP PUSH2 0x490C JUMP JUMPDEST NUMBER SWAP2 POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x4921 DUP6 PUSH1 0x0 ADD MLOAD PUSH2 0x3884 JUMP JUMPDEST SWAP3 POP PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x49CC JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x77F5B84C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x49C3 SWAP2 SWAP1 PUSH2 0x6EF6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 DUP7 PUSH1 0x80 ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x49E3 SWAP3 SWAP2 SWAP1 PUSH2 0x7F45 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR SWAP3 POP PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP1 SHL DUP2 SUB PUSH2 0x4A52 JUMPI PUSH1 0x40 MLOAD PUSH32 0x3688124A00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 DUP7 PUSH1 0x0 ADD MLOAD DUP8 PUSH1 0x20 ADD MLOAD DUP9 PUSH1 0x40 ADD MLOAD DUP10 PUSH1 0x60 ADD MLOAD DUP11 PUSH1 0x80 ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x4A81 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x7F6E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 EQ PUSH2 0x4ACF JUMPI PUSH1 0x40 MLOAD PUSH32 0xD529142C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x4ADE DUP8 PUSH1 0x0 ADD MLOAD PUSH2 0x4ECD JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 SHL DUP2 SUB PUSH2 0x4BD6 JUMPI PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xE9413D38 DUP9 PUSH1 0x0 ADD MLOAD PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B47 SWAP2 SWAP1 PUSH2 0x8000 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4B64 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4B88 SWAP2 SWAP1 PUSH2 0x8030 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 SHL DUP2 SUB PUSH2 0x4BD5 JUMPI DUP7 PUSH1 0x0 ADD MLOAD PUSH1 0x40 MLOAD PUSH32 0x175DADAD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4BCC SWAP2 SWAP1 PUSH2 0x8000 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH1 0x0 DUP9 PUSH1 0x80 ADD MLOAD DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x4BEF SWAP3 SWAP2 SWAP1 PUSH2 0x809F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR SWAP1 POP PUSH2 0x4C14 DUP10 DUP3 PUSH2 0x4FDB JUMP JUMPDEST SWAP5 POP POP POP POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 GAS PUSH2 0x1388 DUP2 LT ISZERO PUSH2 0x4C33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1388 DUP2 SUB SWAP1 POP DUP5 PUSH1 0x40 DUP3 DIV DUP3 SUB GT PUSH2 0x4C4B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 EXTCODESIZE PUSH2 0x4C56 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH1 0x0 DUP9 DUP11 CALL SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x4C79 PUSH2 0x5048 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 SGT PUSH2 0x4CC0 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x43D4CF6600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4CB7 SWAP2 SWAP1 PUSH2 0x69A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x4CCA PUSH2 0x5145 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 DUP3 GAS DUP11 DUP11 PUSH2 0x4CDD SWAP2 SWAP1 PUSH2 0x7C08 JUMP JUMPDEST PUSH2 0x4CE7 SWAP2 SWAP1 PUSH2 0x757C JUMP JUMPDEST DUP8 PUSH2 0x4CF2 SWAP2 SWAP1 PUSH2 0x80CB JUMP JUMPDEST PUSH2 0x4CFC SWAP2 SWAP1 PUSH2 0x7C08 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 PUSH2 0x4D0F SWAP2 SWAP1 PUSH2 0x80CB JUMP JUMPDEST PUSH2 0x4D19 SWAP2 SWAP1 PUSH2 0x813C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP7 PUSH4 0xFFFFFFFF AND PUSH5 0xE8D4A51000 PUSH2 0x4D34 SWAP2 SWAP1 PUSH2 0x80CB JUMP JUMPDEST SWAP1 POP DUP1 PUSH12 0x33B2E3C9FD0803CE8000000 PUSH2 0x4D4E SWAP2 SWAP1 PUSH2 0x757C JUMP JUMPDEST DUP3 GT ISZERO PUSH2 0x4D87 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE80FA38100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 DUP3 PUSH2 0x4D93 SWAP2 SWAP1 PUSH2 0x7C08 JUMP JUMPDEST SWAP5 POP POP POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x4E0F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4E06 SWAP1 PUSH2 0x81B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 CHAINID SWAP1 POP PUSH2 0xA4B1 DUP2 EQ DUP1 PUSH2 0x4EE5 JUMPI POP PUSH3 0x66EED DUP2 EQ JUMPDEST DUP1 PUSH2 0x4EF2 JUMPI POP PUSH3 0x66EEE DUP2 EQ JUMPDEST ISZERO PUSH2 0x4FC6 JUMPI PUSH2 0x100 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH2 0x4F0D PUSH2 0x4872 JUMP JUMPDEST PUSH2 0x4F17 SWAP2 SWAP1 PUSH2 0x757C JUMP JUMPDEST GT DUP1 PUSH2 0x4F34 JUMPI POP PUSH2 0x4F26 PUSH2 0x4872 JUMP JUMPDEST DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND LT ISZERO JUMPDEST ISZERO PUSH2 0x4F43 JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x4FD6 JUMP JUMPDEST PUSH1 0x64 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x2B407A82 DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4F7D SWAP2 SWAP1 PUSH2 0x8000 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4F9A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4FBE SWAP2 SWAP1 PUSH2 0x8030 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x4FD6 JUMP JUMPDEST DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND BLOCKHASH SWAP2 POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x500F DUP4 PUSH1 0x0 ADD MLOAD DUP5 PUSH1 0x20 ADD MLOAD DUP6 PUSH1 0x40 ADD MLOAD DUP7 PUSH1 0x60 ADD MLOAD DUP7 DUP9 PUSH1 0xA0 ADD MLOAD DUP10 PUSH1 0xC0 ADD MLOAD DUP11 PUSH1 0xE0 ADD MLOAD DUP12 PUSH2 0x100 ADD MLOAD PUSH2 0x51E3 JUMP JUMPDEST PUSH1 0x3 DUP4 PUSH1 0x20 ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x5027 SWAP3 SWAP2 SWAP1 PUSH2 0x81D9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xB PUSH1 0x0 ADD PUSH1 0x7 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP1 DUP3 PUSH4 0xFFFFFFFF AND GT SWAP1 POP PUSH1 0x0 DUP1 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x50DE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5102 SWAP2 SWAP1 PUSH2 0x8259 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 POP SWAP1 SWAP2 POP POP DUP1 SWAP4 POP DUP2 SWAP3 POP POP POP DUP3 DUP1 ISZERO PUSH2 0x5130 JUMPI POP DUP2 TIMESTAMP PUSH2 0x5127 SWAP2 SWAP1 PUSH2 0x757C JUMP JUMPDEST DUP5 PUSH4 0xFFFFFFFF AND LT JUMPDEST ISZERO PUSH2 0x513B JUMPI PUSH1 0xA SLOAD SWAP1 POP JUMPDEST DUP1 SWAP5 POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 CHAINID SWAP1 POP PUSH2 0xA4B1 DUP2 EQ DUP1 PUSH2 0x515D JUMPI POP PUSH3 0x66EED DUP2 EQ JUMPDEST ISZERO PUSH2 0x51DA JUMPI PUSH1 0x6C PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xC6F7DE0E PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x51AE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x51D2 SWAP2 SWAP1 PUSH2 0x7E3E JUMP JUMPDEST SWAP2 POP POP PUSH2 0x51E0 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x51EC DUP10 PUSH2 0x53D0 JUMP JUMPDEST PUSH2 0x522B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5222 SWAP1 PUSH2 0x8320 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5234 DUP9 PUSH2 0x53D0 JUMP JUMPDEST PUSH2 0x5273 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x526A SWAP1 PUSH2 0x838C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x527C DUP4 PUSH2 0x53D0 JUMP JUMPDEST PUSH2 0x52BB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x52B2 SWAP1 PUSH2 0x83F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x52C4 DUP3 PUSH2 0x53D0 JUMP JUMPDEST PUSH2 0x5303 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x52FA SWAP1 PUSH2 0x8464 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x530F DUP8 DUP11 DUP9 DUP8 PUSH2 0x5551 JUMP JUMPDEST PUSH2 0x534E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5345 SWAP1 PUSH2 0x84D0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x535A DUP11 DUP8 PUSH2 0x576E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x536D DUP10 DUP12 DUP8 DUP12 DUP7 DUP10 DUP10 PUSH2 0x5800 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x537E DUP4 DUP14 DUP14 DUP11 DUP7 PUSH2 0x5986 JUMP JUMPDEST SWAP1 POP DUP1 DUP11 EQ PUSH2 0x53C2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x53B9 SWAP1 PUSH2 0x853C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP3 PUSH1 0x0 PUSH1 0x2 DUP2 LT PUSH2 0x5407 JUMPI PUSH2 0x5406 PUSH2 0x751E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD LT PUSH2 0x544C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5443 SWAP1 PUSH2 0x85A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP3 PUSH1 0x1 PUSH1 0x2 DUP2 LT PUSH2 0x5481 JUMPI PUSH2 0x5480 PUSH2 0x751E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD LT PUSH2 0x54C6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x54BD SWAP1 PUSH2 0x8614 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 PUSH2 0x54F5 JUMPI PUSH2 0x54F4 PUSH2 0x810D JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x2 DUP2 LT PUSH2 0x5509 JUMPI PUSH2 0x5508 PUSH2 0x751E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP4 PUSH1 0x1 PUSH1 0x2 DUP2 LT PUSH2 0x5522 JUMPI PUSH2 0x5521 PUSH2 0x751E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD MULMOD PUSH2 0x5549 DUP4 PUSH1 0x0 PUSH1 0x2 DUP2 LT PUSH2 0x553F JUMPI PUSH2 0x553E PUSH2 0x751E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH2 0x59C8 JUMP JUMPDEST EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x55C1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x55B8 SWAP1 PUSH2 0x8680 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 DUP7 PUSH1 0x1 PUSH1 0x2 DUP2 LT PUSH2 0x55DA JUMPI PUSH2 0x55D9 PUSH2 0x751E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP2 PUSH2 0x55ED JUMPI PUSH2 0x55EC PUSH2 0x810D JUMP JUMPDEST JUMPDEST MOD EQ PUSH2 0x55FA JUMPI PUSH1 0x1C PUSH2 0x55FD JUMP JUMPDEST PUSH1 0x1B JUMPDEST SWAP1 POP PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 DUP1 PUSH2 0x5630 JUMPI PUSH2 0x562F PUSH2 0x810D JUMP JUMPDEST JUMPDEST DUP6 DUP8 PUSH1 0x0 PUSH1 0x2 DUP2 LT PUSH2 0x5645 JUMPI PUSH2 0x5644 PUSH2 0x751E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD MULMOD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 SUB PUSH1 0x0 SHL SWAP1 POP PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 DUP1 PUSH2 0x56A3 JUMPI PUSH2 0x56A2 PUSH2 0x810D JUMP JUMPDEST JUMPDEST DUP8 PUSH1 0x0 PUSH1 0x2 DUP2 LT PUSH2 0x56B7 JUMPI PUSH2 0x56B6 PUSH2 0x751E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP10 MULMOD PUSH1 0x0 SHL SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP4 DUP6 DUP11 PUSH1 0x0 PUSH1 0x2 DUP2 LT PUSH2 0x56DD JUMPI PUSH2 0x56DC PUSH2 0x751E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH1 0x0 SHL DUP6 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x5703 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x86BC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5725 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP5 POP POP POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x5776 PUSH2 0x64B2 JUMP JUMPDEST PUSH2 0x57A3 PUSH1 0x1 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x578F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x878A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH2 0x5A6B JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH2 0x57AF DUP2 PUSH2 0x53D0 JUMP JUMPDEST PUSH2 0x57FA JUMPI PUSH2 0x57F3 DUP2 PUSH1 0x0 PUSH1 0x2 DUP2 LT PUSH2 0x57CA JUMPI PUSH2 0x57C9 PUSH2 0x751E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x57DF SWAP2 SWAP1 PUSH2 0x87C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH2 0x5A6B JUMP JUMPDEST SWAP1 POP PUSH2 0x57A6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x5808 PUSH2 0x64B2 JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP4 PUSH1 0x0 PUSH1 0x2 DUP2 LT PUSH2 0x583D JUMPI PUSH2 0x583C PUSH2 0x751E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP2 PUSH2 0x5850 JUMPI PUSH2 0x584F PUSH2 0x810D JUMP JUMPDEST JUMPDEST MOD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP8 PUSH1 0x0 PUSH1 0x2 DUP2 LT PUSH2 0x5886 JUMPI PUSH2 0x5885 PUSH2 0x751E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP2 PUSH2 0x5899 JUMPI PUSH2 0x5898 PUSH2 0x810D JUMP JUMPDEST JUMPDEST MOD SUB PUSH2 0x58DA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x58D1 SWAP1 PUSH2 0x882E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x58E5 DUP8 DUP10 DUP9 PUSH2 0x5B6E JUMP JUMPDEST PUSH2 0x5924 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x591B SWAP1 PUSH2 0x889A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x592F DUP5 DUP7 DUP6 PUSH2 0x5B6E JUMP JUMPDEST PUSH2 0x596E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5965 SWAP1 PUSH2 0x8906 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5979 DUP7 DUP5 DUP5 PUSH2 0x5D05 JUMP JUMPDEST SWAP1 POP SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP7 DUP7 DUP7 DUP6 DUP8 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x59A4 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x896E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 PUSH2 0x59FA JUMPI PUSH2 0x59F9 PUSH2 0x810D JUMP JUMPDEST JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 PUSH2 0x5A29 JUMPI PUSH2 0x5A28 PUSH2 0x810D JUMP JUMPDEST JUMPDEST DUP5 DUP6 MULMOD DUP5 MULMOD SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 PUSH2 0x5A5F JUMPI PUSH2 0x5A5E PUSH2 0x810D JUMP JUMPDEST JUMPDEST PUSH1 0x7 DUP3 ADDMOD SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5A73 PUSH2 0x64B2 JUMP JUMPDEST PUSH2 0x5A7C DUP3 PUSH2 0x5E81 JUMP JUMPDEST DUP2 PUSH1 0x0 PUSH1 0x2 DUP2 LT PUSH2 0x5A90 JUMPI PUSH2 0x5A8F PUSH2 0x751E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x5AC2 PUSH2 0x5ABD DUP3 PUSH1 0x0 PUSH1 0x2 DUP2 LT PUSH2 0x5AB3 JUMPI PUSH2 0x5AB2 PUSH2 0x751E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH2 0x59C8 JUMP JUMPDEST PUSH2 0x5EEE JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x2 DUP2 LT PUSH2 0x5AD6 JUMPI PUSH2 0x5AD5 PUSH2 0x751E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x1 PUSH1 0x2 DUP3 PUSH1 0x1 PUSH1 0x2 DUP2 LT PUSH2 0x5AF7 JUMPI PUSH2 0x5AF6 PUSH2 0x751E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP2 PUSH2 0x5B0A JUMPI PUSH2 0x5B09 PUSH2 0x810D JUMP JUMPDEST JUMPDEST MOD SUB PUSH2 0x5B69 JUMPI DUP1 PUSH1 0x1 PUSH1 0x2 DUP2 LT PUSH2 0x5B24 JUMPI PUSH2 0x5B23 PUSH2 0x751E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F SUB DUP2 PUSH1 0x1 PUSH1 0x2 DUP2 LT PUSH2 0x5B5F JUMPI PUSH2 0x5B5E PUSH2 0x751E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD DUP2 DUP2 MSTORE POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 SUB PUSH2 0x5BB2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5BA9 SWAP1 PUSH2 0x8A2A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP5 PUSH1 0x0 PUSH1 0x2 DUP2 LT PUSH2 0x5BC8 JUMPI PUSH2 0x5BC7 PUSH2 0x751E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x2 DUP8 PUSH1 0x1 PUSH1 0x2 DUP2 LT PUSH2 0x5BE8 JUMPI PUSH2 0x5BE7 PUSH2 0x751E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH2 0x5BF7 SWAP2 SWAP1 PUSH2 0x8A4A JUMP JUMPDEST EQ PUSH2 0x5C03 JUMPI PUSH1 0x1C PUSH2 0x5C06 JUMP JUMPDEST PUSH1 0x1B JUMPDEST SWAP1 POP PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 DUP1 PUSH2 0x5C39 JUMPI PUSH2 0x5C38 PUSH2 0x810D JUMP JUMPDEST JUMPDEST DUP4 DUP8 MULMOD PUSH1 0x0 SHL SWAP1 POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP1 SHL DUP5 DUP7 PUSH1 0x0 SHL DUP6 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x5C6C SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x86BC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5C8E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 DUP7 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x5CAD SWAP2 SWAP1 PUSH2 0x8A7B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP6 POP POP POP POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x5D0D PUSH2 0x64B2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x5D7E DUP8 PUSH1 0x0 PUSH1 0x2 DUP2 LT PUSH2 0x5D29 JUMPI PUSH2 0x5D28 PUSH2 0x751E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP9 PUSH1 0x1 PUSH1 0x2 DUP2 LT PUSH2 0x5D42 JUMPI PUSH2 0x5D41 PUSH2 0x751E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP9 PUSH1 0x0 PUSH1 0x2 DUP2 LT PUSH2 0x5D5B JUMPI PUSH2 0x5D5A PUSH2 0x751E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP10 PUSH1 0x1 PUSH1 0x2 DUP2 LT PUSH2 0x5D74 JUMPI PUSH2 0x5D73 PUSH2 0x751E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH2 0x5F31 JUMP JUMPDEST DUP1 SWAP4 POP DUP2 SWAP5 POP DUP3 SWAP6 POP POP POP POP PUSH1 0x1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 PUSH2 0x5DBB JUMPI PUSH2 0x5DBA PUSH2 0x810D JUMP JUMPDEST JUMPDEST DUP7 DUP4 MULMOD EQ PUSH2 0x5DFE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5DF5 SWAP1 PUSH2 0x8AE2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 PUSH2 0x5E38 JUMPI PUSH2 0x5E37 PUSH2 0x810D JUMP JUMPDEST JUMPDEST DUP8 DUP7 MULMOD DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 PUSH2 0x5E6F JUMPI PUSH2 0x5E6E PUSH2 0x810D JUMP JUMPDEST JUMPDEST DUP8 DUP6 MULMOD DUP2 MSTORE POP SWAP4 POP POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR SWAP1 POP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP2 LT PUSH2 0x5EE9 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x5EC9 SWAP2 SWAP1 PUSH2 0x87C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR SWAP1 POP PUSH2 0x5E91 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5F2A DUP3 PUSH1 0x2 PUSH1 0x1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F PUSH2 0x5F23 SWAP2 SWAP1 PUSH2 0x7C08 JUMP JUMPDEST SWAP1 SHR PUSH2 0x6128 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x1 DUP1 SWAP2 POP SWAP2 POP PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 PUSH2 0x5F71 JUMPI PUSH2 0x5F70 PUSH2 0x810D JUMP JUMPDEST JUMPDEST DUP10 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F SUB DUP9 ADDMOD SWAP1 POP PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 PUSH2 0x5FC9 JUMPI PUSH2 0x5FC8 PUSH2 0x810D JUMP JUMPDEST JUMPDEST DUP12 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F SUB DUP11 ADDMOD SWAP1 POP PUSH1 0x0 PUSH2 0x5FFE DUP4 DUP4 DUP6 DUP6 PUSH2 0x6287 JUMP JUMPDEST DUP1 SWAP3 POP DUP2 SWAP10 POP POP POP PUSH2 0x6012 DUP9 DUP3 DUP15 DUP9 PUSH2 0x62FF JUMP JUMPDEST DUP1 SWAP3 POP DUP2 SWAP10 POP POP POP PUSH2 0x6026 DUP9 DUP3 DUP13 DUP8 PUSH2 0x62FF JUMP JUMPDEST DUP1 SWAP3 POP DUP2 SWAP10 POP POP POP PUSH1 0x0 PUSH2 0x603C DUP14 DUP8 DUP12 DUP6 PUSH2 0x62FF JUMP JUMPDEST DUP1 SWAP3 POP DUP2 SWAP10 POP POP POP PUSH2 0x6050 DUP9 DUP3 DUP7 DUP7 PUSH2 0x6287 JUMP JUMPDEST DUP1 SWAP3 POP DUP2 SWAP10 POP POP POP PUSH2 0x6064 DUP9 DUP3 DUP15 DUP10 PUSH2 0x62FF JUMP JUMPDEST DUP1 SWAP3 POP DUP2 SWAP10 POP POP POP DUP1 DUP3 EQ PUSH2 0x6114 JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 PUSH2 0x60A2 JUMPI PUSH2 0x60A1 PUSH2 0x810D JUMP JUMPDEST JUMPDEST DUP2 DUP11 MULMOD SWAP9 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 PUSH2 0x60D6 JUMPI PUSH2 0x60D5 PUSH2 0x810D JUMP JUMPDEST JUMPDEST DUP3 DUP10 MULMOD SWAP8 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 PUSH2 0x610A JUMPI PUSH2 0x6109 PUSH2 0x810D JUMP JUMPDEST JUMPDEST DUP2 DUP4 MULMOD SWAP7 POP PUSH2 0x6118 JUMP JUMPDEST DUP2 SWAP7 POP JUMPDEST POP POP POP POP POP POP SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x6133 PUSH2 0x64D4 JUMP JUMPDEST PUSH1 0x20 DUP2 PUSH1 0x0 PUSH1 0x6 DUP2 LT PUSH2 0x6149 JUMPI PUSH2 0x6148 PUSH2 0x751E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x20 DUP2 PUSH1 0x1 PUSH1 0x6 DUP2 LT PUSH2 0x6168 JUMPI PUSH2 0x6167 PUSH2 0x751E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x20 DUP2 PUSH1 0x2 PUSH1 0x6 DUP2 LT PUSH2 0x6187 JUMPI PUSH2 0x6186 PUSH2 0x751E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD DUP2 DUP2 MSTORE POP POP DUP5 DUP2 PUSH1 0x3 PUSH1 0x6 DUP2 LT PUSH2 0x61A5 JUMPI PUSH2 0x61A4 PUSH2 0x751E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD DUP2 DUP2 MSTORE POP POP DUP4 DUP2 PUSH1 0x4 PUSH1 0x6 DUP2 LT PUSH2 0x61C3 JUMPI PUSH2 0x61C2 PUSH2 0x751E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD DUP2 DUP2 MSTORE POP POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP2 PUSH1 0x5 PUSH1 0x6 DUP2 LT PUSH2 0x6201 JUMPI PUSH2 0x6200 PUSH2 0x751E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x6212 PUSH2 0x64F6 JUMP JUMPDEST PUSH1 0x20 DUP2 PUSH1 0xC0 DUP5 PUSH1 0x5 PUSH1 0x0 NOT STATICCALL SWAP3 POP PUSH1 0x0 DUP4 SUB PUSH2 0x6263 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x625A SWAP1 PUSH2 0x8B4E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x0 PUSH1 0x1 DUP2 LT PUSH2 0x6277 JUMPI PUSH2 0x6276 PUSH2 0x751E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 PUSH2 0x62B9 JUMPI PUSH2 0x62B8 PUSH2 0x810D JUMP JUMPDEST JUMPDEST DUP5 DUP8 MULMOD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 PUSH2 0x62EB JUMPI PUSH2 0x62EA PUSH2 0x810D JUMP JUMPDEST JUMPDEST DUP5 DUP8 MULMOD DUP1 SWAP3 POP DUP2 SWAP4 POP POP POP SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 PUSH2 0x6333 JUMPI PUSH2 0x6332 PUSH2 0x810D JUMP JUMPDEST JUMPDEST DUP8 DUP6 MULMOD SWAP1 POP PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 PUSH2 0x6369 JUMPI PUSH2 0x6368 PUSH2 0x810D JUMP JUMPDEST JUMPDEST DUP8 DUP8 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F SUB MULMOD SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 PUSH2 0x63BF JUMPI PUSH2 0x63BE PUSH2 0x810D JUMP JUMPDEST JUMPDEST DUP2 DUP4 ADDMOD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 PUSH2 0x63F1 JUMPI PUSH2 0x63F0 PUSH2 0x810D JUMP JUMPDEST JUMPDEST DUP7 DUP10 MULMOD DUP1 SWAP5 POP DUP2 SWAP6 POP POP POP POP POP SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x6480 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x647F JUMPI DUP3 MLOAD DUP3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x6427 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x648D SWAP2 SWAP1 PUSH2 0x6518 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST POP DUP1 SLOAD PUSH1 0x0 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x64AF SWAP2 SWAP1 PUSH2 0x6518 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 SWAP1 PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 SWAP1 PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 SWAP1 PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x6531 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x6519 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x654C DUP2 PUSH2 0x6535 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x656B DUP2 PUSH2 0x6552 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x65B0 DUP2 PUSH2 0x659D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x65C2 DUP4 DUP4 PUSH2 0x65A7 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x65E6 DUP3 PUSH2 0x6571 JUMP JUMPDEST PUSH2 0x65F0 DUP2 DUP6 PUSH2 0x657C JUMP JUMPDEST SWAP4 POP PUSH2 0x65FB DUP4 PUSH2 0x658D JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x662C JUMPI DUP2 MLOAD PUSH2 0x6613 DUP9 DUP3 PUSH2 0x65B6 JUMP JUMPDEST SWAP8 POP PUSH2 0x661E DUP4 PUSH2 0x65CE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x65FF JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x664E PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x6543 JUMP JUMPDEST PUSH2 0x665B PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x6562 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x666D DUP2 DUP5 PUSH2 0x65DB JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x66A8 DUP2 PUSH2 0x668B JUMP JUMPDEST DUP2 EQ PUSH2 0x66B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x66C5 DUP2 PUSH2 0x669F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x66E1 JUMPI PUSH2 0x66E0 PUSH2 0x6681 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x66EF DUP5 DUP3 DUP6 ADD PUSH2 0x66B6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6723 DUP3 PUSH2 0x66F8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6733 DUP2 PUSH2 0x6718 JUMP JUMPDEST DUP2 EQ PUSH2 0x673E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x6750 DUP2 PUSH2 0x672A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x676D JUMPI PUSH2 0x676C PUSH2 0x6681 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x677B DUP6 DUP3 DUP7 ADD PUSH2 0x66B6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x678C DUP6 DUP3 DUP7 ADD PUSH2 0x6741 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x679F DUP2 PUSH2 0x668B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x67BA PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x6796 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP3 PUSH1 0x20 PUSH1 0x2 MUL DUP3 ADD GT ISZERO PUSH2 0x67E1 JUMPI PUSH2 0x67E0 PUSH2 0x67C0 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x67FD JUMPI PUSH2 0x67FC PUSH2 0x6681 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x680B DUP5 DUP3 DUP6 ADD PUSH2 0x67C5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6827 DUP2 PUSH2 0x6814 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x6842 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x681E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x685D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x6543 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x689D JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x6882 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x68C5 DUP3 PUSH2 0x6863 JUMP JUMPDEST PUSH2 0x68CF DUP2 DUP6 PUSH2 0x686E JUMP JUMPDEST SWAP4 POP PUSH2 0x68DF DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x687F JUMP JUMPDEST PUSH2 0x68E8 DUP2 PUSH2 0x68A9 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x690D DUP2 DUP5 PUSH2 0x68BA JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x693A PUSH2 0x6935 PUSH2 0x6930 DUP5 PUSH2 0x66F8 JUMP JUMPDEST PUSH2 0x6915 JUMP JUMPDEST PUSH2 0x66F8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x694C DUP3 PUSH2 0x691F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x695E DUP3 PUSH2 0x6941 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x696E DUP2 PUSH2 0x6953 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x6989 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x6965 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x69A2 DUP2 PUSH2 0x698F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x69BD PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x6999 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x69D8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x6562 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x69E7 DUP2 PUSH2 0x6535 JUMP JUMPDEST DUP2 EQ PUSH2 0x69F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x6A04 DUP2 PUSH2 0x69DE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x6A13 DUP2 PUSH2 0x6552 JUMP JUMPDEST DUP2 EQ PUSH2 0x6A1E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x6A30 DUP2 PUSH2 0x6A0A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x6A3F DUP2 PUSH2 0x698F JUMP JUMPDEST DUP2 EQ PUSH2 0x6A4A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x6A5C DUP2 PUSH2 0x6A36 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x6A9F DUP3 PUSH2 0x68A9 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x6ABE JUMPI PUSH2 0x6ABD PUSH2 0x6A67 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6AD1 PUSH2 0x6677 JUMP JUMPDEST SWAP1 POP PUSH2 0x6ADD DUP3 DUP3 PUSH2 0x6A96 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6AFA DUP2 PUSH2 0x6AE2 JUMP JUMPDEST DUP2 EQ PUSH2 0x6B05 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x6B17 DUP2 PUSH2 0x6AF1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x120 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6B34 JUMPI PUSH2 0x6B33 PUSH2 0x6A62 JUMP JUMPDEST JUMPDEST PUSH2 0x6B3F PUSH2 0x120 PUSH2 0x6AC7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x6B4F DUP5 DUP3 DUP6 ADD PUSH2 0x6A21 JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP PUSH1 0x20 PUSH2 0x6B63 DUP5 DUP3 DUP6 ADD PUSH2 0x6A21 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 PUSH2 0x6B77 DUP5 DUP3 DUP6 ADD PUSH2 0x6A21 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE POP PUSH1 0x60 PUSH2 0x6B8B DUP5 DUP3 DUP6 ADD PUSH2 0x6A21 JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE POP PUSH1 0x80 PUSH2 0x6B9F DUP5 DUP3 DUP6 ADD PUSH2 0x6A21 JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MSTORE POP PUSH1 0xA0 PUSH2 0x6BB3 DUP5 DUP3 DUP6 ADD PUSH2 0x6B08 JUMP JUMPDEST PUSH1 0xA0 DUP4 ADD MSTORE POP PUSH1 0xC0 PUSH2 0x6BC7 DUP5 DUP3 DUP6 ADD PUSH2 0x6B08 JUMP JUMPDEST PUSH1 0xC0 DUP4 ADD MSTORE POP PUSH1 0xE0 PUSH2 0x6BDB DUP5 DUP3 DUP6 ADD PUSH2 0x6B08 JUMP JUMPDEST PUSH1 0xE0 DUP4 ADD MSTORE POP PUSH2 0x100 PUSH2 0x6BF0 DUP5 DUP3 DUP6 ADD PUSH2 0x6B08 JUMP JUMPDEST PUSH2 0x100 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x1C0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x6C1B JUMPI PUSH2 0x6C1A PUSH2 0x6681 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x6C29 DUP10 DUP3 DUP11 ADD PUSH2 0x69F5 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 PUSH2 0x6C3A DUP10 DUP3 DUP11 ADD PUSH2 0x6A21 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 PUSH2 0x6C4B DUP10 DUP3 DUP11 ADD PUSH2 0x6A21 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 PUSH2 0x6C5C DUP10 DUP3 DUP11 ADD PUSH2 0x6A21 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 PUSH2 0x6C6D DUP10 DUP3 DUP11 ADD PUSH2 0x6A4D JUMP JUMPDEST SWAP3 POP POP PUSH1 0xA0 PUSH2 0x6C7E DUP10 DUP3 DUP11 ADD PUSH2 0x6B1D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH2 0x6C94 DUP2 PUSH2 0x659D JUMP JUMPDEST DUP2 EQ PUSH2 0x6C9F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x6CB1 DUP2 PUSH2 0x6C8B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x6CD3 JUMPI PUSH2 0x6CD2 PUSH2 0x6681 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x6CE1 DUP9 DUP3 DUP10 ADD PUSH2 0x6CA2 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x6CF2 DUP9 DUP3 DUP10 ADD PUSH2 0x66B6 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x6D03 DUP9 DUP3 DUP10 ADD PUSH2 0x69F5 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x6D14 DUP9 DUP3 DUP10 ADD PUSH2 0x6A21 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x6D25 DUP9 DUP3 DUP10 ADD PUSH2 0x6A21 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH2 0x6D3B DUP2 PUSH2 0x6AE2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x120 DUP3 ADD SWAP1 POP PUSH2 0x6D57 PUSH1 0x0 DUP4 ADD DUP13 PUSH2 0x6562 JUMP JUMPDEST PUSH2 0x6D64 PUSH1 0x20 DUP4 ADD DUP12 PUSH2 0x6562 JUMP JUMPDEST PUSH2 0x6D71 PUSH1 0x40 DUP4 ADD DUP11 PUSH2 0x6562 JUMP JUMPDEST PUSH2 0x6D7E PUSH1 0x60 DUP4 ADD DUP10 PUSH2 0x6562 JUMP JUMPDEST PUSH2 0x6D8B PUSH1 0x80 DUP4 ADD DUP9 PUSH2 0x6562 JUMP JUMPDEST PUSH2 0x6D98 PUSH1 0xA0 DUP4 ADD DUP8 PUSH2 0x6D32 JUMP JUMPDEST PUSH2 0x6DA5 PUSH1 0xC0 DUP4 ADD DUP7 PUSH2 0x6D32 JUMP JUMPDEST PUSH2 0x6DB2 PUSH1 0xE0 DUP4 ADD DUP6 PUSH2 0x6D32 JUMP JUMPDEST PUSH2 0x6DC0 PUSH2 0x100 DUP4 ADD DUP5 PUSH2 0x6D32 JUMP JUMPDEST SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6DEF DUP2 PUSH2 0x6DCE JUMP JUMPDEST DUP2 EQ PUSH2 0x6DFA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x6E0C DUP2 PUSH2 0x6DE6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x6E29 JUMPI PUSH2 0x6E28 PUSH2 0x6681 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x6E37 DUP6 DUP3 DUP7 ADD PUSH2 0x6741 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x6E48 DUP6 DUP3 DUP7 ADD PUSH2 0x6DFD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6E5D DUP3 PUSH2 0x6941 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6E6D DUP2 PUSH2 0x6E52 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x6E88 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x6E64 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x6E97 DUP2 PUSH2 0x6814 JUMP JUMPDEST DUP2 EQ PUSH2 0x6EA2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x6EB4 DUP2 PUSH2 0x6E8E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6ED0 JUMPI PUSH2 0x6ECF PUSH2 0x6681 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x6EDE DUP5 DUP3 DUP6 ADD PUSH2 0x6EA5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x6EF0 DUP2 PUSH2 0x659D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x6F0B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x6EE7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x60 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x6F28 JUMPI PUSH2 0x6F27 PUSH2 0x6681 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x6F36 DUP6 DUP3 DUP7 ADD PUSH2 0x6741 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x6F47 DUP6 DUP3 DUP7 ADD PUSH2 0x67C5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x6F5A DUP2 PUSH2 0x6718 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x6F75 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x6F51 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x6F84 DUP2 PUSH2 0x6DCE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6FBF DUP2 PUSH2 0x6718 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6FD1 DUP4 DUP4 PUSH2 0x6FB6 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6FF5 DUP3 PUSH2 0x6F8A JUMP JUMPDEST PUSH2 0x6FFF DUP2 DUP6 PUSH2 0x6F95 JUMP JUMPDEST SWAP4 POP PUSH2 0x700A DUP4 PUSH2 0x6FA6 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x703B JUMPI DUP2 MLOAD PUSH2 0x7022 DUP9 DUP3 PUSH2 0x6FC5 JUMP JUMPDEST SWAP8 POP PUSH2 0x702D DUP4 PUSH2 0x6FDD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x700E JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x705D PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x6F7B JUMP JUMPDEST PUSH2 0x706A PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x6796 JUMP JUMPDEST PUSH2 0x7077 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x6F51 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x7089 DUP2 DUP5 PUSH2 0x6FEA JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x70B4 JUMPI PUSH2 0x70B3 PUSH2 0x7094 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x70D1 JUMPI PUSH2 0x70D0 PUSH2 0x7099 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x70ED JUMPI PUSH2 0x70EC PUSH2 0x67C0 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x710E JUMPI PUSH2 0x710D PUSH2 0x6681 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x711C DUP8 DUP3 DUP9 ADD PUSH2 0x6741 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x712D DUP8 DUP3 DUP9 ADD PUSH2 0x6EA5 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x714E JUMPI PUSH2 0x714D PUSH2 0x6686 JUMP JUMPDEST JUMPDEST PUSH2 0x715A DUP8 DUP3 DUP9 ADD PUSH2 0x709E JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7173 DUP3 PUSH2 0x6941 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7183 DUP2 PUSH2 0x7168 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x719E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x717A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x71BF JUMPI PUSH2 0x71BE PUSH2 0x6A67 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x71DD PUSH2 0x71D8 DUP5 PUSH2 0x71A4 JUMP JUMPDEST PUSH2 0x6AC7 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x71F7 JUMPI PUSH2 0x71F6 PUSH2 0x67C0 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x7220 JUMPI DUP1 PUSH2 0x720C DUP9 DUP3 PUSH2 0x6EA5 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x71F9 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x723F JUMPI PUSH2 0x723E PUSH2 0x7094 JUMP JUMPDEST JUMPDEST PUSH1 0x2 PUSH2 0x724C DUP5 DUP3 DUP6 PUSH2 0x71CA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A0 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x726C JUMPI PUSH2 0x726B PUSH2 0x6A62 JUMP JUMPDEST JUMPDEST PUSH2 0x7277 PUSH2 0x120 PUSH2 0x6AC7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x7287 DUP5 DUP3 DUP6 ADD PUSH2 0x722A JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP PUSH1 0x40 PUSH2 0x729B DUP5 DUP3 DUP6 ADD PUSH2 0x722A JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x80 PUSH2 0x72AF DUP5 DUP3 DUP6 ADD PUSH2 0x6EA5 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE POP PUSH1 0xA0 PUSH2 0x72C3 DUP5 DUP3 DUP6 ADD PUSH2 0x6EA5 JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE POP PUSH1 0xC0 PUSH2 0x72D7 DUP5 DUP3 DUP6 ADD PUSH2 0x6EA5 JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MSTORE POP PUSH1 0xE0 PUSH2 0x72EB DUP5 DUP3 DUP6 ADD PUSH2 0x6741 JUMP JUMPDEST PUSH1 0xA0 DUP4 ADD MSTORE POP PUSH2 0x100 PUSH2 0x7300 DUP5 DUP3 DUP6 ADD PUSH2 0x722A JUMP JUMPDEST PUSH1 0xC0 DUP4 ADD MSTORE POP PUSH2 0x140 PUSH2 0x7315 DUP5 DUP3 DUP6 ADD PUSH2 0x722A JUMP JUMPDEST PUSH1 0xE0 DUP4 ADD MSTORE POP PUSH2 0x180 PUSH2 0x732A DUP5 DUP3 DUP6 ADD PUSH2 0x6EA5 JUMP JUMPDEST PUSH2 0x100 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x734D JUMPI PUSH2 0x734C PUSH2 0x6A62 JUMP JUMPDEST JUMPDEST PUSH2 0x7357 PUSH1 0xA0 PUSH2 0x6AC7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x7367 DUP5 DUP3 DUP6 ADD PUSH2 0x66B6 JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP PUSH1 0x20 PUSH2 0x737B DUP5 DUP3 DUP6 ADD PUSH2 0x66B6 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 PUSH2 0x738F DUP5 DUP3 DUP6 ADD PUSH2 0x6A21 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE POP PUSH1 0x60 PUSH2 0x73A3 DUP5 DUP3 DUP6 ADD PUSH2 0x6A21 JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE POP PUSH1 0x80 PUSH2 0x73B7 DUP5 DUP3 DUP6 ADD PUSH2 0x6741 JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x240 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x73DB JUMPI PUSH2 0x73DA PUSH2 0x6681 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x73E9 DUP6 DUP3 DUP7 ADD PUSH2 0x7255 JUMP JUMPDEST SWAP3 POP POP PUSH2 0x1A0 PUSH2 0x73FB DUP6 DUP3 DUP7 ADD PUSH2 0x7337 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x741A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x6F7B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x7435 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x6543 JUMP JUMPDEST PUSH2 0x7442 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x6562 JUMP JUMPDEST PUSH2 0x744F PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x6562 JUMP JUMPDEST PUSH2 0x745C PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x6562 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x747B JUMPI PUSH2 0x747A PUSH2 0x6681 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x7489 DUP5 DUP3 DUP6 ADD PUSH2 0x722A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x74A8 JUMPI PUSH2 0x74A7 PUSH2 0x6681 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x74B6 DUP5 DUP3 DUP6 ADD PUSH2 0x6741 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x74D4 DUP2 PUSH2 0x74BF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x74EF PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x74CB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x750A PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x6F51 JUMP JUMPDEST PUSH2 0x7517 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x6F51 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x7587 DUP3 PUSH2 0x6814 JUMP JUMPDEST SWAP2 POP PUSH2 0x7592 DUP4 PUSH2 0x6814 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x75AA JUMPI PUSH2 0x75A9 PUSH2 0x754D JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x75F4 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x6543 JUMP JUMPDEST PUSH2 0x7601 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x6543 JUMP JUMPDEST PUSH2 0x760E PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x6543 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7646 PUSH2 0x7641 DUP4 PUSH2 0x7616 JUMP JUMPDEST PUSH2 0x7623 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7656 DUP2 PUSH2 0x6552 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x20 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x767C PUSH2 0x7677 DUP4 PUSH2 0x765C JUMP JUMPDEST PUSH2 0x7623 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x40 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x76A3 PUSH2 0x769E DUP4 PUSH2 0x7683 JUMP JUMPDEST PUSH2 0x7623 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x60 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x76CA PUSH2 0x76C5 DUP4 PUSH2 0x76AA JUMP JUMPDEST PUSH2 0x7623 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x80 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x76F1 PUSH2 0x76EC DUP4 PUSH2 0x76D1 JUMP JUMPDEST PUSH2 0x7623 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0xA0 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7727 PUSH2 0x7722 DUP4 PUSH2 0x76F8 JUMP JUMPDEST PUSH2 0x7705 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7737 DUP2 PUSH2 0x6AE2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0xB8 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x775D PUSH2 0x7758 DUP4 PUSH2 0x773D JUMP JUMPDEST PUSH2 0x7705 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0xD0 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7784 PUSH2 0x777F DUP4 PUSH2 0x7764 JUMP JUMPDEST PUSH2 0x7705 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0xE8 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x77AB PUSH2 0x77A6 DUP4 PUSH2 0x778B JUMP JUMPDEST PUSH2 0x7705 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x120 DUP3 ADD PUSH1 0x0 DUP1 DUP4 ADD SLOAD SWAP1 POP PUSH2 0x77C8 DUP2 PUSH2 0x7633 JUMP JUMPDEST PUSH2 0x77D5 PUSH1 0x0 DUP7 ADD DUP3 PUSH2 0x764D JUMP JUMPDEST POP PUSH2 0x77DF DUP2 PUSH2 0x7669 JUMP JUMPDEST PUSH2 0x77EC PUSH1 0x20 DUP7 ADD DUP3 PUSH2 0x764D JUMP JUMPDEST POP PUSH2 0x77F6 DUP2 PUSH2 0x7690 JUMP JUMPDEST PUSH2 0x7803 PUSH1 0x40 DUP7 ADD DUP3 PUSH2 0x764D JUMP JUMPDEST POP PUSH2 0x780D DUP2 PUSH2 0x76B7 JUMP JUMPDEST PUSH2 0x781A PUSH1 0x60 DUP7 ADD DUP3 PUSH2 0x764D JUMP JUMPDEST POP PUSH2 0x7824 DUP2 PUSH2 0x76DE JUMP JUMPDEST PUSH2 0x7831 PUSH1 0x80 DUP7 ADD DUP3 PUSH2 0x764D JUMP JUMPDEST POP PUSH2 0x783B DUP2 PUSH2 0x7714 JUMP JUMPDEST PUSH2 0x7848 PUSH1 0xA0 DUP7 ADD DUP3 PUSH2 0x772E JUMP JUMPDEST POP PUSH2 0x7852 DUP2 PUSH2 0x774A JUMP JUMPDEST PUSH2 0x785F PUSH1 0xC0 DUP7 ADD DUP3 PUSH2 0x772E JUMP JUMPDEST POP PUSH2 0x7869 DUP2 PUSH2 0x7771 JUMP JUMPDEST PUSH2 0x7876 PUSH1 0xE0 DUP7 ADD DUP3 PUSH2 0x772E JUMP JUMPDEST POP PUSH2 0x7880 DUP2 PUSH2 0x7798 JUMP JUMPDEST PUSH2 0x788E PUSH2 0x100 DUP7 ADD DUP3 PUSH2 0x772E JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C0 DUP3 ADD SWAP1 POP PUSH2 0x78AB PUSH1 0x0 DUP4 ADD DUP10 PUSH2 0x6543 JUMP JUMPDEST PUSH2 0x78B8 PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x6562 JUMP JUMPDEST PUSH2 0x78C5 PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x6562 JUMP JUMPDEST PUSH2 0x78D2 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x6562 JUMP JUMPDEST PUSH2 0x78DF PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x6999 JUMP JUMPDEST PUSH2 0x78EC PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x77B2 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x790C PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x6796 JUMP JUMPDEST PUSH2 0x7919 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x6F51 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x7935 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x6562 JUMP JUMPDEST PUSH2 0x7942 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x6562 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7954 DUP3 PUSH2 0x668B JUMP JUMPDEST SWAP2 POP PUSH2 0x795F DUP4 PUSH2 0x668B JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x797F JUMPI PUSH2 0x797E PUSH2 0x754D JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x799A PUSH1 0x0 DUP4 ADD DUP10 PUSH2 0x681E JUMP JUMPDEST PUSH2 0x79A7 PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x681E JUMP JUMPDEST PUSH2 0x79B4 PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x6796 JUMP JUMPDEST PUSH2 0x79C1 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x6562 JUMP JUMPDEST PUSH2 0x79CE PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x6562 JUMP JUMPDEST PUSH2 0x79DB PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x6F51 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x79FB PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x681E JUMP JUMPDEST PUSH2 0x7A08 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x681E JUMP JUMPDEST PUSH2 0x7A15 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x6543 JUMP JUMPDEST PUSH2 0x7A22 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x6562 JUMP JUMPDEST PUSH2 0x7A2F PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x6562 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7A44 DUP3 PUSH2 0x6DCE JUMP JUMPDEST SWAP2 POP PUSH2 0x7A4F DUP4 PUSH2 0x6DCE JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x7A73 JUMPI PUSH2 0x7A72 PUSH2 0x754D JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7A94 PUSH2 0x7A8F PUSH2 0x7A8A DUP5 PUSH2 0x6DCE JUMP JUMPDEST PUSH2 0x6915 JUMP JUMPDEST PUSH2 0x6814 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7AA4 DUP2 PUSH2 0x7A79 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x7ABF PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x6F51 JUMP JUMPDEST PUSH2 0x7ACC PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x7A9B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x7ADC DUP2 PUSH2 0x74BF JUMP JUMPDEST DUP2 EQ PUSH2 0x7AE7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x7AF9 DUP2 PUSH2 0x7AD3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7B15 JUMPI PUSH2 0x7B14 PUSH2 0x6681 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x7B23 DUP5 DUP3 DUP6 ADD PUSH2 0x7AEA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4D7573742062652070726F706F736564206F776E657200000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7B62 PUSH1 0x16 DUP4 PUSH2 0x686E JUMP JUMPDEST SWAP2 POP PUSH2 0x7B6D DUP3 PUSH2 0x7B2C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x7B91 DUP2 PUSH2 0x7B55 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7BA3 DUP3 PUSH2 0x668B JUMP JUMPDEST SWAP2 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x7BBD JUMPI PUSH2 0x7BBC PUSH2 0x754D JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7BD3 DUP3 PUSH2 0x6DCE JUMP JUMPDEST SWAP2 POP PUSH2 0x7BDE DUP4 PUSH2 0x6DCE JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x7C02 JUMPI PUSH2 0x7C01 PUSH2 0x754D JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7C13 DUP3 PUSH2 0x6814 JUMP JUMPDEST SWAP2 POP PUSH2 0x7C1E DUP4 PUSH2 0x6814 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x7C36 JUMPI PUSH2 0x7C35 PUSH2 0x754D JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x7C51 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x681E JUMP JUMPDEST PUSH2 0x7C5E PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x681E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7C9A DUP2 PUSH2 0x6814 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7CAC DUP4 DUP4 PUSH2 0x7C91 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7CD0 DUP3 PUSH2 0x7C65 JUMP JUMPDEST PUSH2 0x7CDA DUP2 DUP6 PUSH2 0x7C70 JUMP JUMPDEST SWAP4 POP PUSH2 0x7CE5 DUP4 PUSH2 0x7C81 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x7D16 JUMPI DUP2 MLOAD PUSH2 0x7CFD DUP9 DUP3 PUSH2 0x7CA0 JUMP JUMPDEST SWAP8 POP PUSH2 0x7D08 DUP4 PUSH2 0x7CB8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x7CE9 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x7D38 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x681E JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x7D4A DUP2 DUP5 PUSH2 0x7CC5 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x7D68 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x681E JUMP JUMPDEST PUSH2 0x7D75 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x6F7B JUMP JUMPDEST PUSH2 0x7D82 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x74CB JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7DC0 DUP2 PUSH2 0x7D8A JUMP JUMPDEST PUSH2 0x7DCA DUP2 DUP5 PUSH2 0x7D95 JUMP JUMPDEST SWAP3 POP PUSH2 0x7DD5 DUP3 PUSH2 0x7DA0 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x7E06 JUMPI DUP2 MLOAD PUSH2 0x7DED DUP8 DUP3 PUSH2 0x7CA0 JUMP JUMPDEST SWAP7 POP PUSH2 0x7DF8 DUP4 PUSH2 0x7DAA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x7DD9 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x7E23 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x7DB7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x7E38 DUP2 PUSH2 0x6E8E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7E54 JUMPI PUSH2 0x7E53 PUSH2 0x6681 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x7E62 DUP5 DUP3 DUP6 ADD PUSH2 0x7E29 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x7E80 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x6F51 JUMP JUMPDEST PUSH2 0x7E8D PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x681E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4F6E6C792063616C6C61626C65206279206F776E657200000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7ECA PUSH1 0x16 DUP4 PUSH2 0x686E JUMP JUMPDEST SWAP2 POP PUSH2 0x7ED5 DUP3 PUSH2 0x7E94 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x7EF9 DUP2 PUSH2 0x7EBD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x7F15 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x6EE7 JUMP JUMPDEST PUSH2 0x7F22 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x6F51 JUMP JUMPDEST PUSH2 0x7F2F PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x6796 JUMP JUMPDEST PUSH2 0x7F3C PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x6796 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x7F5A PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x6EE7 JUMP JUMPDEST PUSH2 0x7F67 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x681E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x7F83 PUSH1 0x0 DUP4 ADD DUP10 PUSH2 0x681E JUMP JUMPDEST PUSH2 0x7F90 PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x6796 JUMP JUMPDEST PUSH2 0x7F9D PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x6796 JUMP JUMPDEST PUSH2 0x7FAA PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x6562 JUMP JUMPDEST PUSH2 0x7FB7 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x6562 JUMP JUMPDEST PUSH2 0x7FC4 PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x6F51 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7FEA PUSH2 0x7FE5 PUSH2 0x7FE0 DUP5 PUSH2 0x668B JUMP JUMPDEST PUSH2 0x6915 JUMP JUMPDEST PUSH2 0x6814 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7FFA DUP2 PUSH2 0x7FCF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x8015 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x7FF1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x802A DUP2 PUSH2 0x6C8B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8046 JUMPI PUSH2 0x8045 PUSH2 0x6681 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x8054 DUP5 DUP3 DUP6 ADD PUSH2 0x801B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8078 PUSH2 0x8073 DUP3 PUSH2 0x6814 JUMP JUMPDEST PUSH2 0x805D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8099 PUSH2 0x8094 DUP3 PUSH2 0x659D JUMP JUMPDEST PUSH2 0x807E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x80AB DUP3 DUP6 PUSH2 0x8067 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0x80BB DUP3 DUP5 PUSH2 0x8088 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x80D6 DUP3 PUSH2 0x6814 JUMP JUMPDEST SWAP2 POP PUSH2 0x80E1 DUP4 PUSH2 0x6814 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x80EF DUP2 PUSH2 0x6814 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x8106 JUMPI PUSH2 0x8105 PUSH2 0x754D JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x8147 DUP3 PUSH2 0x6814 JUMP JUMPDEST SWAP2 POP PUSH2 0x8152 DUP4 PUSH2 0x6814 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x8162 JUMPI PUSH2 0x8161 PUSH2 0x810D JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x43616E6E6F74207472616E7366657220746F2073656C66000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x81A3 PUSH1 0x17 DUP4 PUSH2 0x686E JUMP JUMPDEST SWAP2 POP PUSH2 0x81AE DUP3 PUSH2 0x816D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x81D2 DUP2 PUSH2 0x8196 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x81EE PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x681E JUMP JUMPDEST PUSH2 0x81FB PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x7DB7 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8221 DUP2 PUSH2 0x8202 JUMP JUMPDEST DUP2 EQ PUSH2 0x822C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x823E DUP2 PUSH2 0x8218 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x8253 DUP2 PUSH2 0x6A36 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x8275 JUMPI PUSH2 0x8274 PUSH2 0x6681 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x8283 DUP9 DUP3 DUP10 ADD PUSH2 0x822F JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x8294 DUP9 DUP3 DUP10 ADD PUSH2 0x8244 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x82A5 DUP9 DUP3 DUP10 ADD PUSH2 0x7E29 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x82B6 DUP9 DUP3 DUP10 ADD PUSH2 0x7E29 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x82C7 DUP9 DUP3 DUP10 ADD PUSH2 0x822F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH32 0x7075626C6963206B6579206973206E6F74206F6E206375727665000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x830A PUSH1 0x1A DUP4 PUSH2 0x686E JUMP JUMPDEST SWAP2 POP PUSH2 0x8315 DUP3 PUSH2 0x82D4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x8339 DUP2 PUSH2 0x82FD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x67616D6D61206973206E6F74206F6E2063757276650000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8376 PUSH1 0x15 DUP4 PUSH2 0x686E JUMP JUMPDEST SWAP2 POP PUSH2 0x8381 DUP3 PUSH2 0x8340 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x83A5 DUP2 PUSH2 0x8369 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x6347616D6D615769746E657373206973206E6F74206F6E206375727665000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x83E2 PUSH1 0x1D DUP4 PUSH2 0x686E JUMP JUMPDEST SWAP2 POP PUSH2 0x83ED DUP3 PUSH2 0x83AC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x8411 DUP2 PUSH2 0x83D5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x73486173685769746E657373206973206E6F74206F6E20637572766500000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x844E PUSH1 0x1C DUP4 PUSH2 0x686E JUMP JUMPDEST SWAP2 POP PUSH2 0x8459 DUP3 PUSH2 0x8418 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x847D DUP2 PUSH2 0x8441 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x6164647228632A706B2B732A6729213D5F755769746E65737300000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x84BA PUSH1 0x19 DUP4 PUSH2 0x686E JUMP JUMPDEST SWAP2 POP PUSH2 0x84C5 DUP3 PUSH2 0x8484 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x84E9 DUP2 PUSH2 0x84AD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x696E76616C69642070726F6F6600000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8526 PUSH1 0xD DUP4 PUSH2 0x686E JUMP JUMPDEST SWAP2 POP PUSH2 0x8531 DUP3 PUSH2 0x84F0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x8555 DUP2 PUSH2 0x8519 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x696E76616C696420782D6F7264696E6174650000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8592 PUSH1 0x12 DUP4 PUSH2 0x686E JUMP JUMPDEST SWAP2 POP PUSH2 0x859D DUP3 PUSH2 0x855C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x85C1 DUP2 PUSH2 0x8585 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x696E76616C696420792D6F7264696E6174650000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x85FE PUSH1 0x12 DUP4 PUSH2 0x686E JUMP JUMPDEST SWAP2 POP PUSH2 0x8609 DUP3 PUSH2 0x85C8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x862D DUP2 PUSH2 0x85F1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x626164207769746E657373000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x866A PUSH1 0xB DUP4 PUSH2 0x686E JUMP JUMPDEST SWAP2 POP PUSH2 0x8675 DUP3 PUSH2 0x8634 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x8699 DUP2 PUSH2 0x865D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x86B6 DUP2 PUSH2 0x86A0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x86D1 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x6EE7 JUMP JUMPDEST PUSH2 0x86DE PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x86AD JUMP JUMPDEST PUSH2 0x86EB PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x6EE7 JUMP JUMPDEST PUSH2 0x86F8 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x6EE7 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x8715 DUP2 PUSH2 0x6814 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8727 DUP4 DUP4 PUSH2 0x870C JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x873C DUP2 PUSH2 0x7D8A JUMP JUMPDEST PUSH2 0x8746 DUP2 DUP5 PUSH2 0x8701 JUMP JUMPDEST SWAP3 POP PUSH2 0x8751 DUP3 PUSH2 0x7DA0 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x8782 JUMPI DUP2 MLOAD PUSH2 0x8769 DUP8 DUP3 PUSH2 0x871B JUMP JUMPDEST SWAP7 POP PUSH2 0x8774 DUP4 PUSH2 0x7DAA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x8755 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8796 DUP3 DUP7 PUSH2 0x8067 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0x87A6 DUP3 DUP6 PUSH2 0x8733 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP2 POP PUSH2 0x87B6 DUP3 DUP5 PUSH2 0x8067 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x87D3 DUP3 DUP5 PUSH2 0x8067 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x706F696E747320696E2073756D206D7573742062652064697374696E63740000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8818 PUSH1 0x1E DUP4 PUSH2 0x686E JUMP JUMPDEST SWAP2 POP PUSH2 0x8823 DUP3 PUSH2 0x87E2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x8847 DUP2 PUSH2 0x880B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4669727374206D756C20636865636B206661696C656400000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8884 PUSH1 0x16 DUP4 PUSH2 0x686E JUMP JUMPDEST SWAP2 POP PUSH2 0x888F DUP3 PUSH2 0x884E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x88B3 DUP2 PUSH2 0x8877 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5365636F6E64206D756C20636865636B206661696C6564000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x88F0 PUSH1 0x17 DUP4 PUSH2 0x686E JUMP JUMPDEST SWAP2 POP PUSH2 0x88FB DUP3 PUSH2 0x88BA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x891F DUP2 PUSH2 0x88E3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x60 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x893E DUP3 PUSH2 0x8926 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8950 DUP3 PUSH2 0x8933 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8968 PUSH2 0x8963 DUP3 PUSH2 0x6718 JUMP JUMPDEST PUSH2 0x8945 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x897A DUP3 DUP10 PUSH2 0x8067 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0x898A DUP3 DUP9 PUSH2 0x8733 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP2 POP PUSH2 0x899A DUP3 DUP8 PUSH2 0x8733 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP2 POP PUSH2 0x89AA DUP3 DUP7 PUSH2 0x8733 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP2 POP PUSH2 0x89BA DUP3 DUP6 PUSH2 0x8733 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP2 POP PUSH2 0x89CA DUP3 DUP5 PUSH2 0x8957 JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x7A65726F207363616C6172000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8A14 PUSH1 0xB DUP4 PUSH2 0x686E JUMP JUMPDEST SWAP2 POP PUSH2 0x8A1F DUP3 PUSH2 0x89DE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x8A43 DUP2 PUSH2 0x8A07 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8A55 DUP3 PUSH2 0x6814 JUMP JUMPDEST SWAP2 POP PUSH2 0x8A60 DUP4 PUSH2 0x6814 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x8A70 JUMPI PUSH2 0x8A6F PUSH2 0x810D JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8A87 DUP3 DUP5 PUSH2 0x8733 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x696E765A206D75737420626520696E7665727365206F66207A00000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8ACC PUSH1 0x19 DUP4 PUSH2 0x686E JUMP JUMPDEST SWAP2 POP PUSH2 0x8AD7 DUP3 PUSH2 0x8A96 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x8AFB DUP2 PUSH2 0x8ABF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x6269674D6F64457870206661696C757265210000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8B38 PUSH1 0x12 DUP4 PUSH2 0x686E JUMP JUMPDEST SWAP2 POP PUSH2 0x8B43 DUP3 PUSH2 0x8B02 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x8B67 DUP2 PUSH2 0x8B2B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAE 0xB2 0xEB RETURN 0x4D PUSH25 0x56A1C2F760874E79174948D8C6C099509959247D8C45D121B5 INVALID PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"506:35771:18:-:0;;;7644:303;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7760:10;327:8:9;345:1;557::10;537:22;;:8;:22;;;529:59;;;;;;;;;;;;:::i;:::-;;;;;;;;;605:8;595:7;;:18;;;;;;;;;;;;;;;;;;647:1;623:26;;:12;:26;;;619:79;;659:32;678:12;659:18;;;:32;;:::i;:::-;619:79;471:231;;270:81:9;7808:4:18::1;7782:31;;;;;;;;::::0;::::1;7861:11;7823:50;;;;;;;;::::0;::::1;7925:14;7883:57;;;;;;;;::::0;::::1;7644:303:::0;;;506:35771;;1482:188:10;1550:10;1544:16;;:2;:16;;;1536:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;1612:2;1595:14;;:19;;;;;;;;;;;;;;;;;;1662:2;1626:39;;1653:7;;;;;;;;;;1626:39;;;;;;;;;;;;1482:188;:::o;88:117:20:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:663::-;933:6;941;949;998:2;986:9;977:7;973:23;969:32;966:119;;;1004:79;;:::i;:::-;966:119;1124:1;1149:64;1205:7;1196:6;1185:9;1181:22;1149:64;:::i;:::-;1139:74;;1095:128;1262:2;1288:64;1344:7;1335:6;1324:9;1320:22;1288:64;:::i;:::-;1278:74;;1233:129;1401:2;1427:64;1483:7;1474:6;1463:9;1459:22;1427:64;:::i;:::-;1417:74;;1372:129;845:663;;;;;:::o;1514:169::-;1598:11;1632:6;1627:3;1620:19;1672:4;1667:3;1663:14;1648:29;;1514:169;;;;:::o;1689:174::-;1829:26;1825:1;1817:6;1813:14;1806:50;1689:174;:::o;1869:366::-;2011:3;2032:67;2096:2;2091:3;2032:67;:::i;:::-;2025:74;;2108:93;2197:3;2108:93;:::i;:::-;2226:2;2221:3;2217:12;2210:19;;1869:366;;;:::o;2241:419::-;2407:4;2445:2;2434:9;2430:18;2422:26;;2494:9;2488:4;2484:20;2480:1;2469:9;2465:17;2458:47;2522:131;2648:4;2522:131;:::i;:::-;2514:139;;2241:419;;;:::o;2666:173::-;2806:25;2802:1;2794:6;2790:14;2783:49;2666:173;:::o;2845:366::-;2987:3;3008:67;3072:2;3067:3;3008:67;:::i;:::-;3001:74;;3084:93;3173:3;3084:93;:::i;:::-;3202:2;3197:3;3193:12;3186:19;;2845:366;;;:::o;3217:419::-;3383:4;3421:2;3410:9;3406:18;3398:26;;3470:9;3464:4;3460:20;3456:1;3445:9;3441:17;3434:47;3498:131;3624:4;3498:131;:::i;:::-;3490:139;;3217:419;;;:::o;506:35771:18:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@BLOCKHASH_STORE_2124":{"entryPoint":6541,"id":2124,"parameterSlots":0,"returnSlots":0},"@LINK_2118":{"entryPoint":3528,"id":2118,"parameterSlots":0,"returnSlots":0},"@LINK_ETH_FEED_2121":{"entryPoint":12983,"id":2121,"parameterSlots":0,"returnSlots":0},"@MAX_CONSUMERS_2127":{"entryPoint":5838,"id":2127,"parameterSlots":0,"returnSlots":0},"@MAX_NUM_WORDS_2254":{"entryPoint":3574,"id":2254,"parameterSlots":0,"returnSlots":0},"@MAX_REQUEST_CONFIRMATIONS_2251":{"entryPoint":3462,"id":2251,"parameterSlots":0,"returnSlots":0},"@_transferOwnership_567":{"entryPoint":19873,"id":567,"parameterSlots":1,"returnSlots":0},"@_validateOwnership_580":{"entryPoint":16864,"id":580,"parameterSlots":0,"returnSlots":0},"@acceptOwnership_533":{"entryPoint":8017,"id":533,"parameterSlots":0,"returnSlots":0},"@acceptSubscriptionOwnerTransfer_3986":{"entryPoint":8422,"id":3986,"parameterSlots":1,"returnSlots":0},"@addConsumer_4153":{"entryPoint":7052,"id":4153,"parameterSlots":2,"returnSlots":0},"@affineECAdd_1645":{"entryPoint":23813,"id":1645,"parameterSlots":3,"returnSlots":1},"@bigModExp_1026":{"entryPoint":24872,"id":1026,"parameterSlots":2,"returnSlots":1},"@calculatePaymentAmount_3581":{"entryPoint":19566,"id":3581,"parameterSlots":4,"returnSlots":1},"@callWithExactGas_3094":{"entryPoint":19489,"id":3094,"parameterSlots":3,"returnSlots":1},"@cancelSubscriptionHelper_4268":{"entryPoint":17008,"id":4268,"parameterSlots":2,"returnSlots":0},"@cancelSubscription_4181":{"entryPoint":15157,"id":4181,"parameterSlots":2,"returnSlots":0},"@computeRequestId_3078":{"entryPoint":18432,"id":3078,"parameterSlots":4,"returnSlots":2},"@createSubscription_3877":{"entryPoint":10746,"id":3877,"parameterSlots":0,"returnSlots":1},"@deregisterProvingKey_2593":{"entryPoint":2836,"id":2593,"parameterSlots":1,"returnSlots":0},"@ecmulVerify_1338":{"entryPoint":23406,"id":1338,"parameterSlots":3,"returnSlots":1},"@fieldHash_1151":{"entryPoint":24193,"id":1151,"parameterSlots":1,"returnSlots":1},"@fulfillRandomWords_3494":{"entryPoint":13019,"id":3494,"parameterSlots":2,"returnSlots":1},"@getBlockNumber_116":{"entryPoint":18546,"id":116,"parameterSlots":0,"returnSlots":1},"@getBlockhash_89":{"entryPoint":20173,"id":89,"parameterSlots":1,"returnSlots":1},"@getCommitment_3034":{"entryPoint":6577,"id":3034,"parameterSlots":1,"returnSlots":1},"@getConfig_2700":{"entryPoint":14362,"id":2700,"parameterSlots":0,"returnSlots":4},"@getCurrentSubId_3769":{"entryPoint":2806,"id":3769,"parameterSlots":0,"returnSlots":1},"@getCurrentTxL1GasFees_142":{"entryPoint":20805,"id":142,"parameterSlots":0,"returnSlots":1},"@getFallbackWeiPerUnitLink_2758":{"entryPoint":3564,"id":2758,"parameterSlots":0,"returnSlots":1},"@getFeeConfig_2742":{"entryPoint":5601,"id":2742,"parameterSlots":0,"returnSlots":9},"@getFeeTier_3316":{"entryPoint":14516,"id":3316,"parameterSlots":1,"returnSlots":1},"@getFeedData_3628":{"entryPoint":20552,"id":3628,"parameterSlots":0,"returnSlots":1},"@getRandomnessFromProof_3245":{"entryPoint":18703,"id":3245,"parameterSlots":2,"returnSlots":3},"@getRequestConfig_2868":{"entryPoint":1720,"id":2868,"parameterSlots":0,"returnSlots":3},"@getSubscription_3818":{"entryPoint":11553,"id":3818,"parameterSlots":1,"returnSlots":4},"@getTotalBalance_2750":{"entryPoint":3414,"id":2750,"parameterSlots":0,"returnSlots":1},"@hashOfKey_2611":{"entryPoint":14468,"id":2611,"parameterSlots":1,"returnSlots":1},"@hashToCurve_1246":{"entryPoint":22382,"id":1246,"parameterSlots":2,"returnSlots":1},"@isOnCurve_1117":{"entryPoint":21456,"id":1117,"parameterSlots":1,"returnSlots":1},"@linearCombination_1804":{"entryPoint":22528,"id":1804,"parameterSlots":7,"returnSlots":1},"@newCandidateSecp256k1Point_1201":{"entryPoint":23147,"id":1201,"parameterSlots":1,"returnSlots":1},"@onTokenTransfer_3761":{"entryPoint":12134,"id":3761,"parameterSlots":4,"returnSlots":0},"@oracleWithdraw_3671":{"entryPoint":5843,"id":3671,"parameterSlots":2,"returnSlots":0},"@ownerCancelSubscription_2789":{"entryPoint":1862,"id":2789,"parameterSlots":1,"returnSlots":0},"@owner_543":{"entryPoint":9294,"id":543,"parameterSlots":0,"returnSlots":1},"@pendingRequestExists_4344":{"entryPoint":16134,"id":4344,"parameterSlots":1,"returnSlots":1},"@projectiveECAdd_1575":{"entryPoint":24369,"id":1575,"parameterSlots":4,"returnSlots":3},"@projectiveMul_1421":{"entryPoint":25223,"id":1421,"parameterSlots":4,"returnSlots":2},"@projectiveSub_1389":{"entryPoint":25343,"id":1389,"parameterSlots":4,"returnSlots":2},"@randomValueFromVRFProof_2034":{"entryPoint":20443,"id":2034,"parameterSlots":2,"returnSlots":1},"@recoverFunds_2848":{"entryPoint":15605,"id":2848,"parameterSlots":1,"returnSlots":0},"@registerProvingKey_2508":{"entryPoint":6606,"id":2508,"parameterSlots":2,"returnSlots":0},"@removeConsumer_4095":{"entryPoint":9335,"id":4095,"parameterSlots":2,"returnSlots":0},"@requestRandomWords_3021":{"entryPoint":4424,"id":3021,"parameterSlots":5,"returnSlots":1},"@requestSubscriptionOwnerTransfer_3914":{"entryPoint":2133,"id":3914,"parameterSlots":2,"returnSlots":0},"@scalarFromCurvePoints_1846":{"entryPoint":22918,"id":1846,"parameterSlots":5,"returnSlots":1},"@setConfig_2678":{"entryPoint":3580,"id":2678,"parameterSlots":6,"returnSlots":0},"@squareRoot_1047":{"entryPoint":24302,"id":1047,"parameterSlots":1,"returnSlots":1},"@transferOwnership_497":{"entryPoint":16844,"id":497,"parameterSlots":1,"returnSlots":0},"@typeAndVersion_4399":{"entryPoint":3467,"id":4399,"parameterSlots":0,"returnSlots":1},"@verifyLinearCombinationWithGenerator_1732":{"entryPoint":21841,"id":1732,"parameterSlots":4,"returnSlots":1},"@verifyVRFProof_1959":{"entryPoint":20963,"id":1959,"parameterSlots":9,"returnSlots":0},"@ySquared_1073":{"entryPoint":22984,"id":1073,"parameterSlots":1,"returnSlots":1},"abi_decode_available_length_t_array$_t_uint256_$2_memory_ptr":{"entryPoint":29130,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":26433,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_array$_t_uint256_$2_calldata_ptr":{"entryPoint":26565,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_array$_t_uint256_$2_memory_ptr":{"entryPoint":29226,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool_fromMemory":{"entryPoint":31466,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32":{"entryPoint":27810,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32_fromMemory":{"entryPoint":32795,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_calldata_ptr":{"entryPoint":28830,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_t_int256":{"entryPoint":27213,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_int256_fromMemory":{"entryPoint":33348,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_struct$_FeeConfig_$2411_memory_ptr":{"entryPoint":27421,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_struct$_Proof_$1989_memory_ptr":{"entryPoint":29269,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_struct$_RequestCommitment_$2318_memory_ptr":{"entryPoint":29495,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint16":{"entryPoint":27125,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint24":{"entryPoint":27400,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":28325,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":32297,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint32":{"entryPoint":27169,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint64":{"entryPoint":26294,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint80_fromMemory":{"entryPoint":33327,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint96":{"entryPoint":28157,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":29842,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_array$_t_uint256_$2_calldata_ptr":{"entryPoint":28433,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256t_bytes_calldata_ptr":{"entryPoint":28916,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_addresst_uint96":{"entryPoint":28178,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_array$_t_uint256_$2_calldata_ptr":{"entryPoint":26599,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_array$_t_uint256_$2_memory_ptr":{"entryPoint":29797,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":31487,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32_fromMemory":{"entryPoint":32816,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32t_uint64t_uint16t_uint32t_uint32":{"entryPoint":27831,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_struct$_Proof_$1989_memory_ptrt_struct$_RequestCommitment_$2318_memory_ptr":{"entryPoint":29635,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint16t_uint32t_uint32t_uint32t_int256t_struct$_FeeConfig_$2411_memory_ptr":{"entryPoint":27645,"id":null,"parameterSlots":2,"returnSlots":6},"abi_decode_tuple_t_uint256":{"entryPoint":28346,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":32318,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint64":{"entryPoint":26315,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint64t_address":{"entryPoint":26454,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory":{"entryPoint":33369,"id":null,"parameterSlots":2,"returnSlots":5},"abi_encodeUpdatedPos_t_address_to_t_address":{"entryPoint":28613,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_t_bytes32_to_t_bytes32":{"entryPoint":26038,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_t_uint256_to_t_uint256":{"entryPoint":31904,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_t_uint256_to_t_uint256_inplace":{"entryPoint":34587,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address":{"entryPoint":28598,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":28497,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack":{"entryPoint":35159,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack":{"entryPoint":28650,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_array$_t_bytes32_$dyn_memory_ptr_to_t_array$_t_bytes32_$dyn_memory_ptr_fromStack":{"entryPoint":26075,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_array$_t_uint256_$2_memory_ptr_to_t_array$_t_uint256_$2_memory_ptr_fromStack":{"entryPoint":32183,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_array$_t_uint256_$2_memory_ptr_to_t_array$_t_uint256_$2_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":34611,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack":{"entryPoint":31941,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":29899,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32":{"entryPoint":26023,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":28391,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack":{"entryPoint":32904,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_contract$_AggregatorV3Interface_$293_to_t_address_fromStack":{"entryPoint":29050,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_contract$_BlockhashStoreInterface_$303_to_t_address_fromStack":{"entryPoint":28260,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_contract$_LinkTokenInterface_$712_to_t_address_fromStack":{"entryPoint":26981,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_int256_to_t_int256_fromStack":{"entryPoint":27033,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":26810,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c_to_t_string_memory_ptr_fromStack":{"entryPoint":31573,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_13447e9fa8630e4bb2fa50f1493aa790167933f55263568ac4ad74cb4d138234_to_t_string_memory_ptr_fromStack":{"entryPoint":35043,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_2ce93c410880bb13bca91831655ee36bc7ab052e7c8cb24dd914165b1030eeca_to_t_string_memory_ptr_fromStack":{"entryPoint":34827,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3_to_t_string_memory_ptr_fromStack":{"entryPoint":32445,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_4bd695d9be776d24ba6aaa6ea48a189f388adfd8a5e6a1df7bd6471290ea4e5f_to_t_string_memory_ptr_fromStack":{"entryPoint":35627,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_787cf99fb194dba922561b5b1fd0b18a6a49c57eaa01d9c5279f2b2a5bdc1a86_to_t_string_memory_ptr_fromStack":{"entryPoint":34181,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_7fcbfa9df9f83be5218dd62480bcb5cdae56a970e549b88ff2403f5fcded9211_to_t_string_memory_ptr_fromStack":{"entryPoint":34397,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_897d9ab785e875f3b83c51a39f09c2f6a852e06c26e3faf90359e5ad589f8cf1_to_t_string_memory_ptr_fromStack":{"entryPoint":33965,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_95046d93d9b2e6ba778cd180e8c682e7d907547386cb54bf80bca322c50144ca_to_t_string_memory_ptr_fromStack":{"entryPoint":35519,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_9f90959a5b25997fe56cdafc2f72d300e298468f5ac5e847db7890be22108d2b_to_t_string_memory_ptr_fromStack":{"entryPoint":33749,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_ae4825d6ed8aab0513e68c27d2710aa68bcf110761c187d047951a5ec2580d8c_to_t_string_memory_ptr_fromStack":{"entryPoint":33533,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c6038a70864418dbffbd772a49c391c3536f6b633b3f2ccbcd6a6e15dbadd34c_to_t_string_memory_ptr_fromStack":{"entryPoint":33641,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_cfa179d50ad7851ac140a84fb212f48699dbd00170b3afe087b0d09f632d1624_to_t_string_memory_ptr_fromStack":{"entryPoint":34073,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack":{"entryPoint":33174,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_d9cf4c09fcc6ead19e539ee3210816df98f1219b8b47e830620ffd543bfea51f_to_t_string_memory_ptr_fromStack":{"entryPoint":34935,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_e71e9381bf8fff7d9eeee436d182c3c8b982b1d416953f4ca9ccf572989baeca_to_t_string_memory_ptr_fromStack":{"entryPoint":35335,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_ecc598139057476f7e46578e2e254b173afe0910225980583669989d2a737f84_to_t_string_memory_ptr_fromStack":{"entryPoint":34289,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_ff425c3ce65530e49c0c35a5fdd7a61b00545f1fcc6482c28903cdcf48ac624f_to_t_string_memory_ptr_fromStack":{"entryPoint":33857,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_struct$_FeeConfig_$2411_storage_to_t_struct$_FeeConfig_$2411_memory_ptr_fromStack":{"entryPoint":30642,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint16_to_t_uint16_fromStack":{"entryPoint":25923,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint24_to_t_uint24":{"entryPoint":30510,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint24_to_t_uint24_fromStack":{"entryPoint":27954,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256":{"entryPoint":31889,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":26654,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_inplace":{"entryPoint":34572,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack":{"entryPoint":32871,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint32_to_t_uint32":{"entryPoint":30285,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint32_to_t_uint32_fromStack":{"entryPoint":25954,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint64_to_t_uint256_fromStack":{"entryPoint":32753,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint64_to_t_uint64_fromStack":{"entryPoint":26518,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint8_to_t_uint8_fromStack":{"entryPoint":34477,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint96_to_t_uint256_fromStack":{"entryPoint":31387,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint96_to_t_uint96_fromStack":{"entryPoint":28539,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_array$_t_uint256_$2_memory_ptr__to_t_array$_t_uint256_$2_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":35451,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_uint256__to_t_uint256__nonPadded_inplace_fromStack_reversed":{"entryPoint":34759,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_uint256_t_array$_t_uint256_$2_memory_ptr_t_array$_t_uint256_$2_memory_ptr_t_array$_t_uint256_$2_memory_ptr_t_array$_t_uint256_$2_memory_ptr_t_address__to_t_uint256_t_array$_t_uint256_$2_memory_ptr_t_array$_t_uint256_$2_memory_ptr_t_array$_t_uint256_$2_memory_ptr_t_array$_t_uint256_$2_memory_ptr_t_address__nonPadded_inplace_fromStack_reversed":{"entryPoint":35182,"id":null,"parameterSlots":7,"returnSlots":1},"abi_encode_tuple_packed_t_uint256_t_array$_t_uint256_$2_memory_ptr_t_uint256__to_t_uint256_t_array$_t_uint256_$2_memory_ptr_t_uint256__nonPadded_inplace_fromStack_reversed":{"entryPoint":34698,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_packed_t_uint256_t_bytes32__to_t_uint256_t_bytes32__nonPadded_inplace_fromStack_reversed":{"entryPoint":32927,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":28512,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed":{"entryPoint":29941,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":32363,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint96__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":31402,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_array$_t_uint256_$2_memory_ptr__to_t_array$_t_uint256_$2_memory_ptr__fromStack_reversed":{"entryPoint":32270,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":29914,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":28406,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_address_t_uint64_t_uint64__to_t_bytes32_t_address_t_uint64_t_uint64__fromStack_reversed":{"entryPoint":32512,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_uint256__to_t_bytes32_t_uint256__fromStack_reversed":{"entryPoint":32581,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed":{"entryPoint":34492,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_contract$_AggregatorV3Interface_$293__to_t_address__fromStack_reversed":{"entryPoint":29065,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_BlockhashStoreInterface_$303__to_t_address__fromStack_reversed":{"entryPoint":28275,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_LinkTokenInterface_$712__to_t_address__fromStack_reversed":{"entryPoint":26996,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed":{"entryPoint":27048,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":26867,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":31608,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_13447e9fa8630e4bb2fa50f1493aa790167933f55263568ac4ad74cb4d138234__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":35078,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_2ce93c410880bb13bca91831655ee36bc7ab052e7c8cb24dd914165b1030eeca__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":34862,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":32480,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4bd695d9be776d24ba6aaa6ea48a189f388adfd8a5e6a1df7bd6471290ea4e5f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":35662,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_787cf99fb194dba922561b5b1fd0b18a6a49c57eaa01d9c5279f2b2a5bdc1a86__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":34216,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_7fcbfa9df9f83be5218dd62480bcb5cdae56a970e549b88ff2403f5fcded9211__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":34432,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_897d9ab785e875f3b83c51a39f09c2f6a852e06c26e3faf90359e5ad589f8cf1__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":34000,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_95046d93d9b2e6ba778cd180e8c682e7d907547386cb54bf80bca322c50144ca__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":35554,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9f90959a5b25997fe56cdafc2f72d300e298468f5ac5e847db7890be22108d2b__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":33784,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_ae4825d6ed8aab0513e68c27d2710aa68bcf110761c187d047951a5ec2580d8c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":33568,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c6038a70864418dbffbd772a49c391c3536f6b633b3f2ccbcd6a6e15dbadd34c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":33676,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_cfa179d50ad7851ac140a84fb212f48699dbd00170b3afe087b0d09f632d1624__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":34108,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":33209,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d9cf4c09fcc6ead19e539ee3210816df98f1219b8b47e830620ffd543bfea51f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":34970,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_e71e9381bf8fff7d9eeee436d182c3c8b982b1d416953f4ca9ccf572989baeca__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":35370,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_ecc598139057476f7e46578e2e254b173afe0910225980583669989d2a737f84__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":34324,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_ff425c3ce65530e49c0c35a5fdd7a61b00545f1fcc6482c28903cdcf48ac624f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":33892,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed":{"entryPoint":26696,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint16_t_uint16_t_uint16__to_t_uint16_t_uint16_t_uint16__fromStack_reversed":{"entryPoint":30175,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_uint16_t_uint32_t_array$_t_bytes32_$dyn_memory_ptr__to_t_uint16_t_uint32_t_array$_t_bytes32_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":26169,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_uint16_t_uint32_t_uint32_t_uint32__to_t_uint16_t_uint32_t_uint32_t_uint32__fromStack_reversed":{"entryPoint":29728,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_uint16_t_uint32_t_uint32_t_uint32_t_int256_t_struct$_FeeConfig_$2411_storage__to_t_uint16_t_uint32_t_uint32_t_uint32_t_int256_t_struct$_FeeConfig_$2411_memory_ptr__fromStack_reversed":{"entryPoint":30869,"id":null,"parameterSlots":7,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":26669,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_array$_t_uint256_$2_memory_ptr__to_t_uint256_t_array$_t_uint256_$2_memory_ptr__fromStack_reversed":{"entryPoint":33241,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint256_t_array$_t_uint256_$dyn_memory_ptr__to_t_uint256_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":32035,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":31804,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256_t_uint16_t_uint32_t_uint32__to_t_uint256_t_uint256_t_uint16_t_uint32_t_uint32__fromStack_reversed":{"entryPoint":31206,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256_t_uint64_t_uint32_t_uint32_t_address__to_t_uint256_t_uint256_t_uint64_t_uint32_t_uint32_t_address__fromStack_reversed":{"entryPoint":31109,"id":null,"parameterSlots":7,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint64_t_uint64_t_uint32_t_uint32_t_address__to_t_uint256_t_uint64_t_uint64_t_uint32_t_uint32_t_address__fromStack_reversed":{"entryPoint":32622,"id":null,"parameterSlots":7,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint96_t_bool__to_t_uint256_t_uint96_t_bool__fromStack_reversed":{"entryPoint":32083,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed":{"entryPoint":27075,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint32_t_uint32__to_t_uint32_t_uint32__fromStack_reversed":{"entryPoint":31008,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint32_t_uint32_t_uint32_t_uint32_t_uint32_t_uint24_t_uint24_t_uint24_t_uint24__to_t_uint32_t_uint32_t_uint32_t_uint32_t_uint32_t_uint24_t_uint24_t_uint24_t_uint24__fromStack_reversed":{"entryPoint":27969,"id":null,"parameterSlots":10,"returnSlots":1},"abi_encode_tuple_t_uint64__to_t_uint256__fromStack_reversed":{"entryPoint":32768,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed":{"entryPoint":26533,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint64_t_address__to_t_uint64_t_address__fromStack_reversed":{"entryPoint":30967,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint96__to_t_uint96__fromStack_reversed":{"entryPoint":29701,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint96_t_uint64_t_address_t_array$_t_address_$dyn_memory_ptr__to_t_uint96_t_uint64_t_address_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":28744,"id":null,"parameterSlots":5,"returnSlots":1},"allocate_memory":{"entryPoint":27335,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":26231,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_array$_t_uint256_$2_memory_ptr":{"entryPoint":29092,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_address_$dyn_memory_ptr":{"entryPoint":28582,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_bytes32_$dyn_memory_ptr":{"entryPoint":25997,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_uint256_$2_memory_ptr":{"entryPoint":32160,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":31873,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_address_$dyn_memory_ptr":{"entryPoint":28554,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_bytes32_$dyn_memory_ptr":{"entryPoint":25969,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_uint256_$2_memory_ptr":{"entryPoint":32138,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":31845,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":26723,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_address_$dyn_memory_ptr":{"entryPoint":28637,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_bytes32_$dyn_memory_ptr":{"entryPoint":26062,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_uint256_$2_memory_ptr":{"entryPoint":32170,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":31928,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack":{"entryPoint":28565,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_bytes32_$dyn_memory_ptr_fromStack":{"entryPoint":25980,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_uint256_$2_memory_ptr_fromStack":{"entryPoint":32149,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_uint256_$2_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":34561,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack":{"entryPoint":31856,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":26734,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":31752,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint64":{"entryPoint":31049,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint96":{"entryPoint":31688,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":33084,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":32971,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":30076,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint96":{"entryPoint":31289,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_from_storage_t_uint24":{"entryPoint":30469,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_from_storage_t_uint32":{"entryPoint":30243,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_address":{"entryPoint":26392,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":29887,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":26013,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_int256":{"entryPoint":27023,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint16":{"entryPoint":25909,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":26360,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint24":{"entryPoint":27362,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":26644,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint32":{"entryPoint":25938,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint64":{"entryPoint":26251,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":34464,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint80":{"entryPoint":33282,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint96":{"entryPoint":28110,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_contract$_AggregatorV3Interface_$293_to_t_address":{"entryPoint":29032,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_contract$_BlockhashStoreInterface_$303_to_t_address":{"entryPoint":28242,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_contract$_LinkTokenInterface_$712_to_t_address":{"entryPoint":26963,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_address":{"entryPoint":26945,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_uint160":{"entryPoint":26911,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint64_to_t_uint256":{"entryPoint":32719,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint96_to_t_uint256":{"entryPoint":31353,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":26751,"id":null,"parameterSlots":3,"returnSlots":0},"extract_from_storage_value_offset_0t_uint32":{"entryPoint":30259,"id":null,"parameterSlots":1,"returnSlots":1},"extract_from_storage_value_offset_12t_uint32":{"entryPoint":30391,"id":null,"parameterSlots":1,"returnSlots":1},"extract_from_storage_value_offset_16t_uint32":{"entryPoint":30430,"id":null,"parameterSlots":1,"returnSlots":1},"extract_from_storage_value_offset_20t_uint24":{"entryPoint":30484,"id":null,"parameterSlots":1,"returnSlots":1},"extract_from_storage_value_offset_23t_uint24":{"entryPoint":30538,"id":null,"parameterSlots":1,"returnSlots":1},"extract_from_storage_value_offset_26t_uint24":{"entryPoint":30577,"id":null,"parameterSlots":1,"returnSlots":1},"extract_from_storage_value_offset_29t_uint24":{"entryPoint":30616,"id":null,"parameterSlots":1,"returnSlots":1},"extract_from_storage_value_offset_4t_uint32":{"entryPoint":30313,"id":null,"parameterSlots":1,"returnSlots":1},"extract_from_storage_value_offset_8t_uint32":{"entryPoint":30352,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":27286,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":26901,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint64":{"entryPoint":31640,"id":null,"parameterSlots":1,"returnSlots":1},"leftAlign_t_address":{"entryPoint":35141,"id":null,"parameterSlots":1,"returnSlots":1},"leftAlign_t_bytes32":{"entryPoint":32894,"id":null,"parameterSlots":1,"returnSlots":1},"leftAlign_t_uint160":{"entryPoint":35123,"id":null,"parameterSlots":1,"returnSlots":1},"leftAlign_t_uint256":{"entryPoint":32861,"id":null,"parameterSlots":1,"returnSlots":1},"mod_t_uint256":{"entryPoint":35402,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":30029,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":33037,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x31":{"entryPoint":30128,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":29982,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":27239,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490":{"entryPoint":28825,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":28820,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f":{"entryPoint":27234,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":26560,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":26246,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":26241,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":26793,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_96":{"entryPoint":35110,"id":null,"parameterSlots":1,"returnSlots":1},"shift_right_0_unsigned":{"entryPoint":30230,"id":null,"parameterSlots":1,"returnSlots":1},"shift_right_128_unsigned":{"entryPoint":30417,"id":null,"parameterSlots":1,"returnSlots":1},"shift_right_160_unsigned":{"entryPoint":30456,"id":null,"parameterSlots":1,"returnSlots":1},"shift_right_184_unsigned":{"entryPoint":30525,"id":null,"parameterSlots":1,"returnSlots":1},"shift_right_208_unsigned":{"entryPoint":30564,"id":null,"parameterSlots":1,"returnSlots":1},"shift_right_232_unsigned":{"entryPoint":30603,"id":null,"parameterSlots":1,"returnSlots":1},"shift_right_32_unsigned":{"entryPoint":30300,"id":null,"parameterSlots":1,"returnSlots":1},"shift_right_64_unsigned":{"entryPoint":30339,"id":null,"parameterSlots":1,"returnSlots":1},"shift_right_96_unsigned":{"entryPoint":30378,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c":{"entryPoint":31532,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_13447e9fa8630e4bb2fa50f1493aa790167933f55263568ac4ad74cb4d138234":{"entryPoint":35002,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_2ce93c410880bb13bca91831655ee36bc7ab052e7c8cb24dd914165b1030eeca":{"entryPoint":34786,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3":{"entryPoint":32404,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_4bd695d9be776d24ba6aaa6ea48a189f388adfd8a5e6a1df7bd6471290ea4e5f":{"entryPoint":35586,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_787cf99fb194dba922561b5b1fd0b18a6a49c57eaa01d9c5279f2b2a5bdc1a86":{"entryPoint":34140,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_7fcbfa9df9f83be5218dd62480bcb5cdae56a970e549b88ff2403f5fcded9211":{"entryPoint":34356,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_897d9ab785e875f3b83c51a39f09c2f6a852e06c26e3faf90359e5ad589f8cf1":{"entryPoint":33924,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_95046d93d9b2e6ba778cd180e8c682e7d907547386cb54bf80bca322c50144ca":{"entryPoint":35478,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_9f90959a5b25997fe56cdafc2f72d300e298468f5ac5e847db7890be22108d2b":{"entryPoint":33708,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_ae4825d6ed8aab0513e68c27d2710aa68bcf110761c187d047951a5ec2580d8c":{"entryPoint":33492,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c6038a70864418dbffbd772a49c391c3536f6b633b3f2ccbcd6a6e15dbadd34c":{"entryPoint":33600,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_cfa179d50ad7851ac140a84fb212f48699dbd00170b3afe087b0d09f632d1624":{"entryPoint":34032,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2":{"entryPoint":33133,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_d9cf4c09fcc6ead19e539ee3210816df98f1219b8b47e830620ffd543bfea51f":{"entryPoint":34894,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_e71e9381bf8fff7d9eeee436d182c3c8b982b1d416953f4ca9ccf572989baeca":{"entryPoint":35294,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_ecc598139057476f7e46578e2e254b173afe0910225980583669989d2a737f84":{"entryPoint":34248,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_ff425c3ce65530e49c0c35a5fdd7a61b00545f1fcc6482c28903cdcf48ac624f":{"entryPoint":33816,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":26410,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":31443,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes32":{"entryPoint":27787,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_int256":{"entryPoint":27190,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint16":{"entryPoint":27102,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint24":{"entryPoint":27377,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":28302,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint32":{"entryPoint":27146,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint64":{"entryPoint":26271,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint80":{"entryPoint":33304,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint96":{"entryPoint":28134,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:78263:20","nodeType":"YulBlock","src":"0:78263:20","statements":[{"body":{"nativeSrc":"51:45:20","nodeType":"YulBlock","src":"51:45:20","statements":[{"nativeSrc":"61:29:20","nodeType":"YulAssignment","src":"61:29:20","value":{"arguments":[{"name":"value","nativeSrc":"76:5:20","nodeType":"YulIdentifier","src":"76:5:20"},{"kind":"number","nativeSrc":"83:6:20","nodeType":"YulLiteral","src":"83:6:20","type":"","value":"0xffff"}],"functionName":{"name":"and","nativeSrc":"72:3:20","nodeType":"YulIdentifier","src":"72:3:20"},"nativeSrc":"72:18:20","nodeType":"YulFunctionCall","src":"72:18:20"},"variableNames":[{"name":"cleaned","nativeSrc":"61:7:20","nodeType":"YulIdentifier","src":"61:7:20"}]}]},"name":"cleanup_t_uint16","nativeSrc":"7:89:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"33:5:20","nodeType":"YulTypedName","src":"33:5:20","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"43:7:20","nodeType":"YulTypedName","src":"43:7:20","type":""}],"src":"7:89:20"},{"body":{"nativeSrc":"165:52:20","nodeType":"YulBlock","src":"165:52:20","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"182:3:20","nodeType":"YulIdentifier","src":"182:3:20"},{"arguments":[{"name":"value","nativeSrc":"204:5:20","nodeType":"YulIdentifier","src":"204:5:20"}],"functionName":{"name":"cleanup_t_uint16","nativeSrc":"187:16:20","nodeType":"YulIdentifier","src":"187:16:20"},"nativeSrc":"187:23:20","nodeType":"YulFunctionCall","src":"187:23:20"}],"functionName":{"name":"mstore","nativeSrc":"175:6:20","nodeType":"YulIdentifier","src":"175:6:20"},"nativeSrc":"175:36:20","nodeType":"YulFunctionCall","src":"175:36:20"},"nativeSrc":"175:36:20","nodeType":"YulExpressionStatement","src":"175:36:20"}]},"name":"abi_encode_t_uint16_to_t_uint16_fromStack","nativeSrc":"102:115:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"153:5:20","nodeType":"YulTypedName","src":"153:5:20","type":""},{"name":"pos","nativeSrc":"160:3:20","nodeType":"YulTypedName","src":"160:3:20","type":""}],"src":"102:115:20"},{"body":{"nativeSrc":"267:49:20","nodeType":"YulBlock","src":"267:49:20","statements":[{"nativeSrc":"277:33:20","nodeType":"YulAssignment","src":"277:33:20","value":{"arguments":[{"name":"value","nativeSrc":"292:5:20","nodeType":"YulIdentifier","src":"292:5:20"},{"kind":"number","nativeSrc":"299:10:20","nodeType":"YulLiteral","src":"299:10:20","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nativeSrc":"288:3:20","nodeType":"YulIdentifier","src":"288:3:20"},"nativeSrc":"288:22:20","nodeType":"YulFunctionCall","src":"288:22:20"},"variableNames":[{"name":"cleaned","nativeSrc":"277:7:20","nodeType":"YulIdentifier","src":"277:7:20"}]}]},"name":"cleanup_t_uint32","nativeSrc":"223:93:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"249:5:20","nodeType":"YulTypedName","src":"249:5:20","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"259:7:20","nodeType":"YulTypedName","src":"259:7:20","type":""}],"src":"223:93:20"},{"body":{"nativeSrc":"385:52:20","nodeType":"YulBlock","src":"385:52:20","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"402:3:20","nodeType":"YulIdentifier","src":"402:3:20"},{"arguments":[{"name":"value","nativeSrc":"424:5:20","nodeType":"YulIdentifier","src":"424:5:20"}],"functionName":{"name":"cleanup_t_uint32","nativeSrc":"407:16:20","nodeType":"YulIdentifier","src":"407:16:20"},"nativeSrc":"407:23:20","nodeType":"YulFunctionCall","src":"407:23:20"}],"functionName":{"name":"mstore","nativeSrc":"395:6:20","nodeType":"YulIdentifier","src":"395:6:20"},"nativeSrc":"395:36:20","nodeType":"YulFunctionCall","src":"395:36:20"},"nativeSrc":"395:36:20","nodeType":"YulExpressionStatement","src":"395:36:20"}]},"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nativeSrc":"322:115:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"373:5:20","nodeType":"YulTypedName","src":"373:5:20","type":""},{"name":"pos","nativeSrc":"380:3:20","nodeType":"YulTypedName","src":"380:3:20","type":""}],"src":"322:115:20"},{"body":{"nativeSrc":"517:40:20","nodeType":"YulBlock","src":"517:40:20","statements":[{"nativeSrc":"528:22:20","nodeType":"YulAssignment","src":"528:22:20","value":{"arguments":[{"name":"value","nativeSrc":"544:5:20","nodeType":"YulIdentifier","src":"544:5:20"}],"functionName":{"name":"mload","nativeSrc":"538:5:20","nodeType":"YulIdentifier","src":"538:5:20"},"nativeSrc":"538:12:20","nodeType":"YulFunctionCall","src":"538:12:20"},"variableNames":[{"name":"length","nativeSrc":"528:6:20","nodeType":"YulIdentifier","src":"528:6:20"}]}]},"name":"array_length_t_array$_t_bytes32_$dyn_memory_ptr","nativeSrc":"443:114:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"500:5:20","nodeType":"YulTypedName","src":"500:5:20","type":""}],"returnVariables":[{"name":"length","nativeSrc":"510:6:20","nodeType":"YulTypedName","src":"510:6:20","type":""}],"src":"443:114:20"},{"body":{"nativeSrc":"674:73:20","nodeType":"YulBlock","src":"674:73:20","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"691:3:20","nodeType":"YulIdentifier","src":"691:3:20"},{"name":"length","nativeSrc":"696:6:20","nodeType":"YulIdentifier","src":"696:6:20"}],"functionName":{"name":"mstore","nativeSrc":"684:6:20","nodeType":"YulIdentifier","src":"684:6:20"},"nativeSrc":"684:19:20","nodeType":"YulFunctionCall","src":"684:19:20"},"nativeSrc":"684:19:20","nodeType":"YulExpressionStatement","src":"684:19:20"},{"nativeSrc":"712:29:20","nodeType":"YulAssignment","src":"712:29:20","value":{"arguments":[{"name":"pos","nativeSrc":"731:3:20","nodeType":"YulIdentifier","src":"731:3:20"},{"kind":"number","nativeSrc":"736:4:20","nodeType":"YulLiteral","src":"736:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"727:3:20","nodeType":"YulIdentifier","src":"727:3:20"},"nativeSrc":"727:14:20","nodeType":"YulFunctionCall","src":"727:14:20"},"variableNames":[{"name":"updated_pos","nativeSrc":"712:11:20","nodeType":"YulIdentifier","src":"712:11:20"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_bytes32_$dyn_memory_ptr_fromStack","nativeSrc":"563:184:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"646:3:20","nodeType":"YulTypedName","src":"646:3:20","type":""},{"name":"length","nativeSrc":"651:6:20","nodeType":"YulTypedName","src":"651:6:20","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"662:11:20","nodeType":"YulTypedName","src":"662:11:20","type":""}],"src":"563:184:20"},{"body":{"nativeSrc":"825:60:20","nodeType":"YulBlock","src":"825:60:20","statements":[{"nativeSrc":"835:11:20","nodeType":"YulAssignment","src":"835:11:20","value":{"name":"ptr","nativeSrc":"843:3:20","nodeType":"YulIdentifier","src":"843:3:20"},"variableNames":[{"name":"data","nativeSrc":"835:4:20","nodeType":"YulIdentifier","src":"835:4:20"}]},{"nativeSrc":"856:22:20","nodeType":"YulAssignment","src":"856:22:20","value":{"arguments":[{"name":"ptr","nativeSrc":"868:3:20","nodeType":"YulIdentifier","src":"868:3:20"},{"kind":"number","nativeSrc":"873:4:20","nodeType":"YulLiteral","src":"873:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"864:3:20","nodeType":"YulIdentifier","src":"864:3:20"},"nativeSrc":"864:14:20","nodeType":"YulFunctionCall","src":"864:14:20"},"variableNames":[{"name":"data","nativeSrc":"856:4:20","nodeType":"YulIdentifier","src":"856:4:20"}]}]},"name":"array_dataslot_t_array$_t_bytes32_$dyn_memory_ptr","nativeSrc":"753:132:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"812:3:20","nodeType":"YulTypedName","src":"812:3:20","type":""}],"returnVariables":[{"name":"data","nativeSrc":"820:4:20","nodeType":"YulTypedName","src":"820:4:20","type":""}],"src":"753:132:20"},{"body":{"nativeSrc":"936:32:20","nodeType":"YulBlock","src":"936:32:20","statements":[{"nativeSrc":"946:16:20","nodeType":"YulAssignment","src":"946:16:20","value":{"name":"value","nativeSrc":"957:5:20","nodeType":"YulIdentifier","src":"957:5:20"},"variableNames":[{"name":"cleaned","nativeSrc":"946:7:20","nodeType":"YulIdentifier","src":"946:7:20"}]}]},"name":"cleanup_t_bytes32","nativeSrc":"891:77:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"918:5:20","nodeType":"YulTypedName","src":"918:5:20","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"928:7:20","nodeType":"YulTypedName","src":"928:7:20","type":""}],"src":"891:77:20"},{"body":{"nativeSrc":"1029:53:20","nodeType":"YulBlock","src":"1029:53:20","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"1046:3:20","nodeType":"YulIdentifier","src":"1046:3:20"},{"arguments":[{"name":"value","nativeSrc":"1069:5:20","nodeType":"YulIdentifier","src":"1069:5:20"}],"functionName":{"name":"cleanup_t_bytes32","nativeSrc":"1051:17:20","nodeType":"YulIdentifier","src":"1051:17:20"},"nativeSrc":"1051:24:20","nodeType":"YulFunctionCall","src":"1051:24:20"}],"functionName":{"name":"mstore","nativeSrc":"1039:6:20","nodeType":"YulIdentifier","src":"1039:6:20"},"nativeSrc":"1039:37:20","nodeType":"YulFunctionCall","src":"1039:37:20"},"nativeSrc":"1039:37:20","nodeType":"YulExpressionStatement","src":"1039:37:20"}]},"name":"abi_encode_t_bytes32_to_t_bytes32","nativeSrc":"974:108:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1017:5:20","nodeType":"YulTypedName","src":"1017:5:20","type":""},{"name":"pos","nativeSrc":"1024:3:20","nodeType":"YulTypedName","src":"1024:3:20","type":""}],"src":"974:108:20"},{"body":{"nativeSrc":"1168:99:20","nodeType":"YulBlock","src":"1168:99:20","statements":[{"expression":{"arguments":[{"name":"value0","nativeSrc":"1212:6:20","nodeType":"YulIdentifier","src":"1212:6:20"},{"name":"pos","nativeSrc":"1220:3:20","nodeType":"YulIdentifier","src":"1220:3:20"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32","nativeSrc":"1178:33:20","nodeType":"YulIdentifier","src":"1178:33:20"},"nativeSrc":"1178:46:20","nodeType":"YulFunctionCall","src":"1178:46:20"},"nativeSrc":"1178:46:20","nodeType":"YulExpressionStatement","src":"1178:46:20"},{"nativeSrc":"1233:28:20","nodeType":"YulAssignment","src":"1233:28:20","value":{"arguments":[{"name":"pos","nativeSrc":"1251:3:20","nodeType":"YulIdentifier","src":"1251:3:20"},{"kind":"number","nativeSrc":"1256:4:20","nodeType":"YulLiteral","src":"1256:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1247:3:20","nodeType":"YulIdentifier","src":"1247:3:20"},"nativeSrc":"1247:14:20","nodeType":"YulFunctionCall","src":"1247:14:20"},"variableNames":[{"name":"updatedPos","nativeSrc":"1233:10:20","nodeType":"YulIdentifier","src":"1233:10:20"}]}]},"name":"abi_encodeUpdatedPos_t_bytes32_to_t_bytes32","nativeSrc":"1088:179:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nativeSrc":"1141:6:20","nodeType":"YulTypedName","src":"1141:6:20","type":""},{"name":"pos","nativeSrc":"1149:3:20","nodeType":"YulTypedName","src":"1149:3:20","type":""}],"returnVariables":[{"name":"updatedPos","nativeSrc":"1157:10:20","nodeType":"YulTypedName","src":"1157:10:20","type":""}],"src":"1088:179:20"},{"body":{"nativeSrc":"1348:38:20","nodeType":"YulBlock","src":"1348:38:20","statements":[{"nativeSrc":"1358:22:20","nodeType":"YulAssignment","src":"1358:22:20","value":{"arguments":[{"name":"ptr","nativeSrc":"1370:3:20","nodeType":"YulIdentifier","src":"1370:3:20"},{"kind":"number","nativeSrc":"1375:4:20","nodeType":"YulLiteral","src":"1375:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1366:3:20","nodeType":"YulIdentifier","src":"1366:3:20"},"nativeSrc":"1366:14:20","nodeType":"YulFunctionCall","src":"1366:14:20"},"variableNames":[{"name":"next","nativeSrc":"1358:4:20","nodeType":"YulIdentifier","src":"1358:4:20"}]}]},"name":"array_nextElement_t_array$_t_bytes32_$dyn_memory_ptr","nativeSrc":"1273:113:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"1335:3:20","nodeType":"YulTypedName","src":"1335:3:20","type":""}],"returnVariables":[{"name":"next","nativeSrc":"1343:4:20","nodeType":"YulTypedName","src":"1343:4:20","type":""}],"src":"1273:113:20"},{"body":{"nativeSrc":"1546:608:20","nodeType":"YulBlock","src":"1546:608:20","statements":[{"nativeSrc":"1556:68:20","nodeType":"YulVariableDeclaration","src":"1556:68:20","value":{"arguments":[{"name":"value","nativeSrc":"1618:5:20","nodeType":"YulIdentifier","src":"1618:5:20"}],"functionName":{"name":"array_length_t_array$_t_bytes32_$dyn_memory_ptr","nativeSrc":"1570:47:20","nodeType":"YulIdentifier","src":"1570:47:20"},"nativeSrc":"1570:54:20","nodeType":"YulFunctionCall","src":"1570:54:20"},"variables":[{"name":"length","nativeSrc":"1560:6:20","nodeType":"YulTypedName","src":"1560:6:20","type":""}]},{"nativeSrc":"1633:93:20","nodeType":"YulAssignment","src":"1633:93:20","value":{"arguments":[{"name":"pos","nativeSrc":"1714:3:20","nodeType":"YulIdentifier","src":"1714:3:20"},{"name":"length","nativeSrc":"1719:6:20","nodeType":"YulIdentifier","src":"1719:6:20"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_bytes32_$dyn_memory_ptr_fromStack","nativeSrc":"1640:73:20","nodeType":"YulIdentifier","src":"1640:73:20"},"nativeSrc":"1640:86:20","nodeType":"YulFunctionCall","src":"1640:86:20"},"variableNames":[{"name":"pos","nativeSrc":"1633:3:20","nodeType":"YulIdentifier","src":"1633:3:20"}]},{"nativeSrc":"1735:71:20","nodeType":"YulVariableDeclaration","src":"1735:71:20","value":{"arguments":[{"name":"value","nativeSrc":"1800:5:20","nodeType":"YulIdentifier","src":"1800:5:20"}],"functionName":{"name":"array_dataslot_t_array$_t_bytes32_$dyn_memory_ptr","nativeSrc":"1750:49:20","nodeType":"YulIdentifier","src":"1750:49:20"},"nativeSrc":"1750:56:20","nodeType":"YulFunctionCall","src":"1750:56:20"},"variables":[{"name":"baseRef","nativeSrc":"1739:7:20","nodeType":"YulTypedName","src":"1739:7:20","type":""}]},{"nativeSrc":"1815:21:20","nodeType":"YulVariableDeclaration","src":"1815:21:20","value":{"name":"baseRef","nativeSrc":"1829:7:20","nodeType":"YulIdentifier","src":"1829:7:20"},"variables":[{"name":"srcPtr","nativeSrc":"1819:6:20","nodeType":"YulTypedName","src":"1819:6:20","type":""}]},{"body":{"nativeSrc":"1905:224:20","nodeType":"YulBlock","src":"1905:224:20","statements":[{"nativeSrc":"1919:34:20","nodeType":"YulVariableDeclaration","src":"1919:34:20","value":{"arguments":[{"name":"srcPtr","nativeSrc":"1946:6:20","nodeType":"YulIdentifier","src":"1946:6:20"}],"functionName":{"name":"mload","nativeSrc":"1940:5:20","nodeType":"YulIdentifier","src":"1940:5:20"},"nativeSrc":"1940:13:20","nodeType":"YulFunctionCall","src":"1940:13:20"},"variables":[{"name":"elementValue0","nativeSrc":"1923:13:20","nodeType":"YulTypedName","src":"1923:13:20","type":""}]},{"nativeSrc":"1966:70:20","nodeType":"YulAssignment","src":"1966:70:20","value":{"arguments":[{"name":"elementValue0","nativeSrc":"2017:13:20","nodeType":"YulIdentifier","src":"2017:13:20"},{"name":"pos","nativeSrc":"2032:3:20","nodeType":"YulIdentifier","src":"2032:3:20"}],"functionName":{"name":"abi_encodeUpdatedPos_t_bytes32_to_t_bytes32","nativeSrc":"1973:43:20","nodeType":"YulIdentifier","src":"1973:43:20"},"nativeSrc":"1973:63:20","nodeType":"YulFunctionCall","src":"1973:63:20"},"variableNames":[{"name":"pos","nativeSrc":"1966:3:20","nodeType":"YulIdentifier","src":"1966:3:20"}]},{"nativeSrc":"2049:70:20","nodeType":"YulAssignment","src":"2049:70:20","value":{"arguments":[{"name":"srcPtr","nativeSrc":"2112:6:20","nodeType":"YulIdentifier","src":"2112:6:20"}],"functionName":{"name":"array_nextElement_t_array$_t_bytes32_$dyn_memory_ptr","nativeSrc":"2059:52:20","nodeType":"YulIdentifier","src":"2059:52:20"},"nativeSrc":"2059:60:20","nodeType":"YulFunctionCall","src":"2059:60:20"},"variableNames":[{"name":"srcPtr","nativeSrc":"2049:6:20","nodeType":"YulIdentifier","src":"2049:6:20"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"1867:1:20","nodeType":"YulIdentifier","src":"1867:1:20"},{"name":"length","nativeSrc":"1870:6:20","nodeType":"YulIdentifier","src":"1870:6:20"}],"functionName":{"name":"lt","nativeSrc":"1864:2:20","nodeType":"YulIdentifier","src":"1864:2:20"},"nativeSrc":"1864:13:20","nodeType":"YulFunctionCall","src":"1864:13:20"},"nativeSrc":"1845:284:20","nodeType":"YulForLoop","post":{"nativeSrc":"1878:18:20","nodeType":"YulBlock","src":"1878:18:20","statements":[{"nativeSrc":"1880:14:20","nodeType":"YulAssignment","src":"1880:14:20","value":{"arguments":[{"name":"i","nativeSrc":"1889:1:20","nodeType":"YulIdentifier","src":"1889:1:20"},{"kind":"number","nativeSrc":"1892:1:20","nodeType":"YulLiteral","src":"1892:1:20","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"1885:3:20","nodeType":"YulIdentifier","src":"1885:3:20"},"nativeSrc":"1885:9:20","nodeType":"YulFunctionCall","src":"1885:9:20"},"variableNames":[{"name":"i","nativeSrc":"1880:1:20","nodeType":"YulIdentifier","src":"1880:1:20"}]}]},"pre":{"nativeSrc":"1849:14:20","nodeType":"YulBlock","src":"1849:14:20","statements":[{"nativeSrc":"1851:10:20","nodeType":"YulVariableDeclaration","src":"1851:10:20","value":{"kind":"number","nativeSrc":"1860:1:20","nodeType":"YulLiteral","src":"1860:1:20","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"1855:1:20","nodeType":"YulTypedName","src":"1855:1:20","type":""}]}]},"src":"1845:284:20"},{"nativeSrc":"2138:10:20","nodeType":"YulAssignment","src":"2138:10:20","value":{"name":"pos","nativeSrc":"2145:3:20","nodeType":"YulIdentifier","src":"2145:3:20"},"variableNames":[{"name":"end","nativeSrc":"2138:3:20","nodeType":"YulIdentifier","src":"2138:3:20"}]}]},"name":"abi_encode_t_array$_t_bytes32_$dyn_memory_ptr_to_t_array$_t_bytes32_$dyn_memory_ptr_fromStack","nativeSrc":"1422:732:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1525:5:20","nodeType":"YulTypedName","src":"1525:5:20","type":""},{"name":"pos","nativeSrc":"1532:3:20","nodeType":"YulTypedName","src":"1532:3:20","type":""}],"returnVariables":[{"name":"end","nativeSrc":"1541:3:20","nodeType":"YulTypedName","src":"1541:3:20","type":""}],"src":"1422:732:20"},{"body":{"nativeSrc":"2360:385:20","nodeType":"YulBlock","src":"2360:385:20","statements":[{"nativeSrc":"2370:26:20","nodeType":"YulAssignment","src":"2370:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"2382:9:20","nodeType":"YulIdentifier","src":"2382:9:20"},{"kind":"number","nativeSrc":"2393:2:20","nodeType":"YulLiteral","src":"2393:2:20","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"2378:3:20","nodeType":"YulIdentifier","src":"2378:3:20"},"nativeSrc":"2378:18:20","nodeType":"YulFunctionCall","src":"2378:18:20"},"variableNames":[{"name":"tail","nativeSrc":"2370:4:20","nodeType":"YulIdentifier","src":"2370:4:20"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"2448:6:20","nodeType":"YulIdentifier","src":"2448:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"2461:9:20","nodeType":"YulIdentifier","src":"2461:9:20"},{"kind":"number","nativeSrc":"2472:1:20","nodeType":"YulLiteral","src":"2472:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"2457:3:20","nodeType":"YulIdentifier","src":"2457:3:20"},"nativeSrc":"2457:17:20","nodeType":"YulFunctionCall","src":"2457:17:20"}],"functionName":{"name":"abi_encode_t_uint16_to_t_uint16_fromStack","nativeSrc":"2406:41:20","nodeType":"YulIdentifier","src":"2406:41:20"},"nativeSrc":"2406:69:20","nodeType":"YulFunctionCall","src":"2406:69:20"},"nativeSrc":"2406:69:20","nodeType":"YulExpressionStatement","src":"2406:69:20"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"2527:6:20","nodeType":"YulIdentifier","src":"2527:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"2540:9:20","nodeType":"YulIdentifier","src":"2540:9:20"},{"kind":"number","nativeSrc":"2551:2:20","nodeType":"YulLiteral","src":"2551:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2536:3:20","nodeType":"YulIdentifier","src":"2536:3:20"},"nativeSrc":"2536:18:20","nodeType":"YulFunctionCall","src":"2536:18:20"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nativeSrc":"2485:41:20","nodeType":"YulIdentifier","src":"2485:41:20"},"nativeSrc":"2485:70:20","nodeType":"YulFunctionCall","src":"2485:70:20"},"nativeSrc":"2485:70:20","nodeType":"YulExpressionStatement","src":"2485:70:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2576:9:20","nodeType":"YulIdentifier","src":"2576:9:20"},{"kind":"number","nativeSrc":"2587:2:20","nodeType":"YulLiteral","src":"2587:2:20","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"2572:3:20","nodeType":"YulIdentifier","src":"2572:3:20"},"nativeSrc":"2572:18:20","nodeType":"YulFunctionCall","src":"2572:18:20"},{"arguments":[{"name":"tail","nativeSrc":"2596:4:20","nodeType":"YulIdentifier","src":"2596:4:20"},{"name":"headStart","nativeSrc":"2602:9:20","nodeType":"YulIdentifier","src":"2602:9:20"}],"functionName":{"name":"sub","nativeSrc":"2592:3:20","nodeType":"YulIdentifier","src":"2592:3:20"},"nativeSrc":"2592:20:20","nodeType":"YulFunctionCall","src":"2592:20:20"}],"functionName":{"name":"mstore","nativeSrc":"2565:6:20","nodeType":"YulIdentifier","src":"2565:6:20"},"nativeSrc":"2565:48:20","nodeType":"YulFunctionCall","src":"2565:48:20"},"nativeSrc":"2565:48:20","nodeType":"YulExpressionStatement","src":"2565:48:20"},{"nativeSrc":"2622:116:20","nodeType":"YulAssignment","src":"2622:116:20","value":{"arguments":[{"name":"value2","nativeSrc":"2724:6:20","nodeType":"YulIdentifier","src":"2724:6:20"},{"name":"tail","nativeSrc":"2733:4:20","nodeType":"YulIdentifier","src":"2733:4:20"}],"functionName":{"name":"abi_encode_t_array$_t_bytes32_$dyn_memory_ptr_to_t_array$_t_bytes32_$dyn_memory_ptr_fromStack","nativeSrc":"2630:93:20","nodeType":"YulIdentifier","src":"2630:93:20"},"nativeSrc":"2630:108:20","nodeType":"YulFunctionCall","src":"2630:108:20"},"variableNames":[{"name":"tail","nativeSrc":"2622:4:20","nodeType":"YulIdentifier","src":"2622:4:20"}]}]},"name":"abi_encode_tuple_t_uint16_t_uint32_t_array$_t_bytes32_$dyn_memory_ptr__to_t_uint16_t_uint32_t_array$_t_bytes32_$dyn_memory_ptr__fromStack_reversed","nativeSrc":"2160:585:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2316:9:20","nodeType":"YulTypedName","src":"2316:9:20","type":""},{"name":"value2","nativeSrc":"2328:6:20","nodeType":"YulTypedName","src":"2328:6:20","type":""},{"name":"value1","nativeSrc":"2336:6:20","nodeType":"YulTypedName","src":"2336:6:20","type":""},{"name":"value0","nativeSrc":"2344:6:20","nodeType":"YulTypedName","src":"2344:6:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2355:4:20","nodeType":"YulTypedName","src":"2355:4:20","type":""}],"src":"2160:585:20"},{"body":{"nativeSrc":"2791:35:20","nodeType":"YulBlock","src":"2791:35:20","statements":[{"nativeSrc":"2801:19:20","nodeType":"YulAssignment","src":"2801:19:20","value":{"arguments":[{"kind":"number","nativeSrc":"2817:2:20","nodeType":"YulLiteral","src":"2817:2:20","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"2811:5:20","nodeType":"YulIdentifier","src":"2811:5:20"},"nativeSrc":"2811:9:20","nodeType":"YulFunctionCall","src":"2811:9:20"},"variableNames":[{"name":"memPtr","nativeSrc":"2801:6:20","nodeType":"YulIdentifier","src":"2801:6:20"}]}]},"name":"allocate_unbounded","nativeSrc":"2751:75:20","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"2784:6:20","nodeType":"YulTypedName","src":"2784:6:20","type":""}],"src":"2751:75:20"},{"body":{"nativeSrc":"2921:28:20","nodeType":"YulBlock","src":"2921:28:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2938:1:20","nodeType":"YulLiteral","src":"2938:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"2941:1:20","nodeType":"YulLiteral","src":"2941:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2931:6:20","nodeType":"YulIdentifier","src":"2931:6:20"},"nativeSrc":"2931:12:20","nodeType":"YulFunctionCall","src":"2931:12:20"},"nativeSrc":"2931:12:20","nodeType":"YulExpressionStatement","src":"2931:12:20"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"2832:117:20","nodeType":"YulFunctionDefinition","src":"2832:117:20"},{"body":{"nativeSrc":"3044:28:20","nodeType":"YulBlock","src":"3044:28:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3061:1:20","nodeType":"YulLiteral","src":"3061:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"3064:1:20","nodeType":"YulLiteral","src":"3064:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3054:6:20","nodeType":"YulIdentifier","src":"3054:6:20"},"nativeSrc":"3054:12:20","nodeType":"YulFunctionCall","src":"3054:12:20"},"nativeSrc":"3054:12:20","nodeType":"YulExpressionStatement","src":"3054:12:20"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"2955:117:20","nodeType":"YulFunctionDefinition","src":"2955:117:20"},{"body":{"nativeSrc":"3122:57:20","nodeType":"YulBlock","src":"3122:57:20","statements":[{"nativeSrc":"3132:41:20","nodeType":"YulAssignment","src":"3132:41:20","value":{"arguments":[{"name":"value","nativeSrc":"3147:5:20","nodeType":"YulIdentifier","src":"3147:5:20"},{"kind":"number","nativeSrc":"3154:18:20","nodeType":"YulLiteral","src":"3154:18:20","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"3143:3:20","nodeType":"YulIdentifier","src":"3143:3:20"},"nativeSrc":"3143:30:20","nodeType":"YulFunctionCall","src":"3143:30:20"},"variableNames":[{"name":"cleaned","nativeSrc":"3132:7:20","nodeType":"YulIdentifier","src":"3132:7:20"}]}]},"name":"cleanup_t_uint64","nativeSrc":"3078:101:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3104:5:20","nodeType":"YulTypedName","src":"3104:5:20","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"3114:7:20","nodeType":"YulTypedName","src":"3114:7:20","type":""}],"src":"3078:101:20"},{"body":{"nativeSrc":"3227:78:20","nodeType":"YulBlock","src":"3227:78:20","statements":[{"body":{"nativeSrc":"3283:16:20","nodeType":"YulBlock","src":"3283:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3292:1:20","nodeType":"YulLiteral","src":"3292:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"3295:1:20","nodeType":"YulLiteral","src":"3295:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3285:6:20","nodeType":"YulIdentifier","src":"3285:6:20"},"nativeSrc":"3285:12:20","nodeType":"YulFunctionCall","src":"3285:12:20"},"nativeSrc":"3285:12:20","nodeType":"YulExpressionStatement","src":"3285:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"3250:5:20","nodeType":"YulIdentifier","src":"3250:5:20"},{"arguments":[{"name":"value","nativeSrc":"3274:5:20","nodeType":"YulIdentifier","src":"3274:5:20"}],"functionName":{"name":"cleanup_t_uint64","nativeSrc":"3257:16:20","nodeType":"YulIdentifier","src":"3257:16:20"},"nativeSrc":"3257:23:20","nodeType":"YulFunctionCall","src":"3257:23:20"}],"functionName":{"name":"eq","nativeSrc":"3247:2:20","nodeType":"YulIdentifier","src":"3247:2:20"},"nativeSrc":"3247:34:20","nodeType":"YulFunctionCall","src":"3247:34:20"}],"functionName":{"name":"iszero","nativeSrc":"3240:6:20","nodeType":"YulIdentifier","src":"3240:6:20"},"nativeSrc":"3240:42:20","nodeType":"YulFunctionCall","src":"3240:42:20"},"nativeSrc":"3237:62:20","nodeType":"YulIf","src":"3237:62:20"}]},"name":"validator_revert_t_uint64","nativeSrc":"3185:120:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3220:5:20","nodeType":"YulTypedName","src":"3220:5:20","type":""}],"src":"3185:120:20"},{"body":{"nativeSrc":"3362:86:20","nodeType":"YulBlock","src":"3362:86:20","statements":[{"nativeSrc":"3372:29:20","nodeType":"YulAssignment","src":"3372:29:20","value":{"arguments":[{"name":"offset","nativeSrc":"3394:6:20","nodeType":"YulIdentifier","src":"3394:6:20"}],"functionName":{"name":"calldataload","nativeSrc":"3381:12:20","nodeType":"YulIdentifier","src":"3381:12:20"},"nativeSrc":"3381:20:20","nodeType":"YulFunctionCall","src":"3381:20:20"},"variableNames":[{"name":"value","nativeSrc":"3372:5:20","nodeType":"YulIdentifier","src":"3372:5:20"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"3436:5:20","nodeType":"YulIdentifier","src":"3436:5:20"}],"functionName":{"name":"validator_revert_t_uint64","nativeSrc":"3410:25:20","nodeType":"YulIdentifier","src":"3410:25:20"},"nativeSrc":"3410:32:20","nodeType":"YulFunctionCall","src":"3410:32:20"},"nativeSrc":"3410:32:20","nodeType":"YulExpressionStatement","src":"3410:32:20"}]},"name":"abi_decode_t_uint64","nativeSrc":"3311:137:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"3340:6:20","nodeType":"YulTypedName","src":"3340:6:20","type":""},{"name":"end","nativeSrc":"3348:3:20","nodeType":"YulTypedName","src":"3348:3:20","type":""}],"returnVariables":[{"name":"value","nativeSrc":"3356:5:20","nodeType":"YulTypedName","src":"3356:5:20","type":""}],"src":"3311:137:20"},{"body":{"nativeSrc":"3519:262:20","nodeType":"YulBlock","src":"3519:262:20","statements":[{"body":{"nativeSrc":"3565:83:20","nodeType":"YulBlock","src":"3565:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"3567:77:20","nodeType":"YulIdentifier","src":"3567:77:20"},"nativeSrc":"3567:79:20","nodeType":"YulFunctionCall","src":"3567:79:20"},"nativeSrc":"3567:79:20","nodeType":"YulExpressionStatement","src":"3567:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"3540:7:20","nodeType":"YulIdentifier","src":"3540:7:20"},{"name":"headStart","nativeSrc":"3549:9:20","nodeType":"YulIdentifier","src":"3549:9:20"}],"functionName":{"name":"sub","nativeSrc":"3536:3:20","nodeType":"YulIdentifier","src":"3536:3:20"},"nativeSrc":"3536:23:20","nodeType":"YulFunctionCall","src":"3536:23:20"},{"kind":"number","nativeSrc":"3561:2:20","nodeType":"YulLiteral","src":"3561:2:20","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"3532:3:20","nodeType":"YulIdentifier","src":"3532:3:20"},"nativeSrc":"3532:32:20","nodeType":"YulFunctionCall","src":"3532:32:20"},"nativeSrc":"3529:119:20","nodeType":"YulIf","src":"3529:119:20"},{"nativeSrc":"3658:116:20","nodeType":"YulBlock","src":"3658:116:20","statements":[{"nativeSrc":"3673:15:20","nodeType":"YulVariableDeclaration","src":"3673:15:20","value":{"kind":"number","nativeSrc":"3687:1:20","nodeType":"YulLiteral","src":"3687:1:20","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"3677:6:20","nodeType":"YulTypedName","src":"3677:6:20","type":""}]},{"nativeSrc":"3702:62:20","nodeType":"YulAssignment","src":"3702:62:20","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3736:9:20","nodeType":"YulIdentifier","src":"3736:9:20"},{"name":"offset","nativeSrc":"3747:6:20","nodeType":"YulIdentifier","src":"3747:6:20"}],"functionName":{"name":"add","nativeSrc":"3732:3:20","nodeType":"YulIdentifier","src":"3732:3:20"},"nativeSrc":"3732:22:20","nodeType":"YulFunctionCall","src":"3732:22:20"},{"name":"dataEnd","nativeSrc":"3756:7:20","nodeType":"YulIdentifier","src":"3756:7:20"}],"functionName":{"name":"abi_decode_t_uint64","nativeSrc":"3712:19:20","nodeType":"YulIdentifier","src":"3712:19:20"},"nativeSrc":"3712:52:20","nodeType":"YulFunctionCall","src":"3712:52:20"},"variableNames":[{"name":"value0","nativeSrc":"3702:6:20","nodeType":"YulIdentifier","src":"3702:6:20"}]}]}]},"name":"abi_decode_tuple_t_uint64","nativeSrc":"3454:327:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3489:9:20","nodeType":"YulTypedName","src":"3489:9:20","type":""},{"name":"dataEnd","nativeSrc":"3500:7:20","nodeType":"YulTypedName","src":"3500:7:20","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"3512:6:20","nodeType":"YulTypedName","src":"3512:6:20","type":""}],"src":"3454:327:20"},{"body":{"nativeSrc":"3832:81:20","nodeType":"YulBlock","src":"3832:81:20","statements":[{"nativeSrc":"3842:65:20","nodeType":"YulAssignment","src":"3842:65:20","value":{"arguments":[{"name":"value","nativeSrc":"3857:5:20","nodeType":"YulIdentifier","src":"3857:5:20"},{"kind":"number","nativeSrc":"3864:42:20","nodeType":"YulLiteral","src":"3864:42:20","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"3853:3:20","nodeType":"YulIdentifier","src":"3853:3:20"},"nativeSrc":"3853:54:20","nodeType":"YulFunctionCall","src":"3853:54:20"},"variableNames":[{"name":"cleaned","nativeSrc":"3842:7:20","nodeType":"YulIdentifier","src":"3842:7:20"}]}]},"name":"cleanup_t_uint160","nativeSrc":"3787:126:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3814:5:20","nodeType":"YulTypedName","src":"3814:5:20","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"3824:7:20","nodeType":"YulTypedName","src":"3824:7:20","type":""}],"src":"3787:126:20"},{"body":{"nativeSrc":"3964:51:20","nodeType":"YulBlock","src":"3964:51:20","statements":[{"nativeSrc":"3974:35:20","nodeType":"YulAssignment","src":"3974:35:20","value":{"arguments":[{"name":"value","nativeSrc":"4003:5:20","nodeType":"YulIdentifier","src":"4003:5:20"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"3985:17:20","nodeType":"YulIdentifier","src":"3985:17:20"},"nativeSrc":"3985:24:20","nodeType":"YulFunctionCall","src":"3985:24:20"},"variableNames":[{"name":"cleaned","nativeSrc":"3974:7:20","nodeType":"YulIdentifier","src":"3974:7:20"}]}]},"name":"cleanup_t_address","nativeSrc":"3919:96:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3946:5:20","nodeType":"YulTypedName","src":"3946:5:20","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"3956:7:20","nodeType":"YulTypedName","src":"3956:7:20","type":""}],"src":"3919:96:20"},{"body":{"nativeSrc":"4064:79:20","nodeType":"YulBlock","src":"4064:79:20","statements":[{"body":{"nativeSrc":"4121:16:20","nodeType":"YulBlock","src":"4121:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4130:1:20","nodeType":"YulLiteral","src":"4130:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"4133:1:20","nodeType":"YulLiteral","src":"4133:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"4123:6:20","nodeType":"YulIdentifier","src":"4123:6:20"},"nativeSrc":"4123:12:20","nodeType":"YulFunctionCall","src":"4123:12:20"},"nativeSrc":"4123:12:20","nodeType":"YulExpressionStatement","src":"4123:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"4087:5:20","nodeType":"YulIdentifier","src":"4087:5:20"},{"arguments":[{"name":"value","nativeSrc":"4112:5:20","nodeType":"YulIdentifier","src":"4112:5:20"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"4094:17:20","nodeType":"YulIdentifier","src":"4094:17:20"},"nativeSrc":"4094:24:20","nodeType":"YulFunctionCall","src":"4094:24:20"}],"functionName":{"name":"eq","nativeSrc":"4084:2:20","nodeType":"YulIdentifier","src":"4084:2:20"},"nativeSrc":"4084:35:20","nodeType":"YulFunctionCall","src":"4084:35:20"}],"functionName":{"name":"iszero","nativeSrc":"4077:6:20","nodeType":"YulIdentifier","src":"4077:6:20"},"nativeSrc":"4077:43:20","nodeType":"YulFunctionCall","src":"4077:43:20"},"nativeSrc":"4074:63:20","nodeType":"YulIf","src":"4074:63:20"}]},"name":"validator_revert_t_address","nativeSrc":"4021:122:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4057:5:20","nodeType":"YulTypedName","src":"4057:5:20","type":""}],"src":"4021:122:20"},{"body":{"nativeSrc":"4201:87:20","nodeType":"YulBlock","src":"4201:87:20","statements":[{"nativeSrc":"4211:29:20","nodeType":"YulAssignment","src":"4211:29:20","value":{"arguments":[{"name":"offset","nativeSrc":"4233:6:20","nodeType":"YulIdentifier","src":"4233:6:20"}],"functionName":{"name":"calldataload","nativeSrc":"4220:12:20","nodeType":"YulIdentifier","src":"4220:12:20"},"nativeSrc":"4220:20:20","nodeType":"YulFunctionCall","src":"4220:20:20"},"variableNames":[{"name":"value","nativeSrc":"4211:5:20","nodeType":"YulIdentifier","src":"4211:5:20"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"4276:5:20","nodeType":"YulIdentifier","src":"4276:5:20"}],"functionName":{"name":"validator_revert_t_address","nativeSrc":"4249:26:20","nodeType":"YulIdentifier","src":"4249:26:20"},"nativeSrc":"4249:33:20","nodeType":"YulFunctionCall","src":"4249:33:20"},"nativeSrc":"4249:33:20","nodeType":"YulExpressionStatement","src":"4249:33:20"}]},"name":"abi_decode_t_address","nativeSrc":"4149:139:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"4179:6:20","nodeType":"YulTypedName","src":"4179:6:20","type":""},{"name":"end","nativeSrc":"4187:3:20","nodeType":"YulTypedName","src":"4187:3:20","type":""}],"returnVariables":[{"name":"value","nativeSrc":"4195:5:20","nodeType":"YulTypedName","src":"4195:5:20","type":""}],"src":"4149:139:20"},{"body":{"nativeSrc":"4376:390:20","nodeType":"YulBlock","src":"4376:390:20","statements":[{"body":{"nativeSrc":"4422:83:20","nodeType":"YulBlock","src":"4422:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"4424:77:20","nodeType":"YulIdentifier","src":"4424:77:20"},"nativeSrc":"4424:79:20","nodeType":"YulFunctionCall","src":"4424:79:20"},"nativeSrc":"4424:79:20","nodeType":"YulExpressionStatement","src":"4424:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"4397:7:20","nodeType":"YulIdentifier","src":"4397:7:20"},{"name":"headStart","nativeSrc":"4406:9:20","nodeType":"YulIdentifier","src":"4406:9:20"}],"functionName":{"name":"sub","nativeSrc":"4393:3:20","nodeType":"YulIdentifier","src":"4393:3:20"},"nativeSrc":"4393:23:20","nodeType":"YulFunctionCall","src":"4393:23:20"},{"kind":"number","nativeSrc":"4418:2:20","nodeType":"YulLiteral","src":"4418:2:20","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"4389:3:20","nodeType":"YulIdentifier","src":"4389:3:20"},"nativeSrc":"4389:32:20","nodeType":"YulFunctionCall","src":"4389:32:20"},"nativeSrc":"4386:119:20","nodeType":"YulIf","src":"4386:119:20"},{"nativeSrc":"4515:116:20","nodeType":"YulBlock","src":"4515:116:20","statements":[{"nativeSrc":"4530:15:20","nodeType":"YulVariableDeclaration","src":"4530:15:20","value":{"kind":"number","nativeSrc":"4544:1:20","nodeType":"YulLiteral","src":"4544:1:20","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"4534:6:20","nodeType":"YulTypedName","src":"4534:6:20","type":""}]},{"nativeSrc":"4559:62:20","nodeType":"YulAssignment","src":"4559:62:20","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4593:9:20","nodeType":"YulIdentifier","src":"4593:9:20"},{"name":"offset","nativeSrc":"4604:6:20","nodeType":"YulIdentifier","src":"4604:6:20"}],"functionName":{"name":"add","nativeSrc":"4589:3:20","nodeType":"YulIdentifier","src":"4589:3:20"},"nativeSrc":"4589:22:20","nodeType":"YulFunctionCall","src":"4589:22:20"},{"name":"dataEnd","nativeSrc":"4613:7:20","nodeType":"YulIdentifier","src":"4613:7:20"}],"functionName":{"name":"abi_decode_t_uint64","nativeSrc":"4569:19:20","nodeType":"YulIdentifier","src":"4569:19:20"},"nativeSrc":"4569:52:20","nodeType":"YulFunctionCall","src":"4569:52:20"},"variableNames":[{"name":"value0","nativeSrc":"4559:6:20","nodeType":"YulIdentifier","src":"4559:6:20"}]}]},{"nativeSrc":"4641:118:20","nodeType":"YulBlock","src":"4641:118:20","statements":[{"nativeSrc":"4656:16:20","nodeType":"YulVariableDeclaration","src":"4656:16:20","value":{"kind":"number","nativeSrc":"4670:2:20","nodeType":"YulLiteral","src":"4670:2:20","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"4660:6:20","nodeType":"YulTypedName","src":"4660:6:20","type":""}]},{"nativeSrc":"4686:63:20","nodeType":"YulAssignment","src":"4686:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4721:9:20","nodeType":"YulIdentifier","src":"4721:9:20"},{"name":"offset","nativeSrc":"4732:6:20","nodeType":"YulIdentifier","src":"4732:6:20"}],"functionName":{"name":"add","nativeSrc":"4717:3:20","nodeType":"YulIdentifier","src":"4717:3:20"},"nativeSrc":"4717:22:20","nodeType":"YulFunctionCall","src":"4717:22:20"},{"name":"dataEnd","nativeSrc":"4741:7:20","nodeType":"YulIdentifier","src":"4741:7:20"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"4696:20:20","nodeType":"YulIdentifier","src":"4696:20:20"},"nativeSrc":"4696:53:20","nodeType":"YulFunctionCall","src":"4696:53:20"},"variableNames":[{"name":"value1","nativeSrc":"4686:6:20","nodeType":"YulIdentifier","src":"4686:6:20"}]}]}]},"name":"abi_decode_tuple_t_uint64t_address","nativeSrc":"4294:472:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4338:9:20","nodeType":"YulTypedName","src":"4338:9:20","type":""},{"name":"dataEnd","nativeSrc":"4349:7:20","nodeType":"YulTypedName","src":"4349:7:20","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"4361:6:20","nodeType":"YulTypedName","src":"4361:6:20","type":""},{"name":"value1","nativeSrc":"4369:6:20","nodeType":"YulTypedName","src":"4369:6:20","type":""}],"src":"4294:472:20"},{"body":{"nativeSrc":"4835:52:20","nodeType":"YulBlock","src":"4835:52:20","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"4852:3:20","nodeType":"YulIdentifier","src":"4852:3:20"},{"arguments":[{"name":"value","nativeSrc":"4874:5:20","nodeType":"YulIdentifier","src":"4874:5:20"}],"functionName":{"name":"cleanup_t_uint64","nativeSrc":"4857:16:20","nodeType":"YulIdentifier","src":"4857:16:20"},"nativeSrc":"4857:23:20","nodeType":"YulFunctionCall","src":"4857:23:20"}],"functionName":{"name":"mstore","nativeSrc":"4845:6:20","nodeType":"YulIdentifier","src":"4845:6:20"},"nativeSrc":"4845:36:20","nodeType":"YulFunctionCall","src":"4845:36:20"},"nativeSrc":"4845:36:20","nodeType":"YulExpressionStatement","src":"4845:36:20"}]},"name":"abi_encode_t_uint64_to_t_uint64_fromStack","nativeSrc":"4772:115:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4823:5:20","nodeType":"YulTypedName","src":"4823:5:20","type":""},{"name":"pos","nativeSrc":"4830:3:20","nodeType":"YulTypedName","src":"4830:3:20","type":""}],"src":"4772:115:20"},{"body":{"nativeSrc":"4989:122:20","nodeType":"YulBlock","src":"4989:122:20","statements":[{"nativeSrc":"4999:26:20","nodeType":"YulAssignment","src":"4999:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"5011:9:20","nodeType":"YulIdentifier","src":"5011:9:20"},{"kind":"number","nativeSrc":"5022:2:20","nodeType":"YulLiteral","src":"5022:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5007:3:20","nodeType":"YulIdentifier","src":"5007:3:20"},"nativeSrc":"5007:18:20","nodeType":"YulFunctionCall","src":"5007:18:20"},"variableNames":[{"name":"tail","nativeSrc":"4999:4:20","nodeType":"YulIdentifier","src":"4999:4:20"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"5077:6:20","nodeType":"YulIdentifier","src":"5077:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"5090:9:20","nodeType":"YulIdentifier","src":"5090:9:20"},{"kind":"number","nativeSrc":"5101:1:20","nodeType":"YulLiteral","src":"5101:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"5086:3:20","nodeType":"YulIdentifier","src":"5086:3:20"},"nativeSrc":"5086:17:20","nodeType":"YulFunctionCall","src":"5086:17:20"}],"functionName":{"name":"abi_encode_t_uint64_to_t_uint64_fromStack","nativeSrc":"5035:41:20","nodeType":"YulIdentifier","src":"5035:41:20"},"nativeSrc":"5035:69:20","nodeType":"YulFunctionCall","src":"5035:69:20"},"nativeSrc":"5035:69:20","nodeType":"YulExpressionStatement","src":"5035:69:20"}]},"name":"abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed","nativeSrc":"4893:218:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4961:9:20","nodeType":"YulTypedName","src":"4961:9:20","type":""},{"name":"value0","nativeSrc":"4973:6:20","nodeType":"YulTypedName","src":"4973:6:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4984:4:20","nodeType":"YulTypedName","src":"4984:4:20","type":""}],"src":"4893:218:20"},{"body":{"nativeSrc":"5206:28:20","nodeType":"YulBlock","src":"5206:28:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5223:1:20","nodeType":"YulLiteral","src":"5223:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"5226:1:20","nodeType":"YulLiteral","src":"5226:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"5216:6:20","nodeType":"YulIdentifier","src":"5216:6:20"},"nativeSrc":"5216:12:20","nodeType":"YulFunctionCall","src":"5216:12:20"},"nativeSrc":"5216:12:20","nodeType":"YulExpressionStatement","src":"5216:12:20"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nativeSrc":"5117:117:20","nodeType":"YulFunctionDefinition","src":"5117:117:20"},{"body":{"nativeSrc":"5338:169:20","nodeType":"YulBlock","src":"5338:169:20","statements":[{"nativeSrc":"5348:18:20","nodeType":"YulAssignment","src":"5348:18:20","value":{"name":"offset","nativeSrc":"5360:6:20","nodeType":"YulIdentifier","src":"5360:6:20"},"variableNames":[{"name":"arrayPos","nativeSrc":"5348:8:20","nodeType":"YulIdentifier","src":"5348:8:20"}]},{"body":{"nativeSrc":"5418:83:20","nodeType":"YulBlock","src":"5418:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nativeSrc":"5420:77:20","nodeType":"YulIdentifier","src":"5420:77:20"},"nativeSrc":"5420:79:20","nodeType":"YulFunctionCall","src":"5420:79:20"},"nativeSrc":"5420:79:20","nodeType":"YulExpressionStatement","src":"5420:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"arrayPos","nativeSrc":"5385:8:20","nodeType":"YulIdentifier","src":"5385:8:20"},{"arguments":[{"kind":"number","nativeSrc":"5399:4:20","nodeType":"YulLiteral","src":"5399:4:20","type":"","value":"0x02"},{"kind":"number","nativeSrc":"5405:4:20","nodeType":"YulLiteral","src":"5405:4:20","type":"","value":"0x20"}],"functionName":{"name":"mul","nativeSrc":"5395:3:20","nodeType":"YulIdentifier","src":"5395:3:20"},"nativeSrc":"5395:15:20","nodeType":"YulFunctionCall","src":"5395:15:20"}],"functionName":{"name":"add","nativeSrc":"5381:3:20","nodeType":"YulIdentifier","src":"5381:3:20"},"nativeSrc":"5381:30:20","nodeType":"YulFunctionCall","src":"5381:30:20"},{"name":"end","nativeSrc":"5413:3:20","nodeType":"YulIdentifier","src":"5413:3:20"}],"functionName":{"name":"gt","nativeSrc":"5378:2:20","nodeType":"YulIdentifier","src":"5378:2:20"},"nativeSrc":"5378:39:20","nodeType":"YulFunctionCall","src":"5378:39:20"},"nativeSrc":"5375:126:20","nodeType":"YulIf","src":"5375:126:20"}]},"name":"abi_decode_t_array$_t_uint256_$2_calldata_ptr","nativeSrc":"5258:249:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"5313:6:20","nodeType":"YulTypedName","src":"5313:6:20","type":""},{"name":"end","nativeSrc":"5321:3:20","nodeType":"YulTypedName","src":"5321:3:20","type":""}],"returnVariables":[{"name":"arrayPos","nativeSrc":"5329:8:20","nodeType":"YulTypedName","src":"5329:8:20","type":""}],"src":"5258:249:20"},{"body":{"nativeSrc":"5604:288:20","nodeType":"YulBlock","src":"5604:288:20","statements":[{"body":{"nativeSrc":"5650:83:20","nodeType":"YulBlock","src":"5650:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"5652:77:20","nodeType":"YulIdentifier","src":"5652:77:20"},"nativeSrc":"5652:79:20","nodeType":"YulFunctionCall","src":"5652:79:20"},"nativeSrc":"5652:79:20","nodeType":"YulExpressionStatement","src":"5652:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"5625:7:20","nodeType":"YulIdentifier","src":"5625:7:20"},{"name":"headStart","nativeSrc":"5634:9:20","nodeType":"YulIdentifier","src":"5634:9:20"}],"functionName":{"name":"sub","nativeSrc":"5621:3:20","nodeType":"YulIdentifier","src":"5621:3:20"},"nativeSrc":"5621:23:20","nodeType":"YulFunctionCall","src":"5621:23:20"},{"kind":"number","nativeSrc":"5646:2:20","nodeType":"YulLiteral","src":"5646:2:20","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"5617:3:20","nodeType":"YulIdentifier","src":"5617:3:20"},"nativeSrc":"5617:32:20","nodeType":"YulFunctionCall","src":"5617:32:20"},"nativeSrc":"5614:119:20","nodeType":"YulIf","src":"5614:119:20"},{"nativeSrc":"5743:142:20","nodeType":"YulBlock","src":"5743:142:20","statements":[{"nativeSrc":"5758:15:20","nodeType":"YulVariableDeclaration","src":"5758:15:20","value":{"kind":"number","nativeSrc":"5772:1:20","nodeType":"YulLiteral","src":"5772:1:20","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"5762:6:20","nodeType":"YulTypedName","src":"5762:6:20","type":""}]},{"nativeSrc":"5787:88:20","nodeType":"YulAssignment","src":"5787:88:20","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5847:9:20","nodeType":"YulIdentifier","src":"5847:9:20"},{"name":"offset","nativeSrc":"5858:6:20","nodeType":"YulIdentifier","src":"5858:6:20"}],"functionName":{"name":"add","nativeSrc":"5843:3:20","nodeType":"YulIdentifier","src":"5843:3:20"},"nativeSrc":"5843:22:20","nodeType":"YulFunctionCall","src":"5843:22:20"},{"name":"dataEnd","nativeSrc":"5867:7:20","nodeType":"YulIdentifier","src":"5867:7:20"}],"functionName":{"name":"abi_decode_t_array$_t_uint256_$2_calldata_ptr","nativeSrc":"5797:45:20","nodeType":"YulIdentifier","src":"5797:45:20"},"nativeSrc":"5797:78:20","nodeType":"YulFunctionCall","src":"5797:78:20"},"variableNames":[{"name":"value0","nativeSrc":"5787:6:20","nodeType":"YulIdentifier","src":"5787:6:20"}]}]}]},"name":"abi_decode_tuple_t_array$_t_uint256_$2_calldata_ptr","nativeSrc":"5513:379:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5574:9:20","nodeType":"YulTypedName","src":"5574:9:20","type":""},{"name":"dataEnd","nativeSrc":"5585:7:20","nodeType":"YulTypedName","src":"5585:7:20","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"5597:6:20","nodeType":"YulTypedName","src":"5597:6:20","type":""}],"src":"5513:379:20"},{"body":{"nativeSrc":"5943:32:20","nodeType":"YulBlock","src":"5943:32:20","statements":[{"nativeSrc":"5953:16:20","nodeType":"YulAssignment","src":"5953:16:20","value":{"name":"value","nativeSrc":"5964:5:20","nodeType":"YulIdentifier","src":"5964:5:20"},"variableNames":[{"name":"cleaned","nativeSrc":"5953:7:20","nodeType":"YulIdentifier","src":"5953:7:20"}]}]},"name":"cleanup_t_uint256","nativeSrc":"5898:77:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5925:5:20","nodeType":"YulTypedName","src":"5925:5:20","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"5935:7:20","nodeType":"YulTypedName","src":"5935:7:20","type":""}],"src":"5898:77:20"},{"body":{"nativeSrc":"6046:53:20","nodeType":"YulBlock","src":"6046:53:20","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"6063:3:20","nodeType":"YulIdentifier","src":"6063:3:20"},{"arguments":[{"name":"value","nativeSrc":"6086:5:20","nodeType":"YulIdentifier","src":"6086:5:20"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"6068:17:20","nodeType":"YulIdentifier","src":"6068:17:20"},"nativeSrc":"6068:24:20","nodeType":"YulFunctionCall","src":"6068:24:20"}],"functionName":{"name":"mstore","nativeSrc":"6056:6:20","nodeType":"YulIdentifier","src":"6056:6:20"},"nativeSrc":"6056:37:20","nodeType":"YulFunctionCall","src":"6056:37:20"},"nativeSrc":"6056:37:20","nodeType":"YulExpressionStatement","src":"6056:37:20"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"5981:118:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6034:5:20","nodeType":"YulTypedName","src":"6034:5:20","type":""},{"name":"pos","nativeSrc":"6041:3:20","nodeType":"YulTypedName","src":"6041:3:20","type":""}],"src":"5981:118:20"},{"body":{"nativeSrc":"6203:124:20","nodeType":"YulBlock","src":"6203:124:20","statements":[{"nativeSrc":"6213:26:20","nodeType":"YulAssignment","src":"6213:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"6225:9:20","nodeType":"YulIdentifier","src":"6225:9:20"},{"kind":"number","nativeSrc":"6236:2:20","nodeType":"YulLiteral","src":"6236:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6221:3:20","nodeType":"YulIdentifier","src":"6221:3:20"},"nativeSrc":"6221:18:20","nodeType":"YulFunctionCall","src":"6221:18:20"},"variableNames":[{"name":"tail","nativeSrc":"6213:4:20","nodeType":"YulIdentifier","src":"6213:4:20"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"6293:6:20","nodeType":"YulIdentifier","src":"6293:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"6306:9:20","nodeType":"YulIdentifier","src":"6306:9:20"},{"kind":"number","nativeSrc":"6317:1:20","nodeType":"YulLiteral","src":"6317:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"6302:3:20","nodeType":"YulIdentifier","src":"6302:3:20"},"nativeSrc":"6302:17:20","nodeType":"YulFunctionCall","src":"6302:17:20"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"6249:43:20","nodeType":"YulIdentifier","src":"6249:43:20"},"nativeSrc":"6249:71:20","nodeType":"YulFunctionCall","src":"6249:71:20"},"nativeSrc":"6249:71:20","nodeType":"YulExpressionStatement","src":"6249:71:20"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"6105:222:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6175:9:20","nodeType":"YulTypedName","src":"6175:9:20","type":""},{"name":"value0","nativeSrc":"6187:6:20","nodeType":"YulTypedName","src":"6187:6:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"6198:4:20","nodeType":"YulTypedName","src":"6198:4:20","type":""}],"src":"6105:222:20"},{"body":{"nativeSrc":"6429:122:20","nodeType":"YulBlock","src":"6429:122:20","statements":[{"nativeSrc":"6439:26:20","nodeType":"YulAssignment","src":"6439:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"6451:9:20","nodeType":"YulIdentifier","src":"6451:9:20"},{"kind":"number","nativeSrc":"6462:2:20","nodeType":"YulLiteral","src":"6462:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6447:3:20","nodeType":"YulIdentifier","src":"6447:3:20"},"nativeSrc":"6447:18:20","nodeType":"YulFunctionCall","src":"6447:18:20"},"variableNames":[{"name":"tail","nativeSrc":"6439:4:20","nodeType":"YulIdentifier","src":"6439:4:20"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"6517:6:20","nodeType":"YulIdentifier","src":"6517:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"6530:9:20","nodeType":"YulIdentifier","src":"6530:9:20"},{"kind":"number","nativeSrc":"6541:1:20","nodeType":"YulLiteral","src":"6541:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"6526:3:20","nodeType":"YulIdentifier","src":"6526:3:20"},"nativeSrc":"6526:17:20","nodeType":"YulFunctionCall","src":"6526:17:20"}],"functionName":{"name":"abi_encode_t_uint16_to_t_uint16_fromStack","nativeSrc":"6475:41:20","nodeType":"YulIdentifier","src":"6475:41:20"},"nativeSrc":"6475:69:20","nodeType":"YulFunctionCall","src":"6475:69:20"},"nativeSrc":"6475:69:20","nodeType":"YulExpressionStatement","src":"6475:69:20"}]},"name":"abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed","nativeSrc":"6333:218:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6401:9:20","nodeType":"YulTypedName","src":"6401:9:20","type":""},{"name":"value0","nativeSrc":"6413:6:20","nodeType":"YulTypedName","src":"6413:6:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"6424:4:20","nodeType":"YulTypedName","src":"6424:4:20","type":""}],"src":"6333:218:20"},{"body":{"nativeSrc":"6616:40:20","nodeType":"YulBlock","src":"6616:40:20","statements":[{"nativeSrc":"6627:22:20","nodeType":"YulAssignment","src":"6627:22:20","value":{"arguments":[{"name":"value","nativeSrc":"6643:5:20","nodeType":"YulIdentifier","src":"6643:5:20"}],"functionName":{"name":"mload","nativeSrc":"6637:5:20","nodeType":"YulIdentifier","src":"6637:5:20"},"nativeSrc":"6637:12:20","nodeType":"YulFunctionCall","src":"6637:12:20"},"variableNames":[{"name":"length","nativeSrc":"6627:6:20","nodeType":"YulIdentifier","src":"6627:6:20"}]}]},"name":"array_length_t_string_memory_ptr","nativeSrc":"6557:99:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6599:5:20","nodeType":"YulTypedName","src":"6599:5:20","type":""}],"returnVariables":[{"name":"length","nativeSrc":"6609:6:20","nodeType":"YulTypedName","src":"6609:6:20","type":""}],"src":"6557:99:20"},{"body":{"nativeSrc":"6758:73:20","nodeType":"YulBlock","src":"6758:73:20","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"6775:3:20","nodeType":"YulIdentifier","src":"6775:3:20"},{"name":"length","nativeSrc":"6780:6:20","nodeType":"YulIdentifier","src":"6780:6:20"}],"functionName":{"name":"mstore","nativeSrc":"6768:6:20","nodeType":"YulIdentifier","src":"6768:6:20"},"nativeSrc":"6768:19:20","nodeType":"YulFunctionCall","src":"6768:19:20"},"nativeSrc":"6768:19:20","nodeType":"YulExpressionStatement","src":"6768:19:20"},{"nativeSrc":"6796:29:20","nodeType":"YulAssignment","src":"6796:29:20","value":{"arguments":[{"name":"pos","nativeSrc":"6815:3:20","nodeType":"YulIdentifier","src":"6815:3:20"},{"kind":"number","nativeSrc":"6820:4:20","nodeType":"YulLiteral","src":"6820:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"6811:3:20","nodeType":"YulIdentifier","src":"6811:3:20"},"nativeSrc":"6811:14:20","nodeType":"YulFunctionCall","src":"6811:14:20"},"variableNames":[{"name":"updated_pos","nativeSrc":"6796:11:20","nodeType":"YulIdentifier","src":"6796:11:20"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"6662:169:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"6730:3:20","nodeType":"YulTypedName","src":"6730:3:20","type":""},{"name":"length","nativeSrc":"6735:6:20","nodeType":"YulTypedName","src":"6735:6:20","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"6746:11:20","nodeType":"YulTypedName","src":"6746:11:20","type":""}],"src":"6662:169:20"},{"body":{"nativeSrc":"6899:184:20","nodeType":"YulBlock","src":"6899:184:20","statements":[{"nativeSrc":"6909:10:20","nodeType":"YulVariableDeclaration","src":"6909:10:20","value":{"kind":"number","nativeSrc":"6918:1:20","nodeType":"YulLiteral","src":"6918:1:20","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"6913:1:20","nodeType":"YulTypedName","src":"6913:1:20","type":""}]},{"body":{"nativeSrc":"6978:63:20","nodeType":"YulBlock","src":"6978:63:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"7003:3:20","nodeType":"YulIdentifier","src":"7003:3:20"},{"name":"i","nativeSrc":"7008:1:20","nodeType":"YulIdentifier","src":"7008:1:20"}],"functionName":{"name":"add","nativeSrc":"6999:3:20","nodeType":"YulIdentifier","src":"6999:3:20"},"nativeSrc":"6999:11:20","nodeType":"YulFunctionCall","src":"6999:11:20"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"7022:3:20","nodeType":"YulIdentifier","src":"7022:3:20"},{"name":"i","nativeSrc":"7027:1:20","nodeType":"YulIdentifier","src":"7027:1:20"}],"functionName":{"name":"add","nativeSrc":"7018:3:20","nodeType":"YulIdentifier","src":"7018:3:20"},"nativeSrc":"7018:11:20","nodeType":"YulFunctionCall","src":"7018:11:20"}],"functionName":{"name":"mload","nativeSrc":"7012:5:20","nodeType":"YulIdentifier","src":"7012:5:20"},"nativeSrc":"7012:18:20","nodeType":"YulFunctionCall","src":"7012:18:20"}],"functionName":{"name":"mstore","nativeSrc":"6992:6:20","nodeType":"YulIdentifier","src":"6992:6:20"},"nativeSrc":"6992:39:20","nodeType":"YulFunctionCall","src":"6992:39:20"},"nativeSrc":"6992:39:20","nodeType":"YulExpressionStatement","src":"6992:39:20"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"6939:1:20","nodeType":"YulIdentifier","src":"6939:1:20"},{"name":"length","nativeSrc":"6942:6:20","nodeType":"YulIdentifier","src":"6942:6:20"}],"functionName":{"name":"lt","nativeSrc":"6936:2:20","nodeType":"YulIdentifier","src":"6936:2:20"},"nativeSrc":"6936:13:20","nodeType":"YulFunctionCall","src":"6936:13:20"},"nativeSrc":"6928:113:20","nodeType":"YulForLoop","post":{"nativeSrc":"6950:19:20","nodeType":"YulBlock","src":"6950:19:20","statements":[{"nativeSrc":"6952:15:20","nodeType":"YulAssignment","src":"6952:15:20","value":{"arguments":[{"name":"i","nativeSrc":"6961:1:20","nodeType":"YulIdentifier","src":"6961:1:20"},{"kind":"number","nativeSrc":"6964:2:20","nodeType":"YulLiteral","src":"6964:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6957:3:20","nodeType":"YulIdentifier","src":"6957:3:20"},"nativeSrc":"6957:10:20","nodeType":"YulFunctionCall","src":"6957:10:20"},"variableNames":[{"name":"i","nativeSrc":"6952:1:20","nodeType":"YulIdentifier","src":"6952:1:20"}]}]},"pre":{"nativeSrc":"6932:3:20","nodeType":"YulBlock","src":"6932:3:20","statements":[]},"src":"6928:113:20"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"7061:3:20","nodeType":"YulIdentifier","src":"7061:3:20"},{"name":"length","nativeSrc":"7066:6:20","nodeType":"YulIdentifier","src":"7066:6:20"}],"functionName":{"name":"add","nativeSrc":"7057:3:20","nodeType":"YulIdentifier","src":"7057:3:20"},"nativeSrc":"7057:16:20","nodeType":"YulFunctionCall","src":"7057:16:20"},{"kind":"number","nativeSrc":"7075:1:20","nodeType":"YulLiteral","src":"7075:1:20","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"7050:6:20","nodeType":"YulIdentifier","src":"7050:6:20"},"nativeSrc":"7050:27:20","nodeType":"YulFunctionCall","src":"7050:27:20"},"nativeSrc":"7050:27:20","nodeType":"YulExpressionStatement","src":"7050:27:20"}]},"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"6837:246:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"6881:3:20","nodeType":"YulTypedName","src":"6881:3:20","type":""},{"name":"dst","nativeSrc":"6886:3:20","nodeType":"YulTypedName","src":"6886:3:20","type":""},{"name":"length","nativeSrc":"6891:6:20","nodeType":"YulTypedName","src":"6891:6:20","type":""}],"src":"6837:246:20"},{"body":{"nativeSrc":"7137:54:20","nodeType":"YulBlock","src":"7137:54:20","statements":[{"nativeSrc":"7147:38:20","nodeType":"YulAssignment","src":"7147:38:20","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"7165:5:20","nodeType":"YulIdentifier","src":"7165:5:20"},{"kind":"number","nativeSrc":"7172:2:20","nodeType":"YulLiteral","src":"7172:2:20","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"7161:3:20","nodeType":"YulIdentifier","src":"7161:3:20"},"nativeSrc":"7161:14:20","nodeType":"YulFunctionCall","src":"7161:14:20"},{"arguments":[{"kind":"number","nativeSrc":"7181:2:20","nodeType":"YulLiteral","src":"7181:2:20","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"7177:3:20","nodeType":"YulIdentifier","src":"7177:3:20"},"nativeSrc":"7177:7:20","nodeType":"YulFunctionCall","src":"7177:7:20"}],"functionName":{"name":"and","nativeSrc":"7157:3:20","nodeType":"YulIdentifier","src":"7157:3:20"},"nativeSrc":"7157:28:20","nodeType":"YulFunctionCall","src":"7157:28:20"},"variableNames":[{"name":"result","nativeSrc":"7147:6:20","nodeType":"YulIdentifier","src":"7147:6:20"}]}]},"name":"round_up_to_mul_of_32","nativeSrc":"7089:102:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"7120:5:20","nodeType":"YulTypedName","src":"7120:5:20","type":""}],"returnVariables":[{"name":"result","nativeSrc":"7130:6:20","nodeType":"YulTypedName","src":"7130:6:20","type":""}],"src":"7089:102:20"},{"body":{"nativeSrc":"7289:285:20","nodeType":"YulBlock","src":"7289:285:20","statements":[{"nativeSrc":"7299:53:20","nodeType":"YulVariableDeclaration","src":"7299:53:20","value":{"arguments":[{"name":"value","nativeSrc":"7346:5:20","nodeType":"YulIdentifier","src":"7346:5:20"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"7313:32:20","nodeType":"YulIdentifier","src":"7313:32:20"},"nativeSrc":"7313:39:20","nodeType":"YulFunctionCall","src":"7313:39:20"},"variables":[{"name":"length","nativeSrc":"7303:6:20","nodeType":"YulTypedName","src":"7303:6:20","type":""}]},{"nativeSrc":"7361:78:20","nodeType":"YulAssignment","src":"7361:78:20","value":{"arguments":[{"name":"pos","nativeSrc":"7427:3:20","nodeType":"YulIdentifier","src":"7427:3:20"},{"name":"length","nativeSrc":"7432:6:20","nodeType":"YulIdentifier","src":"7432:6:20"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"7368:58:20","nodeType":"YulIdentifier","src":"7368:58:20"},"nativeSrc":"7368:71:20","nodeType":"YulFunctionCall","src":"7368:71:20"},"variableNames":[{"name":"pos","nativeSrc":"7361:3:20","nodeType":"YulIdentifier","src":"7361:3:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"7487:5:20","nodeType":"YulIdentifier","src":"7487:5:20"},{"kind":"number","nativeSrc":"7494:4:20","nodeType":"YulLiteral","src":"7494:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"7483:3:20","nodeType":"YulIdentifier","src":"7483:3:20"},"nativeSrc":"7483:16:20","nodeType":"YulFunctionCall","src":"7483:16:20"},{"name":"pos","nativeSrc":"7501:3:20","nodeType":"YulIdentifier","src":"7501:3:20"},{"name":"length","nativeSrc":"7506:6:20","nodeType":"YulIdentifier","src":"7506:6:20"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"7448:34:20","nodeType":"YulIdentifier","src":"7448:34:20"},"nativeSrc":"7448:65:20","nodeType":"YulFunctionCall","src":"7448:65:20"},"nativeSrc":"7448:65:20","nodeType":"YulExpressionStatement","src":"7448:65:20"},{"nativeSrc":"7522:46:20","nodeType":"YulAssignment","src":"7522:46:20","value":{"arguments":[{"name":"pos","nativeSrc":"7533:3:20","nodeType":"YulIdentifier","src":"7533:3:20"},{"arguments":[{"name":"length","nativeSrc":"7560:6:20","nodeType":"YulIdentifier","src":"7560:6:20"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"7538:21:20","nodeType":"YulIdentifier","src":"7538:21:20"},"nativeSrc":"7538:29:20","nodeType":"YulFunctionCall","src":"7538:29:20"}],"functionName":{"name":"add","nativeSrc":"7529:3:20","nodeType":"YulIdentifier","src":"7529:3:20"},"nativeSrc":"7529:39:20","nodeType":"YulFunctionCall","src":"7529:39:20"},"variableNames":[{"name":"end","nativeSrc":"7522:3:20","nodeType":"YulIdentifier","src":"7522:3:20"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"7197:377:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"7270:5:20","nodeType":"YulTypedName","src":"7270:5:20","type":""},{"name":"pos","nativeSrc":"7277:3:20","nodeType":"YulTypedName","src":"7277:3:20","type":""}],"returnVariables":[{"name":"end","nativeSrc":"7285:3:20","nodeType":"YulTypedName","src":"7285:3:20","type":""}],"src":"7197:377:20"},{"body":{"nativeSrc":"7698:195:20","nodeType":"YulBlock","src":"7698:195:20","statements":[{"nativeSrc":"7708:26:20","nodeType":"YulAssignment","src":"7708:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"7720:9:20","nodeType":"YulIdentifier","src":"7720:9:20"},{"kind":"number","nativeSrc":"7731:2:20","nodeType":"YulLiteral","src":"7731:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"7716:3:20","nodeType":"YulIdentifier","src":"7716:3:20"},"nativeSrc":"7716:18:20","nodeType":"YulFunctionCall","src":"7716:18:20"},"variableNames":[{"name":"tail","nativeSrc":"7708:4:20","nodeType":"YulIdentifier","src":"7708:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7755:9:20","nodeType":"YulIdentifier","src":"7755:9:20"},{"kind":"number","nativeSrc":"7766:1:20","nodeType":"YulLiteral","src":"7766:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"7751:3:20","nodeType":"YulIdentifier","src":"7751:3:20"},"nativeSrc":"7751:17:20","nodeType":"YulFunctionCall","src":"7751:17:20"},{"arguments":[{"name":"tail","nativeSrc":"7774:4:20","nodeType":"YulIdentifier","src":"7774:4:20"},{"name":"headStart","nativeSrc":"7780:9:20","nodeType":"YulIdentifier","src":"7780:9:20"}],"functionName":{"name":"sub","nativeSrc":"7770:3:20","nodeType":"YulIdentifier","src":"7770:3:20"},"nativeSrc":"7770:20:20","nodeType":"YulFunctionCall","src":"7770:20:20"}],"functionName":{"name":"mstore","nativeSrc":"7744:6:20","nodeType":"YulIdentifier","src":"7744:6:20"},"nativeSrc":"7744:47:20","nodeType":"YulFunctionCall","src":"7744:47:20"},"nativeSrc":"7744:47:20","nodeType":"YulExpressionStatement","src":"7744:47:20"},{"nativeSrc":"7800:86:20","nodeType":"YulAssignment","src":"7800:86:20","value":{"arguments":[{"name":"value0","nativeSrc":"7872:6:20","nodeType":"YulIdentifier","src":"7872:6:20"},{"name":"tail","nativeSrc":"7881:4:20","nodeType":"YulIdentifier","src":"7881:4:20"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"7808:63:20","nodeType":"YulIdentifier","src":"7808:63:20"},"nativeSrc":"7808:78:20","nodeType":"YulFunctionCall","src":"7808:78:20"},"variableNames":[{"name":"tail","nativeSrc":"7800:4:20","nodeType":"YulIdentifier","src":"7800:4:20"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"7580:313:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7670:9:20","nodeType":"YulTypedName","src":"7670:9:20","type":""},{"name":"value0","nativeSrc":"7682:6:20","nodeType":"YulTypedName","src":"7682:6:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"7693:4:20","nodeType":"YulTypedName","src":"7693:4:20","type":""}],"src":"7580:313:20"},{"body":{"nativeSrc":"7931:28:20","nodeType":"YulBlock","src":"7931:28:20","statements":[{"nativeSrc":"7941:12:20","nodeType":"YulAssignment","src":"7941:12:20","value":{"name":"value","nativeSrc":"7948:5:20","nodeType":"YulIdentifier","src":"7948:5:20"},"variableNames":[{"name":"ret","nativeSrc":"7941:3:20","nodeType":"YulIdentifier","src":"7941:3:20"}]}]},"name":"identity","nativeSrc":"7899:60:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"7917:5:20","nodeType":"YulTypedName","src":"7917:5:20","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"7927:3:20","nodeType":"YulTypedName","src":"7927:3:20","type":""}],"src":"7899:60:20"},{"body":{"nativeSrc":"8025:82:20","nodeType":"YulBlock","src":"8025:82:20","statements":[{"nativeSrc":"8035:66:20","nodeType":"YulAssignment","src":"8035:66:20","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nativeSrc":"8093:5:20","nodeType":"YulIdentifier","src":"8093:5:20"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"8075:17:20","nodeType":"YulIdentifier","src":"8075:17:20"},"nativeSrc":"8075:24:20","nodeType":"YulFunctionCall","src":"8075:24:20"}],"functionName":{"name":"identity","nativeSrc":"8066:8:20","nodeType":"YulIdentifier","src":"8066:8:20"},"nativeSrc":"8066:34:20","nodeType":"YulFunctionCall","src":"8066:34:20"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"8048:17:20","nodeType":"YulIdentifier","src":"8048:17:20"},"nativeSrc":"8048:53:20","nodeType":"YulFunctionCall","src":"8048:53:20"},"variableNames":[{"name":"converted","nativeSrc":"8035:9:20","nodeType":"YulIdentifier","src":"8035:9:20"}]}]},"name":"convert_t_uint160_to_t_uint160","nativeSrc":"7965:142:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"8005:5:20","nodeType":"YulTypedName","src":"8005:5:20","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"8015:9:20","nodeType":"YulTypedName","src":"8015:9:20","type":""}],"src":"7965:142:20"},{"body":{"nativeSrc":"8173:66:20","nodeType":"YulBlock","src":"8173:66:20","statements":[{"nativeSrc":"8183:50:20","nodeType":"YulAssignment","src":"8183:50:20","value":{"arguments":[{"name":"value","nativeSrc":"8227:5:20","nodeType":"YulIdentifier","src":"8227:5:20"}],"functionName":{"name":"convert_t_uint160_to_t_uint160","nativeSrc":"8196:30:20","nodeType":"YulIdentifier","src":"8196:30:20"},"nativeSrc":"8196:37:20","nodeType":"YulFunctionCall","src":"8196:37:20"},"variableNames":[{"name":"converted","nativeSrc":"8183:9:20","nodeType":"YulIdentifier","src":"8183:9:20"}]}]},"name":"convert_t_uint160_to_t_address","nativeSrc":"8113:126:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"8153:5:20","nodeType":"YulTypedName","src":"8153:5:20","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"8163:9:20","nodeType":"YulTypedName","src":"8163:9:20","type":""}],"src":"8113:126:20"},{"body":{"nativeSrc":"8331:66:20","nodeType":"YulBlock","src":"8331:66:20","statements":[{"nativeSrc":"8341:50:20","nodeType":"YulAssignment","src":"8341:50:20","value":{"arguments":[{"name":"value","nativeSrc":"8385:5:20","nodeType":"YulIdentifier","src":"8385:5:20"}],"functionName":{"name":"convert_t_uint160_to_t_address","nativeSrc":"8354:30:20","nodeType":"YulIdentifier","src":"8354:30:20"},"nativeSrc":"8354:37:20","nodeType":"YulFunctionCall","src":"8354:37:20"},"variableNames":[{"name":"converted","nativeSrc":"8341:9:20","nodeType":"YulIdentifier","src":"8341:9:20"}]}]},"name":"convert_t_contract$_LinkTokenInterface_$712_to_t_address","nativeSrc":"8245:152:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"8311:5:20","nodeType":"YulTypedName","src":"8311:5:20","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"8321:9:20","nodeType":"YulTypedName","src":"8321:9:20","type":""}],"src":"8245:152:20"},{"body":{"nativeSrc":"8494:92:20","nodeType":"YulBlock","src":"8494:92:20","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"8511:3:20","nodeType":"YulIdentifier","src":"8511:3:20"},{"arguments":[{"name":"value","nativeSrc":"8573:5:20","nodeType":"YulIdentifier","src":"8573:5:20"}],"functionName":{"name":"convert_t_contract$_LinkTokenInterface_$712_to_t_address","nativeSrc":"8516:56:20","nodeType":"YulIdentifier","src":"8516:56:20"},"nativeSrc":"8516:63:20","nodeType":"YulFunctionCall","src":"8516:63:20"}],"functionName":{"name":"mstore","nativeSrc":"8504:6:20","nodeType":"YulIdentifier","src":"8504:6:20"},"nativeSrc":"8504:76:20","nodeType":"YulFunctionCall","src":"8504:76:20"},"nativeSrc":"8504:76:20","nodeType":"YulExpressionStatement","src":"8504:76:20"}]},"name":"abi_encode_t_contract$_LinkTokenInterface_$712_to_t_address_fromStack","nativeSrc":"8403:183:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"8482:5:20","nodeType":"YulTypedName","src":"8482:5:20","type":""},{"name":"pos","nativeSrc":"8489:3:20","nodeType":"YulTypedName","src":"8489:3:20","type":""}],"src":"8403:183:20"},{"body":{"nativeSrc":"8716:150:20","nodeType":"YulBlock","src":"8716:150:20","statements":[{"nativeSrc":"8726:26:20","nodeType":"YulAssignment","src":"8726:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"8738:9:20","nodeType":"YulIdentifier","src":"8738:9:20"},{"kind":"number","nativeSrc":"8749:2:20","nodeType":"YulLiteral","src":"8749:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"8734:3:20","nodeType":"YulIdentifier","src":"8734:3:20"},"nativeSrc":"8734:18:20","nodeType":"YulFunctionCall","src":"8734:18:20"},"variableNames":[{"name":"tail","nativeSrc":"8726:4:20","nodeType":"YulIdentifier","src":"8726:4:20"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"8832:6:20","nodeType":"YulIdentifier","src":"8832:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"8845:9:20","nodeType":"YulIdentifier","src":"8845:9:20"},{"kind":"number","nativeSrc":"8856:1:20","nodeType":"YulLiteral","src":"8856:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"8841:3:20","nodeType":"YulIdentifier","src":"8841:3:20"},"nativeSrc":"8841:17:20","nodeType":"YulFunctionCall","src":"8841:17:20"}],"functionName":{"name":"abi_encode_t_contract$_LinkTokenInterface_$712_to_t_address_fromStack","nativeSrc":"8762:69:20","nodeType":"YulIdentifier","src":"8762:69:20"},"nativeSrc":"8762:97:20","nodeType":"YulFunctionCall","src":"8762:97:20"},"nativeSrc":"8762:97:20","nodeType":"YulExpressionStatement","src":"8762:97:20"}]},"name":"abi_encode_tuple_t_contract$_LinkTokenInterface_$712__to_t_address__fromStack_reversed","nativeSrc":"8592:274:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"8688:9:20","nodeType":"YulTypedName","src":"8688:9:20","type":""},{"name":"value0","nativeSrc":"8700:6:20","nodeType":"YulTypedName","src":"8700:6:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"8711:4:20","nodeType":"YulTypedName","src":"8711:4:20","type":""}],"src":"8592:274:20"},{"body":{"nativeSrc":"8916:32:20","nodeType":"YulBlock","src":"8916:32:20","statements":[{"nativeSrc":"8926:16:20","nodeType":"YulAssignment","src":"8926:16:20","value":{"name":"value","nativeSrc":"8937:5:20","nodeType":"YulIdentifier","src":"8937:5:20"},"variableNames":[{"name":"cleaned","nativeSrc":"8926:7:20","nodeType":"YulIdentifier","src":"8926:7:20"}]}]},"name":"cleanup_t_int256","nativeSrc":"8872:76:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"8898:5:20","nodeType":"YulTypedName","src":"8898:5:20","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"8908:7:20","nodeType":"YulTypedName","src":"8908:7:20","type":""}],"src":"8872:76:20"},{"body":{"nativeSrc":"9017:52:20","nodeType":"YulBlock","src":"9017:52:20","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"9034:3:20","nodeType":"YulIdentifier","src":"9034:3:20"},{"arguments":[{"name":"value","nativeSrc":"9056:5:20","nodeType":"YulIdentifier","src":"9056:5:20"}],"functionName":{"name":"cleanup_t_int256","nativeSrc":"9039:16:20","nodeType":"YulIdentifier","src":"9039:16:20"},"nativeSrc":"9039:23:20","nodeType":"YulFunctionCall","src":"9039:23:20"}],"functionName":{"name":"mstore","nativeSrc":"9027:6:20","nodeType":"YulIdentifier","src":"9027:6:20"},"nativeSrc":"9027:36:20","nodeType":"YulFunctionCall","src":"9027:36:20"},"nativeSrc":"9027:36:20","nodeType":"YulExpressionStatement","src":"9027:36:20"}]},"name":"abi_encode_t_int256_to_t_int256_fromStack","nativeSrc":"8954:115:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"9005:5:20","nodeType":"YulTypedName","src":"9005:5:20","type":""},{"name":"pos","nativeSrc":"9012:3:20","nodeType":"YulTypedName","src":"9012:3:20","type":""}],"src":"8954:115:20"},{"body":{"nativeSrc":"9171:122:20","nodeType":"YulBlock","src":"9171:122:20","statements":[{"nativeSrc":"9181:26:20","nodeType":"YulAssignment","src":"9181:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"9193:9:20","nodeType":"YulIdentifier","src":"9193:9:20"},{"kind":"number","nativeSrc":"9204:2:20","nodeType":"YulLiteral","src":"9204:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"9189:3:20","nodeType":"YulIdentifier","src":"9189:3:20"},"nativeSrc":"9189:18:20","nodeType":"YulFunctionCall","src":"9189:18:20"},"variableNames":[{"name":"tail","nativeSrc":"9181:4:20","nodeType":"YulIdentifier","src":"9181:4:20"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"9259:6:20","nodeType":"YulIdentifier","src":"9259:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"9272:9:20","nodeType":"YulIdentifier","src":"9272:9:20"},{"kind":"number","nativeSrc":"9283:1:20","nodeType":"YulLiteral","src":"9283:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"9268:3:20","nodeType":"YulIdentifier","src":"9268:3:20"},"nativeSrc":"9268:17:20","nodeType":"YulFunctionCall","src":"9268:17:20"}],"functionName":{"name":"abi_encode_t_int256_to_t_int256_fromStack","nativeSrc":"9217:41:20","nodeType":"YulIdentifier","src":"9217:41:20"},"nativeSrc":"9217:69:20","nodeType":"YulFunctionCall","src":"9217:69:20"},"nativeSrc":"9217:69:20","nodeType":"YulExpressionStatement","src":"9217:69:20"}]},"name":"abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed","nativeSrc":"9075:218:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"9143:9:20","nodeType":"YulTypedName","src":"9143:9:20","type":""},{"name":"value0","nativeSrc":"9155:6:20","nodeType":"YulTypedName","src":"9155:6:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"9166:4:20","nodeType":"YulTypedName","src":"9166:4:20","type":""}],"src":"9075:218:20"},{"body":{"nativeSrc":"9395:122:20","nodeType":"YulBlock","src":"9395:122:20","statements":[{"nativeSrc":"9405:26:20","nodeType":"YulAssignment","src":"9405:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"9417:9:20","nodeType":"YulIdentifier","src":"9417:9:20"},{"kind":"number","nativeSrc":"9428:2:20","nodeType":"YulLiteral","src":"9428:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"9413:3:20","nodeType":"YulIdentifier","src":"9413:3:20"},"nativeSrc":"9413:18:20","nodeType":"YulFunctionCall","src":"9413:18:20"},"variableNames":[{"name":"tail","nativeSrc":"9405:4:20","nodeType":"YulIdentifier","src":"9405:4:20"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"9483:6:20","nodeType":"YulIdentifier","src":"9483:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"9496:9:20","nodeType":"YulIdentifier","src":"9496:9:20"},{"kind":"number","nativeSrc":"9507:1:20","nodeType":"YulLiteral","src":"9507:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"9492:3:20","nodeType":"YulIdentifier","src":"9492:3:20"},"nativeSrc":"9492:17:20","nodeType":"YulFunctionCall","src":"9492:17:20"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nativeSrc":"9441:41:20","nodeType":"YulIdentifier","src":"9441:41:20"},"nativeSrc":"9441:69:20","nodeType":"YulFunctionCall","src":"9441:69:20"},"nativeSrc":"9441:69:20","nodeType":"YulExpressionStatement","src":"9441:69:20"}]},"name":"abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed","nativeSrc":"9299:218:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"9367:9:20","nodeType":"YulTypedName","src":"9367:9:20","type":""},{"name":"value0","nativeSrc":"9379:6:20","nodeType":"YulTypedName","src":"9379:6:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"9390:4:20","nodeType":"YulTypedName","src":"9390:4:20","type":""}],"src":"9299:218:20"},{"body":{"nativeSrc":"9565:78:20","nodeType":"YulBlock","src":"9565:78:20","statements":[{"body":{"nativeSrc":"9621:16:20","nodeType":"YulBlock","src":"9621:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"9630:1:20","nodeType":"YulLiteral","src":"9630:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"9633:1:20","nodeType":"YulLiteral","src":"9633:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"9623:6:20","nodeType":"YulIdentifier","src":"9623:6:20"},"nativeSrc":"9623:12:20","nodeType":"YulFunctionCall","src":"9623:12:20"},"nativeSrc":"9623:12:20","nodeType":"YulExpressionStatement","src":"9623:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"9588:5:20","nodeType":"YulIdentifier","src":"9588:5:20"},{"arguments":[{"name":"value","nativeSrc":"9612:5:20","nodeType":"YulIdentifier","src":"9612:5:20"}],"functionName":{"name":"cleanup_t_uint16","nativeSrc":"9595:16:20","nodeType":"YulIdentifier","src":"9595:16:20"},"nativeSrc":"9595:23:20","nodeType":"YulFunctionCall","src":"9595:23:20"}],"functionName":{"name":"eq","nativeSrc":"9585:2:20","nodeType":"YulIdentifier","src":"9585:2:20"},"nativeSrc":"9585:34:20","nodeType":"YulFunctionCall","src":"9585:34:20"}],"functionName":{"name":"iszero","nativeSrc":"9578:6:20","nodeType":"YulIdentifier","src":"9578:6:20"},"nativeSrc":"9578:42:20","nodeType":"YulFunctionCall","src":"9578:42:20"},"nativeSrc":"9575:62:20","nodeType":"YulIf","src":"9575:62:20"}]},"name":"validator_revert_t_uint16","nativeSrc":"9523:120:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"9558:5:20","nodeType":"YulTypedName","src":"9558:5:20","type":""}],"src":"9523:120:20"},{"body":{"nativeSrc":"9700:86:20","nodeType":"YulBlock","src":"9700:86:20","statements":[{"nativeSrc":"9710:29:20","nodeType":"YulAssignment","src":"9710:29:20","value":{"arguments":[{"name":"offset","nativeSrc":"9732:6:20","nodeType":"YulIdentifier","src":"9732:6:20"}],"functionName":{"name":"calldataload","nativeSrc":"9719:12:20","nodeType":"YulIdentifier","src":"9719:12:20"},"nativeSrc":"9719:20:20","nodeType":"YulFunctionCall","src":"9719:20:20"},"variableNames":[{"name":"value","nativeSrc":"9710:5:20","nodeType":"YulIdentifier","src":"9710:5:20"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"9774:5:20","nodeType":"YulIdentifier","src":"9774:5:20"}],"functionName":{"name":"validator_revert_t_uint16","nativeSrc":"9748:25:20","nodeType":"YulIdentifier","src":"9748:25:20"},"nativeSrc":"9748:32:20","nodeType":"YulFunctionCall","src":"9748:32:20"},"nativeSrc":"9748:32:20","nodeType":"YulExpressionStatement","src":"9748:32:20"}]},"name":"abi_decode_t_uint16","nativeSrc":"9649:137:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"9678:6:20","nodeType":"YulTypedName","src":"9678:6:20","type":""},{"name":"end","nativeSrc":"9686:3:20","nodeType":"YulTypedName","src":"9686:3:20","type":""}],"returnVariables":[{"name":"value","nativeSrc":"9694:5:20","nodeType":"YulTypedName","src":"9694:5:20","type":""}],"src":"9649:137:20"},{"body":{"nativeSrc":"9834:78:20","nodeType":"YulBlock","src":"9834:78:20","statements":[{"body":{"nativeSrc":"9890:16:20","nodeType":"YulBlock","src":"9890:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"9899:1:20","nodeType":"YulLiteral","src":"9899:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"9902:1:20","nodeType":"YulLiteral","src":"9902:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"9892:6:20","nodeType":"YulIdentifier","src":"9892:6:20"},"nativeSrc":"9892:12:20","nodeType":"YulFunctionCall","src":"9892:12:20"},"nativeSrc":"9892:12:20","nodeType":"YulExpressionStatement","src":"9892:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"9857:5:20","nodeType":"YulIdentifier","src":"9857:5:20"},{"arguments":[{"name":"value","nativeSrc":"9881:5:20","nodeType":"YulIdentifier","src":"9881:5:20"}],"functionName":{"name":"cleanup_t_uint32","nativeSrc":"9864:16:20","nodeType":"YulIdentifier","src":"9864:16:20"},"nativeSrc":"9864:23:20","nodeType":"YulFunctionCall","src":"9864:23:20"}],"functionName":{"name":"eq","nativeSrc":"9854:2:20","nodeType":"YulIdentifier","src":"9854:2:20"},"nativeSrc":"9854:34:20","nodeType":"YulFunctionCall","src":"9854:34:20"}],"functionName":{"name":"iszero","nativeSrc":"9847:6:20","nodeType":"YulIdentifier","src":"9847:6:20"},"nativeSrc":"9847:42:20","nodeType":"YulFunctionCall","src":"9847:42:20"},"nativeSrc":"9844:62:20","nodeType":"YulIf","src":"9844:62:20"}]},"name":"validator_revert_t_uint32","nativeSrc":"9792:120:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"9827:5:20","nodeType":"YulTypedName","src":"9827:5:20","type":""}],"src":"9792:120:20"},{"body":{"nativeSrc":"9969:86:20","nodeType":"YulBlock","src":"9969:86:20","statements":[{"nativeSrc":"9979:29:20","nodeType":"YulAssignment","src":"9979:29:20","value":{"arguments":[{"name":"offset","nativeSrc":"10001:6:20","nodeType":"YulIdentifier","src":"10001:6:20"}],"functionName":{"name":"calldataload","nativeSrc":"9988:12:20","nodeType":"YulIdentifier","src":"9988:12:20"},"nativeSrc":"9988:20:20","nodeType":"YulFunctionCall","src":"9988:20:20"},"variableNames":[{"name":"value","nativeSrc":"9979:5:20","nodeType":"YulIdentifier","src":"9979:5:20"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"10043:5:20","nodeType":"YulIdentifier","src":"10043:5:20"}],"functionName":{"name":"validator_revert_t_uint32","nativeSrc":"10017:25:20","nodeType":"YulIdentifier","src":"10017:25:20"},"nativeSrc":"10017:32:20","nodeType":"YulFunctionCall","src":"10017:32:20"},"nativeSrc":"10017:32:20","nodeType":"YulExpressionStatement","src":"10017:32:20"}]},"name":"abi_decode_t_uint32","nativeSrc":"9918:137:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"9947:6:20","nodeType":"YulTypedName","src":"9947:6:20","type":""},{"name":"end","nativeSrc":"9955:3:20","nodeType":"YulTypedName","src":"9955:3:20","type":""}],"returnVariables":[{"name":"value","nativeSrc":"9963:5:20","nodeType":"YulTypedName","src":"9963:5:20","type":""}],"src":"9918:137:20"},{"body":{"nativeSrc":"10103:78:20","nodeType":"YulBlock","src":"10103:78:20","statements":[{"body":{"nativeSrc":"10159:16:20","nodeType":"YulBlock","src":"10159:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"10168:1:20","nodeType":"YulLiteral","src":"10168:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"10171:1:20","nodeType":"YulLiteral","src":"10171:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"10161:6:20","nodeType":"YulIdentifier","src":"10161:6:20"},"nativeSrc":"10161:12:20","nodeType":"YulFunctionCall","src":"10161:12:20"},"nativeSrc":"10161:12:20","nodeType":"YulExpressionStatement","src":"10161:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"10126:5:20","nodeType":"YulIdentifier","src":"10126:5:20"},{"arguments":[{"name":"value","nativeSrc":"10150:5:20","nodeType":"YulIdentifier","src":"10150:5:20"}],"functionName":{"name":"cleanup_t_int256","nativeSrc":"10133:16:20","nodeType":"YulIdentifier","src":"10133:16:20"},"nativeSrc":"10133:23:20","nodeType":"YulFunctionCall","src":"10133:23:20"}],"functionName":{"name":"eq","nativeSrc":"10123:2:20","nodeType":"YulIdentifier","src":"10123:2:20"},"nativeSrc":"10123:34:20","nodeType":"YulFunctionCall","src":"10123:34:20"}],"functionName":{"name":"iszero","nativeSrc":"10116:6:20","nodeType":"YulIdentifier","src":"10116:6:20"},"nativeSrc":"10116:42:20","nodeType":"YulFunctionCall","src":"10116:42:20"},"nativeSrc":"10113:62:20","nodeType":"YulIf","src":"10113:62:20"}]},"name":"validator_revert_t_int256","nativeSrc":"10061:120:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"10096:5:20","nodeType":"YulTypedName","src":"10096:5:20","type":""}],"src":"10061:120:20"},{"body":{"nativeSrc":"10238:86:20","nodeType":"YulBlock","src":"10238:86:20","statements":[{"nativeSrc":"10248:29:20","nodeType":"YulAssignment","src":"10248:29:20","value":{"arguments":[{"name":"offset","nativeSrc":"10270:6:20","nodeType":"YulIdentifier","src":"10270:6:20"}],"functionName":{"name":"calldataload","nativeSrc":"10257:12:20","nodeType":"YulIdentifier","src":"10257:12:20"},"nativeSrc":"10257:20:20","nodeType":"YulFunctionCall","src":"10257:20:20"},"variableNames":[{"name":"value","nativeSrc":"10248:5:20","nodeType":"YulIdentifier","src":"10248:5:20"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"10312:5:20","nodeType":"YulIdentifier","src":"10312:5:20"}],"functionName":{"name":"validator_revert_t_int256","nativeSrc":"10286:25:20","nodeType":"YulIdentifier","src":"10286:25:20"},"nativeSrc":"10286:32:20","nodeType":"YulFunctionCall","src":"10286:32:20"},"nativeSrc":"10286:32:20","nodeType":"YulExpressionStatement","src":"10286:32:20"}]},"name":"abi_decode_t_int256","nativeSrc":"10187:137:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"10216:6:20","nodeType":"YulTypedName","src":"10216:6:20","type":""},{"name":"end","nativeSrc":"10224:3:20","nodeType":"YulTypedName","src":"10224:3:20","type":""}],"returnVariables":[{"name":"value","nativeSrc":"10232:5:20","nodeType":"YulTypedName","src":"10232:5:20","type":""}],"src":"10187:137:20"},{"body":{"nativeSrc":"10419:28:20","nodeType":"YulBlock","src":"10419:28:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"10436:1:20","nodeType":"YulLiteral","src":"10436:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"10439:1:20","nodeType":"YulLiteral","src":"10439:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"10429:6:20","nodeType":"YulIdentifier","src":"10429:6:20"},"nativeSrc":"10429:12:20","nodeType":"YulFunctionCall","src":"10429:12:20"},"nativeSrc":"10429:12:20","nodeType":"YulExpressionStatement","src":"10429:12:20"}]},"name":"revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f","nativeSrc":"10330:117:20","nodeType":"YulFunctionDefinition","src":"10330:117:20"},{"body":{"nativeSrc":"10481:152:20","nodeType":"YulBlock","src":"10481:152:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"10498:1:20","nodeType":"YulLiteral","src":"10498:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"10501:77:20","nodeType":"YulLiteral","src":"10501:77:20","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"10491:6:20","nodeType":"YulIdentifier","src":"10491:6:20"},"nativeSrc":"10491:88:20","nodeType":"YulFunctionCall","src":"10491:88:20"},"nativeSrc":"10491:88:20","nodeType":"YulExpressionStatement","src":"10491:88:20"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"10595:1:20","nodeType":"YulLiteral","src":"10595:1:20","type":"","value":"4"},{"kind":"number","nativeSrc":"10598:4:20","nodeType":"YulLiteral","src":"10598:4:20","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"10588:6:20","nodeType":"YulIdentifier","src":"10588:6:20"},"nativeSrc":"10588:15:20","nodeType":"YulFunctionCall","src":"10588:15:20"},"nativeSrc":"10588:15:20","nodeType":"YulExpressionStatement","src":"10588:15:20"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"10619:1:20","nodeType":"YulLiteral","src":"10619:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"10622:4:20","nodeType":"YulLiteral","src":"10622:4:20","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"10612:6:20","nodeType":"YulIdentifier","src":"10612:6:20"},"nativeSrc":"10612:15:20","nodeType":"YulFunctionCall","src":"10612:15:20"},"nativeSrc":"10612:15:20","nodeType":"YulExpressionStatement","src":"10612:15:20"}]},"name":"panic_error_0x41","nativeSrc":"10453:180:20","nodeType":"YulFunctionDefinition","src":"10453:180:20"},{"body":{"nativeSrc":"10682:238:20","nodeType":"YulBlock","src":"10682:238:20","statements":[{"nativeSrc":"10692:58:20","nodeType":"YulVariableDeclaration","src":"10692:58:20","value":{"arguments":[{"name":"memPtr","nativeSrc":"10714:6:20","nodeType":"YulIdentifier","src":"10714:6:20"},{"arguments":[{"name":"size","nativeSrc":"10744:4:20","nodeType":"YulIdentifier","src":"10744:4:20"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"10722:21:20","nodeType":"YulIdentifier","src":"10722:21:20"},"nativeSrc":"10722:27:20","nodeType":"YulFunctionCall","src":"10722:27:20"}],"functionName":{"name":"add","nativeSrc":"10710:3:20","nodeType":"YulIdentifier","src":"10710:3:20"},"nativeSrc":"10710:40:20","nodeType":"YulFunctionCall","src":"10710:40:20"},"variables":[{"name":"newFreePtr","nativeSrc":"10696:10:20","nodeType":"YulTypedName","src":"10696:10:20","type":""}]},{"body":{"nativeSrc":"10861:22:20","nodeType":"YulBlock","src":"10861:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"10863:16:20","nodeType":"YulIdentifier","src":"10863:16:20"},"nativeSrc":"10863:18:20","nodeType":"YulFunctionCall","src":"10863:18:20"},"nativeSrc":"10863:18:20","nodeType":"YulExpressionStatement","src":"10863:18:20"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nativeSrc":"10804:10:20","nodeType":"YulIdentifier","src":"10804:10:20"},{"kind":"number","nativeSrc":"10816:18:20","nodeType":"YulLiteral","src":"10816:18:20","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"10801:2:20","nodeType":"YulIdentifier","src":"10801:2:20"},"nativeSrc":"10801:34:20","nodeType":"YulFunctionCall","src":"10801:34:20"},{"arguments":[{"name":"newFreePtr","nativeSrc":"10840:10:20","nodeType":"YulIdentifier","src":"10840:10:20"},{"name":"memPtr","nativeSrc":"10852:6:20","nodeType":"YulIdentifier","src":"10852:6:20"}],"functionName":{"name":"lt","nativeSrc":"10837:2:20","nodeType":"YulIdentifier","src":"10837:2:20"},"nativeSrc":"10837:22:20","nodeType":"YulFunctionCall","src":"10837:22:20"}],"functionName":{"name":"or","nativeSrc":"10798:2:20","nodeType":"YulIdentifier","src":"10798:2:20"},"nativeSrc":"10798:62:20","nodeType":"YulFunctionCall","src":"10798:62:20"},"nativeSrc":"10795:88:20","nodeType":"YulIf","src":"10795:88:20"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"10899:2:20","nodeType":"YulLiteral","src":"10899:2:20","type":"","value":"64"},{"name":"newFreePtr","nativeSrc":"10903:10:20","nodeType":"YulIdentifier","src":"10903:10:20"}],"functionName":{"name":"mstore","nativeSrc":"10892:6:20","nodeType":"YulIdentifier","src":"10892:6:20"},"nativeSrc":"10892:22:20","nodeType":"YulFunctionCall","src":"10892:22:20"},"nativeSrc":"10892:22:20","nodeType":"YulExpressionStatement","src":"10892:22:20"}]},"name":"finalize_allocation","nativeSrc":"10639:281:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"10668:6:20","nodeType":"YulTypedName","src":"10668:6:20","type":""},{"name":"size","nativeSrc":"10676:4:20","nodeType":"YulTypedName","src":"10676:4:20","type":""}],"src":"10639:281:20"},{"body":{"nativeSrc":"10967:88:20","nodeType":"YulBlock","src":"10967:88:20","statements":[{"nativeSrc":"10977:30:20","nodeType":"YulAssignment","src":"10977:30:20","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nativeSrc":"10987:18:20","nodeType":"YulIdentifier","src":"10987:18:20"},"nativeSrc":"10987:20:20","nodeType":"YulFunctionCall","src":"10987:20:20"},"variableNames":[{"name":"memPtr","nativeSrc":"10977:6:20","nodeType":"YulIdentifier","src":"10977:6:20"}]},{"expression":{"arguments":[{"name":"memPtr","nativeSrc":"11036:6:20","nodeType":"YulIdentifier","src":"11036:6:20"},{"name":"size","nativeSrc":"11044:4:20","nodeType":"YulIdentifier","src":"11044:4:20"}],"functionName":{"name":"finalize_allocation","nativeSrc":"11016:19:20","nodeType":"YulIdentifier","src":"11016:19:20"},"nativeSrc":"11016:33:20","nodeType":"YulFunctionCall","src":"11016:33:20"},"nativeSrc":"11016:33:20","nodeType":"YulExpressionStatement","src":"11016:33:20"}]},"name":"allocate_memory","nativeSrc":"10926:129:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nativeSrc":"10951:4:20","nodeType":"YulTypedName","src":"10951:4:20","type":""}],"returnVariables":[{"name":"memPtr","nativeSrc":"10960:6:20","nodeType":"YulTypedName","src":"10960:6:20","type":""}],"src":"10926:129:20"},{"body":{"nativeSrc":"11150:28:20","nodeType":"YulBlock","src":"11150:28:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"11167:1:20","nodeType":"YulLiteral","src":"11167:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"11170:1:20","nodeType":"YulLiteral","src":"11170:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"11160:6:20","nodeType":"YulIdentifier","src":"11160:6:20"},"nativeSrc":"11160:12:20","nodeType":"YulFunctionCall","src":"11160:12:20"},"nativeSrc":"11160:12:20","nodeType":"YulExpressionStatement","src":"11160:12:20"}]},"name":"revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421","nativeSrc":"11061:117:20","nodeType":"YulFunctionDefinition","src":"11061:117:20"},{"body":{"nativeSrc":"11228:47:20","nodeType":"YulBlock","src":"11228:47:20","statements":[{"nativeSrc":"11238:31:20","nodeType":"YulAssignment","src":"11238:31:20","value":{"arguments":[{"name":"value","nativeSrc":"11253:5:20","nodeType":"YulIdentifier","src":"11253:5:20"},{"kind":"number","nativeSrc":"11260:8:20","nodeType":"YulLiteral","src":"11260:8:20","type":"","value":"0xffffff"}],"functionName":{"name":"and","nativeSrc":"11249:3:20","nodeType":"YulIdentifier","src":"11249:3:20"},"nativeSrc":"11249:20:20","nodeType":"YulFunctionCall","src":"11249:20:20"},"variableNames":[{"name":"cleaned","nativeSrc":"11238:7:20","nodeType":"YulIdentifier","src":"11238:7:20"}]}]},"name":"cleanup_t_uint24","nativeSrc":"11184:91:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"11210:5:20","nodeType":"YulTypedName","src":"11210:5:20","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"11220:7:20","nodeType":"YulTypedName","src":"11220:7:20","type":""}],"src":"11184:91:20"},{"body":{"nativeSrc":"11323:78:20","nodeType":"YulBlock","src":"11323:78:20","statements":[{"body":{"nativeSrc":"11379:16:20","nodeType":"YulBlock","src":"11379:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"11388:1:20","nodeType":"YulLiteral","src":"11388:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"11391:1:20","nodeType":"YulLiteral","src":"11391:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"11381:6:20","nodeType":"YulIdentifier","src":"11381:6:20"},"nativeSrc":"11381:12:20","nodeType":"YulFunctionCall","src":"11381:12:20"},"nativeSrc":"11381:12:20","nodeType":"YulExpressionStatement","src":"11381:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"11346:5:20","nodeType":"YulIdentifier","src":"11346:5:20"},{"arguments":[{"name":"value","nativeSrc":"11370:5:20","nodeType":"YulIdentifier","src":"11370:5:20"}],"functionName":{"name":"cleanup_t_uint24","nativeSrc":"11353:16:20","nodeType":"YulIdentifier","src":"11353:16:20"},"nativeSrc":"11353:23:20","nodeType":"YulFunctionCall","src":"11353:23:20"}],"functionName":{"name":"eq","nativeSrc":"11343:2:20","nodeType":"YulIdentifier","src":"11343:2:20"},"nativeSrc":"11343:34:20","nodeType":"YulFunctionCall","src":"11343:34:20"}],"functionName":{"name":"iszero","nativeSrc":"11336:6:20","nodeType":"YulIdentifier","src":"11336:6:20"},"nativeSrc":"11336:42:20","nodeType":"YulFunctionCall","src":"11336:42:20"},"nativeSrc":"11333:62:20","nodeType":"YulIf","src":"11333:62:20"}]},"name":"validator_revert_t_uint24","nativeSrc":"11281:120:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"11316:5:20","nodeType":"YulTypedName","src":"11316:5:20","type":""}],"src":"11281:120:20"},{"body":{"nativeSrc":"11458:86:20","nodeType":"YulBlock","src":"11458:86:20","statements":[{"nativeSrc":"11468:29:20","nodeType":"YulAssignment","src":"11468:29:20","value":{"arguments":[{"name":"offset","nativeSrc":"11490:6:20","nodeType":"YulIdentifier","src":"11490:6:20"}],"functionName":{"name":"calldataload","nativeSrc":"11477:12:20","nodeType":"YulIdentifier","src":"11477:12:20"},"nativeSrc":"11477:20:20","nodeType":"YulFunctionCall","src":"11477:20:20"},"variableNames":[{"name":"value","nativeSrc":"11468:5:20","nodeType":"YulIdentifier","src":"11468:5:20"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"11532:5:20","nodeType":"YulIdentifier","src":"11532:5:20"}],"functionName":{"name":"validator_revert_t_uint24","nativeSrc":"11506:25:20","nodeType":"YulIdentifier","src":"11506:25:20"},"nativeSrc":"11506:32:20","nodeType":"YulFunctionCall","src":"11506:32:20"},"nativeSrc":"11506:32:20","nodeType":"YulExpressionStatement","src":"11506:32:20"}]},"name":"abi_decode_t_uint24","nativeSrc":"11407:137:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"11436:6:20","nodeType":"YulTypedName","src":"11436:6:20","type":""},{"name":"end","nativeSrc":"11444:3:20","nodeType":"YulTypedName","src":"11444:3:20","type":""}],"returnVariables":[{"name":"value","nativeSrc":"11452:5:20","nodeType":"YulTypedName","src":"11452:5:20","type":""}],"src":"11407:137:20"},{"body":{"nativeSrc":"11673:1785:20","nodeType":"YulBlock","src":"11673:1785:20","statements":[{"body":{"nativeSrc":"11719:83:20","nodeType":"YulBlock","src":"11719:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f","nativeSrc":"11721:77:20","nodeType":"YulIdentifier","src":"11721:77:20"},"nativeSrc":"11721:79:20","nodeType":"YulFunctionCall","src":"11721:79:20"},"nativeSrc":"11721:79:20","nodeType":"YulExpressionStatement","src":"11721:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"end","nativeSrc":"11694:3:20","nodeType":"YulIdentifier","src":"11694:3:20"},{"name":"headStart","nativeSrc":"11699:9:20","nodeType":"YulIdentifier","src":"11699:9:20"}],"functionName":{"name":"sub","nativeSrc":"11690:3:20","nodeType":"YulIdentifier","src":"11690:3:20"},"nativeSrc":"11690:19:20","nodeType":"YulFunctionCall","src":"11690:19:20"},{"kind":"number","nativeSrc":"11711:6:20","nodeType":"YulLiteral","src":"11711:6:20","type":"","value":"0x0120"}],"functionName":{"name":"slt","nativeSrc":"11686:3:20","nodeType":"YulIdentifier","src":"11686:3:20"},"nativeSrc":"11686:32:20","nodeType":"YulFunctionCall","src":"11686:32:20"},"nativeSrc":"11683:119:20","nodeType":"YulIf","src":"11683:119:20"},{"nativeSrc":"11811:32:20","nodeType":"YulAssignment","src":"11811:32:20","value":{"arguments":[{"kind":"number","nativeSrc":"11836:6:20","nodeType":"YulLiteral","src":"11836:6:20","type":"","value":"0x0120"}],"functionName":{"name":"allocate_memory","nativeSrc":"11820:15:20","nodeType":"YulIdentifier","src":"11820:15:20"},"nativeSrc":"11820:23:20","nodeType":"YulFunctionCall","src":"11820:23:20"},"variableNames":[{"name":"value","nativeSrc":"11811:5:20","nodeType":"YulIdentifier","src":"11811:5:20"}]},{"nativeSrc":"11853:175:20","nodeType":"YulBlock","src":"11853:175:20","statements":[{"nativeSrc":"11914:15:20","nodeType":"YulVariableDeclaration","src":"11914:15:20","value":{"kind":"number","nativeSrc":"11928:1:20","nodeType":"YulLiteral","src":"11928:1:20","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"11918:6:20","nodeType":"YulTypedName","src":"11918:6:20","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"11954:5:20","nodeType":"YulIdentifier","src":"11954:5:20"},{"kind":"number","nativeSrc":"11961:4:20","nodeType":"YulLiteral","src":"11961:4:20","type":"","value":"0x00"}],"functionName":{"name":"add","nativeSrc":"11950:3:20","nodeType":"YulIdentifier","src":"11950:3:20"},"nativeSrc":"11950:16:20","nodeType":"YulFunctionCall","src":"11950:16:20"},{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11992:9:20","nodeType":"YulIdentifier","src":"11992:9:20"},{"name":"offset","nativeSrc":"12003:6:20","nodeType":"YulIdentifier","src":"12003:6:20"}],"functionName":{"name":"add","nativeSrc":"11988:3:20","nodeType":"YulIdentifier","src":"11988:3:20"},"nativeSrc":"11988:22:20","nodeType":"YulFunctionCall","src":"11988:22:20"},{"name":"end","nativeSrc":"12012:3:20","nodeType":"YulIdentifier","src":"12012:3:20"}],"functionName":{"name":"abi_decode_t_uint32","nativeSrc":"11968:19:20","nodeType":"YulIdentifier","src":"11968:19:20"},"nativeSrc":"11968:48:20","nodeType":"YulFunctionCall","src":"11968:48:20"}],"functionName":{"name":"mstore","nativeSrc":"11943:6:20","nodeType":"YulIdentifier","src":"11943:6:20"},"nativeSrc":"11943:74:20","nodeType":"YulFunctionCall","src":"11943:74:20"},"nativeSrc":"11943:74:20","nodeType":"YulExpressionStatement","src":"11943:74:20"}]},{"nativeSrc":"12038:176:20","nodeType":"YulBlock","src":"12038:176:20","statements":[{"nativeSrc":"12099:16:20","nodeType":"YulVariableDeclaration","src":"12099:16:20","value":{"kind":"number","nativeSrc":"12113:2:20","nodeType":"YulLiteral","src":"12113:2:20","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"12103:6:20","nodeType":"YulTypedName","src":"12103:6:20","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"12140:5:20","nodeType":"YulIdentifier","src":"12140:5:20"},{"kind":"number","nativeSrc":"12147:4:20","nodeType":"YulLiteral","src":"12147:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"12136:3:20","nodeType":"YulIdentifier","src":"12136:3:20"},"nativeSrc":"12136:16:20","nodeType":"YulFunctionCall","src":"12136:16:20"},{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12178:9:20","nodeType":"YulIdentifier","src":"12178:9:20"},{"name":"offset","nativeSrc":"12189:6:20","nodeType":"YulIdentifier","src":"12189:6:20"}],"functionName":{"name":"add","nativeSrc":"12174:3:20","nodeType":"YulIdentifier","src":"12174:3:20"},"nativeSrc":"12174:22:20","nodeType":"YulFunctionCall","src":"12174:22:20"},{"name":"end","nativeSrc":"12198:3:20","nodeType":"YulIdentifier","src":"12198:3:20"}],"functionName":{"name":"abi_decode_t_uint32","nativeSrc":"12154:19:20","nodeType":"YulIdentifier","src":"12154:19:20"},"nativeSrc":"12154:48:20","nodeType":"YulFunctionCall","src":"12154:48:20"}],"functionName":{"name":"mstore","nativeSrc":"12129:6:20","nodeType":"YulIdentifier","src":"12129:6:20"},"nativeSrc":"12129:74:20","nodeType":"YulFunctionCall","src":"12129:74:20"},"nativeSrc":"12129:74:20","nodeType":"YulExpressionStatement","src":"12129:74:20"}]},{"nativeSrc":"12224:176:20","nodeType":"YulBlock","src":"12224:176:20","statements":[{"nativeSrc":"12285:16:20","nodeType":"YulVariableDeclaration","src":"12285:16:20","value":{"kind":"number","nativeSrc":"12299:2:20","nodeType":"YulLiteral","src":"12299:2:20","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"12289:6:20","nodeType":"YulTypedName","src":"12289:6:20","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"12326:5:20","nodeType":"YulIdentifier","src":"12326:5:20"},{"kind":"number","nativeSrc":"12333:4:20","nodeType":"YulLiteral","src":"12333:4:20","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"12322:3:20","nodeType":"YulIdentifier","src":"12322:3:20"},"nativeSrc":"12322:16:20","nodeType":"YulFunctionCall","src":"12322:16:20"},{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12364:9:20","nodeType":"YulIdentifier","src":"12364:9:20"},{"name":"offset","nativeSrc":"12375:6:20","nodeType":"YulIdentifier","src":"12375:6:20"}],"functionName":{"name":"add","nativeSrc":"12360:3:20","nodeType":"YulIdentifier","src":"12360:3:20"},"nativeSrc":"12360:22:20","nodeType":"YulFunctionCall","src":"12360:22:20"},{"name":"end","nativeSrc":"12384:3:20","nodeType":"YulIdentifier","src":"12384:3:20"}],"functionName":{"name":"abi_decode_t_uint32","nativeSrc":"12340:19:20","nodeType":"YulIdentifier","src":"12340:19:20"},"nativeSrc":"12340:48:20","nodeType":"YulFunctionCall","src":"12340:48:20"}],"functionName":{"name":"mstore","nativeSrc":"12315:6:20","nodeType":"YulIdentifier","src":"12315:6:20"},"nativeSrc":"12315:74:20","nodeType":"YulFunctionCall","src":"12315:74:20"},"nativeSrc":"12315:74:20","nodeType":"YulExpressionStatement","src":"12315:74:20"}]},{"nativeSrc":"12410:176:20","nodeType":"YulBlock","src":"12410:176:20","statements":[{"nativeSrc":"12471:16:20","nodeType":"YulVariableDeclaration","src":"12471:16:20","value":{"kind":"number","nativeSrc":"12485:2:20","nodeType":"YulLiteral","src":"12485:2:20","type":"","value":"96"},"variables":[{"name":"offset","nativeSrc":"12475:6:20","nodeType":"YulTypedName","src":"12475:6:20","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"12512:5:20","nodeType":"YulIdentifier","src":"12512:5:20"},{"kind":"number","nativeSrc":"12519:4:20","nodeType":"YulLiteral","src":"12519:4:20","type":"","value":"0x60"}],"functionName":{"name":"add","nativeSrc":"12508:3:20","nodeType":"YulIdentifier","src":"12508:3:20"},"nativeSrc":"12508:16:20","nodeType":"YulFunctionCall","src":"12508:16:20"},{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12550:9:20","nodeType":"YulIdentifier","src":"12550:9:20"},{"name":"offset","nativeSrc":"12561:6:20","nodeType":"YulIdentifier","src":"12561:6:20"}],"functionName":{"name":"add","nativeSrc":"12546:3:20","nodeType":"YulIdentifier","src":"12546:3:20"},"nativeSrc":"12546:22:20","nodeType":"YulFunctionCall","src":"12546:22:20"},{"name":"end","nativeSrc":"12570:3:20","nodeType":"YulIdentifier","src":"12570:3:20"}],"functionName":{"name":"abi_decode_t_uint32","nativeSrc":"12526:19:20","nodeType":"YulIdentifier","src":"12526:19:20"},"nativeSrc":"12526:48:20","nodeType":"YulFunctionCall","src":"12526:48:20"}],"functionName":{"name":"mstore","nativeSrc":"12501:6:20","nodeType":"YulIdentifier","src":"12501:6:20"},"nativeSrc":"12501:74:20","nodeType":"YulFunctionCall","src":"12501:74:20"},"nativeSrc":"12501:74:20","nodeType":"YulExpressionStatement","src":"12501:74:20"}]},{"nativeSrc":"12596:177:20","nodeType":"YulBlock","src":"12596:177:20","statements":[{"nativeSrc":"12657:17:20","nodeType":"YulVariableDeclaration","src":"12657:17:20","value":{"kind":"number","nativeSrc":"12671:3:20","nodeType":"YulLiteral","src":"12671:3:20","type":"","value":"128"},"variables":[{"name":"offset","nativeSrc":"12661:6:20","nodeType":"YulTypedName","src":"12661:6:20","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"12699:5:20","nodeType":"YulIdentifier","src":"12699:5:20"},{"kind":"number","nativeSrc":"12706:4:20","nodeType":"YulLiteral","src":"12706:4:20","type":"","value":"0x80"}],"functionName":{"name":"add","nativeSrc":"12695:3:20","nodeType":"YulIdentifier","src":"12695:3:20"},"nativeSrc":"12695:16:20","nodeType":"YulFunctionCall","src":"12695:16:20"},{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12737:9:20","nodeType":"YulIdentifier","src":"12737:9:20"},{"name":"offset","nativeSrc":"12748:6:20","nodeType":"YulIdentifier","src":"12748:6:20"}],"functionName":{"name":"add","nativeSrc":"12733:3:20","nodeType":"YulIdentifier","src":"12733:3:20"},"nativeSrc":"12733:22:20","nodeType":"YulFunctionCall","src":"12733:22:20"},{"name":"end","nativeSrc":"12757:3:20","nodeType":"YulIdentifier","src":"12757:3:20"}],"functionName":{"name":"abi_decode_t_uint32","nativeSrc":"12713:19:20","nodeType":"YulIdentifier","src":"12713:19:20"},"nativeSrc":"12713:48:20","nodeType":"YulFunctionCall","src":"12713:48:20"}],"functionName":{"name":"mstore","nativeSrc":"12688:6:20","nodeType":"YulIdentifier","src":"12688:6:20"},"nativeSrc":"12688:74:20","nodeType":"YulFunctionCall","src":"12688:74:20"},"nativeSrc":"12688:74:20","nodeType":"YulExpressionStatement","src":"12688:74:20"}]},{"nativeSrc":"12783:159:20","nodeType":"YulBlock","src":"12783:159:20","statements":[{"nativeSrc":"12826:17:20","nodeType":"YulVariableDeclaration","src":"12826:17:20","value":{"kind":"number","nativeSrc":"12840:3:20","nodeType":"YulLiteral","src":"12840:3:20","type":"","value":"160"},"variables":[{"name":"offset","nativeSrc":"12830:6:20","nodeType":"YulTypedName","src":"12830:6:20","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"12868:5:20","nodeType":"YulIdentifier","src":"12868:5:20"},{"kind":"number","nativeSrc":"12875:4:20","nodeType":"YulLiteral","src":"12875:4:20","type":"","value":"0xa0"}],"functionName":{"name":"add","nativeSrc":"12864:3:20","nodeType":"YulIdentifier","src":"12864:3:20"},"nativeSrc":"12864:16:20","nodeType":"YulFunctionCall","src":"12864:16:20"},{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12906:9:20","nodeType":"YulIdentifier","src":"12906:9:20"},{"name":"offset","nativeSrc":"12917:6:20","nodeType":"YulIdentifier","src":"12917:6:20"}],"functionName":{"name":"add","nativeSrc":"12902:3:20","nodeType":"YulIdentifier","src":"12902:3:20"},"nativeSrc":"12902:22:20","nodeType":"YulFunctionCall","src":"12902:22:20"},{"name":"end","nativeSrc":"12926:3:20","nodeType":"YulIdentifier","src":"12926:3:20"}],"functionName":{"name":"abi_decode_t_uint24","nativeSrc":"12882:19:20","nodeType":"YulIdentifier","src":"12882:19:20"},"nativeSrc":"12882:48:20","nodeType":"YulFunctionCall","src":"12882:48:20"}],"functionName":{"name":"mstore","nativeSrc":"12857:6:20","nodeType":"YulIdentifier","src":"12857:6:20"},"nativeSrc":"12857:74:20","nodeType":"YulFunctionCall","src":"12857:74:20"},"nativeSrc":"12857:74:20","nodeType":"YulExpressionStatement","src":"12857:74:20"}]},{"nativeSrc":"12952:159:20","nodeType":"YulBlock","src":"12952:159:20","statements":[{"nativeSrc":"12995:17:20","nodeType":"YulVariableDeclaration","src":"12995:17:20","value":{"kind":"number","nativeSrc":"13009:3:20","nodeType":"YulLiteral","src":"13009:3:20","type":"","value":"192"},"variables":[{"name":"offset","nativeSrc":"12999:6:20","nodeType":"YulTypedName","src":"12999:6:20","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"13037:5:20","nodeType":"YulIdentifier","src":"13037:5:20"},{"kind":"number","nativeSrc":"13044:4:20","nodeType":"YulLiteral","src":"13044:4:20","type":"","value":"0xc0"}],"functionName":{"name":"add","nativeSrc":"13033:3:20","nodeType":"YulIdentifier","src":"13033:3:20"},"nativeSrc":"13033:16:20","nodeType":"YulFunctionCall","src":"13033:16:20"},{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"13075:9:20","nodeType":"YulIdentifier","src":"13075:9:20"},{"name":"offset","nativeSrc":"13086:6:20","nodeType":"YulIdentifier","src":"13086:6:20"}],"functionName":{"name":"add","nativeSrc":"13071:3:20","nodeType":"YulIdentifier","src":"13071:3:20"},"nativeSrc":"13071:22:20","nodeType":"YulFunctionCall","src":"13071:22:20"},{"name":"end","nativeSrc":"13095:3:20","nodeType":"YulIdentifier","src":"13095:3:20"}],"functionName":{"name":"abi_decode_t_uint24","nativeSrc":"13051:19:20","nodeType":"YulIdentifier","src":"13051:19:20"},"nativeSrc":"13051:48:20","nodeType":"YulFunctionCall","src":"13051:48:20"}],"functionName":{"name":"mstore","nativeSrc":"13026:6:20","nodeType":"YulIdentifier","src":"13026:6:20"},"nativeSrc":"13026:74:20","nodeType":"YulFunctionCall","src":"13026:74:20"},"nativeSrc":"13026:74:20","nodeType":"YulExpressionStatement","src":"13026:74:20"}]},{"nativeSrc":"13121:159:20","nodeType":"YulBlock","src":"13121:159:20","statements":[{"nativeSrc":"13164:17:20","nodeType":"YulVariableDeclaration","src":"13164:17:20","value":{"kind":"number","nativeSrc":"13178:3:20","nodeType":"YulLiteral","src":"13178:3:20","type":"","value":"224"},"variables":[{"name":"offset","nativeSrc":"13168:6:20","nodeType":"YulTypedName","src":"13168:6:20","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"13206:5:20","nodeType":"YulIdentifier","src":"13206:5:20"},{"kind":"number","nativeSrc":"13213:4:20","nodeType":"YulLiteral","src":"13213:4:20","type":"","value":"0xe0"}],"functionName":{"name":"add","nativeSrc":"13202:3:20","nodeType":"YulIdentifier","src":"13202:3:20"},"nativeSrc":"13202:16:20","nodeType":"YulFunctionCall","src":"13202:16:20"},{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"13244:9:20","nodeType":"YulIdentifier","src":"13244:9:20"},{"name":"offset","nativeSrc":"13255:6:20","nodeType":"YulIdentifier","src":"13255:6:20"}],"functionName":{"name":"add","nativeSrc":"13240:3:20","nodeType":"YulIdentifier","src":"13240:3:20"},"nativeSrc":"13240:22:20","nodeType":"YulFunctionCall","src":"13240:22:20"},{"name":"end","nativeSrc":"13264:3:20","nodeType":"YulIdentifier","src":"13264:3:20"}],"functionName":{"name":"abi_decode_t_uint24","nativeSrc":"13220:19:20","nodeType":"YulIdentifier","src":"13220:19:20"},"nativeSrc":"13220:48:20","nodeType":"YulFunctionCall","src":"13220:48:20"}],"functionName":{"name":"mstore","nativeSrc":"13195:6:20","nodeType":"YulIdentifier","src":"13195:6:20"},"nativeSrc":"13195:74:20","nodeType":"YulFunctionCall","src":"13195:74:20"},"nativeSrc":"13195:74:20","nodeType":"YulExpressionStatement","src":"13195:74:20"}]},{"nativeSrc":"13290:161:20","nodeType":"YulBlock","src":"13290:161:20","statements":[{"nativeSrc":"13333:17:20","nodeType":"YulVariableDeclaration","src":"13333:17:20","value":{"kind":"number","nativeSrc":"13347:3:20","nodeType":"YulLiteral","src":"13347:3:20","type":"","value":"256"},"variables":[{"name":"offset","nativeSrc":"13337:6:20","nodeType":"YulTypedName","src":"13337:6:20","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"13375:5:20","nodeType":"YulIdentifier","src":"13375:5:20"},{"kind":"number","nativeSrc":"13382:6:20","nodeType":"YulLiteral","src":"13382:6:20","type":"","value":"0x0100"}],"functionName":{"name":"add","nativeSrc":"13371:3:20","nodeType":"YulIdentifier","src":"13371:3:20"},"nativeSrc":"13371:18:20","nodeType":"YulFunctionCall","src":"13371:18:20"},{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"13415:9:20","nodeType":"YulIdentifier","src":"13415:9:20"},{"name":"offset","nativeSrc":"13426:6:20","nodeType":"YulIdentifier","src":"13426:6:20"}],"functionName":{"name":"add","nativeSrc":"13411:3:20","nodeType":"YulIdentifier","src":"13411:3:20"},"nativeSrc":"13411:22:20","nodeType":"YulFunctionCall","src":"13411:22:20"},{"name":"end","nativeSrc":"13435:3:20","nodeType":"YulIdentifier","src":"13435:3:20"}],"functionName":{"name":"abi_decode_t_uint24","nativeSrc":"13391:19:20","nodeType":"YulIdentifier","src":"13391:19:20"},"nativeSrc":"13391:48:20","nodeType":"YulFunctionCall","src":"13391:48:20"}],"functionName":{"name":"mstore","nativeSrc":"13364:6:20","nodeType":"YulIdentifier","src":"13364:6:20"},"nativeSrc":"13364:76:20","nodeType":"YulFunctionCall","src":"13364:76:20"},"nativeSrc":"13364:76:20","nodeType":"YulExpressionStatement","src":"13364:76:20"}]}]},"name":"abi_decode_t_struct$_FeeConfig_$2411_memory_ptr","nativeSrc":"11591:1867:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"11648:9:20","nodeType":"YulTypedName","src":"11648:9:20","type":""},{"name":"end","nativeSrc":"11659:3:20","nodeType":"YulTypedName","src":"11659:3:20","type":""}],"returnVariables":[{"name":"value","nativeSrc":"11667:5:20","nodeType":"YulTypedName","src":"11667:5:20","type":""}],"src":"11591:1867:20"},{"body":{"nativeSrc":"13637:928:20","nodeType":"YulBlock","src":"13637:928:20","statements":[{"body":{"nativeSrc":"13684:83:20","nodeType":"YulBlock","src":"13684:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"13686:77:20","nodeType":"YulIdentifier","src":"13686:77:20"},"nativeSrc":"13686:79:20","nodeType":"YulFunctionCall","src":"13686:79:20"},"nativeSrc":"13686:79:20","nodeType":"YulExpressionStatement","src":"13686:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"13658:7:20","nodeType":"YulIdentifier","src":"13658:7:20"},{"name":"headStart","nativeSrc":"13667:9:20","nodeType":"YulIdentifier","src":"13667:9:20"}],"functionName":{"name":"sub","nativeSrc":"13654:3:20","nodeType":"YulIdentifier","src":"13654:3:20"},"nativeSrc":"13654:23:20","nodeType":"YulFunctionCall","src":"13654:23:20"},{"kind":"number","nativeSrc":"13679:3:20","nodeType":"YulLiteral","src":"13679:3:20","type":"","value":"448"}],"functionName":{"name":"slt","nativeSrc":"13650:3:20","nodeType":"YulIdentifier","src":"13650:3:20"},"nativeSrc":"13650:33:20","nodeType":"YulFunctionCall","src":"13650:33:20"},"nativeSrc":"13647:120:20","nodeType":"YulIf","src":"13647:120:20"},{"nativeSrc":"13777:116:20","nodeType":"YulBlock","src":"13777:116:20","statements":[{"nativeSrc":"13792:15:20","nodeType":"YulVariableDeclaration","src":"13792:15:20","value":{"kind":"number","nativeSrc":"13806:1:20","nodeType":"YulLiteral","src":"13806:1:20","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"13796:6:20","nodeType":"YulTypedName","src":"13796:6:20","type":""}]},{"nativeSrc":"13821:62:20","nodeType":"YulAssignment","src":"13821:62:20","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"13855:9:20","nodeType":"YulIdentifier","src":"13855:9:20"},{"name":"offset","nativeSrc":"13866:6:20","nodeType":"YulIdentifier","src":"13866:6:20"}],"functionName":{"name":"add","nativeSrc":"13851:3:20","nodeType":"YulIdentifier","src":"13851:3:20"},"nativeSrc":"13851:22:20","nodeType":"YulFunctionCall","src":"13851:22:20"},{"name":"dataEnd","nativeSrc":"13875:7:20","nodeType":"YulIdentifier","src":"13875:7:20"}],"functionName":{"name":"abi_decode_t_uint16","nativeSrc":"13831:19:20","nodeType":"YulIdentifier","src":"13831:19:20"},"nativeSrc":"13831:52:20","nodeType":"YulFunctionCall","src":"13831:52:20"},"variableNames":[{"name":"value0","nativeSrc":"13821:6:20","nodeType":"YulIdentifier","src":"13821:6:20"}]}]},{"nativeSrc":"13903:117:20","nodeType":"YulBlock","src":"13903:117:20","statements":[{"nativeSrc":"13918:16:20","nodeType":"YulVariableDeclaration","src":"13918:16:20","value":{"kind":"number","nativeSrc":"13932:2:20","nodeType":"YulLiteral","src":"13932:2:20","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"13922:6:20","nodeType":"YulTypedName","src":"13922:6:20","type":""}]},{"nativeSrc":"13948:62:20","nodeType":"YulAssignment","src":"13948:62:20","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"13982:9:20","nodeType":"YulIdentifier","src":"13982:9:20"},{"name":"offset","nativeSrc":"13993:6:20","nodeType":"YulIdentifier","src":"13993:6:20"}],"functionName":{"name":"add","nativeSrc":"13978:3:20","nodeType":"YulIdentifier","src":"13978:3:20"},"nativeSrc":"13978:22:20","nodeType":"YulFunctionCall","src":"13978:22:20"},{"name":"dataEnd","nativeSrc":"14002:7:20","nodeType":"YulIdentifier","src":"14002:7:20"}],"functionName":{"name":"abi_decode_t_uint32","nativeSrc":"13958:19:20","nodeType":"YulIdentifier","src":"13958:19:20"},"nativeSrc":"13958:52:20","nodeType":"YulFunctionCall","src":"13958:52:20"},"variableNames":[{"name":"value1","nativeSrc":"13948:6:20","nodeType":"YulIdentifier","src":"13948:6:20"}]}]},{"nativeSrc":"14030:117:20","nodeType":"YulBlock","src":"14030:117:20","statements":[{"nativeSrc":"14045:16:20","nodeType":"YulVariableDeclaration","src":"14045:16:20","value":{"kind":"number","nativeSrc":"14059:2:20","nodeType":"YulLiteral","src":"14059:2:20","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"14049:6:20","nodeType":"YulTypedName","src":"14049:6:20","type":""}]},{"nativeSrc":"14075:62:20","nodeType":"YulAssignment","src":"14075:62:20","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"14109:9:20","nodeType":"YulIdentifier","src":"14109:9:20"},{"name":"offset","nativeSrc":"14120:6:20","nodeType":"YulIdentifier","src":"14120:6:20"}],"functionName":{"name":"add","nativeSrc":"14105:3:20","nodeType":"YulIdentifier","src":"14105:3:20"},"nativeSrc":"14105:22:20","nodeType":"YulFunctionCall","src":"14105:22:20"},{"name":"dataEnd","nativeSrc":"14129:7:20","nodeType":"YulIdentifier","src":"14129:7:20"}],"functionName":{"name":"abi_decode_t_uint32","nativeSrc":"14085:19:20","nodeType":"YulIdentifier","src":"14085:19:20"},"nativeSrc":"14085:52:20","nodeType":"YulFunctionCall","src":"14085:52:20"},"variableNames":[{"name":"value2","nativeSrc":"14075:6:20","nodeType":"YulIdentifier","src":"14075:6:20"}]}]},{"nativeSrc":"14157:117:20","nodeType":"YulBlock","src":"14157:117:20","statements":[{"nativeSrc":"14172:16:20","nodeType":"YulVariableDeclaration","src":"14172:16:20","value":{"kind":"number","nativeSrc":"14186:2:20","nodeType":"YulLiteral","src":"14186:2:20","type":"","value":"96"},"variables":[{"name":"offset","nativeSrc":"14176:6:20","nodeType":"YulTypedName","src":"14176:6:20","type":""}]},{"nativeSrc":"14202:62:20","nodeType":"YulAssignment","src":"14202:62:20","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"14236:9:20","nodeType":"YulIdentifier","src":"14236:9:20"},{"name":"offset","nativeSrc":"14247:6:20","nodeType":"YulIdentifier","src":"14247:6:20"}],"functionName":{"name":"add","nativeSrc":"14232:3:20","nodeType":"YulIdentifier","src":"14232:3:20"},"nativeSrc":"14232:22:20","nodeType":"YulFunctionCall","src":"14232:22:20"},{"name":"dataEnd","nativeSrc":"14256:7:20","nodeType":"YulIdentifier","src":"14256:7:20"}],"functionName":{"name":"abi_decode_t_uint32","nativeSrc":"14212:19:20","nodeType":"YulIdentifier","src":"14212:19:20"},"nativeSrc":"14212:52:20","nodeType":"YulFunctionCall","src":"14212:52:20"},"variableNames":[{"name":"value3","nativeSrc":"14202:6:20","nodeType":"YulIdentifier","src":"14202:6:20"}]}]},{"nativeSrc":"14284:118:20","nodeType":"YulBlock","src":"14284:118:20","statements":[{"nativeSrc":"14299:17:20","nodeType":"YulVariableDeclaration","src":"14299:17:20","value":{"kind":"number","nativeSrc":"14313:3:20","nodeType":"YulLiteral","src":"14313:3:20","type":"","value":"128"},"variables":[{"name":"offset","nativeSrc":"14303:6:20","nodeType":"YulTypedName","src":"14303:6:20","type":""}]},{"nativeSrc":"14330:62:20","nodeType":"YulAssignment","src":"14330:62:20","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"14364:9:20","nodeType":"YulIdentifier","src":"14364:9:20"},{"name":"offset","nativeSrc":"14375:6:20","nodeType":"YulIdentifier","src":"14375:6:20"}],"functionName":{"name":"add","nativeSrc":"14360:3:20","nodeType":"YulIdentifier","src":"14360:3:20"},"nativeSrc":"14360:22:20","nodeType":"YulFunctionCall","src":"14360:22:20"},{"name":"dataEnd","nativeSrc":"14384:7:20","nodeType":"YulIdentifier","src":"14384:7:20"}],"functionName":{"name":"abi_decode_t_int256","nativeSrc":"14340:19:20","nodeType":"YulIdentifier","src":"14340:19:20"},"nativeSrc":"14340:52:20","nodeType":"YulFunctionCall","src":"14340:52:20"},"variableNames":[{"name":"value4","nativeSrc":"14330:6:20","nodeType":"YulIdentifier","src":"14330:6:20"}]}]},{"nativeSrc":"14412:146:20","nodeType":"YulBlock","src":"14412:146:20","statements":[{"nativeSrc":"14427:17:20","nodeType":"YulVariableDeclaration","src":"14427:17:20","value":{"kind":"number","nativeSrc":"14441:3:20","nodeType":"YulLiteral","src":"14441:3:20","type":"","value":"160"},"variables":[{"name":"offset","nativeSrc":"14431:6:20","nodeType":"YulTypedName","src":"14431:6:20","type":""}]},{"nativeSrc":"14458:90:20","nodeType":"YulAssignment","src":"14458:90:20","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"14520:9:20","nodeType":"YulIdentifier","src":"14520:9:20"},{"name":"offset","nativeSrc":"14531:6:20","nodeType":"YulIdentifier","src":"14531:6:20"}],"functionName":{"name":"add","nativeSrc":"14516:3:20","nodeType":"YulIdentifier","src":"14516:3:20"},"nativeSrc":"14516:22:20","nodeType":"YulFunctionCall","src":"14516:22:20"},{"name":"dataEnd","nativeSrc":"14540:7:20","nodeType":"YulIdentifier","src":"14540:7:20"}],"functionName":{"name":"abi_decode_t_struct$_FeeConfig_$2411_memory_ptr","nativeSrc":"14468:47:20","nodeType":"YulIdentifier","src":"14468:47:20"},"nativeSrc":"14468:80:20","nodeType":"YulFunctionCall","src":"14468:80:20"},"variableNames":[{"name":"value5","nativeSrc":"14458:6:20","nodeType":"YulIdentifier","src":"14458:6:20"}]}]}]},"name":"abi_decode_tuple_t_uint16t_uint32t_uint32t_uint32t_int256t_struct$_FeeConfig_$2411_memory_ptr","nativeSrc":"13464:1101:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"13567:9:20","nodeType":"YulTypedName","src":"13567:9:20","type":""},{"name":"dataEnd","nativeSrc":"13578:7:20","nodeType":"YulTypedName","src":"13578:7:20","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"13590:6:20","nodeType":"YulTypedName","src":"13590:6:20","type":""},{"name":"value1","nativeSrc":"13598:6:20","nodeType":"YulTypedName","src":"13598:6:20","type":""},{"name":"value2","nativeSrc":"13606:6:20","nodeType":"YulTypedName","src":"13606:6:20","type":""},{"name":"value3","nativeSrc":"13614:6:20","nodeType":"YulTypedName","src":"13614:6:20","type":""},{"name":"value4","nativeSrc":"13622:6:20","nodeType":"YulTypedName","src":"13622:6:20","type":""},{"name":"value5","nativeSrc":"13630:6:20","nodeType":"YulTypedName","src":"13630:6:20","type":""}],"src":"13464:1101:20"},{"body":{"nativeSrc":"14614:79:20","nodeType":"YulBlock","src":"14614:79:20","statements":[{"body":{"nativeSrc":"14671:16:20","nodeType":"YulBlock","src":"14671:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"14680:1:20","nodeType":"YulLiteral","src":"14680:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"14683:1:20","nodeType":"YulLiteral","src":"14683:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"14673:6:20","nodeType":"YulIdentifier","src":"14673:6:20"},"nativeSrc":"14673:12:20","nodeType":"YulFunctionCall","src":"14673:12:20"},"nativeSrc":"14673:12:20","nodeType":"YulExpressionStatement","src":"14673:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"14637:5:20","nodeType":"YulIdentifier","src":"14637:5:20"},{"arguments":[{"name":"value","nativeSrc":"14662:5:20","nodeType":"YulIdentifier","src":"14662:5:20"}],"functionName":{"name":"cleanup_t_bytes32","nativeSrc":"14644:17:20","nodeType":"YulIdentifier","src":"14644:17:20"},"nativeSrc":"14644:24:20","nodeType":"YulFunctionCall","src":"14644:24:20"}],"functionName":{"name":"eq","nativeSrc":"14634:2:20","nodeType":"YulIdentifier","src":"14634:2:20"},"nativeSrc":"14634:35:20","nodeType":"YulFunctionCall","src":"14634:35:20"}],"functionName":{"name":"iszero","nativeSrc":"14627:6:20","nodeType":"YulIdentifier","src":"14627:6:20"},"nativeSrc":"14627:43:20","nodeType":"YulFunctionCall","src":"14627:43:20"},"nativeSrc":"14624:63:20","nodeType":"YulIf","src":"14624:63:20"}]},"name":"validator_revert_t_bytes32","nativeSrc":"14571:122:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"14607:5:20","nodeType":"YulTypedName","src":"14607:5:20","type":""}],"src":"14571:122:20"},{"body":{"nativeSrc":"14751:87:20","nodeType":"YulBlock","src":"14751:87:20","statements":[{"nativeSrc":"14761:29:20","nodeType":"YulAssignment","src":"14761:29:20","value":{"arguments":[{"name":"offset","nativeSrc":"14783:6:20","nodeType":"YulIdentifier","src":"14783:6:20"}],"functionName":{"name":"calldataload","nativeSrc":"14770:12:20","nodeType":"YulIdentifier","src":"14770:12:20"},"nativeSrc":"14770:20:20","nodeType":"YulFunctionCall","src":"14770:20:20"},"variableNames":[{"name":"value","nativeSrc":"14761:5:20","nodeType":"YulIdentifier","src":"14761:5:20"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"14826:5:20","nodeType":"YulIdentifier","src":"14826:5:20"}],"functionName":{"name":"validator_revert_t_bytes32","nativeSrc":"14799:26:20","nodeType":"YulIdentifier","src":"14799:26:20"},"nativeSrc":"14799:33:20","nodeType":"YulFunctionCall","src":"14799:33:20"},"nativeSrc":"14799:33:20","nodeType":"YulExpressionStatement","src":"14799:33:20"}]},"name":"abi_decode_t_bytes32","nativeSrc":"14699:139:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"14729:6:20","nodeType":"YulTypedName","src":"14729:6:20","type":""},{"name":"end","nativeSrc":"14737:3:20","nodeType":"YulTypedName","src":"14737:3:20","type":""}],"returnVariables":[{"name":"value","nativeSrc":"14745:5:20","nodeType":"YulTypedName","src":"14745:5:20","type":""}],"src":"14699:139:20"},{"body":{"nativeSrc":"14974:773:20","nodeType":"YulBlock","src":"14974:773:20","statements":[{"body":{"nativeSrc":"15021:83:20","nodeType":"YulBlock","src":"15021:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"15023:77:20","nodeType":"YulIdentifier","src":"15023:77:20"},"nativeSrc":"15023:79:20","nodeType":"YulFunctionCall","src":"15023:79:20"},"nativeSrc":"15023:79:20","nodeType":"YulExpressionStatement","src":"15023:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"14995:7:20","nodeType":"YulIdentifier","src":"14995:7:20"},{"name":"headStart","nativeSrc":"15004:9:20","nodeType":"YulIdentifier","src":"15004:9:20"}],"functionName":{"name":"sub","nativeSrc":"14991:3:20","nodeType":"YulIdentifier","src":"14991:3:20"},"nativeSrc":"14991:23:20","nodeType":"YulFunctionCall","src":"14991:23:20"},{"kind":"number","nativeSrc":"15016:3:20","nodeType":"YulLiteral","src":"15016:3:20","type":"","value":"160"}],"functionName":{"name":"slt","nativeSrc":"14987:3:20","nodeType":"YulIdentifier","src":"14987:3:20"},"nativeSrc":"14987:33:20","nodeType":"YulFunctionCall","src":"14987:33:20"},"nativeSrc":"14984:120:20","nodeType":"YulIf","src":"14984:120:20"},{"nativeSrc":"15114:117:20","nodeType":"YulBlock","src":"15114:117:20","statements":[{"nativeSrc":"15129:15:20","nodeType":"YulVariableDeclaration","src":"15129:15:20","value":{"kind":"number","nativeSrc":"15143:1:20","nodeType":"YulLiteral","src":"15143:1:20","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"15133:6:20","nodeType":"YulTypedName","src":"15133:6:20","type":""}]},{"nativeSrc":"15158:63:20","nodeType":"YulAssignment","src":"15158:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"15193:9:20","nodeType":"YulIdentifier","src":"15193:9:20"},{"name":"offset","nativeSrc":"15204:6:20","nodeType":"YulIdentifier","src":"15204:6:20"}],"functionName":{"name":"add","nativeSrc":"15189:3:20","nodeType":"YulIdentifier","src":"15189:3:20"},"nativeSrc":"15189:22:20","nodeType":"YulFunctionCall","src":"15189:22:20"},{"name":"dataEnd","nativeSrc":"15213:7:20","nodeType":"YulIdentifier","src":"15213:7:20"}],"functionName":{"name":"abi_decode_t_bytes32","nativeSrc":"15168:20:20","nodeType":"YulIdentifier","src":"15168:20:20"},"nativeSrc":"15168:53:20","nodeType":"YulFunctionCall","src":"15168:53:20"},"variableNames":[{"name":"value0","nativeSrc":"15158:6:20","nodeType":"YulIdentifier","src":"15158:6:20"}]}]},{"nativeSrc":"15241:117:20","nodeType":"YulBlock","src":"15241:117:20","statements":[{"nativeSrc":"15256:16:20","nodeType":"YulVariableDeclaration","src":"15256:16:20","value":{"kind":"number","nativeSrc":"15270:2:20","nodeType":"YulLiteral","src":"15270:2:20","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"15260:6:20","nodeType":"YulTypedName","src":"15260:6:20","type":""}]},{"nativeSrc":"15286:62:20","nodeType":"YulAssignment","src":"15286:62:20","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"15320:9:20","nodeType":"YulIdentifier","src":"15320:9:20"},{"name":"offset","nativeSrc":"15331:6:20","nodeType":"YulIdentifier","src":"15331:6:20"}],"functionName":{"name":"add","nativeSrc":"15316:3:20","nodeType":"YulIdentifier","src":"15316:3:20"},"nativeSrc":"15316:22:20","nodeType":"YulFunctionCall","src":"15316:22:20"},{"name":"dataEnd","nativeSrc":"15340:7:20","nodeType":"YulIdentifier","src":"15340:7:20"}],"functionName":{"name":"abi_decode_t_uint64","nativeSrc":"15296:19:20","nodeType":"YulIdentifier","src":"15296:19:20"},"nativeSrc":"15296:52:20","nodeType":"YulFunctionCall","src":"15296:52:20"},"variableNames":[{"name":"value1","nativeSrc":"15286:6:20","nodeType":"YulIdentifier","src":"15286:6:20"}]}]},{"nativeSrc":"15368:117:20","nodeType":"YulBlock","src":"15368:117:20","statements":[{"nativeSrc":"15383:16:20","nodeType":"YulVariableDeclaration","src":"15383:16:20","value":{"kind":"number","nativeSrc":"15397:2:20","nodeType":"YulLiteral","src":"15397:2:20","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"15387:6:20","nodeType":"YulTypedName","src":"15387:6:20","type":""}]},{"nativeSrc":"15413:62:20","nodeType":"YulAssignment","src":"15413:62:20","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"15447:9:20","nodeType":"YulIdentifier","src":"15447:9:20"},{"name":"offset","nativeSrc":"15458:6:20","nodeType":"YulIdentifier","src":"15458:6:20"}],"functionName":{"name":"add","nativeSrc":"15443:3:20","nodeType":"YulIdentifier","src":"15443:3:20"},"nativeSrc":"15443:22:20","nodeType":"YulFunctionCall","src":"15443:22:20"},{"name":"dataEnd","nativeSrc":"15467:7:20","nodeType":"YulIdentifier","src":"15467:7:20"}],"functionName":{"name":"abi_decode_t_uint16","nativeSrc":"15423:19:20","nodeType":"YulIdentifier","src":"15423:19:20"},"nativeSrc":"15423:52:20","nodeType":"YulFunctionCall","src":"15423:52:20"},"variableNames":[{"name":"value2","nativeSrc":"15413:6:20","nodeType":"YulIdentifier","src":"15413:6:20"}]}]},{"nativeSrc":"15495:117:20","nodeType":"YulBlock","src":"15495:117:20","statements":[{"nativeSrc":"15510:16:20","nodeType":"YulVariableDeclaration","src":"15510:16:20","value":{"kind":"number","nativeSrc":"15524:2:20","nodeType":"YulLiteral","src":"15524:2:20","type":"","value":"96"},"variables":[{"name":"offset","nativeSrc":"15514:6:20","nodeType":"YulTypedName","src":"15514:6:20","type":""}]},{"nativeSrc":"15540:62:20","nodeType":"YulAssignment","src":"15540:62:20","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"15574:9:20","nodeType":"YulIdentifier","src":"15574:9:20"},{"name":"offset","nativeSrc":"15585:6:20","nodeType":"YulIdentifier","src":"15585:6:20"}],"functionName":{"name":"add","nativeSrc":"15570:3:20","nodeType":"YulIdentifier","src":"15570:3:20"},"nativeSrc":"15570:22:20","nodeType":"YulFunctionCall","src":"15570:22:20"},{"name":"dataEnd","nativeSrc":"15594:7:20","nodeType":"YulIdentifier","src":"15594:7:20"}],"functionName":{"name":"abi_decode_t_uint32","nativeSrc":"15550:19:20","nodeType":"YulIdentifier","src":"15550:19:20"},"nativeSrc":"15550:52:20","nodeType":"YulFunctionCall","src":"15550:52:20"},"variableNames":[{"name":"value3","nativeSrc":"15540:6:20","nodeType":"YulIdentifier","src":"15540:6:20"}]}]},{"nativeSrc":"15622:118:20","nodeType":"YulBlock","src":"15622:118:20","statements":[{"nativeSrc":"15637:17:20","nodeType":"YulVariableDeclaration","src":"15637:17:20","value":{"kind":"number","nativeSrc":"15651:3:20","nodeType":"YulLiteral","src":"15651:3:20","type":"","value":"128"},"variables":[{"name":"offset","nativeSrc":"15641:6:20","nodeType":"YulTypedName","src":"15641:6:20","type":""}]},{"nativeSrc":"15668:62:20","nodeType":"YulAssignment","src":"15668:62:20","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"15702:9:20","nodeType":"YulIdentifier","src":"15702:9:20"},{"name":"offset","nativeSrc":"15713:6:20","nodeType":"YulIdentifier","src":"15713:6:20"}],"functionName":{"name":"add","nativeSrc":"15698:3:20","nodeType":"YulIdentifier","src":"15698:3:20"},"nativeSrc":"15698:22:20","nodeType":"YulFunctionCall","src":"15698:22:20"},{"name":"dataEnd","nativeSrc":"15722:7:20","nodeType":"YulIdentifier","src":"15722:7:20"}],"functionName":{"name":"abi_decode_t_uint32","nativeSrc":"15678:19:20","nodeType":"YulIdentifier","src":"15678:19:20"},"nativeSrc":"15678:52:20","nodeType":"YulFunctionCall","src":"15678:52:20"},"variableNames":[{"name":"value4","nativeSrc":"15668:6:20","nodeType":"YulIdentifier","src":"15668:6:20"}]}]}]},"name":"abi_decode_tuple_t_bytes32t_uint64t_uint16t_uint32t_uint32","nativeSrc":"14844:903:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"14912:9:20","nodeType":"YulTypedName","src":"14912:9:20","type":""},{"name":"dataEnd","nativeSrc":"14923:7:20","nodeType":"YulTypedName","src":"14923:7:20","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"14935:6:20","nodeType":"YulTypedName","src":"14935:6:20","type":""},{"name":"value1","nativeSrc":"14943:6:20","nodeType":"YulTypedName","src":"14943:6:20","type":""},{"name":"value2","nativeSrc":"14951:6:20","nodeType":"YulTypedName","src":"14951:6:20","type":""},{"name":"value3","nativeSrc":"14959:6:20","nodeType":"YulTypedName","src":"14959:6:20","type":""},{"name":"value4","nativeSrc":"14967:6:20","nodeType":"YulTypedName","src":"14967:6:20","type":""}],"src":"14844:903:20"},{"body":{"nativeSrc":"15816:52:20","nodeType":"YulBlock","src":"15816:52:20","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"15833:3:20","nodeType":"YulIdentifier","src":"15833:3:20"},{"arguments":[{"name":"value","nativeSrc":"15855:5:20","nodeType":"YulIdentifier","src":"15855:5:20"}],"functionName":{"name":"cleanup_t_uint24","nativeSrc":"15838:16:20","nodeType":"YulIdentifier","src":"15838:16:20"},"nativeSrc":"15838:23:20","nodeType":"YulFunctionCall","src":"15838:23:20"}],"functionName":{"name":"mstore","nativeSrc":"15826:6:20","nodeType":"YulIdentifier","src":"15826:6:20"},"nativeSrc":"15826:36:20","nodeType":"YulFunctionCall","src":"15826:36:20"},"nativeSrc":"15826:36:20","nodeType":"YulExpressionStatement","src":"15826:36:20"}]},"name":"abi_encode_t_uint24_to_t_uint24_fromStack","nativeSrc":"15753:115:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"15804:5:20","nodeType":"YulTypedName","src":"15804:5:20","type":""},{"name":"pos","nativeSrc":"15811:3:20","nodeType":"YulTypedName","src":"15811:3:20","type":""}],"src":"15753:115:20"},{"body":{"nativeSrc":"16178:768:20","nodeType":"YulBlock","src":"16178:768:20","statements":[{"nativeSrc":"16188:27:20","nodeType":"YulAssignment","src":"16188:27:20","value":{"arguments":[{"name":"headStart","nativeSrc":"16200:9:20","nodeType":"YulIdentifier","src":"16200:9:20"},{"kind":"number","nativeSrc":"16211:3:20","nodeType":"YulLiteral","src":"16211:3:20","type":"","value":"288"}],"functionName":{"name":"add","nativeSrc":"16196:3:20","nodeType":"YulIdentifier","src":"16196:3:20"},"nativeSrc":"16196:19:20","nodeType":"YulFunctionCall","src":"16196:19:20"},"variableNames":[{"name":"tail","nativeSrc":"16188:4:20","nodeType":"YulIdentifier","src":"16188:4:20"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"16267:6:20","nodeType":"YulIdentifier","src":"16267:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"16280:9:20","nodeType":"YulIdentifier","src":"16280:9:20"},{"kind":"number","nativeSrc":"16291:1:20","nodeType":"YulLiteral","src":"16291:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"16276:3:20","nodeType":"YulIdentifier","src":"16276:3:20"},"nativeSrc":"16276:17:20","nodeType":"YulFunctionCall","src":"16276:17:20"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nativeSrc":"16225:41:20","nodeType":"YulIdentifier","src":"16225:41:20"},"nativeSrc":"16225:69:20","nodeType":"YulFunctionCall","src":"16225:69:20"},"nativeSrc":"16225:69:20","nodeType":"YulExpressionStatement","src":"16225:69:20"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"16346:6:20","nodeType":"YulIdentifier","src":"16346:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"16359:9:20","nodeType":"YulIdentifier","src":"16359:9:20"},{"kind":"number","nativeSrc":"16370:2:20","nodeType":"YulLiteral","src":"16370:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"16355:3:20","nodeType":"YulIdentifier","src":"16355:3:20"},"nativeSrc":"16355:18:20","nodeType":"YulFunctionCall","src":"16355:18:20"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nativeSrc":"16304:41:20","nodeType":"YulIdentifier","src":"16304:41:20"},"nativeSrc":"16304:70:20","nodeType":"YulFunctionCall","src":"16304:70:20"},"nativeSrc":"16304:70:20","nodeType":"YulExpressionStatement","src":"16304:70:20"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"16426:6:20","nodeType":"YulIdentifier","src":"16426:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"16439:9:20","nodeType":"YulIdentifier","src":"16439:9:20"},{"kind":"number","nativeSrc":"16450:2:20","nodeType":"YulLiteral","src":"16450:2:20","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"16435:3:20","nodeType":"YulIdentifier","src":"16435:3:20"},"nativeSrc":"16435:18:20","nodeType":"YulFunctionCall","src":"16435:18:20"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nativeSrc":"16384:41:20","nodeType":"YulIdentifier","src":"16384:41:20"},"nativeSrc":"16384:70:20","nodeType":"YulFunctionCall","src":"16384:70:20"},"nativeSrc":"16384:70:20","nodeType":"YulExpressionStatement","src":"16384:70:20"},{"expression":{"arguments":[{"name":"value3","nativeSrc":"16506:6:20","nodeType":"YulIdentifier","src":"16506:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"16519:9:20","nodeType":"YulIdentifier","src":"16519:9:20"},{"kind":"number","nativeSrc":"16530:2:20","nodeType":"YulLiteral","src":"16530:2:20","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"16515:3:20","nodeType":"YulIdentifier","src":"16515:3:20"},"nativeSrc":"16515:18:20","nodeType":"YulFunctionCall","src":"16515:18:20"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nativeSrc":"16464:41:20","nodeType":"YulIdentifier","src":"16464:41:20"},"nativeSrc":"16464:70:20","nodeType":"YulFunctionCall","src":"16464:70:20"},"nativeSrc":"16464:70:20","nodeType":"YulExpressionStatement","src":"16464:70:20"},{"expression":{"arguments":[{"name":"value4","nativeSrc":"16586:6:20","nodeType":"YulIdentifier","src":"16586:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"16599:9:20","nodeType":"YulIdentifier","src":"16599:9:20"},{"kind":"number","nativeSrc":"16610:3:20","nodeType":"YulLiteral","src":"16610:3:20","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"16595:3:20","nodeType":"YulIdentifier","src":"16595:3:20"},"nativeSrc":"16595:19:20","nodeType":"YulFunctionCall","src":"16595:19:20"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nativeSrc":"16544:41:20","nodeType":"YulIdentifier","src":"16544:41:20"},"nativeSrc":"16544:71:20","nodeType":"YulFunctionCall","src":"16544:71:20"},"nativeSrc":"16544:71:20","nodeType":"YulExpressionStatement","src":"16544:71:20"},{"expression":{"arguments":[{"name":"value5","nativeSrc":"16667:6:20","nodeType":"YulIdentifier","src":"16667:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"16680:9:20","nodeType":"YulIdentifier","src":"16680:9:20"},{"kind":"number","nativeSrc":"16691:3:20","nodeType":"YulLiteral","src":"16691:3:20","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"16676:3:20","nodeType":"YulIdentifier","src":"16676:3:20"},"nativeSrc":"16676:19:20","nodeType":"YulFunctionCall","src":"16676:19:20"}],"functionName":{"name":"abi_encode_t_uint24_to_t_uint24_fromStack","nativeSrc":"16625:41:20","nodeType":"YulIdentifier","src":"16625:41:20"},"nativeSrc":"16625:71:20","nodeType":"YulFunctionCall","src":"16625:71:20"},"nativeSrc":"16625:71:20","nodeType":"YulExpressionStatement","src":"16625:71:20"},{"expression":{"arguments":[{"name":"value6","nativeSrc":"16748:6:20","nodeType":"YulIdentifier","src":"16748:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"16761:9:20","nodeType":"YulIdentifier","src":"16761:9:20"},{"kind":"number","nativeSrc":"16772:3:20","nodeType":"YulLiteral","src":"16772:3:20","type":"","value":"192"}],"functionName":{"name":"add","nativeSrc":"16757:3:20","nodeType":"YulIdentifier","src":"16757:3:20"},"nativeSrc":"16757:19:20","nodeType":"YulFunctionCall","src":"16757:19:20"}],"functionName":{"name":"abi_encode_t_uint24_to_t_uint24_fromStack","nativeSrc":"16706:41:20","nodeType":"YulIdentifier","src":"16706:41:20"},"nativeSrc":"16706:71:20","nodeType":"YulFunctionCall","src":"16706:71:20"},"nativeSrc":"16706:71:20","nodeType":"YulExpressionStatement","src":"16706:71:20"},{"expression":{"arguments":[{"name":"value7","nativeSrc":"16829:6:20","nodeType":"YulIdentifier","src":"16829:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"16842:9:20","nodeType":"YulIdentifier","src":"16842:9:20"},{"kind":"number","nativeSrc":"16853:3:20","nodeType":"YulLiteral","src":"16853:3:20","type":"","value":"224"}],"functionName":{"name":"add","nativeSrc":"16838:3:20","nodeType":"YulIdentifier","src":"16838:3:20"},"nativeSrc":"16838:19:20","nodeType":"YulFunctionCall","src":"16838:19:20"}],"functionName":{"name":"abi_encode_t_uint24_to_t_uint24_fromStack","nativeSrc":"16787:41:20","nodeType":"YulIdentifier","src":"16787:41:20"},"nativeSrc":"16787:71:20","nodeType":"YulFunctionCall","src":"16787:71:20"},"nativeSrc":"16787:71:20","nodeType":"YulExpressionStatement","src":"16787:71:20"},{"expression":{"arguments":[{"name":"value8","nativeSrc":"16910:6:20","nodeType":"YulIdentifier","src":"16910:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"16923:9:20","nodeType":"YulIdentifier","src":"16923:9:20"},{"kind":"number","nativeSrc":"16934:3:20","nodeType":"YulLiteral","src":"16934:3:20","type":"","value":"256"}],"functionName":{"name":"add","nativeSrc":"16919:3:20","nodeType":"YulIdentifier","src":"16919:3:20"},"nativeSrc":"16919:19:20","nodeType":"YulFunctionCall","src":"16919:19:20"}],"functionName":{"name":"abi_encode_t_uint24_to_t_uint24_fromStack","nativeSrc":"16868:41:20","nodeType":"YulIdentifier","src":"16868:41:20"},"nativeSrc":"16868:71:20","nodeType":"YulFunctionCall","src":"16868:71:20"},"nativeSrc":"16868:71:20","nodeType":"YulExpressionStatement","src":"16868:71:20"}]},"name":"abi_encode_tuple_t_uint32_t_uint32_t_uint32_t_uint32_t_uint32_t_uint24_t_uint24_t_uint24_t_uint24__to_t_uint32_t_uint32_t_uint32_t_uint32_t_uint32_t_uint24_t_uint24_t_uint24_t_uint24__fromStack_reversed","nativeSrc":"15874:1072:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"16086:9:20","nodeType":"YulTypedName","src":"16086:9:20","type":""},{"name":"value8","nativeSrc":"16098:6:20","nodeType":"YulTypedName","src":"16098:6:20","type":""},{"name":"value7","nativeSrc":"16106:6:20","nodeType":"YulTypedName","src":"16106:6:20","type":""},{"name":"value6","nativeSrc":"16114:6:20","nodeType":"YulTypedName","src":"16114:6:20","type":""},{"name":"value5","nativeSrc":"16122:6:20","nodeType":"YulTypedName","src":"16122:6:20","type":""},{"name":"value4","nativeSrc":"16130:6:20","nodeType":"YulTypedName","src":"16130:6:20","type":""},{"name":"value3","nativeSrc":"16138:6:20","nodeType":"YulTypedName","src":"16138:6:20","type":""},{"name":"value2","nativeSrc":"16146:6:20","nodeType":"YulTypedName","src":"16146:6:20","type":""},{"name":"value1","nativeSrc":"16154:6:20","nodeType":"YulTypedName","src":"16154:6:20","type":""},{"name":"value0","nativeSrc":"16162:6:20","nodeType":"YulTypedName","src":"16162:6:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"16173:4:20","nodeType":"YulTypedName","src":"16173:4:20","type":""}],"src":"15874:1072:20"},{"body":{"nativeSrc":"16996:65:20","nodeType":"YulBlock","src":"16996:65:20","statements":[{"nativeSrc":"17006:49:20","nodeType":"YulAssignment","src":"17006:49:20","value":{"arguments":[{"name":"value","nativeSrc":"17021:5:20","nodeType":"YulIdentifier","src":"17021:5:20"},{"kind":"number","nativeSrc":"17028:26:20","nodeType":"YulLiteral","src":"17028:26:20","type":"","value":"0xffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"17017:3:20","nodeType":"YulIdentifier","src":"17017:3:20"},"nativeSrc":"17017:38:20","nodeType":"YulFunctionCall","src":"17017:38:20"},"variableNames":[{"name":"cleaned","nativeSrc":"17006:7:20","nodeType":"YulIdentifier","src":"17006:7:20"}]}]},"name":"cleanup_t_uint96","nativeSrc":"16952:109:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"16978:5:20","nodeType":"YulTypedName","src":"16978:5:20","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"16988:7:20","nodeType":"YulTypedName","src":"16988:7:20","type":""}],"src":"16952:109:20"},{"body":{"nativeSrc":"17109:78:20","nodeType":"YulBlock","src":"17109:78:20","statements":[{"body":{"nativeSrc":"17165:16:20","nodeType":"YulBlock","src":"17165:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"17174:1:20","nodeType":"YulLiteral","src":"17174:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"17177:1:20","nodeType":"YulLiteral","src":"17177:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"17167:6:20","nodeType":"YulIdentifier","src":"17167:6:20"},"nativeSrc":"17167:12:20","nodeType":"YulFunctionCall","src":"17167:12:20"},"nativeSrc":"17167:12:20","nodeType":"YulExpressionStatement","src":"17167:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"17132:5:20","nodeType":"YulIdentifier","src":"17132:5:20"},{"arguments":[{"name":"value","nativeSrc":"17156:5:20","nodeType":"YulIdentifier","src":"17156:5:20"}],"functionName":{"name":"cleanup_t_uint96","nativeSrc":"17139:16:20","nodeType":"YulIdentifier","src":"17139:16:20"},"nativeSrc":"17139:23:20","nodeType":"YulFunctionCall","src":"17139:23:20"}],"functionName":{"name":"eq","nativeSrc":"17129:2:20","nodeType":"YulIdentifier","src":"17129:2:20"},"nativeSrc":"17129:34:20","nodeType":"YulFunctionCall","src":"17129:34:20"}],"functionName":{"name":"iszero","nativeSrc":"17122:6:20","nodeType":"YulIdentifier","src":"17122:6:20"},"nativeSrc":"17122:42:20","nodeType":"YulFunctionCall","src":"17122:42:20"},"nativeSrc":"17119:62:20","nodeType":"YulIf","src":"17119:62:20"}]},"name":"validator_revert_t_uint96","nativeSrc":"17067:120:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"17102:5:20","nodeType":"YulTypedName","src":"17102:5:20","type":""}],"src":"17067:120:20"},{"body":{"nativeSrc":"17244:86:20","nodeType":"YulBlock","src":"17244:86:20","statements":[{"nativeSrc":"17254:29:20","nodeType":"YulAssignment","src":"17254:29:20","value":{"arguments":[{"name":"offset","nativeSrc":"17276:6:20","nodeType":"YulIdentifier","src":"17276:6:20"}],"functionName":{"name":"calldataload","nativeSrc":"17263:12:20","nodeType":"YulIdentifier","src":"17263:12:20"},"nativeSrc":"17263:20:20","nodeType":"YulFunctionCall","src":"17263:20:20"},"variableNames":[{"name":"value","nativeSrc":"17254:5:20","nodeType":"YulIdentifier","src":"17254:5:20"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"17318:5:20","nodeType":"YulIdentifier","src":"17318:5:20"}],"functionName":{"name":"validator_revert_t_uint96","nativeSrc":"17292:25:20","nodeType":"YulIdentifier","src":"17292:25:20"},"nativeSrc":"17292:32:20","nodeType":"YulFunctionCall","src":"17292:32:20"},"nativeSrc":"17292:32:20","nodeType":"YulExpressionStatement","src":"17292:32:20"}]},"name":"abi_decode_t_uint96","nativeSrc":"17193:137:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"17222:6:20","nodeType":"YulTypedName","src":"17222:6:20","type":""},{"name":"end","nativeSrc":"17230:3:20","nodeType":"YulTypedName","src":"17230:3:20","type":""}],"returnVariables":[{"name":"value","nativeSrc":"17238:5:20","nodeType":"YulTypedName","src":"17238:5:20","type":""}],"src":"17193:137:20"},{"body":{"nativeSrc":"17418:390:20","nodeType":"YulBlock","src":"17418:390:20","statements":[{"body":{"nativeSrc":"17464:83:20","nodeType":"YulBlock","src":"17464:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"17466:77:20","nodeType":"YulIdentifier","src":"17466:77:20"},"nativeSrc":"17466:79:20","nodeType":"YulFunctionCall","src":"17466:79:20"},"nativeSrc":"17466:79:20","nodeType":"YulExpressionStatement","src":"17466:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"17439:7:20","nodeType":"YulIdentifier","src":"17439:7:20"},{"name":"headStart","nativeSrc":"17448:9:20","nodeType":"YulIdentifier","src":"17448:9:20"}],"functionName":{"name":"sub","nativeSrc":"17435:3:20","nodeType":"YulIdentifier","src":"17435:3:20"},"nativeSrc":"17435:23:20","nodeType":"YulFunctionCall","src":"17435:23:20"},{"kind":"number","nativeSrc":"17460:2:20","nodeType":"YulLiteral","src":"17460:2:20","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"17431:3:20","nodeType":"YulIdentifier","src":"17431:3:20"},"nativeSrc":"17431:32:20","nodeType":"YulFunctionCall","src":"17431:32:20"},"nativeSrc":"17428:119:20","nodeType":"YulIf","src":"17428:119:20"},{"nativeSrc":"17557:117:20","nodeType":"YulBlock","src":"17557:117:20","statements":[{"nativeSrc":"17572:15:20","nodeType":"YulVariableDeclaration","src":"17572:15:20","value":{"kind":"number","nativeSrc":"17586:1:20","nodeType":"YulLiteral","src":"17586:1:20","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"17576:6:20","nodeType":"YulTypedName","src":"17576:6:20","type":""}]},{"nativeSrc":"17601:63:20","nodeType":"YulAssignment","src":"17601:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"17636:9:20","nodeType":"YulIdentifier","src":"17636:9:20"},{"name":"offset","nativeSrc":"17647:6:20","nodeType":"YulIdentifier","src":"17647:6:20"}],"functionName":{"name":"add","nativeSrc":"17632:3:20","nodeType":"YulIdentifier","src":"17632:3:20"},"nativeSrc":"17632:22:20","nodeType":"YulFunctionCall","src":"17632:22:20"},{"name":"dataEnd","nativeSrc":"17656:7:20","nodeType":"YulIdentifier","src":"17656:7:20"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"17611:20:20","nodeType":"YulIdentifier","src":"17611:20:20"},"nativeSrc":"17611:53:20","nodeType":"YulFunctionCall","src":"17611:53:20"},"variableNames":[{"name":"value0","nativeSrc":"17601:6:20","nodeType":"YulIdentifier","src":"17601:6:20"}]}]},{"nativeSrc":"17684:117:20","nodeType":"YulBlock","src":"17684:117:20","statements":[{"nativeSrc":"17699:16:20","nodeType":"YulVariableDeclaration","src":"17699:16:20","value":{"kind":"number","nativeSrc":"17713:2:20","nodeType":"YulLiteral","src":"17713:2:20","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"17703:6:20","nodeType":"YulTypedName","src":"17703:6:20","type":""}]},{"nativeSrc":"17729:62:20","nodeType":"YulAssignment","src":"17729:62:20","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"17763:9:20","nodeType":"YulIdentifier","src":"17763:9:20"},{"name":"offset","nativeSrc":"17774:6:20","nodeType":"YulIdentifier","src":"17774:6:20"}],"functionName":{"name":"add","nativeSrc":"17759:3:20","nodeType":"YulIdentifier","src":"17759:3:20"},"nativeSrc":"17759:22:20","nodeType":"YulFunctionCall","src":"17759:22:20"},{"name":"dataEnd","nativeSrc":"17783:7:20","nodeType":"YulIdentifier","src":"17783:7:20"}],"functionName":{"name":"abi_decode_t_uint96","nativeSrc":"17739:19:20","nodeType":"YulIdentifier","src":"17739:19:20"},"nativeSrc":"17739:52:20","nodeType":"YulFunctionCall","src":"17739:52:20"},"variableNames":[{"name":"value1","nativeSrc":"17729:6:20","nodeType":"YulIdentifier","src":"17729:6:20"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint96","nativeSrc":"17336:472:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"17380:9:20","nodeType":"YulTypedName","src":"17380:9:20","type":""},{"name":"dataEnd","nativeSrc":"17391:7:20","nodeType":"YulTypedName","src":"17391:7:20","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"17403:6:20","nodeType":"YulTypedName","src":"17403:6:20","type":""},{"name":"value1","nativeSrc":"17411:6:20","nodeType":"YulTypedName","src":"17411:6:20","type":""}],"src":"17336:472:20"},{"body":{"nativeSrc":"17905:66:20","nodeType":"YulBlock","src":"17905:66:20","statements":[{"nativeSrc":"17915:50:20","nodeType":"YulAssignment","src":"17915:50:20","value":{"arguments":[{"name":"value","nativeSrc":"17959:5:20","nodeType":"YulIdentifier","src":"17959:5:20"}],"functionName":{"name":"convert_t_uint160_to_t_address","nativeSrc":"17928:30:20","nodeType":"YulIdentifier","src":"17928:30:20"},"nativeSrc":"17928:37:20","nodeType":"YulFunctionCall","src":"17928:37:20"},"variableNames":[{"name":"converted","nativeSrc":"17915:9:20","nodeType":"YulIdentifier","src":"17915:9:20"}]}]},"name":"convert_t_contract$_BlockhashStoreInterface_$303_to_t_address","nativeSrc":"17814:157:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"17885:5:20","nodeType":"YulTypedName","src":"17885:5:20","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"17895:9:20","nodeType":"YulTypedName","src":"17895:9:20","type":""}],"src":"17814:157:20"},{"body":{"nativeSrc":"18073:97:20","nodeType":"YulBlock","src":"18073:97:20","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"18090:3:20","nodeType":"YulIdentifier","src":"18090:3:20"},{"arguments":[{"name":"value","nativeSrc":"18157:5:20","nodeType":"YulIdentifier","src":"18157:5:20"}],"functionName":{"name":"convert_t_contract$_BlockhashStoreInterface_$303_to_t_address","nativeSrc":"18095:61:20","nodeType":"YulIdentifier","src":"18095:61:20"},"nativeSrc":"18095:68:20","nodeType":"YulFunctionCall","src":"18095:68:20"}],"functionName":{"name":"mstore","nativeSrc":"18083:6:20","nodeType":"YulIdentifier","src":"18083:6:20"},"nativeSrc":"18083:81:20","nodeType":"YulFunctionCall","src":"18083:81:20"},"nativeSrc":"18083:81:20","nodeType":"YulExpressionStatement","src":"18083:81:20"}]},"name":"abi_encode_t_contract$_BlockhashStoreInterface_$303_to_t_address_fromStack","nativeSrc":"17977:193:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"18061:5:20","nodeType":"YulTypedName","src":"18061:5:20","type":""},{"name":"pos","nativeSrc":"18068:3:20","nodeType":"YulTypedName","src":"18068:3:20","type":""}],"src":"17977:193:20"},{"body":{"nativeSrc":"18305:155:20","nodeType":"YulBlock","src":"18305:155:20","statements":[{"nativeSrc":"18315:26:20","nodeType":"YulAssignment","src":"18315:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"18327:9:20","nodeType":"YulIdentifier","src":"18327:9:20"},{"kind":"number","nativeSrc":"18338:2:20","nodeType":"YulLiteral","src":"18338:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"18323:3:20","nodeType":"YulIdentifier","src":"18323:3:20"},"nativeSrc":"18323:18:20","nodeType":"YulFunctionCall","src":"18323:18:20"},"variableNames":[{"name":"tail","nativeSrc":"18315:4:20","nodeType":"YulIdentifier","src":"18315:4:20"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"18426:6:20","nodeType":"YulIdentifier","src":"18426:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"18439:9:20","nodeType":"YulIdentifier","src":"18439:9:20"},{"kind":"number","nativeSrc":"18450:1:20","nodeType":"YulLiteral","src":"18450:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"18435:3:20","nodeType":"YulIdentifier","src":"18435:3:20"},"nativeSrc":"18435:17:20","nodeType":"YulFunctionCall","src":"18435:17:20"}],"functionName":{"name":"abi_encode_t_contract$_BlockhashStoreInterface_$303_to_t_address_fromStack","nativeSrc":"18351:74:20","nodeType":"YulIdentifier","src":"18351:74:20"},"nativeSrc":"18351:102:20","nodeType":"YulFunctionCall","src":"18351:102:20"},"nativeSrc":"18351:102:20","nodeType":"YulExpressionStatement","src":"18351:102:20"}]},"name":"abi_encode_tuple_t_contract$_BlockhashStoreInterface_$303__to_t_address__fromStack_reversed","nativeSrc":"18176:284:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"18277:9:20","nodeType":"YulTypedName","src":"18277:9:20","type":""},{"name":"value0","nativeSrc":"18289:6:20","nodeType":"YulTypedName","src":"18289:6:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"18300:4:20","nodeType":"YulTypedName","src":"18300:4:20","type":""}],"src":"18176:284:20"},{"body":{"nativeSrc":"18509:79:20","nodeType":"YulBlock","src":"18509:79:20","statements":[{"body":{"nativeSrc":"18566:16:20","nodeType":"YulBlock","src":"18566:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"18575:1:20","nodeType":"YulLiteral","src":"18575:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"18578:1:20","nodeType":"YulLiteral","src":"18578:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"18568:6:20","nodeType":"YulIdentifier","src":"18568:6:20"},"nativeSrc":"18568:12:20","nodeType":"YulFunctionCall","src":"18568:12:20"},"nativeSrc":"18568:12:20","nodeType":"YulExpressionStatement","src":"18568:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"18532:5:20","nodeType":"YulIdentifier","src":"18532:5:20"},{"arguments":[{"name":"value","nativeSrc":"18557:5:20","nodeType":"YulIdentifier","src":"18557:5:20"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"18539:17:20","nodeType":"YulIdentifier","src":"18539:17:20"},"nativeSrc":"18539:24:20","nodeType":"YulFunctionCall","src":"18539:24:20"}],"functionName":{"name":"eq","nativeSrc":"18529:2:20","nodeType":"YulIdentifier","src":"18529:2:20"},"nativeSrc":"18529:35:20","nodeType":"YulFunctionCall","src":"18529:35:20"}],"functionName":{"name":"iszero","nativeSrc":"18522:6:20","nodeType":"YulIdentifier","src":"18522:6:20"},"nativeSrc":"18522:43:20","nodeType":"YulFunctionCall","src":"18522:43:20"},"nativeSrc":"18519:63:20","nodeType":"YulIf","src":"18519:63:20"}]},"name":"validator_revert_t_uint256","nativeSrc":"18466:122:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"18502:5:20","nodeType":"YulTypedName","src":"18502:5:20","type":""}],"src":"18466:122:20"},{"body":{"nativeSrc":"18646:87:20","nodeType":"YulBlock","src":"18646:87:20","statements":[{"nativeSrc":"18656:29:20","nodeType":"YulAssignment","src":"18656:29:20","value":{"arguments":[{"name":"offset","nativeSrc":"18678:6:20","nodeType":"YulIdentifier","src":"18678:6:20"}],"functionName":{"name":"calldataload","nativeSrc":"18665:12:20","nodeType":"YulIdentifier","src":"18665:12:20"},"nativeSrc":"18665:20:20","nodeType":"YulFunctionCall","src":"18665:20:20"},"variableNames":[{"name":"value","nativeSrc":"18656:5:20","nodeType":"YulIdentifier","src":"18656:5:20"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"18721:5:20","nodeType":"YulIdentifier","src":"18721:5:20"}],"functionName":{"name":"validator_revert_t_uint256","nativeSrc":"18694:26:20","nodeType":"YulIdentifier","src":"18694:26:20"},"nativeSrc":"18694:33:20","nodeType":"YulFunctionCall","src":"18694:33:20"},"nativeSrc":"18694:33:20","nodeType":"YulExpressionStatement","src":"18694:33:20"}]},"name":"abi_decode_t_uint256","nativeSrc":"18594:139:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"18624:6:20","nodeType":"YulTypedName","src":"18624:6:20","type":""},{"name":"end","nativeSrc":"18632:3:20","nodeType":"YulTypedName","src":"18632:3:20","type":""}],"returnVariables":[{"name":"value","nativeSrc":"18640:5:20","nodeType":"YulTypedName","src":"18640:5:20","type":""}],"src":"18594:139:20"},{"body":{"nativeSrc":"18805:263:20","nodeType":"YulBlock","src":"18805:263:20","statements":[{"body":{"nativeSrc":"18851:83:20","nodeType":"YulBlock","src":"18851:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"18853:77:20","nodeType":"YulIdentifier","src":"18853:77:20"},"nativeSrc":"18853:79:20","nodeType":"YulFunctionCall","src":"18853:79:20"},"nativeSrc":"18853:79:20","nodeType":"YulExpressionStatement","src":"18853:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"18826:7:20","nodeType":"YulIdentifier","src":"18826:7:20"},{"name":"headStart","nativeSrc":"18835:9:20","nodeType":"YulIdentifier","src":"18835:9:20"}],"functionName":{"name":"sub","nativeSrc":"18822:3:20","nodeType":"YulIdentifier","src":"18822:3:20"},"nativeSrc":"18822:23:20","nodeType":"YulFunctionCall","src":"18822:23:20"},{"kind":"number","nativeSrc":"18847:2:20","nodeType":"YulLiteral","src":"18847:2:20","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"18818:3:20","nodeType":"YulIdentifier","src":"18818:3:20"},"nativeSrc":"18818:32:20","nodeType":"YulFunctionCall","src":"18818:32:20"},"nativeSrc":"18815:119:20","nodeType":"YulIf","src":"18815:119:20"},{"nativeSrc":"18944:117:20","nodeType":"YulBlock","src":"18944:117:20","statements":[{"nativeSrc":"18959:15:20","nodeType":"YulVariableDeclaration","src":"18959:15:20","value":{"kind":"number","nativeSrc":"18973:1:20","nodeType":"YulLiteral","src":"18973:1:20","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"18963:6:20","nodeType":"YulTypedName","src":"18963:6:20","type":""}]},{"nativeSrc":"18988:63:20","nodeType":"YulAssignment","src":"18988:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"19023:9:20","nodeType":"YulIdentifier","src":"19023:9:20"},{"name":"offset","nativeSrc":"19034:6:20","nodeType":"YulIdentifier","src":"19034:6:20"}],"functionName":{"name":"add","nativeSrc":"19019:3:20","nodeType":"YulIdentifier","src":"19019:3:20"},"nativeSrc":"19019:22:20","nodeType":"YulFunctionCall","src":"19019:22:20"},{"name":"dataEnd","nativeSrc":"19043:7:20","nodeType":"YulIdentifier","src":"19043:7:20"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"18998:20:20","nodeType":"YulIdentifier","src":"18998:20:20"},"nativeSrc":"18998:53:20","nodeType":"YulFunctionCall","src":"18998:53:20"},"variableNames":[{"name":"value0","nativeSrc":"18988:6:20","nodeType":"YulIdentifier","src":"18988:6:20"}]}]}]},"name":"abi_decode_tuple_t_uint256","nativeSrc":"18739:329:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"18775:9:20","nodeType":"YulTypedName","src":"18775:9:20","type":""},{"name":"dataEnd","nativeSrc":"18786:7:20","nodeType":"YulTypedName","src":"18786:7:20","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"18798:6:20","nodeType":"YulTypedName","src":"18798:6:20","type":""}],"src":"18739:329:20"},{"body":{"nativeSrc":"19139:53:20","nodeType":"YulBlock","src":"19139:53:20","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"19156:3:20","nodeType":"YulIdentifier","src":"19156:3:20"},{"arguments":[{"name":"value","nativeSrc":"19179:5:20","nodeType":"YulIdentifier","src":"19179:5:20"}],"functionName":{"name":"cleanup_t_bytes32","nativeSrc":"19161:17:20","nodeType":"YulIdentifier","src":"19161:17:20"},"nativeSrc":"19161:24:20","nodeType":"YulFunctionCall","src":"19161:24:20"}],"functionName":{"name":"mstore","nativeSrc":"19149:6:20","nodeType":"YulIdentifier","src":"19149:6:20"},"nativeSrc":"19149:37:20","nodeType":"YulFunctionCall","src":"19149:37:20"},"nativeSrc":"19149:37:20","nodeType":"YulExpressionStatement","src":"19149:37:20"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"19074:118:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"19127:5:20","nodeType":"YulTypedName","src":"19127:5:20","type":""},{"name":"pos","nativeSrc":"19134:3:20","nodeType":"YulTypedName","src":"19134:3:20","type":""}],"src":"19074:118:20"},{"body":{"nativeSrc":"19296:124:20","nodeType":"YulBlock","src":"19296:124:20","statements":[{"nativeSrc":"19306:26:20","nodeType":"YulAssignment","src":"19306:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"19318:9:20","nodeType":"YulIdentifier","src":"19318:9:20"},{"kind":"number","nativeSrc":"19329:2:20","nodeType":"YulLiteral","src":"19329:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"19314:3:20","nodeType":"YulIdentifier","src":"19314:3:20"},"nativeSrc":"19314:18:20","nodeType":"YulFunctionCall","src":"19314:18:20"},"variableNames":[{"name":"tail","nativeSrc":"19306:4:20","nodeType":"YulIdentifier","src":"19306:4:20"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"19386:6:20","nodeType":"YulIdentifier","src":"19386:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"19399:9:20","nodeType":"YulIdentifier","src":"19399:9:20"},{"kind":"number","nativeSrc":"19410:1:20","nodeType":"YulLiteral","src":"19410:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"19395:3:20","nodeType":"YulIdentifier","src":"19395:3:20"},"nativeSrc":"19395:17:20","nodeType":"YulFunctionCall","src":"19395:17:20"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"19342:43:20","nodeType":"YulIdentifier","src":"19342:43:20"},"nativeSrc":"19342:71:20","nodeType":"YulFunctionCall","src":"19342:71:20"},"nativeSrc":"19342:71:20","nodeType":"YulExpressionStatement","src":"19342:71:20"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nativeSrc":"19198:222:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"19268:9:20","nodeType":"YulTypedName","src":"19268:9:20","type":""},{"name":"value0","nativeSrc":"19280:6:20","nodeType":"YulTypedName","src":"19280:6:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"19291:4:20","nodeType":"YulTypedName","src":"19291:4:20","type":""}],"src":"19198:222:20"},{"body":{"nativeSrc":"19534:416:20","nodeType":"YulBlock","src":"19534:416:20","statements":[{"body":{"nativeSrc":"19580:83:20","nodeType":"YulBlock","src":"19580:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"19582:77:20","nodeType":"YulIdentifier","src":"19582:77:20"},"nativeSrc":"19582:79:20","nodeType":"YulFunctionCall","src":"19582:79:20"},"nativeSrc":"19582:79:20","nodeType":"YulExpressionStatement","src":"19582:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"19555:7:20","nodeType":"YulIdentifier","src":"19555:7:20"},{"name":"headStart","nativeSrc":"19564:9:20","nodeType":"YulIdentifier","src":"19564:9:20"}],"functionName":{"name":"sub","nativeSrc":"19551:3:20","nodeType":"YulIdentifier","src":"19551:3:20"},"nativeSrc":"19551:23:20","nodeType":"YulFunctionCall","src":"19551:23:20"},{"kind":"number","nativeSrc":"19576:2:20","nodeType":"YulLiteral","src":"19576:2:20","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"19547:3:20","nodeType":"YulIdentifier","src":"19547:3:20"},"nativeSrc":"19547:32:20","nodeType":"YulFunctionCall","src":"19547:32:20"},"nativeSrc":"19544:119:20","nodeType":"YulIf","src":"19544:119:20"},{"nativeSrc":"19673:117:20","nodeType":"YulBlock","src":"19673:117:20","statements":[{"nativeSrc":"19688:15:20","nodeType":"YulVariableDeclaration","src":"19688:15:20","value":{"kind":"number","nativeSrc":"19702:1:20","nodeType":"YulLiteral","src":"19702:1:20","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"19692:6:20","nodeType":"YulTypedName","src":"19692:6:20","type":""}]},{"nativeSrc":"19717:63:20","nodeType":"YulAssignment","src":"19717:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"19752:9:20","nodeType":"YulIdentifier","src":"19752:9:20"},{"name":"offset","nativeSrc":"19763:6:20","nodeType":"YulIdentifier","src":"19763:6:20"}],"functionName":{"name":"add","nativeSrc":"19748:3:20","nodeType":"YulIdentifier","src":"19748:3:20"},"nativeSrc":"19748:22:20","nodeType":"YulFunctionCall","src":"19748:22:20"},{"name":"dataEnd","nativeSrc":"19772:7:20","nodeType":"YulIdentifier","src":"19772:7:20"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"19727:20:20","nodeType":"YulIdentifier","src":"19727:20:20"},"nativeSrc":"19727:53:20","nodeType":"YulFunctionCall","src":"19727:53:20"},"variableNames":[{"name":"value0","nativeSrc":"19717:6:20","nodeType":"YulIdentifier","src":"19717:6:20"}]}]},{"nativeSrc":"19800:143:20","nodeType":"YulBlock","src":"19800:143:20","statements":[{"nativeSrc":"19815:16:20","nodeType":"YulVariableDeclaration","src":"19815:16:20","value":{"kind":"number","nativeSrc":"19829:2:20","nodeType":"YulLiteral","src":"19829:2:20","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"19819:6:20","nodeType":"YulTypedName","src":"19819:6:20","type":""}]},{"nativeSrc":"19845:88:20","nodeType":"YulAssignment","src":"19845:88:20","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"19905:9:20","nodeType":"YulIdentifier","src":"19905:9:20"},{"name":"offset","nativeSrc":"19916:6:20","nodeType":"YulIdentifier","src":"19916:6:20"}],"functionName":{"name":"add","nativeSrc":"19901:3:20","nodeType":"YulIdentifier","src":"19901:3:20"},"nativeSrc":"19901:22:20","nodeType":"YulFunctionCall","src":"19901:22:20"},{"name":"dataEnd","nativeSrc":"19925:7:20","nodeType":"YulIdentifier","src":"19925:7:20"}],"functionName":{"name":"abi_decode_t_array$_t_uint256_$2_calldata_ptr","nativeSrc":"19855:45:20","nodeType":"YulIdentifier","src":"19855:45:20"},"nativeSrc":"19855:78:20","nodeType":"YulFunctionCall","src":"19855:78:20"},"variableNames":[{"name":"value1","nativeSrc":"19845:6:20","nodeType":"YulIdentifier","src":"19845:6:20"}]}]}]},"name":"abi_decode_tuple_t_addresst_array$_t_uint256_$2_calldata_ptr","nativeSrc":"19426:524:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"19496:9:20","nodeType":"YulTypedName","src":"19496:9:20","type":""},{"name":"dataEnd","nativeSrc":"19507:7:20","nodeType":"YulTypedName","src":"19507:7:20","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"19519:6:20","nodeType":"YulTypedName","src":"19519:6:20","type":""},{"name":"value1","nativeSrc":"19527:6:20","nodeType":"YulTypedName","src":"19527:6:20","type":""}],"src":"19426:524:20"},{"body":{"nativeSrc":"20021:53:20","nodeType":"YulBlock","src":"20021:53:20","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"20038:3:20","nodeType":"YulIdentifier","src":"20038:3:20"},{"arguments":[{"name":"value","nativeSrc":"20061:5:20","nodeType":"YulIdentifier","src":"20061:5:20"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"20043:17:20","nodeType":"YulIdentifier","src":"20043:17:20"},"nativeSrc":"20043:24:20","nodeType":"YulFunctionCall","src":"20043:24:20"}],"functionName":{"name":"mstore","nativeSrc":"20031:6:20","nodeType":"YulIdentifier","src":"20031:6:20"},"nativeSrc":"20031:37:20","nodeType":"YulFunctionCall","src":"20031:37:20"},"nativeSrc":"20031:37:20","nodeType":"YulExpressionStatement","src":"20031:37:20"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"19956:118:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"20009:5:20","nodeType":"YulTypedName","src":"20009:5:20","type":""},{"name":"pos","nativeSrc":"20016:3:20","nodeType":"YulTypedName","src":"20016:3:20","type":""}],"src":"19956:118:20"},{"body":{"nativeSrc":"20178:124:20","nodeType":"YulBlock","src":"20178:124:20","statements":[{"nativeSrc":"20188:26:20","nodeType":"YulAssignment","src":"20188:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"20200:9:20","nodeType":"YulIdentifier","src":"20200:9:20"},{"kind":"number","nativeSrc":"20211:2:20","nodeType":"YulLiteral","src":"20211:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"20196:3:20","nodeType":"YulIdentifier","src":"20196:3:20"},"nativeSrc":"20196:18:20","nodeType":"YulFunctionCall","src":"20196:18:20"},"variableNames":[{"name":"tail","nativeSrc":"20188:4:20","nodeType":"YulIdentifier","src":"20188:4:20"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"20268:6:20","nodeType":"YulIdentifier","src":"20268:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"20281:9:20","nodeType":"YulIdentifier","src":"20281:9:20"},{"kind":"number","nativeSrc":"20292:1:20","nodeType":"YulLiteral","src":"20292:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"20277:3:20","nodeType":"YulIdentifier","src":"20277:3:20"},"nativeSrc":"20277:17:20","nodeType":"YulFunctionCall","src":"20277:17:20"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"20224:43:20","nodeType":"YulIdentifier","src":"20224:43:20"},"nativeSrc":"20224:71:20","nodeType":"YulFunctionCall","src":"20224:71:20"},"nativeSrc":"20224:71:20","nodeType":"YulExpressionStatement","src":"20224:71:20"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"20080:222:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"20150:9:20","nodeType":"YulTypedName","src":"20150:9:20","type":""},{"name":"value0","nativeSrc":"20162:6:20","nodeType":"YulTypedName","src":"20162:6:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"20173:4:20","nodeType":"YulTypedName","src":"20173:4:20","type":""}],"src":"20080:222:20"},{"body":{"nativeSrc":"20371:52:20","nodeType":"YulBlock","src":"20371:52:20","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"20388:3:20","nodeType":"YulIdentifier","src":"20388:3:20"},{"arguments":[{"name":"value","nativeSrc":"20410:5:20","nodeType":"YulIdentifier","src":"20410:5:20"}],"functionName":{"name":"cleanup_t_uint96","nativeSrc":"20393:16:20","nodeType":"YulIdentifier","src":"20393:16:20"},"nativeSrc":"20393:23:20","nodeType":"YulFunctionCall","src":"20393:23:20"}],"functionName":{"name":"mstore","nativeSrc":"20381:6:20","nodeType":"YulIdentifier","src":"20381:6:20"},"nativeSrc":"20381:36:20","nodeType":"YulFunctionCall","src":"20381:36:20"},"nativeSrc":"20381:36:20","nodeType":"YulExpressionStatement","src":"20381:36:20"}]},"name":"abi_encode_t_uint96_to_t_uint96_fromStack","nativeSrc":"20308:115:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"20359:5:20","nodeType":"YulTypedName","src":"20359:5:20","type":""},{"name":"pos","nativeSrc":"20366:3:20","nodeType":"YulTypedName","src":"20366:3:20","type":""}],"src":"20308:115:20"},{"body":{"nativeSrc":"20503:40:20","nodeType":"YulBlock","src":"20503:40:20","statements":[{"nativeSrc":"20514:22:20","nodeType":"YulAssignment","src":"20514:22:20","value":{"arguments":[{"name":"value","nativeSrc":"20530:5:20","nodeType":"YulIdentifier","src":"20530:5:20"}],"functionName":{"name":"mload","nativeSrc":"20524:5:20","nodeType":"YulIdentifier","src":"20524:5:20"},"nativeSrc":"20524:12:20","nodeType":"YulFunctionCall","src":"20524:12:20"},"variableNames":[{"name":"length","nativeSrc":"20514:6:20","nodeType":"YulIdentifier","src":"20514:6:20"}]}]},"name":"array_length_t_array$_t_address_$dyn_memory_ptr","nativeSrc":"20429:114:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"20486:5:20","nodeType":"YulTypedName","src":"20486:5:20","type":""}],"returnVariables":[{"name":"length","nativeSrc":"20496:6:20","nodeType":"YulTypedName","src":"20496:6:20","type":""}],"src":"20429:114:20"},{"body":{"nativeSrc":"20660:73:20","nodeType":"YulBlock","src":"20660:73:20","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"20677:3:20","nodeType":"YulIdentifier","src":"20677:3:20"},{"name":"length","nativeSrc":"20682:6:20","nodeType":"YulIdentifier","src":"20682:6:20"}],"functionName":{"name":"mstore","nativeSrc":"20670:6:20","nodeType":"YulIdentifier","src":"20670:6:20"},"nativeSrc":"20670:19:20","nodeType":"YulFunctionCall","src":"20670:19:20"},"nativeSrc":"20670:19:20","nodeType":"YulExpressionStatement","src":"20670:19:20"},{"nativeSrc":"20698:29:20","nodeType":"YulAssignment","src":"20698:29:20","value":{"arguments":[{"name":"pos","nativeSrc":"20717:3:20","nodeType":"YulIdentifier","src":"20717:3:20"},{"kind":"number","nativeSrc":"20722:4:20","nodeType":"YulLiteral","src":"20722:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"20713:3:20","nodeType":"YulIdentifier","src":"20713:3:20"},"nativeSrc":"20713:14:20","nodeType":"YulFunctionCall","src":"20713:14:20"},"variableNames":[{"name":"updated_pos","nativeSrc":"20698:11:20","nodeType":"YulIdentifier","src":"20698:11:20"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack","nativeSrc":"20549:184:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"20632:3:20","nodeType":"YulTypedName","src":"20632:3:20","type":""},{"name":"length","nativeSrc":"20637:6:20","nodeType":"YulTypedName","src":"20637:6:20","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"20648:11:20","nodeType":"YulTypedName","src":"20648:11:20","type":""}],"src":"20549:184:20"},{"body":{"nativeSrc":"20811:60:20","nodeType":"YulBlock","src":"20811:60:20","statements":[{"nativeSrc":"20821:11:20","nodeType":"YulAssignment","src":"20821:11:20","value":{"name":"ptr","nativeSrc":"20829:3:20","nodeType":"YulIdentifier","src":"20829:3:20"},"variableNames":[{"name":"data","nativeSrc":"20821:4:20","nodeType":"YulIdentifier","src":"20821:4:20"}]},{"nativeSrc":"20842:22:20","nodeType":"YulAssignment","src":"20842:22:20","value":{"arguments":[{"name":"ptr","nativeSrc":"20854:3:20","nodeType":"YulIdentifier","src":"20854:3:20"},{"kind":"number","nativeSrc":"20859:4:20","nodeType":"YulLiteral","src":"20859:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"20850:3:20","nodeType":"YulIdentifier","src":"20850:3:20"},"nativeSrc":"20850:14:20","nodeType":"YulFunctionCall","src":"20850:14:20"},"variableNames":[{"name":"data","nativeSrc":"20842:4:20","nodeType":"YulIdentifier","src":"20842:4:20"}]}]},"name":"array_dataslot_t_array$_t_address_$dyn_memory_ptr","nativeSrc":"20739:132:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"20798:3:20","nodeType":"YulTypedName","src":"20798:3:20","type":""}],"returnVariables":[{"name":"data","nativeSrc":"20806:4:20","nodeType":"YulTypedName","src":"20806:4:20","type":""}],"src":"20739:132:20"},{"body":{"nativeSrc":"20932:53:20","nodeType":"YulBlock","src":"20932:53:20","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"20949:3:20","nodeType":"YulIdentifier","src":"20949:3:20"},{"arguments":[{"name":"value","nativeSrc":"20972:5:20","nodeType":"YulIdentifier","src":"20972:5:20"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"20954:17:20","nodeType":"YulIdentifier","src":"20954:17:20"},"nativeSrc":"20954:24:20","nodeType":"YulFunctionCall","src":"20954:24:20"}],"functionName":{"name":"mstore","nativeSrc":"20942:6:20","nodeType":"YulIdentifier","src":"20942:6:20"},"nativeSrc":"20942:37:20","nodeType":"YulFunctionCall","src":"20942:37:20"},"nativeSrc":"20942:37:20","nodeType":"YulExpressionStatement","src":"20942:37:20"}]},"name":"abi_encode_t_address_to_t_address","nativeSrc":"20877:108:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"20920:5:20","nodeType":"YulTypedName","src":"20920:5:20","type":""},{"name":"pos","nativeSrc":"20927:3:20","nodeType":"YulTypedName","src":"20927:3:20","type":""}],"src":"20877:108:20"},{"body":{"nativeSrc":"21071:99:20","nodeType":"YulBlock","src":"21071:99:20","statements":[{"expression":{"arguments":[{"name":"value0","nativeSrc":"21115:6:20","nodeType":"YulIdentifier","src":"21115:6:20"},{"name":"pos","nativeSrc":"21123:3:20","nodeType":"YulIdentifier","src":"21123:3:20"}],"functionName":{"name":"abi_encode_t_address_to_t_address","nativeSrc":"21081:33:20","nodeType":"YulIdentifier","src":"21081:33:20"},"nativeSrc":"21081:46:20","nodeType":"YulFunctionCall","src":"21081:46:20"},"nativeSrc":"21081:46:20","nodeType":"YulExpressionStatement","src":"21081:46:20"},{"nativeSrc":"21136:28:20","nodeType":"YulAssignment","src":"21136:28:20","value":{"arguments":[{"name":"pos","nativeSrc":"21154:3:20","nodeType":"YulIdentifier","src":"21154:3:20"},{"kind":"number","nativeSrc":"21159:4:20","nodeType":"YulLiteral","src":"21159:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"21150:3:20","nodeType":"YulIdentifier","src":"21150:3:20"},"nativeSrc":"21150:14:20","nodeType":"YulFunctionCall","src":"21150:14:20"},"variableNames":[{"name":"updatedPos","nativeSrc":"21136:10:20","nodeType":"YulIdentifier","src":"21136:10:20"}]}]},"name":"abi_encodeUpdatedPos_t_address_to_t_address","nativeSrc":"20991:179:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nativeSrc":"21044:6:20","nodeType":"YulTypedName","src":"21044:6:20","type":""},{"name":"pos","nativeSrc":"21052:3:20","nodeType":"YulTypedName","src":"21052:3:20","type":""}],"returnVariables":[{"name":"updatedPos","nativeSrc":"21060:10:20","nodeType":"YulTypedName","src":"21060:10:20","type":""}],"src":"20991:179:20"},{"body":{"nativeSrc":"21251:38:20","nodeType":"YulBlock","src":"21251:38:20","statements":[{"nativeSrc":"21261:22:20","nodeType":"YulAssignment","src":"21261:22:20","value":{"arguments":[{"name":"ptr","nativeSrc":"21273:3:20","nodeType":"YulIdentifier","src":"21273:3:20"},{"kind":"number","nativeSrc":"21278:4:20","nodeType":"YulLiteral","src":"21278:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"21269:3:20","nodeType":"YulIdentifier","src":"21269:3:20"},"nativeSrc":"21269:14:20","nodeType":"YulFunctionCall","src":"21269:14:20"},"variableNames":[{"name":"next","nativeSrc":"21261:4:20","nodeType":"YulIdentifier","src":"21261:4:20"}]}]},"name":"array_nextElement_t_array$_t_address_$dyn_memory_ptr","nativeSrc":"21176:113:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"21238:3:20","nodeType":"YulTypedName","src":"21238:3:20","type":""}],"returnVariables":[{"name":"next","nativeSrc":"21246:4:20","nodeType":"YulTypedName","src":"21246:4:20","type":""}],"src":"21176:113:20"},{"body":{"nativeSrc":"21449:608:20","nodeType":"YulBlock","src":"21449:608:20","statements":[{"nativeSrc":"21459:68:20","nodeType":"YulVariableDeclaration","src":"21459:68:20","value":{"arguments":[{"name":"value","nativeSrc":"21521:5:20","nodeType":"YulIdentifier","src":"21521:5:20"}],"functionName":{"name":"array_length_t_array$_t_address_$dyn_memory_ptr","nativeSrc":"21473:47:20","nodeType":"YulIdentifier","src":"21473:47:20"},"nativeSrc":"21473:54:20","nodeType":"YulFunctionCall","src":"21473:54:20"},"variables":[{"name":"length","nativeSrc":"21463:6:20","nodeType":"YulTypedName","src":"21463:6:20","type":""}]},{"nativeSrc":"21536:93:20","nodeType":"YulAssignment","src":"21536:93:20","value":{"arguments":[{"name":"pos","nativeSrc":"21617:3:20","nodeType":"YulIdentifier","src":"21617:3:20"},{"name":"length","nativeSrc":"21622:6:20","nodeType":"YulIdentifier","src":"21622:6:20"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack","nativeSrc":"21543:73:20","nodeType":"YulIdentifier","src":"21543:73:20"},"nativeSrc":"21543:86:20","nodeType":"YulFunctionCall","src":"21543:86:20"},"variableNames":[{"name":"pos","nativeSrc":"21536:3:20","nodeType":"YulIdentifier","src":"21536:3:20"}]},{"nativeSrc":"21638:71:20","nodeType":"YulVariableDeclaration","src":"21638:71:20","value":{"arguments":[{"name":"value","nativeSrc":"21703:5:20","nodeType":"YulIdentifier","src":"21703:5:20"}],"functionName":{"name":"array_dataslot_t_array$_t_address_$dyn_memory_ptr","nativeSrc":"21653:49:20","nodeType":"YulIdentifier","src":"21653:49:20"},"nativeSrc":"21653:56:20","nodeType":"YulFunctionCall","src":"21653:56:20"},"variables":[{"name":"baseRef","nativeSrc":"21642:7:20","nodeType":"YulTypedName","src":"21642:7:20","type":""}]},{"nativeSrc":"21718:21:20","nodeType":"YulVariableDeclaration","src":"21718:21:20","value":{"name":"baseRef","nativeSrc":"21732:7:20","nodeType":"YulIdentifier","src":"21732:7:20"},"variables":[{"name":"srcPtr","nativeSrc":"21722:6:20","nodeType":"YulTypedName","src":"21722:6:20","type":""}]},{"body":{"nativeSrc":"21808:224:20","nodeType":"YulBlock","src":"21808:224:20","statements":[{"nativeSrc":"21822:34:20","nodeType":"YulVariableDeclaration","src":"21822:34:20","value":{"arguments":[{"name":"srcPtr","nativeSrc":"21849:6:20","nodeType":"YulIdentifier","src":"21849:6:20"}],"functionName":{"name":"mload","nativeSrc":"21843:5:20","nodeType":"YulIdentifier","src":"21843:5:20"},"nativeSrc":"21843:13:20","nodeType":"YulFunctionCall","src":"21843:13:20"},"variables":[{"name":"elementValue0","nativeSrc":"21826:13:20","nodeType":"YulTypedName","src":"21826:13:20","type":""}]},{"nativeSrc":"21869:70:20","nodeType":"YulAssignment","src":"21869:70:20","value":{"arguments":[{"name":"elementValue0","nativeSrc":"21920:13:20","nodeType":"YulIdentifier","src":"21920:13:20"},{"name":"pos","nativeSrc":"21935:3:20","nodeType":"YulIdentifier","src":"21935:3:20"}],"functionName":{"name":"abi_encodeUpdatedPos_t_address_to_t_address","nativeSrc":"21876:43:20","nodeType":"YulIdentifier","src":"21876:43:20"},"nativeSrc":"21876:63:20","nodeType":"YulFunctionCall","src":"21876:63:20"},"variableNames":[{"name":"pos","nativeSrc":"21869:3:20","nodeType":"YulIdentifier","src":"21869:3:20"}]},{"nativeSrc":"21952:70:20","nodeType":"YulAssignment","src":"21952:70:20","value":{"arguments":[{"name":"srcPtr","nativeSrc":"22015:6:20","nodeType":"YulIdentifier","src":"22015:6:20"}],"functionName":{"name":"array_nextElement_t_array$_t_address_$dyn_memory_ptr","nativeSrc":"21962:52:20","nodeType":"YulIdentifier","src":"21962:52:20"},"nativeSrc":"21962:60:20","nodeType":"YulFunctionCall","src":"21962:60:20"},"variableNames":[{"name":"srcPtr","nativeSrc":"21952:6:20","nodeType":"YulIdentifier","src":"21952:6:20"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"21770:1:20","nodeType":"YulIdentifier","src":"21770:1:20"},{"name":"length","nativeSrc":"21773:6:20","nodeType":"YulIdentifier","src":"21773:6:20"}],"functionName":{"name":"lt","nativeSrc":"21767:2:20","nodeType":"YulIdentifier","src":"21767:2:20"},"nativeSrc":"21767:13:20","nodeType":"YulFunctionCall","src":"21767:13:20"},"nativeSrc":"21748:284:20","nodeType":"YulForLoop","post":{"nativeSrc":"21781:18:20","nodeType":"YulBlock","src":"21781:18:20","statements":[{"nativeSrc":"21783:14:20","nodeType":"YulAssignment","src":"21783:14:20","value":{"arguments":[{"name":"i","nativeSrc":"21792:1:20","nodeType":"YulIdentifier","src":"21792:1:20"},{"kind":"number","nativeSrc":"21795:1:20","nodeType":"YulLiteral","src":"21795:1:20","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"21788:3:20","nodeType":"YulIdentifier","src":"21788:3:20"},"nativeSrc":"21788:9:20","nodeType":"YulFunctionCall","src":"21788:9:20"},"variableNames":[{"name":"i","nativeSrc":"21783:1:20","nodeType":"YulIdentifier","src":"21783:1:20"}]}]},"pre":{"nativeSrc":"21752:14:20","nodeType":"YulBlock","src":"21752:14:20","statements":[{"nativeSrc":"21754:10:20","nodeType":"YulVariableDeclaration","src":"21754:10:20","value":{"kind":"number","nativeSrc":"21763:1:20","nodeType":"YulLiteral","src":"21763:1:20","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"21758:1:20","nodeType":"YulTypedName","src":"21758:1:20","type":""}]}]},"src":"21748:284:20"},{"nativeSrc":"22041:10:20","nodeType":"YulAssignment","src":"22041:10:20","value":{"name":"pos","nativeSrc":"22048:3:20","nodeType":"YulIdentifier","src":"22048:3:20"},"variableNames":[{"name":"end","nativeSrc":"22041:3:20","nodeType":"YulIdentifier","src":"22041:3:20"}]}]},"name":"abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack","nativeSrc":"21325:732:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"21428:5:20","nodeType":"YulTypedName","src":"21428:5:20","type":""},{"name":"pos","nativeSrc":"21435:3:20","nodeType":"YulTypedName","src":"21435:3:20","type":""}],"returnVariables":[{"name":"end","nativeSrc":"21444:3:20","nodeType":"YulTypedName","src":"21444:3:20","type":""}],"src":"21325:732:20"},{"body":{"nativeSrc":"22291:468:20","nodeType":"YulBlock","src":"22291:468:20","statements":[{"nativeSrc":"22301:27:20","nodeType":"YulAssignment","src":"22301:27:20","value":{"arguments":[{"name":"headStart","nativeSrc":"22313:9:20","nodeType":"YulIdentifier","src":"22313:9:20"},{"kind":"number","nativeSrc":"22324:3:20","nodeType":"YulLiteral","src":"22324:3:20","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"22309:3:20","nodeType":"YulIdentifier","src":"22309:3:20"},"nativeSrc":"22309:19:20","nodeType":"YulFunctionCall","src":"22309:19:20"},"variableNames":[{"name":"tail","nativeSrc":"22301:4:20","nodeType":"YulIdentifier","src":"22301:4:20"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"22380:6:20","nodeType":"YulIdentifier","src":"22380:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"22393:9:20","nodeType":"YulIdentifier","src":"22393:9:20"},{"kind":"number","nativeSrc":"22404:1:20","nodeType":"YulLiteral","src":"22404:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"22389:3:20","nodeType":"YulIdentifier","src":"22389:3:20"},"nativeSrc":"22389:17:20","nodeType":"YulFunctionCall","src":"22389:17:20"}],"functionName":{"name":"abi_encode_t_uint96_to_t_uint96_fromStack","nativeSrc":"22338:41:20","nodeType":"YulIdentifier","src":"22338:41:20"},"nativeSrc":"22338:69:20","nodeType":"YulFunctionCall","src":"22338:69:20"},"nativeSrc":"22338:69:20","nodeType":"YulExpressionStatement","src":"22338:69:20"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"22459:6:20","nodeType":"YulIdentifier","src":"22459:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"22472:9:20","nodeType":"YulIdentifier","src":"22472:9:20"},{"kind":"number","nativeSrc":"22483:2:20","nodeType":"YulLiteral","src":"22483:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"22468:3:20","nodeType":"YulIdentifier","src":"22468:3:20"},"nativeSrc":"22468:18:20","nodeType":"YulFunctionCall","src":"22468:18:20"}],"functionName":{"name":"abi_encode_t_uint64_to_t_uint64_fromStack","nativeSrc":"22417:41:20","nodeType":"YulIdentifier","src":"22417:41:20"},"nativeSrc":"22417:70:20","nodeType":"YulFunctionCall","src":"22417:70:20"},"nativeSrc":"22417:70:20","nodeType":"YulExpressionStatement","src":"22417:70:20"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"22541:6:20","nodeType":"YulIdentifier","src":"22541:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"22554:9:20","nodeType":"YulIdentifier","src":"22554:9:20"},{"kind":"number","nativeSrc":"22565:2:20","nodeType":"YulLiteral","src":"22565:2:20","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"22550:3:20","nodeType":"YulIdentifier","src":"22550:3:20"},"nativeSrc":"22550:18:20","nodeType":"YulFunctionCall","src":"22550:18:20"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"22497:43:20","nodeType":"YulIdentifier","src":"22497:43:20"},"nativeSrc":"22497:72:20","nodeType":"YulFunctionCall","src":"22497:72:20"},"nativeSrc":"22497:72:20","nodeType":"YulExpressionStatement","src":"22497:72:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"22590:9:20","nodeType":"YulIdentifier","src":"22590:9:20"},{"kind":"number","nativeSrc":"22601:2:20","nodeType":"YulLiteral","src":"22601:2:20","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"22586:3:20","nodeType":"YulIdentifier","src":"22586:3:20"},"nativeSrc":"22586:18:20","nodeType":"YulFunctionCall","src":"22586:18:20"},{"arguments":[{"name":"tail","nativeSrc":"22610:4:20","nodeType":"YulIdentifier","src":"22610:4:20"},{"name":"headStart","nativeSrc":"22616:9:20","nodeType":"YulIdentifier","src":"22616:9:20"}],"functionName":{"name":"sub","nativeSrc":"22606:3:20","nodeType":"YulIdentifier","src":"22606:3:20"},"nativeSrc":"22606:20:20","nodeType":"YulFunctionCall","src":"22606:20:20"}],"functionName":{"name":"mstore","nativeSrc":"22579:6:20","nodeType":"YulIdentifier","src":"22579:6:20"},"nativeSrc":"22579:48:20","nodeType":"YulFunctionCall","src":"22579:48:20"},"nativeSrc":"22579:48:20","nodeType":"YulExpressionStatement","src":"22579:48:20"},{"nativeSrc":"22636:116:20","nodeType":"YulAssignment","src":"22636:116:20","value":{"arguments":[{"name":"value3","nativeSrc":"22738:6:20","nodeType":"YulIdentifier","src":"22738:6:20"},{"name":"tail","nativeSrc":"22747:4:20","nodeType":"YulIdentifier","src":"22747:4:20"}],"functionName":{"name":"abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack","nativeSrc":"22644:93:20","nodeType":"YulIdentifier","src":"22644:93:20"},"nativeSrc":"22644:108:20","nodeType":"YulFunctionCall","src":"22644:108:20"},"variableNames":[{"name":"tail","nativeSrc":"22636:4:20","nodeType":"YulIdentifier","src":"22636:4:20"}]}]},"name":"abi_encode_tuple_t_uint96_t_uint64_t_address_t_array$_t_address_$dyn_memory_ptr__to_t_uint96_t_uint64_t_address_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed","nativeSrc":"22063:696:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"22239:9:20","nodeType":"YulTypedName","src":"22239:9:20","type":""},{"name":"value3","nativeSrc":"22251:6:20","nodeType":"YulTypedName","src":"22251:6:20","type":""},{"name":"value2","nativeSrc":"22259:6:20","nodeType":"YulTypedName","src":"22259:6:20","type":""},{"name":"value1","nativeSrc":"22267:6:20","nodeType":"YulTypedName","src":"22267:6:20","type":""},{"name":"value0","nativeSrc":"22275:6:20","nodeType":"YulTypedName","src":"22275:6:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"22286:4:20","nodeType":"YulTypedName","src":"22286:4:20","type":""}],"src":"22063:696:20"},{"body":{"nativeSrc":"22854:28:20","nodeType":"YulBlock","src":"22854:28:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"22871:1:20","nodeType":"YulLiteral","src":"22871:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"22874:1:20","nodeType":"YulLiteral","src":"22874:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"22864:6:20","nodeType":"YulIdentifier","src":"22864:6:20"},"nativeSrc":"22864:12:20","nodeType":"YulFunctionCall","src":"22864:12:20"},"nativeSrc":"22864:12:20","nodeType":"YulExpressionStatement","src":"22864:12:20"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"22765:117:20","nodeType":"YulFunctionDefinition","src":"22765:117:20"},{"body":{"nativeSrc":"22977:28:20","nodeType":"YulBlock","src":"22977:28:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"22994:1:20","nodeType":"YulLiteral","src":"22994:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"22997:1:20","nodeType":"YulLiteral","src":"22997:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"22987:6:20","nodeType":"YulIdentifier","src":"22987:6:20"},"nativeSrc":"22987:12:20","nodeType":"YulFunctionCall","src":"22987:12:20"},"nativeSrc":"22987:12:20","nodeType":"YulExpressionStatement","src":"22987:12:20"}]},"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nativeSrc":"22888:117:20","nodeType":"YulFunctionDefinition","src":"22888:117:20"},{"body":{"nativeSrc":"23098:478:20","nodeType":"YulBlock","src":"23098:478:20","statements":[{"body":{"nativeSrc":"23147:83:20","nodeType":"YulBlock","src":"23147:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"23149:77:20","nodeType":"YulIdentifier","src":"23149:77:20"},"nativeSrc":"23149:79:20","nodeType":"YulFunctionCall","src":"23149:79:20"},"nativeSrc":"23149:79:20","nodeType":"YulExpressionStatement","src":"23149:79:20"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"23126:6:20","nodeType":"YulIdentifier","src":"23126:6:20"},{"kind":"number","nativeSrc":"23134:4:20","nodeType":"YulLiteral","src":"23134:4:20","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"23122:3:20","nodeType":"YulIdentifier","src":"23122:3:20"},"nativeSrc":"23122:17:20","nodeType":"YulFunctionCall","src":"23122:17:20"},{"name":"end","nativeSrc":"23141:3:20","nodeType":"YulIdentifier","src":"23141:3:20"}],"functionName":{"name":"slt","nativeSrc":"23118:3:20","nodeType":"YulIdentifier","src":"23118:3:20"},"nativeSrc":"23118:27:20","nodeType":"YulFunctionCall","src":"23118:27:20"}],"functionName":{"name":"iszero","nativeSrc":"23111:6:20","nodeType":"YulIdentifier","src":"23111:6:20"},"nativeSrc":"23111:35:20","nodeType":"YulFunctionCall","src":"23111:35:20"},"nativeSrc":"23108:122:20","nodeType":"YulIf","src":"23108:122:20"},{"nativeSrc":"23239:30:20","nodeType":"YulAssignment","src":"23239:30:20","value":{"arguments":[{"name":"offset","nativeSrc":"23262:6:20","nodeType":"YulIdentifier","src":"23262:6:20"}],"functionName":{"name":"calldataload","nativeSrc":"23249:12:20","nodeType":"YulIdentifier","src":"23249:12:20"},"nativeSrc":"23249:20:20","nodeType":"YulFunctionCall","src":"23249:20:20"},"variableNames":[{"name":"length","nativeSrc":"23239:6:20","nodeType":"YulIdentifier","src":"23239:6:20"}]},{"body":{"nativeSrc":"23312:83:20","nodeType":"YulBlock","src":"23312:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nativeSrc":"23314:77:20","nodeType":"YulIdentifier","src":"23314:77:20"},"nativeSrc":"23314:79:20","nodeType":"YulFunctionCall","src":"23314:79:20"},"nativeSrc":"23314:79:20","nodeType":"YulExpressionStatement","src":"23314:79:20"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"23284:6:20","nodeType":"YulIdentifier","src":"23284:6:20"},{"kind":"number","nativeSrc":"23292:18:20","nodeType":"YulLiteral","src":"23292:18:20","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"23281:2:20","nodeType":"YulIdentifier","src":"23281:2:20"},"nativeSrc":"23281:30:20","nodeType":"YulFunctionCall","src":"23281:30:20"},"nativeSrc":"23278:117:20","nodeType":"YulIf","src":"23278:117:20"},{"nativeSrc":"23404:29:20","nodeType":"YulAssignment","src":"23404:29:20","value":{"arguments":[{"name":"offset","nativeSrc":"23420:6:20","nodeType":"YulIdentifier","src":"23420:6:20"},{"kind":"number","nativeSrc":"23428:4:20","nodeType":"YulLiteral","src":"23428:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"23416:3:20","nodeType":"YulIdentifier","src":"23416:3:20"},"nativeSrc":"23416:17:20","nodeType":"YulFunctionCall","src":"23416:17:20"},"variableNames":[{"name":"arrayPos","nativeSrc":"23404:8:20","nodeType":"YulIdentifier","src":"23404:8:20"}]},{"body":{"nativeSrc":"23487:83:20","nodeType":"YulBlock","src":"23487:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nativeSrc":"23489:77:20","nodeType":"YulIdentifier","src":"23489:77:20"},"nativeSrc":"23489:79:20","nodeType":"YulFunctionCall","src":"23489:79:20"},"nativeSrc":"23489:79:20","nodeType":"YulExpressionStatement","src":"23489:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"arrayPos","nativeSrc":"23452:8:20","nodeType":"YulIdentifier","src":"23452:8:20"},{"arguments":[{"name":"length","nativeSrc":"23466:6:20","nodeType":"YulIdentifier","src":"23466:6:20"},{"kind":"number","nativeSrc":"23474:4:20","nodeType":"YulLiteral","src":"23474:4:20","type":"","value":"0x01"}],"functionName":{"name":"mul","nativeSrc":"23462:3:20","nodeType":"YulIdentifier","src":"23462:3:20"},"nativeSrc":"23462:17:20","nodeType":"YulFunctionCall","src":"23462:17:20"}],"functionName":{"name":"add","nativeSrc":"23448:3:20","nodeType":"YulIdentifier","src":"23448:3:20"},"nativeSrc":"23448:32:20","nodeType":"YulFunctionCall","src":"23448:32:20"},{"name":"end","nativeSrc":"23482:3:20","nodeType":"YulIdentifier","src":"23482:3:20"}],"functionName":{"name":"gt","nativeSrc":"23445:2:20","nodeType":"YulIdentifier","src":"23445:2:20"},"nativeSrc":"23445:41:20","nodeType":"YulFunctionCall","src":"23445:41:20"},"nativeSrc":"23442:128:20","nodeType":"YulIf","src":"23442:128:20"}]},"name":"abi_decode_t_bytes_calldata_ptr","nativeSrc":"23024:552:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"23065:6:20","nodeType":"YulTypedName","src":"23065:6:20","type":""},{"name":"end","nativeSrc":"23073:3:20","nodeType":"YulTypedName","src":"23073:3:20","type":""}],"returnVariables":[{"name":"arrayPos","nativeSrc":"23081:8:20","nodeType":"YulTypedName","src":"23081:8:20","type":""},{"name":"length","nativeSrc":"23091:6:20","nodeType":"YulTypedName","src":"23091:6:20","type":""}],"src":"23024:552:20"},{"body":{"nativeSrc":"23701:698:20","nodeType":"YulBlock","src":"23701:698:20","statements":[{"body":{"nativeSrc":"23747:83:20","nodeType":"YulBlock","src":"23747:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"23749:77:20","nodeType":"YulIdentifier","src":"23749:77:20"},"nativeSrc":"23749:79:20","nodeType":"YulFunctionCall","src":"23749:79:20"},"nativeSrc":"23749:79:20","nodeType":"YulExpressionStatement","src":"23749:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"23722:7:20","nodeType":"YulIdentifier","src":"23722:7:20"},{"name":"headStart","nativeSrc":"23731:9:20","nodeType":"YulIdentifier","src":"23731:9:20"}],"functionName":{"name":"sub","nativeSrc":"23718:3:20","nodeType":"YulIdentifier","src":"23718:3:20"},"nativeSrc":"23718:23:20","nodeType":"YulFunctionCall","src":"23718:23:20"},{"kind":"number","nativeSrc":"23743:2:20","nodeType":"YulLiteral","src":"23743:2:20","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"23714:3:20","nodeType":"YulIdentifier","src":"23714:3:20"},"nativeSrc":"23714:32:20","nodeType":"YulFunctionCall","src":"23714:32:20"},"nativeSrc":"23711:119:20","nodeType":"YulIf","src":"23711:119:20"},{"nativeSrc":"23840:117:20","nodeType":"YulBlock","src":"23840:117:20","statements":[{"nativeSrc":"23855:15:20","nodeType":"YulVariableDeclaration","src":"23855:15:20","value":{"kind":"number","nativeSrc":"23869:1:20","nodeType":"YulLiteral","src":"23869:1:20","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"23859:6:20","nodeType":"YulTypedName","src":"23859:6:20","type":""}]},{"nativeSrc":"23884:63:20","nodeType":"YulAssignment","src":"23884:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"23919:9:20","nodeType":"YulIdentifier","src":"23919:9:20"},{"name":"offset","nativeSrc":"23930:6:20","nodeType":"YulIdentifier","src":"23930:6:20"}],"functionName":{"name":"add","nativeSrc":"23915:3:20","nodeType":"YulIdentifier","src":"23915:3:20"},"nativeSrc":"23915:22:20","nodeType":"YulFunctionCall","src":"23915:22:20"},{"name":"dataEnd","nativeSrc":"23939:7:20","nodeType":"YulIdentifier","src":"23939:7:20"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"23894:20:20","nodeType":"YulIdentifier","src":"23894:20:20"},"nativeSrc":"23894:53:20","nodeType":"YulFunctionCall","src":"23894:53:20"},"variableNames":[{"name":"value0","nativeSrc":"23884:6:20","nodeType":"YulIdentifier","src":"23884:6:20"}]}]},{"nativeSrc":"23967:118:20","nodeType":"YulBlock","src":"23967:118:20","statements":[{"nativeSrc":"23982:16:20","nodeType":"YulVariableDeclaration","src":"23982:16:20","value":{"kind":"number","nativeSrc":"23996:2:20","nodeType":"YulLiteral","src":"23996:2:20","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"23986:6:20","nodeType":"YulTypedName","src":"23986:6:20","type":""}]},{"nativeSrc":"24012:63:20","nodeType":"YulAssignment","src":"24012:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"24047:9:20","nodeType":"YulIdentifier","src":"24047:9:20"},{"name":"offset","nativeSrc":"24058:6:20","nodeType":"YulIdentifier","src":"24058:6:20"}],"functionName":{"name":"add","nativeSrc":"24043:3:20","nodeType":"YulIdentifier","src":"24043:3:20"},"nativeSrc":"24043:22:20","nodeType":"YulFunctionCall","src":"24043:22:20"},{"name":"dataEnd","nativeSrc":"24067:7:20","nodeType":"YulIdentifier","src":"24067:7:20"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"24022:20:20","nodeType":"YulIdentifier","src":"24022:20:20"},"nativeSrc":"24022:53:20","nodeType":"YulFunctionCall","src":"24022:53:20"},"variableNames":[{"name":"value1","nativeSrc":"24012:6:20","nodeType":"YulIdentifier","src":"24012:6:20"}]}]},{"nativeSrc":"24095:297:20","nodeType":"YulBlock","src":"24095:297:20","statements":[{"nativeSrc":"24110:46:20","nodeType":"YulVariableDeclaration","src":"24110:46:20","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"24141:9:20","nodeType":"YulIdentifier","src":"24141:9:20"},{"kind":"number","nativeSrc":"24152:2:20","nodeType":"YulLiteral","src":"24152:2:20","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"24137:3:20","nodeType":"YulIdentifier","src":"24137:3:20"},"nativeSrc":"24137:18:20","nodeType":"YulFunctionCall","src":"24137:18:20"}],"functionName":{"name":"calldataload","nativeSrc":"24124:12:20","nodeType":"YulIdentifier","src":"24124:12:20"},"nativeSrc":"24124:32:20","nodeType":"YulFunctionCall","src":"24124:32:20"},"variables":[{"name":"offset","nativeSrc":"24114:6:20","nodeType":"YulTypedName","src":"24114:6:20","type":""}]},{"body":{"nativeSrc":"24203:83:20","nodeType":"YulBlock","src":"24203:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"24205:77:20","nodeType":"YulIdentifier","src":"24205:77:20"},"nativeSrc":"24205:79:20","nodeType":"YulFunctionCall","src":"24205:79:20"},"nativeSrc":"24205:79:20","nodeType":"YulExpressionStatement","src":"24205:79:20"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"24175:6:20","nodeType":"YulIdentifier","src":"24175:6:20"},{"kind":"number","nativeSrc":"24183:18:20","nodeType":"YulLiteral","src":"24183:18:20","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"24172:2:20","nodeType":"YulIdentifier","src":"24172:2:20"},"nativeSrc":"24172:30:20","nodeType":"YulFunctionCall","src":"24172:30:20"},"nativeSrc":"24169:117:20","nodeType":"YulIf","src":"24169:117:20"},{"nativeSrc":"24300:82:20","nodeType":"YulAssignment","src":"24300:82:20","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"24354:9:20","nodeType":"YulIdentifier","src":"24354:9:20"},{"name":"offset","nativeSrc":"24365:6:20","nodeType":"YulIdentifier","src":"24365:6:20"}],"functionName":{"name":"add","nativeSrc":"24350:3:20","nodeType":"YulIdentifier","src":"24350:3:20"},"nativeSrc":"24350:22:20","nodeType":"YulFunctionCall","src":"24350:22:20"},{"name":"dataEnd","nativeSrc":"24374:7:20","nodeType":"YulIdentifier","src":"24374:7:20"}],"functionName":{"name":"abi_decode_t_bytes_calldata_ptr","nativeSrc":"24318:31:20","nodeType":"YulIdentifier","src":"24318:31:20"},"nativeSrc":"24318:64:20","nodeType":"YulFunctionCall","src":"24318:64:20"},"variableNames":[{"name":"value2","nativeSrc":"24300:6:20","nodeType":"YulIdentifier","src":"24300:6:20"},{"name":"value3","nativeSrc":"24308:6:20","nodeType":"YulIdentifier","src":"24308:6:20"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_bytes_calldata_ptr","nativeSrc":"23582:817:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"23647:9:20","nodeType":"YulTypedName","src":"23647:9:20","type":""},{"name":"dataEnd","nativeSrc":"23658:7:20","nodeType":"YulTypedName","src":"23658:7:20","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"23670:6:20","nodeType":"YulTypedName","src":"23670:6:20","type":""},{"name":"value1","nativeSrc":"23678:6:20","nodeType":"YulTypedName","src":"23678:6:20","type":""},{"name":"value2","nativeSrc":"23686:6:20","nodeType":"YulTypedName","src":"23686:6:20","type":""},{"name":"value3","nativeSrc":"23694:6:20","nodeType":"YulTypedName","src":"23694:6:20","type":""}],"src":"23582:817:20"},{"body":{"nativeSrc":"24494:66:20","nodeType":"YulBlock","src":"24494:66:20","statements":[{"nativeSrc":"24504:50:20","nodeType":"YulAssignment","src":"24504:50:20","value":{"arguments":[{"name":"value","nativeSrc":"24548:5:20","nodeType":"YulIdentifier","src":"24548:5:20"}],"functionName":{"name":"convert_t_uint160_to_t_address","nativeSrc":"24517:30:20","nodeType":"YulIdentifier","src":"24517:30:20"},"nativeSrc":"24517:37:20","nodeType":"YulFunctionCall","src":"24517:37:20"},"variableNames":[{"name":"converted","nativeSrc":"24504:9:20","nodeType":"YulIdentifier","src":"24504:9:20"}]}]},"name":"convert_t_contract$_AggregatorV3Interface_$293_to_t_address","nativeSrc":"24405:155:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"24474:5:20","nodeType":"YulTypedName","src":"24474:5:20","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"24484:9:20","nodeType":"YulTypedName","src":"24484:9:20","type":""}],"src":"24405:155:20"},{"body":{"nativeSrc":"24660:95:20","nodeType":"YulBlock","src":"24660:95:20","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"24677:3:20","nodeType":"YulIdentifier","src":"24677:3:20"},{"arguments":[{"name":"value","nativeSrc":"24742:5:20","nodeType":"YulIdentifier","src":"24742:5:20"}],"functionName":{"name":"convert_t_contract$_AggregatorV3Interface_$293_to_t_address","nativeSrc":"24682:59:20","nodeType":"YulIdentifier","src":"24682:59:20"},"nativeSrc":"24682:66:20","nodeType":"YulFunctionCall","src":"24682:66:20"}],"functionName":{"name":"mstore","nativeSrc":"24670:6:20","nodeType":"YulIdentifier","src":"24670:6:20"},"nativeSrc":"24670:79:20","nodeType":"YulFunctionCall","src":"24670:79:20"},"nativeSrc":"24670:79:20","nodeType":"YulExpressionStatement","src":"24670:79:20"}]},"name":"abi_encode_t_contract$_AggregatorV3Interface_$293_to_t_address_fromStack","nativeSrc":"24566:189:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"24648:5:20","nodeType":"YulTypedName","src":"24648:5:20","type":""},{"name":"pos","nativeSrc":"24655:3:20","nodeType":"YulTypedName","src":"24655:3:20","type":""}],"src":"24566:189:20"},{"body":{"nativeSrc":"24888:153:20","nodeType":"YulBlock","src":"24888:153:20","statements":[{"nativeSrc":"24898:26:20","nodeType":"YulAssignment","src":"24898:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"24910:9:20","nodeType":"YulIdentifier","src":"24910:9:20"},{"kind":"number","nativeSrc":"24921:2:20","nodeType":"YulLiteral","src":"24921:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"24906:3:20","nodeType":"YulIdentifier","src":"24906:3:20"},"nativeSrc":"24906:18:20","nodeType":"YulFunctionCall","src":"24906:18:20"},"variableNames":[{"name":"tail","nativeSrc":"24898:4:20","nodeType":"YulIdentifier","src":"24898:4:20"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"25007:6:20","nodeType":"YulIdentifier","src":"25007:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"25020:9:20","nodeType":"YulIdentifier","src":"25020:9:20"},{"kind":"number","nativeSrc":"25031:1:20","nodeType":"YulLiteral","src":"25031:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"25016:3:20","nodeType":"YulIdentifier","src":"25016:3:20"},"nativeSrc":"25016:17:20","nodeType":"YulFunctionCall","src":"25016:17:20"}],"functionName":{"name":"abi_encode_t_contract$_AggregatorV3Interface_$293_to_t_address_fromStack","nativeSrc":"24934:72:20","nodeType":"YulIdentifier","src":"24934:72:20"},"nativeSrc":"24934:100:20","nodeType":"YulFunctionCall","src":"24934:100:20"},"nativeSrc":"24934:100:20","nodeType":"YulExpressionStatement","src":"24934:100:20"}]},"name":"abi_encode_tuple_t_contract$_AggregatorV3Interface_$293__to_t_address__fromStack_reversed","nativeSrc":"24761:280:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"24860:9:20","nodeType":"YulTypedName","src":"24860:9:20","type":""},{"name":"value0","nativeSrc":"24872:6:20","nodeType":"YulTypedName","src":"24872:6:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"24883:4:20","nodeType":"YulTypedName","src":"24883:4:20","type":""}],"src":"24761:280:20"},{"body":{"nativeSrc":"25127:169:20","nodeType":"YulBlock","src":"25127:169:20","statements":[{"body":{"nativeSrc":"25232:22:20","nodeType":"YulBlock","src":"25232:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"25234:16:20","nodeType":"YulIdentifier","src":"25234:16:20"},"nativeSrc":"25234:18:20","nodeType":"YulFunctionCall","src":"25234:18:20"},"nativeSrc":"25234:18:20","nodeType":"YulExpressionStatement","src":"25234:18:20"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"25204:6:20","nodeType":"YulIdentifier","src":"25204:6:20"},{"kind":"number","nativeSrc":"25212:18:20","nodeType":"YulLiteral","src":"25212:18:20","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"25201:2:20","nodeType":"YulIdentifier","src":"25201:2:20"},"nativeSrc":"25201:30:20","nodeType":"YulFunctionCall","src":"25201:30:20"},"nativeSrc":"25198:56:20","nodeType":"YulIf","src":"25198:56:20"},{"nativeSrc":"25264:25:20","nodeType":"YulAssignment","src":"25264:25:20","value":{"arguments":[{"name":"length","nativeSrc":"25276:6:20","nodeType":"YulIdentifier","src":"25276:6:20"},{"kind":"number","nativeSrc":"25284:4:20","nodeType":"YulLiteral","src":"25284:4:20","type":"","value":"0x20"}],"functionName":{"name":"mul","nativeSrc":"25272:3:20","nodeType":"YulIdentifier","src":"25272:3:20"},"nativeSrc":"25272:17:20","nodeType":"YulFunctionCall","src":"25272:17:20"},"variableNames":[{"name":"size","nativeSrc":"25264:4:20","nodeType":"YulIdentifier","src":"25264:4:20"}]}]},"name":"array_allocation_size_t_array$_t_uint256_$2_memory_ptr","nativeSrc":"25047:249:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nativeSrc":"25111:6:20","nodeType":"YulTypedName","src":"25111:6:20","type":""}],"returnVariables":[{"name":"size","nativeSrc":"25122:4:20","nodeType":"YulTypedName","src":"25122:4:20","type":""}],"src":"25047:249:20"},{"body":{"nativeSrc":"25420:543:20","nodeType":"YulBlock","src":"25420:543:20","statements":[{"nativeSrc":"25430:88:20","nodeType":"YulAssignment","src":"25430:88:20","value":{"arguments":[{"arguments":[{"name":"length","nativeSrc":"25510:6:20","nodeType":"YulIdentifier","src":"25510:6:20"}],"functionName":{"name":"array_allocation_size_t_array$_t_uint256_$2_memory_ptr","nativeSrc":"25455:54:20","nodeType":"YulIdentifier","src":"25455:54:20"},"nativeSrc":"25455:62:20","nodeType":"YulFunctionCall","src":"25455:62:20"}],"functionName":{"name":"allocate_memory","nativeSrc":"25439:15:20","nodeType":"YulIdentifier","src":"25439:15:20"},"nativeSrc":"25439:79:20","nodeType":"YulFunctionCall","src":"25439:79:20"},"variableNames":[{"name":"array","nativeSrc":"25430:5:20","nodeType":"YulIdentifier","src":"25430:5:20"}]},{"nativeSrc":"25527:16:20","nodeType":"YulVariableDeclaration","src":"25527:16:20","value":{"name":"array","nativeSrc":"25538:5:20","nodeType":"YulIdentifier","src":"25538:5:20"},"variables":[{"name":"dst","nativeSrc":"25531:3:20","nodeType":"YulTypedName","src":"25531:3:20","type":""}]},{"nativeSrc":"25553:44:20","nodeType":"YulVariableDeclaration","src":"25553:44:20","value":{"arguments":[{"name":"offset","nativeSrc":"25571:6:20","nodeType":"YulIdentifier","src":"25571:6:20"},{"arguments":[{"name":"length","nativeSrc":"25583:6:20","nodeType":"YulIdentifier","src":"25583:6:20"},{"kind":"number","nativeSrc":"25591:4:20","nodeType":"YulLiteral","src":"25591:4:20","type":"","value":"0x20"}],"functionName":{"name":"mul","nativeSrc":"25579:3:20","nodeType":"YulIdentifier","src":"25579:3:20"},"nativeSrc":"25579:17:20","nodeType":"YulFunctionCall","src":"25579:17:20"}],"functionName":{"name":"add","nativeSrc":"25567:3:20","nodeType":"YulIdentifier","src":"25567:3:20"},"nativeSrc":"25567:30:20","nodeType":"YulFunctionCall","src":"25567:30:20"},"variables":[{"name":"srcEnd","nativeSrc":"25557:6:20","nodeType":"YulTypedName","src":"25557:6:20","type":""}]},{"body":{"nativeSrc":"25625:103:20","nodeType":"YulBlock","src":"25625:103:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nativeSrc":"25639:77:20","nodeType":"YulIdentifier","src":"25639:77:20"},"nativeSrc":"25639:79:20","nodeType":"YulFunctionCall","src":"25639:79:20"},"nativeSrc":"25639:79:20","nodeType":"YulExpressionStatement","src":"25639:79:20"}]},"condition":{"arguments":[{"name":"srcEnd","nativeSrc":"25612:6:20","nodeType":"YulIdentifier","src":"25612:6:20"},{"name":"end","nativeSrc":"25620:3:20","nodeType":"YulIdentifier","src":"25620:3:20"}],"functionName":{"name":"gt","nativeSrc":"25609:2:20","nodeType":"YulIdentifier","src":"25609:2:20"},"nativeSrc":"25609:15:20","nodeType":"YulFunctionCall","src":"25609:15:20"},"nativeSrc":"25606:122:20","nodeType":"YulIf","src":"25606:122:20"},{"body":{"nativeSrc":"25813:144:20","nodeType":"YulBlock","src":"25813:144:20","statements":[{"nativeSrc":"25828:21:20","nodeType":"YulVariableDeclaration","src":"25828:21:20","value":{"name":"src","nativeSrc":"25846:3:20","nodeType":"YulIdentifier","src":"25846:3:20"},"variables":[{"name":"elementPos","nativeSrc":"25832:10:20","nodeType":"YulTypedName","src":"25832:10:20","type":""}]},{"expression":{"arguments":[{"name":"dst","nativeSrc":"25870:3:20","nodeType":"YulIdentifier","src":"25870:3:20"},{"arguments":[{"name":"elementPos","nativeSrc":"25896:10:20","nodeType":"YulIdentifier","src":"25896:10:20"},{"name":"end","nativeSrc":"25908:3:20","nodeType":"YulIdentifier","src":"25908:3:20"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"25875:20:20","nodeType":"YulIdentifier","src":"25875:20:20"},"nativeSrc":"25875:37:20","nodeType":"YulFunctionCall","src":"25875:37:20"}],"functionName":{"name":"mstore","nativeSrc":"25863:6:20","nodeType":"YulIdentifier","src":"25863:6:20"},"nativeSrc":"25863:50:20","nodeType":"YulFunctionCall","src":"25863:50:20"},"nativeSrc":"25863:50:20","nodeType":"YulExpressionStatement","src":"25863:50:20"},{"nativeSrc":"25926:21:20","nodeType":"YulAssignment","src":"25926:21:20","value":{"arguments":[{"name":"dst","nativeSrc":"25937:3:20","nodeType":"YulIdentifier","src":"25937:3:20"},{"kind":"number","nativeSrc":"25942:4:20","nodeType":"YulLiteral","src":"25942:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"25933:3:20","nodeType":"YulIdentifier","src":"25933:3:20"},"nativeSrc":"25933:14:20","nodeType":"YulFunctionCall","src":"25933:14:20"},"variableNames":[{"name":"dst","nativeSrc":"25926:3:20","nodeType":"YulIdentifier","src":"25926:3:20"}]}]},"condition":{"arguments":[{"name":"src","nativeSrc":"25766:3:20","nodeType":"YulIdentifier","src":"25766:3:20"},{"name":"srcEnd","nativeSrc":"25771:6:20","nodeType":"YulIdentifier","src":"25771:6:20"}],"functionName":{"name":"lt","nativeSrc":"25763:2:20","nodeType":"YulIdentifier","src":"25763:2:20"},"nativeSrc":"25763:15:20","nodeType":"YulFunctionCall","src":"25763:15:20"},"nativeSrc":"25737:220:20","nodeType":"YulForLoop","post":{"nativeSrc":"25779:25:20","nodeType":"YulBlock","src":"25779:25:20","statements":[{"nativeSrc":"25781:21:20","nodeType":"YulAssignment","src":"25781:21:20","value":{"arguments":[{"name":"src","nativeSrc":"25792:3:20","nodeType":"YulIdentifier","src":"25792:3:20"},{"kind":"number","nativeSrc":"25797:4:20","nodeType":"YulLiteral","src":"25797:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"25788:3:20","nodeType":"YulIdentifier","src":"25788:3:20"},"nativeSrc":"25788:14:20","nodeType":"YulFunctionCall","src":"25788:14:20"},"variableNames":[{"name":"src","nativeSrc":"25781:3:20","nodeType":"YulIdentifier","src":"25781:3:20"}]}]},"pre":{"nativeSrc":"25741:21:20","nodeType":"YulBlock","src":"25741:21:20","statements":[{"nativeSrc":"25743:17:20","nodeType":"YulVariableDeclaration","src":"25743:17:20","value":{"name":"offset","nativeSrc":"25754:6:20","nodeType":"YulIdentifier","src":"25754:6:20"},"variables":[{"name":"src","nativeSrc":"25747:3:20","nodeType":"YulTypedName","src":"25747:3:20","type":""}]}]},"src":"25737:220:20"}]},"name":"abi_decode_available_length_t_array$_t_uint256_$2_memory_ptr","nativeSrc":"25320:643:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"25390:6:20","nodeType":"YulTypedName","src":"25390:6:20","type":""},{"name":"length","nativeSrc":"25398:6:20","nodeType":"YulTypedName","src":"25398:6:20","type":""},{"name":"end","nativeSrc":"25406:3:20","nodeType":"YulTypedName","src":"25406:3:20","type":""}],"returnVariables":[{"name":"array","nativeSrc":"25414:5:20","nodeType":"YulTypedName","src":"25414:5:20","type":""}],"src":"25320:643:20"},{"body":{"nativeSrc":"26062:264:20","nodeType":"YulBlock","src":"26062:264:20","statements":[{"body":{"nativeSrc":"26111:83:20","nodeType":"YulBlock","src":"26111:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"26113:77:20","nodeType":"YulIdentifier","src":"26113:77:20"},"nativeSrc":"26113:79:20","nodeType":"YulFunctionCall","src":"26113:79:20"},"nativeSrc":"26113:79:20","nodeType":"YulExpressionStatement","src":"26113:79:20"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"26090:6:20","nodeType":"YulIdentifier","src":"26090:6:20"},{"kind":"number","nativeSrc":"26098:4:20","nodeType":"YulLiteral","src":"26098:4:20","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"26086:3:20","nodeType":"YulIdentifier","src":"26086:3:20"},"nativeSrc":"26086:17:20","nodeType":"YulFunctionCall","src":"26086:17:20"},{"name":"end","nativeSrc":"26105:3:20","nodeType":"YulIdentifier","src":"26105:3:20"}],"functionName":{"name":"slt","nativeSrc":"26082:3:20","nodeType":"YulIdentifier","src":"26082:3:20"},"nativeSrc":"26082:27:20","nodeType":"YulFunctionCall","src":"26082:27:20"}],"functionName":{"name":"iszero","nativeSrc":"26075:6:20","nodeType":"YulIdentifier","src":"26075:6:20"},"nativeSrc":"26075:35:20","nodeType":"YulFunctionCall","src":"26075:35:20"},"nativeSrc":"26072:122:20","nodeType":"YulIf","src":"26072:122:20"},{"nativeSrc":"26203:18:20","nodeType":"YulVariableDeclaration","src":"26203:18:20","value":{"kind":"number","nativeSrc":"26217:4:20","nodeType":"YulLiteral","src":"26217:4:20","type":"","value":"0x02"},"variables":[{"name":"length","nativeSrc":"26207:6:20","nodeType":"YulTypedName","src":"26207:6:20","type":""}]},{"nativeSrc":"26230:90:20","nodeType":"YulAssignment","src":"26230:90:20","value":{"arguments":[{"name":"offset","nativeSrc":"26300:6:20","nodeType":"YulIdentifier","src":"26300:6:20"},{"name":"length","nativeSrc":"26308:6:20","nodeType":"YulIdentifier","src":"26308:6:20"},{"name":"end","nativeSrc":"26316:3:20","nodeType":"YulIdentifier","src":"26316:3:20"}],"functionName":{"name":"abi_decode_available_length_t_array$_t_uint256_$2_memory_ptr","nativeSrc":"26239:60:20","nodeType":"YulIdentifier","src":"26239:60:20"},"nativeSrc":"26239:81:20","nodeType":"YulFunctionCall","src":"26239:81:20"},"variableNames":[{"name":"array","nativeSrc":"26230:5:20","nodeType":"YulIdentifier","src":"26230:5:20"}]}]},"name":"abi_decode_t_array$_t_uint256_$2_memory_ptr","nativeSrc":"25987:339:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"26040:6:20","nodeType":"YulTypedName","src":"26040:6:20","type":""},{"name":"end","nativeSrc":"26048:3:20","nodeType":"YulTypedName","src":"26048:3:20","type":""}],"returnVariables":[{"name":"array","nativeSrc":"26056:5:20","nodeType":"YulTypedName","src":"26056:5:20","type":""}],"src":"25987:339:20"},{"body":{"nativeSrc":"26434:1740:20","nodeType":"YulBlock","src":"26434:1740:20","statements":[{"body":{"nativeSrc":"26480:83:20","nodeType":"YulBlock","src":"26480:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f","nativeSrc":"26482:77:20","nodeType":"YulIdentifier","src":"26482:77:20"},"nativeSrc":"26482:79:20","nodeType":"YulFunctionCall","src":"26482:79:20"},"nativeSrc":"26482:79:20","nodeType":"YulExpressionStatement","src":"26482:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"end","nativeSrc":"26455:3:20","nodeType":"YulIdentifier","src":"26455:3:20"},{"name":"headStart","nativeSrc":"26460:9:20","nodeType":"YulIdentifier","src":"26460:9:20"}],"functionName":{"name":"sub","nativeSrc":"26451:3:20","nodeType":"YulIdentifier","src":"26451:3:20"},"nativeSrc":"26451:19:20","nodeType":"YulFunctionCall","src":"26451:19:20"},{"kind":"number","nativeSrc":"26472:6:20","nodeType":"YulLiteral","src":"26472:6:20","type":"","value":"0x01a0"}],"functionName":{"name":"slt","nativeSrc":"26447:3:20","nodeType":"YulIdentifier","src":"26447:3:20"},"nativeSrc":"26447:32:20","nodeType":"YulFunctionCall","src":"26447:32:20"},"nativeSrc":"26444:119:20","nodeType":"YulIf","src":"26444:119:20"},{"nativeSrc":"26572:32:20","nodeType":"YulAssignment","src":"26572:32:20","value":{"arguments":[{"kind":"number","nativeSrc":"26597:6:20","nodeType":"YulLiteral","src":"26597:6:20","type":"","value":"0x0120"}],"functionName":{"name":"allocate_memory","nativeSrc":"26581:15:20","nodeType":"YulIdentifier","src":"26581:15:20"},"nativeSrc":"26581:23:20","nodeType":"YulFunctionCall","src":"26581:23:20"},"variableNames":[{"name":"value","nativeSrc":"26572:5:20","nodeType":"YulIdentifier","src":"26572:5:20"}]},{"nativeSrc":"26614:171:20","nodeType":"YulBlock","src":"26614:171:20","statements":[{"nativeSrc":"26647:15:20","nodeType":"YulVariableDeclaration","src":"26647:15:20","value":{"kind":"number","nativeSrc":"26661:1:20","nodeType":"YulLiteral","src":"26661:1:20","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"26651:6:20","nodeType":"YulTypedName","src":"26651:6:20","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"26687:5:20","nodeType":"YulIdentifier","src":"26687:5:20"},{"kind":"number","nativeSrc":"26694:4:20","nodeType":"YulLiteral","src":"26694:4:20","type":"","value":"0x00"}],"functionName":{"name":"add","nativeSrc":"26683:3:20","nodeType":"YulIdentifier","src":"26683:3:20"},"nativeSrc":"26683:16:20","nodeType":"YulFunctionCall","src":"26683:16:20"},{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"26749:9:20","nodeType":"YulIdentifier","src":"26749:9:20"},{"name":"offset","nativeSrc":"26760:6:20","nodeType":"YulIdentifier","src":"26760:6:20"}],"functionName":{"name":"add","nativeSrc":"26745:3:20","nodeType":"YulIdentifier","src":"26745:3:20"},"nativeSrc":"26745:22:20","nodeType":"YulFunctionCall","src":"26745:22:20"},{"name":"end","nativeSrc":"26769:3:20","nodeType":"YulIdentifier","src":"26769:3:20"}],"functionName":{"name":"abi_decode_t_array$_t_uint256_$2_memory_ptr","nativeSrc":"26701:43:20","nodeType":"YulIdentifier","src":"26701:43:20"},"nativeSrc":"26701:72:20","nodeType":"YulFunctionCall","src":"26701:72:20"}],"functionName":{"name":"mstore","nativeSrc":"26676:6:20","nodeType":"YulIdentifier","src":"26676:6:20"},"nativeSrc":"26676:98:20","nodeType":"YulFunctionCall","src":"26676:98:20"},"nativeSrc":"26676:98:20","nodeType":"YulExpressionStatement","src":"26676:98:20"}]},{"nativeSrc":"26795:175:20","nodeType":"YulBlock","src":"26795:175:20","statements":[{"nativeSrc":"26831:16:20","nodeType":"YulVariableDeclaration","src":"26831:16:20","value":{"kind":"number","nativeSrc":"26845:2:20","nodeType":"YulLiteral","src":"26845:2:20","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"26835:6:20","nodeType":"YulTypedName","src":"26835:6:20","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"26872:5:20","nodeType":"YulIdentifier","src":"26872:5:20"},{"kind":"number","nativeSrc":"26879:4:20","nodeType":"YulLiteral","src":"26879:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"26868:3:20","nodeType":"YulIdentifier","src":"26868:3:20"},"nativeSrc":"26868:16:20","nodeType":"YulFunctionCall","src":"26868:16:20"},{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"26934:9:20","nodeType":"YulIdentifier","src":"26934:9:20"},{"name":"offset","nativeSrc":"26945:6:20","nodeType":"YulIdentifier","src":"26945:6:20"}],"functionName":{"name":"add","nativeSrc":"26930:3:20","nodeType":"YulIdentifier","src":"26930:3:20"},"nativeSrc":"26930:22:20","nodeType":"YulFunctionCall","src":"26930:22:20"},{"name":"end","nativeSrc":"26954:3:20","nodeType":"YulIdentifier","src":"26954:3:20"}],"functionName":{"name":"abi_decode_t_array$_t_uint256_$2_memory_ptr","nativeSrc":"26886:43:20","nodeType":"YulIdentifier","src":"26886:43:20"},"nativeSrc":"26886:72:20","nodeType":"YulFunctionCall","src":"26886:72:20"}],"functionName":{"name":"mstore","nativeSrc":"26861:6:20","nodeType":"YulIdentifier","src":"26861:6:20"},"nativeSrc":"26861:98:20","nodeType":"YulFunctionCall","src":"26861:98:20"},"nativeSrc":"26861:98:20","nodeType":"YulExpressionStatement","src":"26861:98:20"}]},{"nativeSrc":"26980:149:20","nodeType":"YulBlock","src":"26980:149:20","statements":[{"nativeSrc":"27012:17:20","nodeType":"YulVariableDeclaration","src":"27012:17:20","value":{"kind":"number","nativeSrc":"27026:3:20","nodeType":"YulLiteral","src":"27026:3:20","type":"","value":"128"},"variables":[{"name":"offset","nativeSrc":"27016:6:20","nodeType":"YulTypedName","src":"27016:6:20","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"27054:5:20","nodeType":"YulIdentifier","src":"27054:5:20"},{"kind":"number","nativeSrc":"27061:4:20","nodeType":"YulLiteral","src":"27061:4:20","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"27050:3:20","nodeType":"YulIdentifier","src":"27050:3:20"},"nativeSrc":"27050:16:20","nodeType":"YulFunctionCall","src":"27050:16:20"},{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"27093:9:20","nodeType":"YulIdentifier","src":"27093:9:20"},{"name":"offset","nativeSrc":"27104:6:20","nodeType":"YulIdentifier","src":"27104:6:20"}],"functionName":{"name":"add","nativeSrc":"27089:3:20","nodeType":"YulIdentifier","src":"27089:3:20"},"nativeSrc":"27089:22:20","nodeType":"YulFunctionCall","src":"27089:22:20"},{"name":"end","nativeSrc":"27113:3:20","nodeType":"YulIdentifier","src":"27113:3:20"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"27068:20:20","nodeType":"YulIdentifier","src":"27068:20:20"},"nativeSrc":"27068:49:20","nodeType":"YulFunctionCall","src":"27068:49:20"}],"functionName":{"name":"mstore","nativeSrc":"27043:6:20","nodeType":"YulIdentifier","src":"27043:6:20"},"nativeSrc":"27043:75:20","nodeType":"YulFunctionCall","src":"27043:75:20"},"nativeSrc":"27043:75:20","nodeType":"YulExpressionStatement","src":"27043:75:20"}]},{"nativeSrc":"27139:149:20","nodeType":"YulBlock","src":"27139:149:20","statements":[{"nativeSrc":"27171:17:20","nodeType":"YulVariableDeclaration","src":"27171:17:20","value":{"kind":"number","nativeSrc":"27185:3:20","nodeType":"YulLiteral","src":"27185:3:20","type":"","value":"160"},"variables":[{"name":"offset","nativeSrc":"27175:6:20","nodeType":"YulTypedName","src":"27175:6:20","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"27213:5:20","nodeType":"YulIdentifier","src":"27213:5:20"},{"kind":"number","nativeSrc":"27220:4:20","nodeType":"YulLiteral","src":"27220:4:20","type":"","value":"0x60"}],"functionName":{"name":"add","nativeSrc":"27209:3:20","nodeType":"YulIdentifier","src":"27209:3:20"},"nativeSrc":"27209:16:20","nodeType":"YulFunctionCall","src":"27209:16:20"},{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"27252:9:20","nodeType":"YulIdentifier","src":"27252:9:20"},{"name":"offset","nativeSrc":"27263:6:20","nodeType":"YulIdentifier","src":"27263:6:20"}],"functionName":{"name":"add","nativeSrc":"27248:3:20","nodeType":"YulIdentifier","src":"27248:3:20"},"nativeSrc":"27248:22:20","nodeType":"YulFunctionCall","src":"27248:22:20"},{"name":"end","nativeSrc":"27272:3:20","nodeType":"YulIdentifier","src":"27272:3:20"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"27227:20:20","nodeType":"YulIdentifier","src":"27227:20:20"},"nativeSrc":"27227:49:20","nodeType":"YulFunctionCall","src":"27227:49:20"}],"functionName":{"name":"mstore","nativeSrc":"27202:6:20","nodeType":"YulIdentifier","src":"27202:6:20"},"nativeSrc":"27202:75:20","nodeType":"YulFunctionCall","src":"27202:75:20"},"nativeSrc":"27202:75:20","nodeType":"YulExpressionStatement","src":"27202:75:20"}]},{"nativeSrc":"27298:152:20","nodeType":"YulBlock","src":"27298:152:20","statements":[{"nativeSrc":"27333:17:20","nodeType":"YulVariableDeclaration","src":"27333:17:20","value":{"kind":"number","nativeSrc":"27347:3:20","nodeType":"YulLiteral","src":"27347:3:20","type":"","value":"192"},"variables":[{"name":"offset","nativeSrc":"27337:6:20","nodeType":"YulTypedName","src":"27337:6:20","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"27375:5:20","nodeType":"YulIdentifier","src":"27375:5:20"},{"kind":"number","nativeSrc":"27382:4:20","nodeType":"YulLiteral","src":"27382:4:20","type":"","value":"0x80"}],"functionName":{"name":"add","nativeSrc":"27371:3:20","nodeType":"YulIdentifier","src":"27371:3:20"},"nativeSrc":"27371:16:20","nodeType":"YulFunctionCall","src":"27371:16:20"},{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"27414:9:20","nodeType":"YulIdentifier","src":"27414:9:20"},{"name":"offset","nativeSrc":"27425:6:20","nodeType":"YulIdentifier","src":"27425:6:20"}],"functionName":{"name":"add","nativeSrc":"27410:3:20","nodeType":"YulIdentifier","src":"27410:3:20"},"nativeSrc":"27410:22:20","nodeType":"YulFunctionCall","src":"27410:22:20"},{"name":"end","nativeSrc":"27434:3:20","nodeType":"YulIdentifier","src":"27434:3:20"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"27389:20:20","nodeType":"YulIdentifier","src":"27389:20:20"},"nativeSrc":"27389:49:20","nodeType":"YulFunctionCall","src":"27389:49:20"}],"functionName":{"name":"mstore","nativeSrc":"27364:6:20","nodeType":"YulIdentifier","src":"27364:6:20"},"nativeSrc":"27364:75:20","nodeType":"YulFunctionCall","src":"27364:75:20"},"nativeSrc":"27364:75:20","nodeType":"YulExpressionStatement","src":"27364:75:20"}]},{"nativeSrc":"27460:156:20","nodeType":"YulBlock","src":"27460:156:20","statements":[{"nativeSrc":"27499:17:20","nodeType":"YulVariableDeclaration","src":"27499:17:20","value":{"kind":"number","nativeSrc":"27513:3:20","nodeType":"YulLiteral","src":"27513:3:20","type":"","value":"224"},"variables":[{"name":"offset","nativeSrc":"27503:6:20","nodeType":"YulTypedName","src":"27503:6:20","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"27541:5:20","nodeType":"YulIdentifier","src":"27541:5:20"},{"kind":"number","nativeSrc":"27548:4:20","nodeType":"YulLiteral","src":"27548:4:20","type":"","value":"0xa0"}],"functionName":{"name":"add","nativeSrc":"27537:3:20","nodeType":"YulIdentifier","src":"27537:3:20"},"nativeSrc":"27537:16:20","nodeType":"YulFunctionCall","src":"27537:16:20"},{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"27580:9:20","nodeType":"YulIdentifier","src":"27580:9:20"},{"name":"offset","nativeSrc":"27591:6:20","nodeType":"YulIdentifier","src":"27591:6:20"}],"functionName":{"name":"add","nativeSrc":"27576:3:20","nodeType":"YulIdentifier","src":"27576:3:20"},"nativeSrc":"27576:22:20","nodeType":"YulFunctionCall","src":"27576:22:20"},{"name":"end","nativeSrc":"27600:3:20","nodeType":"YulIdentifier","src":"27600:3:20"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"27555:20:20","nodeType":"YulIdentifier","src":"27555:20:20"},"nativeSrc":"27555:49:20","nodeType":"YulFunctionCall","src":"27555:49:20"}],"functionName":{"name":"mstore","nativeSrc":"27530:6:20","nodeType":"YulIdentifier","src":"27530:6:20"},"nativeSrc":"27530:75:20","nodeType":"YulFunctionCall","src":"27530:75:20"},"nativeSrc":"27530:75:20","nodeType":"YulExpressionStatement","src":"27530:75:20"}]},{"nativeSrc":"27626:184:20","nodeType":"YulBlock","src":"27626:184:20","statements":[{"nativeSrc":"27670:17:20","nodeType":"YulVariableDeclaration","src":"27670:17:20","value":{"kind":"number","nativeSrc":"27684:3:20","nodeType":"YulLiteral","src":"27684:3:20","type":"","value":"256"},"variables":[{"name":"offset","nativeSrc":"27674:6:20","nodeType":"YulTypedName","src":"27674:6:20","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"27712:5:20","nodeType":"YulIdentifier","src":"27712:5:20"},{"kind":"number","nativeSrc":"27719:4:20","nodeType":"YulLiteral","src":"27719:4:20","type":"","value":"0xc0"}],"functionName":{"name":"add","nativeSrc":"27708:3:20","nodeType":"YulIdentifier","src":"27708:3:20"},"nativeSrc":"27708:16:20","nodeType":"YulFunctionCall","src":"27708:16:20"},{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"27774:9:20","nodeType":"YulIdentifier","src":"27774:9:20"},{"name":"offset","nativeSrc":"27785:6:20","nodeType":"YulIdentifier","src":"27785:6:20"}],"functionName":{"name":"add","nativeSrc":"27770:3:20","nodeType":"YulIdentifier","src":"27770:3:20"},"nativeSrc":"27770:22:20","nodeType":"YulFunctionCall","src":"27770:22:20"},{"name":"end","nativeSrc":"27794:3:20","nodeType":"YulIdentifier","src":"27794:3:20"}],"functionName":{"name":"abi_decode_t_array$_t_uint256_$2_memory_ptr","nativeSrc":"27726:43:20","nodeType":"YulIdentifier","src":"27726:43:20"},"nativeSrc":"27726:72:20","nodeType":"YulFunctionCall","src":"27726:72:20"}],"functionName":{"name":"mstore","nativeSrc":"27701:6:20","nodeType":"YulIdentifier","src":"27701:6:20"},"nativeSrc":"27701:98:20","nodeType":"YulFunctionCall","src":"27701:98:20"},"nativeSrc":"27701:98:20","nodeType":"YulExpressionStatement","src":"27701:98:20"}]},{"nativeSrc":"27820:183:20","nodeType":"YulBlock","src":"27820:183:20","statements":[{"nativeSrc":"27863:17:20","nodeType":"YulVariableDeclaration","src":"27863:17:20","value":{"kind":"number","nativeSrc":"27877:3:20","nodeType":"YulLiteral","src":"27877:3:20","type":"","value":"320"},"variables":[{"name":"offset","nativeSrc":"27867:6:20","nodeType":"YulTypedName","src":"27867:6:20","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"27905:5:20","nodeType":"YulIdentifier","src":"27905:5:20"},{"kind":"number","nativeSrc":"27912:4:20","nodeType":"YulLiteral","src":"27912:4:20","type":"","value":"0xe0"}],"functionName":{"name":"add","nativeSrc":"27901:3:20","nodeType":"YulIdentifier","src":"27901:3:20"},"nativeSrc":"27901:16:20","nodeType":"YulFunctionCall","src":"27901:16:20"},{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"27967:9:20","nodeType":"YulIdentifier","src":"27967:9:20"},{"name":"offset","nativeSrc":"27978:6:20","nodeType":"YulIdentifier","src":"27978:6:20"}],"functionName":{"name":"add","nativeSrc":"27963:3:20","nodeType":"YulIdentifier","src":"27963:3:20"},"nativeSrc":"27963:22:20","nodeType":"YulFunctionCall","src":"27963:22:20"},{"name":"end","nativeSrc":"27987:3:20","nodeType":"YulIdentifier","src":"27987:3:20"}],"functionName":{"name":"abi_decode_t_array$_t_uint256_$2_memory_ptr","nativeSrc":"27919:43:20","nodeType":"YulIdentifier","src":"27919:43:20"},"nativeSrc":"27919:72:20","nodeType":"YulFunctionCall","src":"27919:72:20"}],"functionName":{"name":"mstore","nativeSrc":"27894:6:20","nodeType":"YulIdentifier","src":"27894:6:20"},"nativeSrc":"27894:98:20","nodeType":"YulFunctionCall","src":"27894:98:20"},"nativeSrc":"27894:98:20","nodeType":"YulExpressionStatement","src":"27894:98:20"}]},{"nativeSrc":"28013:154:20","nodeType":"YulBlock","src":"28013:154:20","statements":[{"nativeSrc":"28048:17:20","nodeType":"YulVariableDeclaration","src":"28048:17:20","value":{"kind":"number","nativeSrc":"28062:3:20","nodeType":"YulLiteral","src":"28062:3:20","type":"","value":"384"},"variables":[{"name":"offset","nativeSrc":"28052:6:20","nodeType":"YulTypedName","src":"28052:6:20","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"28090:5:20","nodeType":"YulIdentifier","src":"28090:5:20"},{"kind":"number","nativeSrc":"28097:6:20","nodeType":"YulLiteral","src":"28097:6:20","type":"","value":"0x0100"}],"functionName":{"name":"add","nativeSrc":"28086:3:20","nodeType":"YulIdentifier","src":"28086:3:20"},"nativeSrc":"28086:18:20","nodeType":"YulFunctionCall","src":"28086:18:20"},{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"28131:9:20","nodeType":"YulIdentifier","src":"28131:9:20"},{"name":"offset","nativeSrc":"28142:6:20","nodeType":"YulIdentifier","src":"28142:6:20"}],"functionName":{"name":"add","nativeSrc":"28127:3:20","nodeType":"YulIdentifier","src":"28127:3:20"},"nativeSrc":"28127:22:20","nodeType":"YulFunctionCall","src":"28127:22:20"},{"name":"end","nativeSrc":"28151:3:20","nodeType":"YulIdentifier","src":"28151:3:20"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"28106:20:20","nodeType":"YulIdentifier","src":"28106:20:20"},"nativeSrc":"28106:49:20","nodeType":"YulFunctionCall","src":"28106:49:20"}],"functionName":{"name":"mstore","nativeSrc":"28079:6:20","nodeType":"YulIdentifier","src":"28079:6:20"},"nativeSrc":"28079:77:20","nodeType":"YulFunctionCall","src":"28079:77:20"},"nativeSrc":"28079:77:20","nodeType":"YulExpressionStatement","src":"28079:77:20"}]}]},"name":"abi_decode_t_struct$_Proof_$1989_memory_ptr","nativeSrc":"26356:1818:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"26409:9:20","nodeType":"YulTypedName","src":"26409:9:20","type":""},{"name":"end","nativeSrc":"26420:3:20","nodeType":"YulTypedName","src":"26420:3:20","type":""}],"returnVariables":[{"name":"value","nativeSrc":"26428:5:20","nodeType":"YulTypedName","src":"26428:5:20","type":""}],"src":"26356:1818:20"},{"body":{"nativeSrc":"28319:997:20","nodeType":"YulBlock","src":"28319:997:20","statements":[{"body":{"nativeSrc":"28363:83:20","nodeType":"YulBlock","src":"28363:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f","nativeSrc":"28365:77:20","nodeType":"YulIdentifier","src":"28365:77:20"},"nativeSrc":"28365:79:20","nodeType":"YulFunctionCall","src":"28365:79:20"},"nativeSrc":"28365:79:20","nodeType":"YulExpressionStatement","src":"28365:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"end","nativeSrc":"28340:3:20","nodeType":"YulIdentifier","src":"28340:3:20"},{"name":"headStart","nativeSrc":"28345:9:20","nodeType":"YulIdentifier","src":"28345:9:20"}],"functionName":{"name":"sub","nativeSrc":"28336:3:20","nodeType":"YulIdentifier","src":"28336:3:20"},"nativeSrc":"28336:19:20","nodeType":"YulFunctionCall","src":"28336:19:20"},{"kind":"number","nativeSrc":"28357:4:20","nodeType":"YulLiteral","src":"28357:4:20","type":"","value":"0xa0"}],"functionName":{"name":"slt","nativeSrc":"28332:3:20","nodeType":"YulIdentifier","src":"28332:3:20"},"nativeSrc":"28332:30:20","nodeType":"YulFunctionCall","src":"28332:30:20"},"nativeSrc":"28329:117:20","nodeType":"YulIf","src":"28329:117:20"},{"nativeSrc":"28455:30:20","nodeType":"YulAssignment","src":"28455:30:20","value":{"arguments":[{"kind":"number","nativeSrc":"28480:4:20","nodeType":"YulLiteral","src":"28480:4:20","type":"","value":"0xa0"}],"functionName":{"name":"allocate_memory","nativeSrc":"28464:15:20","nodeType":"YulIdentifier","src":"28464:15:20"},"nativeSrc":"28464:21:20","nodeType":"YulFunctionCall","src":"28464:21:20"},"variableNames":[{"name":"value","nativeSrc":"28455:5:20","nodeType":"YulIdentifier","src":"28455:5:20"}]},{"nativeSrc":"28495:153:20","nodeType":"YulBlock","src":"28495:153:20","statements":[{"nativeSrc":"28534:15:20","nodeType":"YulVariableDeclaration","src":"28534:15:20","value":{"kind":"number","nativeSrc":"28548:1:20","nodeType":"YulLiteral","src":"28548:1:20","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"28538:6:20","nodeType":"YulTypedName","src":"28538:6:20","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"28574:5:20","nodeType":"YulIdentifier","src":"28574:5:20"},{"kind":"number","nativeSrc":"28581:4:20","nodeType":"YulLiteral","src":"28581:4:20","type":"","value":"0x00"}],"functionName":{"name":"add","nativeSrc":"28570:3:20","nodeType":"YulIdentifier","src":"28570:3:20"},"nativeSrc":"28570:16:20","nodeType":"YulFunctionCall","src":"28570:16:20"},{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"28612:9:20","nodeType":"YulIdentifier","src":"28612:9:20"},{"name":"offset","nativeSrc":"28623:6:20","nodeType":"YulIdentifier","src":"28623:6:20"}],"functionName":{"name":"add","nativeSrc":"28608:3:20","nodeType":"YulIdentifier","src":"28608:3:20"},"nativeSrc":"28608:22:20","nodeType":"YulFunctionCall","src":"28608:22:20"},{"name":"end","nativeSrc":"28632:3:20","nodeType":"YulIdentifier","src":"28632:3:20"}],"functionName":{"name":"abi_decode_t_uint64","nativeSrc":"28588:19:20","nodeType":"YulIdentifier","src":"28588:19:20"},"nativeSrc":"28588:48:20","nodeType":"YulFunctionCall","src":"28588:48:20"}],"functionName":{"name":"mstore","nativeSrc":"28563:6:20","nodeType":"YulIdentifier","src":"28563:6:20"},"nativeSrc":"28563:74:20","nodeType":"YulFunctionCall","src":"28563:74:20"},"nativeSrc":"28563:74:20","nodeType":"YulExpressionStatement","src":"28563:74:20"}]},{"nativeSrc":"28658:151:20","nodeType":"YulBlock","src":"28658:151:20","statements":[{"nativeSrc":"28694:16:20","nodeType":"YulVariableDeclaration","src":"28694:16:20","value":{"kind":"number","nativeSrc":"28708:2:20","nodeType":"YulLiteral","src":"28708:2:20","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"28698:6:20","nodeType":"YulTypedName","src":"28698:6:20","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"28735:5:20","nodeType":"YulIdentifier","src":"28735:5:20"},{"kind":"number","nativeSrc":"28742:4:20","nodeType":"YulLiteral","src":"28742:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"28731:3:20","nodeType":"YulIdentifier","src":"28731:3:20"},"nativeSrc":"28731:16:20","nodeType":"YulFunctionCall","src":"28731:16:20"},{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"28773:9:20","nodeType":"YulIdentifier","src":"28773:9:20"},{"name":"offset","nativeSrc":"28784:6:20","nodeType":"YulIdentifier","src":"28784:6:20"}],"functionName":{"name":"add","nativeSrc":"28769:3:20","nodeType":"YulIdentifier","src":"28769:3:20"},"nativeSrc":"28769:22:20","nodeType":"YulFunctionCall","src":"28769:22:20"},{"name":"end","nativeSrc":"28793:3:20","nodeType":"YulIdentifier","src":"28793:3:20"}],"functionName":{"name":"abi_decode_t_uint64","nativeSrc":"28749:19:20","nodeType":"YulIdentifier","src":"28749:19:20"},"nativeSrc":"28749:48:20","nodeType":"YulFunctionCall","src":"28749:48:20"}],"functionName":{"name":"mstore","nativeSrc":"28724:6:20","nodeType":"YulIdentifier","src":"28724:6:20"},"nativeSrc":"28724:74:20","nodeType":"YulFunctionCall","src":"28724:74:20"},"nativeSrc":"28724:74:20","nodeType":"YulExpressionStatement","src":"28724:74:20"}]},{"nativeSrc":"28819:162:20","nodeType":"YulBlock","src":"28819:162:20","statements":[{"nativeSrc":"28866:16:20","nodeType":"YulVariableDeclaration","src":"28866:16:20","value":{"kind":"number","nativeSrc":"28880:2:20","nodeType":"YulLiteral","src":"28880:2:20","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"28870:6:20","nodeType":"YulTypedName","src":"28870:6:20","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"28907:5:20","nodeType":"YulIdentifier","src":"28907:5:20"},{"kind":"number","nativeSrc":"28914:4:20","nodeType":"YulLiteral","src":"28914:4:20","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"28903:3:20","nodeType":"YulIdentifier","src":"28903:3:20"},"nativeSrc":"28903:16:20","nodeType":"YulFunctionCall","src":"28903:16:20"},{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"28945:9:20","nodeType":"YulIdentifier","src":"28945:9:20"},{"name":"offset","nativeSrc":"28956:6:20","nodeType":"YulIdentifier","src":"28956:6:20"}],"functionName":{"name":"add","nativeSrc":"28941:3:20","nodeType":"YulIdentifier","src":"28941:3:20"},"nativeSrc":"28941:22:20","nodeType":"YulFunctionCall","src":"28941:22:20"},{"name":"end","nativeSrc":"28965:3:20","nodeType":"YulIdentifier","src":"28965:3:20"}],"functionName":{"name":"abi_decode_t_uint32","nativeSrc":"28921:19:20","nodeType":"YulIdentifier","src":"28921:19:20"},"nativeSrc":"28921:48:20","nodeType":"YulFunctionCall","src":"28921:48:20"}],"functionName":{"name":"mstore","nativeSrc":"28896:6:20","nodeType":"YulIdentifier","src":"28896:6:20"},"nativeSrc":"28896:74:20","nodeType":"YulFunctionCall","src":"28896:74:20"},"nativeSrc":"28896:74:20","nodeType":"YulExpressionStatement","src":"28896:74:20"}]},{"nativeSrc":"28991:154:20","nodeType":"YulBlock","src":"28991:154:20","statements":[{"nativeSrc":"29030:16:20","nodeType":"YulVariableDeclaration","src":"29030:16:20","value":{"kind":"number","nativeSrc":"29044:2:20","nodeType":"YulLiteral","src":"29044:2:20","type":"","value":"96"},"variables":[{"name":"offset","nativeSrc":"29034:6:20","nodeType":"YulTypedName","src":"29034:6:20","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"29071:5:20","nodeType":"YulIdentifier","src":"29071:5:20"},{"kind":"number","nativeSrc":"29078:4:20","nodeType":"YulLiteral","src":"29078:4:20","type":"","value":"0x60"}],"functionName":{"name":"add","nativeSrc":"29067:3:20","nodeType":"YulIdentifier","src":"29067:3:20"},"nativeSrc":"29067:16:20","nodeType":"YulFunctionCall","src":"29067:16:20"},{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"29109:9:20","nodeType":"YulIdentifier","src":"29109:9:20"},{"name":"offset","nativeSrc":"29120:6:20","nodeType":"YulIdentifier","src":"29120:6:20"}],"functionName":{"name":"add","nativeSrc":"29105:3:20","nodeType":"YulIdentifier","src":"29105:3:20"},"nativeSrc":"29105:22:20","nodeType":"YulFunctionCall","src":"29105:22:20"},{"name":"end","nativeSrc":"29129:3:20","nodeType":"YulIdentifier","src":"29129:3:20"}],"functionName":{"name":"abi_decode_t_uint32","nativeSrc":"29085:19:20","nodeType":"YulIdentifier","src":"29085:19:20"},"nativeSrc":"29085:48:20","nodeType":"YulFunctionCall","src":"29085:48:20"}],"functionName":{"name":"mstore","nativeSrc":"29060:6:20","nodeType":"YulIdentifier","src":"29060:6:20"},"nativeSrc":"29060:74:20","nodeType":"YulFunctionCall","src":"29060:74:20"},"nativeSrc":"29060:74:20","nodeType":"YulExpressionStatement","src":"29060:74:20"}]},{"nativeSrc":"29155:154:20","nodeType":"YulBlock","src":"29155:154:20","statements":[{"nativeSrc":"29192:17:20","nodeType":"YulVariableDeclaration","src":"29192:17:20","value":{"kind":"number","nativeSrc":"29206:3:20","nodeType":"YulLiteral","src":"29206:3:20","type":"","value":"128"},"variables":[{"name":"offset","nativeSrc":"29196:6:20","nodeType":"YulTypedName","src":"29196:6:20","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"29234:5:20","nodeType":"YulIdentifier","src":"29234:5:20"},{"kind":"number","nativeSrc":"29241:4:20","nodeType":"YulLiteral","src":"29241:4:20","type":"","value":"0x80"}],"functionName":{"name":"add","nativeSrc":"29230:3:20","nodeType":"YulIdentifier","src":"29230:3:20"},"nativeSrc":"29230:16:20","nodeType":"YulFunctionCall","src":"29230:16:20"},{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"29273:9:20","nodeType":"YulIdentifier","src":"29273:9:20"},{"name":"offset","nativeSrc":"29284:6:20","nodeType":"YulIdentifier","src":"29284:6:20"}],"functionName":{"name":"add","nativeSrc":"29269:3:20","nodeType":"YulIdentifier","src":"29269:3:20"},"nativeSrc":"29269:22:20","nodeType":"YulFunctionCall","src":"29269:22:20"},{"name":"end","nativeSrc":"29293:3:20","nodeType":"YulIdentifier","src":"29293:3:20"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"29248:20:20","nodeType":"YulIdentifier","src":"29248:20:20"},"nativeSrc":"29248:49:20","nodeType":"YulFunctionCall","src":"29248:49:20"}],"functionName":{"name":"mstore","nativeSrc":"29223:6:20","nodeType":"YulIdentifier","src":"29223:6:20"},"nativeSrc":"29223:75:20","nodeType":"YulFunctionCall","src":"29223:75:20"},"nativeSrc":"29223:75:20","nodeType":"YulExpressionStatement","src":"29223:75:20"}]}]},"name":"abi_decode_t_struct$_RequestCommitment_$2318_memory_ptr","nativeSrc":"28229:1087:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"28294:9:20","nodeType":"YulTypedName","src":"28294:9:20","type":""},{"name":"end","nativeSrc":"28305:3:20","nodeType":"YulTypedName","src":"28305:3:20","type":""}],"returnVariables":[{"name":"value","nativeSrc":"28313:5:20","nodeType":"YulTypedName","src":"28313:5:20","type":""}],"src":"28229:1087:20"},{"body":{"nativeSrc":"29463:451:20","nodeType":"YulBlock","src":"29463:451:20","statements":[{"body":{"nativeSrc":"29510:83:20","nodeType":"YulBlock","src":"29510:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"29512:77:20","nodeType":"YulIdentifier","src":"29512:77:20"},"nativeSrc":"29512:79:20","nodeType":"YulFunctionCall","src":"29512:79:20"},"nativeSrc":"29512:79:20","nodeType":"YulExpressionStatement","src":"29512:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"29484:7:20","nodeType":"YulIdentifier","src":"29484:7:20"},{"name":"headStart","nativeSrc":"29493:9:20","nodeType":"YulIdentifier","src":"29493:9:20"}],"functionName":{"name":"sub","nativeSrc":"29480:3:20","nodeType":"YulIdentifier","src":"29480:3:20"},"nativeSrc":"29480:23:20","nodeType":"YulFunctionCall","src":"29480:23:20"},{"kind":"number","nativeSrc":"29505:3:20","nodeType":"YulLiteral","src":"29505:3:20","type":"","value":"576"}],"functionName":{"name":"slt","nativeSrc":"29476:3:20","nodeType":"YulIdentifier","src":"29476:3:20"},"nativeSrc":"29476:33:20","nodeType":"YulFunctionCall","src":"29476:33:20"},"nativeSrc":"29473:120:20","nodeType":"YulIf","src":"29473:120:20"},{"nativeSrc":"29603:140:20","nodeType":"YulBlock","src":"29603:140:20","statements":[{"nativeSrc":"29618:15:20","nodeType":"YulVariableDeclaration","src":"29618:15:20","value":{"kind":"number","nativeSrc":"29632:1:20","nodeType":"YulLiteral","src":"29632:1:20","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"29622:6:20","nodeType":"YulTypedName","src":"29622:6:20","type":""}]},{"nativeSrc":"29647:86:20","nodeType":"YulAssignment","src":"29647:86:20","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"29705:9:20","nodeType":"YulIdentifier","src":"29705:9:20"},{"name":"offset","nativeSrc":"29716:6:20","nodeType":"YulIdentifier","src":"29716:6:20"}],"functionName":{"name":"add","nativeSrc":"29701:3:20","nodeType":"YulIdentifier","src":"29701:3:20"},"nativeSrc":"29701:22:20","nodeType":"YulFunctionCall","src":"29701:22:20"},{"name":"dataEnd","nativeSrc":"29725:7:20","nodeType":"YulIdentifier","src":"29725:7:20"}],"functionName":{"name":"abi_decode_t_struct$_Proof_$1989_memory_ptr","nativeSrc":"29657:43:20","nodeType":"YulIdentifier","src":"29657:43:20"},"nativeSrc":"29657:76:20","nodeType":"YulFunctionCall","src":"29657:76:20"},"variableNames":[{"name":"value0","nativeSrc":"29647:6:20","nodeType":"YulIdentifier","src":"29647:6:20"}]}]},{"nativeSrc":"29753:154:20","nodeType":"YulBlock","src":"29753:154:20","statements":[{"nativeSrc":"29768:17:20","nodeType":"YulVariableDeclaration","src":"29768:17:20","value":{"kind":"number","nativeSrc":"29782:3:20","nodeType":"YulLiteral","src":"29782:3:20","type":"","value":"416"},"variables":[{"name":"offset","nativeSrc":"29772:6:20","nodeType":"YulTypedName","src":"29772:6:20","type":""}]},{"nativeSrc":"29799:98:20","nodeType":"YulAssignment","src":"29799:98:20","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"29869:9:20","nodeType":"YulIdentifier","src":"29869:9:20"},{"name":"offset","nativeSrc":"29880:6:20","nodeType":"YulIdentifier","src":"29880:6:20"}],"functionName":{"name":"add","nativeSrc":"29865:3:20","nodeType":"YulIdentifier","src":"29865:3:20"},"nativeSrc":"29865:22:20","nodeType":"YulFunctionCall","src":"29865:22:20"},{"name":"dataEnd","nativeSrc":"29889:7:20","nodeType":"YulIdentifier","src":"29889:7:20"}],"functionName":{"name":"abi_decode_t_struct$_RequestCommitment_$2318_memory_ptr","nativeSrc":"29809:55:20","nodeType":"YulIdentifier","src":"29809:55:20"},"nativeSrc":"29809:88:20","nodeType":"YulFunctionCall","src":"29809:88:20"},"variableNames":[{"name":"value1","nativeSrc":"29799:6:20","nodeType":"YulIdentifier","src":"29799:6:20"}]}]}]},"name":"abi_decode_tuple_t_struct$_Proof_$1989_memory_ptrt_struct$_RequestCommitment_$2318_memory_ptr","nativeSrc":"29322:592:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"29425:9:20","nodeType":"YulTypedName","src":"29425:9:20","type":""},{"name":"dataEnd","nativeSrc":"29436:7:20","nodeType":"YulTypedName","src":"29436:7:20","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"29448:6:20","nodeType":"YulTypedName","src":"29448:6:20","type":""},{"name":"value1","nativeSrc":"29456:6:20","nodeType":"YulTypedName","src":"29456:6:20","type":""}],"src":"29322:592:20"},{"body":{"nativeSrc":"30016:122:20","nodeType":"YulBlock","src":"30016:122:20","statements":[{"nativeSrc":"30026:26:20","nodeType":"YulAssignment","src":"30026:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"30038:9:20","nodeType":"YulIdentifier","src":"30038:9:20"},{"kind":"number","nativeSrc":"30049:2:20","nodeType":"YulLiteral","src":"30049:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"30034:3:20","nodeType":"YulIdentifier","src":"30034:3:20"},"nativeSrc":"30034:18:20","nodeType":"YulFunctionCall","src":"30034:18:20"},"variableNames":[{"name":"tail","nativeSrc":"30026:4:20","nodeType":"YulIdentifier","src":"30026:4:20"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"30104:6:20","nodeType":"YulIdentifier","src":"30104:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"30117:9:20","nodeType":"YulIdentifier","src":"30117:9:20"},{"kind":"number","nativeSrc":"30128:1:20","nodeType":"YulLiteral","src":"30128:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"30113:3:20","nodeType":"YulIdentifier","src":"30113:3:20"},"nativeSrc":"30113:17:20","nodeType":"YulFunctionCall","src":"30113:17:20"}],"functionName":{"name":"abi_encode_t_uint96_to_t_uint96_fromStack","nativeSrc":"30062:41:20","nodeType":"YulIdentifier","src":"30062:41:20"},"nativeSrc":"30062:69:20","nodeType":"YulFunctionCall","src":"30062:69:20"},"nativeSrc":"30062:69:20","nodeType":"YulExpressionStatement","src":"30062:69:20"}]},"name":"abi_encode_tuple_t_uint96__to_t_uint96__fromStack_reversed","nativeSrc":"29920:218:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"29988:9:20","nodeType":"YulTypedName","src":"29988:9:20","type":""},{"name":"value0","nativeSrc":"30000:6:20","nodeType":"YulTypedName","src":"30000:6:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"30011:4:20","nodeType":"YulTypedName","src":"30011:4:20","type":""}],"src":"29920:218:20"},{"body":{"nativeSrc":"30318:363:20","nodeType":"YulBlock","src":"30318:363:20","statements":[{"nativeSrc":"30328:27:20","nodeType":"YulAssignment","src":"30328:27:20","value":{"arguments":[{"name":"headStart","nativeSrc":"30340:9:20","nodeType":"YulIdentifier","src":"30340:9:20"},{"kind":"number","nativeSrc":"30351:3:20","nodeType":"YulLiteral","src":"30351:3:20","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"30336:3:20","nodeType":"YulIdentifier","src":"30336:3:20"},"nativeSrc":"30336:19:20","nodeType":"YulFunctionCall","src":"30336:19:20"},"variableNames":[{"name":"tail","nativeSrc":"30328:4:20","nodeType":"YulIdentifier","src":"30328:4:20"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"30407:6:20","nodeType":"YulIdentifier","src":"30407:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"30420:9:20","nodeType":"YulIdentifier","src":"30420:9:20"},{"kind":"number","nativeSrc":"30431:1:20","nodeType":"YulLiteral","src":"30431:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"30416:3:20","nodeType":"YulIdentifier","src":"30416:3:20"},"nativeSrc":"30416:17:20","nodeType":"YulFunctionCall","src":"30416:17:20"}],"functionName":{"name":"abi_encode_t_uint16_to_t_uint16_fromStack","nativeSrc":"30365:41:20","nodeType":"YulIdentifier","src":"30365:41:20"},"nativeSrc":"30365:69:20","nodeType":"YulFunctionCall","src":"30365:69:20"},"nativeSrc":"30365:69:20","nodeType":"YulExpressionStatement","src":"30365:69:20"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"30486:6:20","nodeType":"YulIdentifier","src":"30486:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"30499:9:20","nodeType":"YulIdentifier","src":"30499:9:20"},{"kind":"number","nativeSrc":"30510:2:20","nodeType":"YulLiteral","src":"30510:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"30495:3:20","nodeType":"YulIdentifier","src":"30495:3:20"},"nativeSrc":"30495:18:20","nodeType":"YulFunctionCall","src":"30495:18:20"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nativeSrc":"30444:41:20","nodeType":"YulIdentifier","src":"30444:41:20"},"nativeSrc":"30444:70:20","nodeType":"YulFunctionCall","src":"30444:70:20"},"nativeSrc":"30444:70:20","nodeType":"YulExpressionStatement","src":"30444:70:20"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"30566:6:20","nodeType":"YulIdentifier","src":"30566:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"30579:9:20","nodeType":"YulIdentifier","src":"30579:9:20"},{"kind":"number","nativeSrc":"30590:2:20","nodeType":"YulLiteral","src":"30590:2:20","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"30575:3:20","nodeType":"YulIdentifier","src":"30575:3:20"},"nativeSrc":"30575:18:20","nodeType":"YulFunctionCall","src":"30575:18:20"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nativeSrc":"30524:41:20","nodeType":"YulIdentifier","src":"30524:41:20"},"nativeSrc":"30524:70:20","nodeType":"YulFunctionCall","src":"30524:70:20"},"nativeSrc":"30524:70:20","nodeType":"YulExpressionStatement","src":"30524:70:20"},{"expression":{"arguments":[{"name":"value3","nativeSrc":"30646:6:20","nodeType":"YulIdentifier","src":"30646:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"30659:9:20","nodeType":"YulIdentifier","src":"30659:9:20"},{"kind":"number","nativeSrc":"30670:2:20","nodeType":"YulLiteral","src":"30670:2:20","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"30655:3:20","nodeType":"YulIdentifier","src":"30655:3:20"},"nativeSrc":"30655:18:20","nodeType":"YulFunctionCall","src":"30655:18:20"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nativeSrc":"30604:41:20","nodeType":"YulIdentifier","src":"30604:41:20"},"nativeSrc":"30604:70:20","nodeType":"YulFunctionCall","src":"30604:70:20"},"nativeSrc":"30604:70:20","nodeType":"YulExpressionStatement","src":"30604:70:20"}]},"name":"abi_encode_tuple_t_uint16_t_uint32_t_uint32_t_uint32__to_t_uint16_t_uint32_t_uint32_t_uint32__fromStack_reversed","nativeSrc":"30144:537:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"30266:9:20","nodeType":"YulTypedName","src":"30266:9:20","type":""},{"name":"value3","nativeSrc":"30278:6:20","nodeType":"YulTypedName","src":"30278:6:20","type":""},{"name":"value2","nativeSrc":"30286:6:20","nodeType":"YulTypedName","src":"30286:6:20","type":""},{"name":"value1","nativeSrc":"30294:6:20","nodeType":"YulTypedName","src":"30294:6:20","type":""},{"name":"value0","nativeSrc":"30302:6:20","nodeType":"YulTypedName","src":"30302:6:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"30313:4:20","nodeType":"YulTypedName","src":"30313:4:20","type":""}],"src":"30144:537:20"},{"body":{"nativeSrc":"30776:286:20","nodeType":"YulBlock","src":"30776:286:20","statements":[{"body":{"nativeSrc":"30822:83:20","nodeType":"YulBlock","src":"30822:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"30824:77:20","nodeType":"YulIdentifier","src":"30824:77:20"},"nativeSrc":"30824:79:20","nodeType":"YulFunctionCall","src":"30824:79:20"},"nativeSrc":"30824:79:20","nodeType":"YulExpressionStatement","src":"30824:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"30797:7:20","nodeType":"YulIdentifier","src":"30797:7:20"},{"name":"headStart","nativeSrc":"30806:9:20","nodeType":"YulIdentifier","src":"30806:9:20"}],"functionName":{"name":"sub","nativeSrc":"30793:3:20","nodeType":"YulIdentifier","src":"30793:3:20"},"nativeSrc":"30793:23:20","nodeType":"YulFunctionCall","src":"30793:23:20"},{"kind":"number","nativeSrc":"30818:2:20","nodeType":"YulLiteral","src":"30818:2:20","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"30789:3:20","nodeType":"YulIdentifier","src":"30789:3:20"},"nativeSrc":"30789:32:20","nodeType":"YulFunctionCall","src":"30789:32:20"},"nativeSrc":"30786:119:20","nodeType":"YulIf","src":"30786:119:20"},{"nativeSrc":"30915:140:20","nodeType":"YulBlock","src":"30915:140:20","statements":[{"nativeSrc":"30930:15:20","nodeType":"YulVariableDeclaration","src":"30930:15:20","value":{"kind":"number","nativeSrc":"30944:1:20","nodeType":"YulLiteral","src":"30944:1:20","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"30934:6:20","nodeType":"YulTypedName","src":"30934:6:20","type":""}]},{"nativeSrc":"30959:86:20","nodeType":"YulAssignment","src":"30959:86:20","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"31017:9:20","nodeType":"YulIdentifier","src":"31017:9:20"},{"name":"offset","nativeSrc":"31028:6:20","nodeType":"YulIdentifier","src":"31028:6:20"}],"functionName":{"name":"add","nativeSrc":"31013:3:20","nodeType":"YulIdentifier","src":"31013:3:20"},"nativeSrc":"31013:22:20","nodeType":"YulFunctionCall","src":"31013:22:20"},{"name":"dataEnd","nativeSrc":"31037:7:20","nodeType":"YulIdentifier","src":"31037:7:20"}],"functionName":{"name":"abi_decode_t_array$_t_uint256_$2_memory_ptr","nativeSrc":"30969:43:20","nodeType":"YulIdentifier","src":"30969:43:20"},"nativeSrc":"30969:76:20","nodeType":"YulFunctionCall","src":"30969:76:20"},"variableNames":[{"name":"value0","nativeSrc":"30959:6:20","nodeType":"YulIdentifier","src":"30959:6:20"}]}]}]},"name":"abi_decode_tuple_t_array$_t_uint256_$2_memory_ptr","nativeSrc":"30687:375:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"30746:9:20","nodeType":"YulTypedName","src":"30746:9:20","type":""},{"name":"dataEnd","nativeSrc":"30757:7:20","nodeType":"YulTypedName","src":"30757:7:20","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"30769:6:20","nodeType":"YulTypedName","src":"30769:6:20","type":""}],"src":"30687:375:20"},{"body":{"nativeSrc":"31134:263:20","nodeType":"YulBlock","src":"31134:263:20","statements":[{"body":{"nativeSrc":"31180:83:20","nodeType":"YulBlock","src":"31180:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"31182:77:20","nodeType":"YulIdentifier","src":"31182:77:20"},"nativeSrc":"31182:79:20","nodeType":"YulFunctionCall","src":"31182:79:20"},"nativeSrc":"31182:79:20","nodeType":"YulExpressionStatement","src":"31182:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"31155:7:20","nodeType":"YulIdentifier","src":"31155:7:20"},{"name":"headStart","nativeSrc":"31164:9:20","nodeType":"YulIdentifier","src":"31164:9:20"}],"functionName":{"name":"sub","nativeSrc":"31151:3:20","nodeType":"YulIdentifier","src":"31151:3:20"},"nativeSrc":"31151:23:20","nodeType":"YulFunctionCall","src":"31151:23:20"},{"kind":"number","nativeSrc":"31176:2:20","nodeType":"YulLiteral","src":"31176:2:20","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"31147:3:20","nodeType":"YulIdentifier","src":"31147:3:20"},"nativeSrc":"31147:32:20","nodeType":"YulFunctionCall","src":"31147:32:20"},"nativeSrc":"31144:119:20","nodeType":"YulIf","src":"31144:119:20"},{"nativeSrc":"31273:117:20","nodeType":"YulBlock","src":"31273:117:20","statements":[{"nativeSrc":"31288:15:20","nodeType":"YulVariableDeclaration","src":"31288:15:20","value":{"kind":"number","nativeSrc":"31302:1:20","nodeType":"YulLiteral","src":"31302:1:20","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"31292:6:20","nodeType":"YulTypedName","src":"31292:6:20","type":""}]},{"nativeSrc":"31317:63:20","nodeType":"YulAssignment","src":"31317:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"31352:9:20","nodeType":"YulIdentifier","src":"31352:9:20"},{"name":"offset","nativeSrc":"31363:6:20","nodeType":"YulIdentifier","src":"31363:6:20"}],"functionName":{"name":"add","nativeSrc":"31348:3:20","nodeType":"YulIdentifier","src":"31348:3:20"},"nativeSrc":"31348:22:20","nodeType":"YulFunctionCall","src":"31348:22:20"},{"name":"dataEnd","nativeSrc":"31372:7:20","nodeType":"YulIdentifier","src":"31372:7:20"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"31327:20:20","nodeType":"YulIdentifier","src":"31327:20:20"},"nativeSrc":"31327:53:20","nodeType":"YulFunctionCall","src":"31327:53:20"},"variableNames":[{"name":"value0","nativeSrc":"31317:6:20","nodeType":"YulIdentifier","src":"31317:6:20"}]}]}]},"name":"abi_decode_tuple_t_address","nativeSrc":"31068:329:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"31104:9:20","nodeType":"YulTypedName","src":"31104:9:20","type":""},{"name":"dataEnd","nativeSrc":"31115:7:20","nodeType":"YulTypedName","src":"31115:7:20","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"31127:6:20","nodeType":"YulTypedName","src":"31127:6:20","type":""}],"src":"31068:329:20"},{"body":{"nativeSrc":"31445:48:20","nodeType":"YulBlock","src":"31445:48:20","statements":[{"nativeSrc":"31455:32:20","nodeType":"YulAssignment","src":"31455:32:20","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"31480:5:20","nodeType":"YulIdentifier","src":"31480:5:20"}],"functionName":{"name":"iszero","nativeSrc":"31473:6:20","nodeType":"YulIdentifier","src":"31473:6:20"},"nativeSrc":"31473:13:20","nodeType":"YulFunctionCall","src":"31473:13:20"}],"functionName":{"name":"iszero","nativeSrc":"31466:6:20","nodeType":"YulIdentifier","src":"31466:6:20"},"nativeSrc":"31466:21:20","nodeType":"YulFunctionCall","src":"31466:21:20"},"variableNames":[{"name":"cleaned","nativeSrc":"31455:7:20","nodeType":"YulIdentifier","src":"31455:7:20"}]}]},"name":"cleanup_t_bool","nativeSrc":"31403:90:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"31427:5:20","nodeType":"YulTypedName","src":"31427:5:20","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"31437:7:20","nodeType":"YulTypedName","src":"31437:7:20","type":""}],"src":"31403:90:20"},{"body":{"nativeSrc":"31558:50:20","nodeType":"YulBlock","src":"31558:50:20","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"31575:3:20","nodeType":"YulIdentifier","src":"31575:3:20"},{"arguments":[{"name":"value","nativeSrc":"31595:5:20","nodeType":"YulIdentifier","src":"31595:5:20"}],"functionName":{"name":"cleanup_t_bool","nativeSrc":"31580:14:20","nodeType":"YulIdentifier","src":"31580:14:20"},"nativeSrc":"31580:21:20","nodeType":"YulFunctionCall","src":"31580:21:20"}],"functionName":{"name":"mstore","nativeSrc":"31568:6:20","nodeType":"YulIdentifier","src":"31568:6:20"},"nativeSrc":"31568:34:20","nodeType":"YulFunctionCall","src":"31568:34:20"},"nativeSrc":"31568:34:20","nodeType":"YulExpressionStatement","src":"31568:34:20"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"31499:109:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"31546:5:20","nodeType":"YulTypedName","src":"31546:5:20","type":""},{"name":"pos","nativeSrc":"31553:3:20","nodeType":"YulTypedName","src":"31553:3:20","type":""}],"src":"31499:109:20"},{"body":{"nativeSrc":"31706:118:20","nodeType":"YulBlock","src":"31706:118:20","statements":[{"nativeSrc":"31716:26:20","nodeType":"YulAssignment","src":"31716:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"31728:9:20","nodeType":"YulIdentifier","src":"31728:9:20"},{"kind":"number","nativeSrc":"31739:2:20","nodeType":"YulLiteral","src":"31739:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"31724:3:20","nodeType":"YulIdentifier","src":"31724:3:20"},"nativeSrc":"31724:18:20","nodeType":"YulFunctionCall","src":"31724:18:20"},"variableNames":[{"name":"tail","nativeSrc":"31716:4:20","nodeType":"YulIdentifier","src":"31716:4:20"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"31790:6:20","nodeType":"YulIdentifier","src":"31790:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"31803:9:20","nodeType":"YulIdentifier","src":"31803:9:20"},{"kind":"number","nativeSrc":"31814:1:20","nodeType":"YulLiteral","src":"31814:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"31799:3:20","nodeType":"YulIdentifier","src":"31799:3:20"},"nativeSrc":"31799:17:20","nodeType":"YulFunctionCall","src":"31799:17:20"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"31752:37:20","nodeType":"YulIdentifier","src":"31752:37:20"},"nativeSrc":"31752:65:20","nodeType":"YulFunctionCall","src":"31752:65:20"},"nativeSrc":"31752:65:20","nodeType":"YulExpressionStatement","src":"31752:65:20"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nativeSrc":"31614:210:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"31678:9:20","nodeType":"YulTypedName","src":"31678:9:20","type":""},{"name":"value0","nativeSrc":"31690:6:20","nodeType":"YulTypedName","src":"31690:6:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"31701:4:20","nodeType":"YulTypedName","src":"31701:4:20","type":""}],"src":"31614:210:20"},{"body":{"nativeSrc":"31956:206:20","nodeType":"YulBlock","src":"31956:206:20","statements":[{"nativeSrc":"31966:26:20","nodeType":"YulAssignment","src":"31966:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"31978:9:20","nodeType":"YulIdentifier","src":"31978:9:20"},{"kind":"number","nativeSrc":"31989:2:20","nodeType":"YulLiteral","src":"31989:2:20","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"31974:3:20","nodeType":"YulIdentifier","src":"31974:3:20"},"nativeSrc":"31974:18:20","nodeType":"YulFunctionCall","src":"31974:18:20"},"variableNames":[{"name":"tail","nativeSrc":"31966:4:20","nodeType":"YulIdentifier","src":"31966:4:20"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"32046:6:20","nodeType":"YulIdentifier","src":"32046:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"32059:9:20","nodeType":"YulIdentifier","src":"32059:9:20"},{"kind":"number","nativeSrc":"32070:1:20","nodeType":"YulLiteral","src":"32070:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"32055:3:20","nodeType":"YulIdentifier","src":"32055:3:20"},"nativeSrc":"32055:17:20","nodeType":"YulFunctionCall","src":"32055:17:20"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"32002:43:20","nodeType":"YulIdentifier","src":"32002:43:20"},"nativeSrc":"32002:71:20","nodeType":"YulFunctionCall","src":"32002:71:20"},"nativeSrc":"32002:71:20","nodeType":"YulExpressionStatement","src":"32002:71:20"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"32127:6:20","nodeType":"YulIdentifier","src":"32127:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"32140:9:20","nodeType":"YulIdentifier","src":"32140:9:20"},{"kind":"number","nativeSrc":"32151:2:20","nodeType":"YulLiteral","src":"32151:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"32136:3:20","nodeType":"YulIdentifier","src":"32136:3:20"},"nativeSrc":"32136:18:20","nodeType":"YulFunctionCall","src":"32136:18:20"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"32083:43:20","nodeType":"YulIdentifier","src":"32083:43:20"},"nativeSrc":"32083:72:20","nodeType":"YulFunctionCall","src":"32083:72:20"},"nativeSrc":"32083:72:20","nodeType":"YulExpressionStatement","src":"32083:72:20"}]},"name":"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed","nativeSrc":"31830:332:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"31920:9:20","nodeType":"YulTypedName","src":"31920:9:20","type":""},{"name":"value1","nativeSrc":"31932:6:20","nodeType":"YulTypedName","src":"31932:6:20","type":""},{"name":"value0","nativeSrc":"31940:6:20","nodeType":"YulTypedName","src":"31940:6:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"31951:4:20","nodeType":"YulTypedName","src":"31951:4:20","type":""}],"src":"31830:332:20"},{"body":{"nativeSrc":"32196:152:20","nodeType":"YulBlock","src":"32196:152:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"32213:1:20","nodeType":"YulLiteral","src":"32213:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"32216:77:20","nodeType":"YulLiteral","src":"32216:77:20","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"32206:6:20","nodeType":"YulIdentifier","src":"32206:6:20"},"nativeSrc":"32206:88:20","nodeType":"YulFunctionCall","src":"32206:88:20"},"nativeSrc":"32206:88:20","nodeType":"YulExpressionStatement","src":"32206:88:20"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"32310:1:20","nodeType":"YulLiteral","src":"32310:1:20","type":"","value":"4"},{"kind":"number","nativeSrc":"32313:4:20","nodeType":"YulLiteral","src":"32313:4:20","type":"","value":"0x32"}],"functionName":{"name":"mstore","nativeSrc":"32303:6:20","nodeType":"YulIdentifier","src":"32303:6:20"},"nativeSrc":"32303:15:20","nodeType":"YulFunctionCall","src":"32303:15:20"},"nativeSrc":"32303:15:20","nodeType":"YulExpressionStatement","src":"32303:15:20"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"32334:1:20","nodeType":"YulLiteral","src":"32334:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"32337:4:20","nodeType":"YulLiteral","src":"32337:4:20","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"32327:6:20","nodeType":"YulIdentifier","src":"32327:6:20"},"nativeSrc":"32327:15:20","nodeType":"YulFunctionCall","src":"32327:15:20"},"nativeSrc":"32327:15:20","nodeType":"YulExpressionStatement","src":"32327:15:20"}]},"name":"panic_error_0x32","nativeSrc":"32168:180:20","nodeType":"YulFunctionDefinition","src":"32168:180:20"},{"body":{"nativeSrc":"32382:152:20","nodeType":"YulBlock","src":"32382:152:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"32399:1:20","nodeType":"YulLiteral","src":"32399:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"32402:77:20","nodeType":"YulLiteral","src":"32402:77:20","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"32392:6:20","nodeType":"YulIdentifier","src":"32392:6:20"},"nativeSrc":"32392:88:20","nodeType":"YulFunctionCall","src":"32392:88:20"},"nativeSrc":"32392:88:20","nodeType":"YulExpressionStatement","src":"32392:88:20"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"32496:1:20","nodeType":"YulLiteral","src":"32496:1:20","type":"","value":"4"},{"kind":"number","nativeSrc":"32499:4:20","nodeType":"YulLiteral","src":"32499:4:20","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"32489:6:20","nodeType":"YulIdentifier","src":"32489:6:20"},"nativeSrc":"32489:15:20","nodeType":"YulFunctionCall","src":"32489:15:20"},"nativeSrc":"32489:15:20","nodeType":"YulExpressionStatement","src":"32489:15:20"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"32520:1:20","nodeType":"YulLiteral","src":"32520:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"32523:4:20","nodeType":"YulLiteral","src":"32523:4:20","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"32513:6:20","nodeType":"YulIdentifier","src":"32513:6:20"},"nativeSrc":"32513:15:20","nodeType":"YulFunctionCall","src":"32513:15:20"},"nativeSrc":"32513:15:20","nodeType":"YulExpressionStatement","src":"32513:15:20"}]},"name":"panic_error_0x11","nativeSrc":"32354:180:20","nodeType":"YulFunctionDefinition","src":"32354:180:20"},{"body":{"nativeSrc":"32585:149:20","nodeType":"YulBlock","src":"32585:149:20","statements":[{"nativeSrc":"32595:25:20","nodeType":"YulAssignment","src":"32595:25:20","value":{"arguments":[{"name":"x","nativeSrc":"32618:1:20","nodeType":"YulIdentifier","src":"32618:1:20"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"32600:17:20","nodeType":"YulIdentifier","src":"32600:17:20"},"nativeSrc":"32600:20:20","nodeType":"YulFunctionCall","src":"32600:20:20"},"variableNames":[{"name":"x","nativeSrc":"32595:1:20","nodeType":"YulIdentifier","src":"32595:1:20"}]},{"nativeSrc":"32629:25:20","nodeType":"YulAssignment","src":"32629:25:20","value":{"arguments":[{"name":"y","nativeSrc":"32652:1:20","nodeType":"YulIdentifier","src":"32652:1:20"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"32634:17:20","nodeType":"YulIdentifier","src":"32634:17:20"},"nativeSrc":"32634:20:20","nodeType":"YulFunctionCall","src":"32634:20:20"},"variableNames":[{"name":"y","nativeSrc":"32629:1:20","nodeType":"YulIdentifier","src":"32629:1:20"}]},{"nativeSrc":"32663:17:20","nodeType":"YulAssignment","src":"32663:17:20","value":{"arguments":[{"name":"x","nativeSrc":"32675:1:20","nodeType":"YulIdentifier","src":"32675:1:20"},{"name":"y","nativeSrc":"32678:1:20","nodeType":"YulIdentifier","src":"32678:1:20"}],"functionName":{"name":"sub","nativeSrc":"32671:3:20","nodeType":"YulIdentifier","src":"32671:3:20"},"nativeSrc":"32671:9:20","nodeType":"YulFunctionCall","src":"32671:9:20"},"variableNames":[{"name":"diff","nativeSrc":"32663:4:20","nodeType":"YulIdentifier","src":"32663:4:20"}]},{"body":{"nativeSrc":"32705:22:20","nodeType":"YulBlock","src":"32705:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"32707:16:20","nodeType":"YulIdentifier","src":"32707:16:20"},"nativeSrc":"32707:18:20","nodeType":"YulFunctionCall","src":"32707:18:20"},"nativeSrc":"32707:18:20","nodeType":"YulExpressionStatement","src":"32707:18:20"}]},"condition":{"arguments":[{"name":"diff","nativeSrc":"32696:4:20","nodeType":"YulIdentifier","src":"32696:4:20"},{"name":"x","nativeSrc":"32702:1:20","nodeType":"YulIdentifier","src":"32702:1:20"}],"functionName":{"name":"gt","nativeSrc":"32693:2:20","nodeType":"YulIdentifier","src":"32693:2:20"},"nativeSrc":"32693:11:20","nodeType":"YulFunctionCall","src":"32693:11:20"},"nativeSrc":"32690:37:20","nodeType":"YulIf","src":"32690:37:20"}]},"name":"checked_sub_t_uint256","nativeSrc":"32540:194:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"32571:1:20","nodeType":"YulTypedName","src":"32571:1:20","type":""},{"name":"y","nativeSrc":"32574:1:20","nodeType":"YulTypedName","src":"32574:1:20","type":""}],"returnVariables":[{"name":"diff","nativeSrc":"32580:4:20","nodeType":"YulTypedName","src":"32580:4:20","type":""}],"src":"32540:194:20"},{"body":{"nativeSrc":"32768:152:20","nodeType":"YulBlock","src":"32768:152:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"32785:1:20","nodeType":"YulLiteral","src":"32785:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"32788:77:20","nodeType":"YulLiteral","src":"32788:77:20","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"32778:6:20","nodeType":"YulIdentifier","src":"32778:6:20"},"nativeSrc":"32778:88:20","nodeType":"YulFunctionCall","src":"32778:88:20"},"nativeSrc":"32778:88:20","nodeType":"YulExpressionStatement","src":"32778:88:20"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"32882:1:20","nodeType":"YulLiteral","src":"32882:1:20","type":"","value":"4"},{"kind":"number","nativeSrc":"32885:4:20","nodeType":"YulLiteral","src":"32885:4:20","type":"","value":"0x31"}],"functionName":{"name":"mstore","nativeSrc":"32875:6:20","nodeType":"YulIdentifier","src":"32875:6:20"},"nativeSrc":"32875:15:20","nodeType":"YulFunctionCall","src":"32875:15:20"},"nativeSrc":"32875:15:20","nodeType":"YulExpressionStatement","src":"32875:15:20"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"32906:1:20","nodeType":"YulLiteral","src":"32906:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"32909:4:20","nodeType":"YulLiteral","src":"32909:4:20","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"32899:6:20","nodeType":"YulIdentifier","src":"32899:6:20"},"nativeSrc":"32899:15:20","nodeType":"YulFunctionCall","src":"32899:15:20"},"nativeSrc":"32899:15:20","nodeType":"YulExpressionStatement","src":"32899:15:20"}]},"name":"panic_error_0x31","nativeSrc":"32740:180:20","nodeType":"YulFunctionDefinition","src":"32740:180:20"},{"body":{"nativeSrc":"33074:282:20","nodeType":"YulBlock","src":"33074:282:20","statements":[{"nativeSrc":"33084:26:20","nodeType":"YulAssignment","src":"33084:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"33096:9:20","nodeType":"YulIdentifier","src":"33096:9:20"},{"kind":"number","nativeSrc":"33107:2:20","nodeType":"YulLiteral","src":"33107:2:20","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"33092:3:20","nodeType":"YulIdentifier","src":"33092:3:20"},"nativeSrc":"33092:18:20","nodeType":"YulFunctionCall","src":"33092:18:20"},"variableNames":[{"name":"tail","nativeSrc":"33084:4:20","nodeType":"YulIdentifier","src":"33084:4:20"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"33162:6:20","nodeType":"YulIdentifier","src":"33162:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"33175:9:20","nodeType":"YulIdentifier","src":"33175:9:20"},{"kind":"number","nativeSrc":"33186:1:20","nodeType":"YulLiteral","src":"33186:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"33171:3:20","nodeType":"YulIdentifier","src":"33171:3:20"},"nativeSrc":"33171:17:20","nodeType":"YulFunctionCall","src":"33171:17:20"}],"functionName":{"name":"abi_encode_t_uint16_to_t_uint16_fromStack","nativeSrc":"33120:41:20","nodeType":"YulIdentifier","src":"33120:41:20"},"nativeSrc":"33120:69:20","nodeType":"YulFunctionCall","src":"33120:69:20"},"nativeSrc":"33120:69:20","nodeType":"YulExpressionStatement","src":"33120:69:20"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"33241:6:20","nodeType":"YulIdentifier","src":"33241:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"33254:9:20","nodeType":"YulIdentifier","src":"33254:9:20"},{"kind":"number","nativeSrc":"33265:2:20","nodeType":"YulLiteral","src":"33265:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"33250:3:20","nodeType":"YulIdentifier","src":"33250:3:20"},"nativeSrc":"33250:18:20","nodeType":"YulFunctionCall","src":"33250:18:20"}],"functionName":{"name":"abi_encode_t_uint16_to_t_uint16_fromStack","nativeSrc":"33199:41:20","nodeType":"YulIdentifier","src":"33199:41:20"},"nativeSrc":"33199:70:20","nodeType":"YulFunctionCall","src":"33199:70:20"},"nativeSrc":"33199:70:20","nodeType":"YulExpressionStatement","src":"33199:70:20"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"33321:6:20","nodeType":"YulIdentifier","src":"33321:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"33334:9:20","nodeType":"YulIdentifier","src":"33334:9:20"},{"kind":"number","nativeSrc":"33345:2:20","nodeType":"YulLiteral","src":"33345:2:20","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"33330:3:20","nodeType":"YulIdentifier","src":"33330:3:20"},"nativeSrc":"33330:18:20","nodeType":"YulFunctionCall","src":"33330:18:20"}],"functionName":{"name":"abi_encode_t_uint16_to_t_uint16_fromStack","nativeSrc":"33279:41:20","nodeType":"YulIdentifier","src":"33279:41:20"},"nativeSrc":"33279:70:20","nodeType":"YulFunctionCall","src":"33279:70:20"},"nativeSrc":"33279:70:20","nodeType":"YulExpressionStatement","src":"33279:70:20"}]},"name":"abi_encode_tuple_t_uint16_t_uint16_t_uint16__to_t_uint16_t_uint16_t_uint16__fromStack_reversed","nativeSrc":"32926:430:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"33030:9:20","nodeType":"YulTypedName","src":"33030:9:20","type":""},{"name":"value2","nativeSrc":"33042:6:20","nodeType":"YulTypedName","src":"33042:6:20","type":""},{"name":"value1","nativeSrc":"33050:6:20","nodeType":"YulTypedName","src":"33050:6:20","type":""},{"name":"value0","nativeSrc":"33058:6:20","nodeType":"YulTypedName","src":"33058:6:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"33069:4:20","nodeType":"YulTypedName","src":"33069:4:20","type":""}],"src":"32926:430:20"},{"body":{"nativeSrc":"33413:51:20","nodeType":"YulBlock","src":"33413:51:20","statements":[{"nativeSrc":"33423:34:20","nodeType":"YulAssignment","src":"33423:34:20","value":{"arguments":[{"kind":"number","nativeSrc":"33448:1:20","nodeType":"YulLiteral","src":"33448:1:20","type":"","value":"0"},{"name":"value","nativeSrc":"33451:5:20","nodeType":"YulIdentifier","src":"33451:5:20"}],"functionName":{"name":"shr","nativeSrc":"33444:3:20","nodeType":"YulIdentifier","src":"33444:3:20"},"nativeSrc":"33444:13:20","nodeType":"YulFunctionCall","src":"33444:13:20"},"variableNames":[{"name":"newValue","nativeSrc":"33423:8:20","nodeType":"YulIdentifier","src":"33423:8:20"}]}]},"name":"shift_right_0_unsigned","nativeSrc":"33362:102:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"33394:5:20","nodeType":"YulTypedName","src":"33394:5:20","type":""}],"returnVariables":[{"name":"newValue","nativeSrc":"33404:8:20","nodeType":"YulTypedName","src":"33404:8:20","type":""}],"src":"33362:102:20"},{"body":{"nativeSrc":"33527:49:20","nodeType":"YulBlock","src":"33527:49:20","statements":[{"nativeSrc":"33537:33:20","nodeType":"YulAssignment","src":"33537:33:20","value":{"arguments":[{"name":"value","nativeSrc":"33552:5:20","nodeType":"YulIdentifier","src":"33552:5:20"},{"kind":"number","nativeSrc":"33559:10:20","nodeType":"YulLiteral","src":"33559:10:20","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nativeSrc":"33548:3:20","nodeType":"YulIdentifier","src":"33548:3:20"},"nativeSrc":"33548:22:20","nodeType":"YulFunctionCall","src":"33548:22:20"},"variableNames":[{"name":"cleaned","nativeSrc":"33537:7:20","nodeType":"YulIdentifier","src":"33537:7:20"}]}]},"name":"cleanup_from_storage_t_uint32","nativeSrc":"33470:106:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"33509:5:20","nodeType":"YulTypedName","src":"33509:5:20","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"33519:7:20","nodeType":"YulTypedName","src":"33519:7:20","type":""}],"src":"33470:106:20"},{"body":{"nativeSrc":"33656:90:20","nodeType":"YulBlock","src":"33656:90:20","statements":[{"nativeSrc":"33666:74:20","nodeType":"YulAssignment","src":"33666:74:20","value":{"arguments":[{"arguments":[{"name":"slot_value","nativeSrc":"33728:10:20","nodeType":"YulIdentifier","src":"33728:10:20"}],"functionName":{"name":"shift_right_0_unsigned","nativeSrc":"33705:22:20","nodeType":"YulIdentifier","src":"33705:22:20"},"nativeSrc":"33705:34:20","nodeType":"YulFunctionCall","src":"33705:34:20"}],"functionName":{"name":"cleanup_from_storage_t_uint32","nativeSrc":"33675:29:20","nodeType":"YulIdentifier","src":"33675:29:20"},"nativeSrc":"33675:65:20","nodeType":"YulFunctionCall","src":"33675:65:20"},"variableNames":[{"name":"value","nativeSrc":"33666:5:20","nodeType":"YulIdentifier","src":"33666:5:20"}]}]},"name":"extract_from_storage_value_offset_0t_uint32","nativeSrc":"33582:164:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot_value","nativeSrc":"33635:10:20","nodeType":"YulTypedName","src":"33635:10:20","type":""}],"returnVariables":[{"name":"value","nativeSrc":"33650:5:20","nodeType":"YulTypedName","src":"33650:5:20","type":""}],"src":"33582:164:20"},{"body":{"nativeSrc":"33805:52:20","nodeType":"YulBlock","src":"33805:52:20","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"33822:3:20","nodeType":"YulIdentifier","src":"33822:3:20"},{"arguments":[{"name":"value","nativeSrc":"33844:5:20","nodeType":"YulIdentifier","src":"33844:5:20"}],"functionName":{"name":"cleanup_t_uint32","nativeSrc":"33827:16:20","nodeType":"YulIdentifier","src":"33827:16:20"},"nativeSrc":"33827:23:20","nodeType":"YulFunctionCall","src":"33827:23:20"}],"functionName":{"name":"mstore","nativeSrc":"33815:6:20","nodeType":"YulIdentifier","src":"33815:6:20"},"nativeSrc":"33815:36:20","nodeType":"YulFunctionCall","src":"33815:36:20"},"nativeSrc":"33815:36:20","nodeType":"YulExpressionStatement","src":"33815:36:20"}]},"name":"abi_encode_t_uint32_to_t_uint32","nativeSrc":"33752:105:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"33793:5:20","nodeType":"YulTypedName","src":"33793:5:20","type":""},{"name":"pos","nativeSrc":"33800:3:20","nodeType":"YulTypedName","src":"33800:3:20","type":""}],"src":"33752:105:20"},{"body":{"nativeSrc":"33915:52:20","nodeType":"YulBlock","src":"33915:52:20","statements":[{"nativeSrc":"33925:35:20","nodeType":"YulAssignment","src":"33925:35:20","value":{"arguments":[{"kind":"number","nativeSrc":"33950:2:20","nodeType":"YulLiteral","src":"33950:2:20","type":"","value":"32"},{"name":"value","nativeSrc":"33954:5:20","nodeType":"YulIdentifier","src":"33954:5:20"}],"functionName":{"name":"shr","nativeSrc":"33946:3:20","nodeType":"YulIdentifier","src":"33946:3:20"},"nativeSrc":"33946:14:20","nodeType":"YulFunctionCall","src":"33946:14:20"},"variableNames":[{"name":"newValue","nativeSrc":"33925:8:20","nodeType":"YulIdentifier","src":"33925:8:20"}]}]},"name":"shift_right_32_unsigned","nativeSrc":"33863:104:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"33896:5:20","nodeType":"YulTypedName","src":"33896:5:20","type":""}],"returnVariables":[{"name":"newValue","nativeSrc":"33906:8:20","nodeType":"YulTypedName","src":"33906:8:20","type":""}],"src":"33863:104:20"},{"body":{"nativeSrc":"34047:91:20","nodeType":"YulBlock","src":"34047:91:20","statements":[{"nativeSrc":"34057:75:20","nodeType":"YulAssignment","src":"34057:75:20","value":{"arguments":[{"arguments":[{"name":"slot_value","nativeSrc":"34120:10:20","nodeType":"YulIdentifier","src":"34120:10:20"}],"functionName":{"name":"shift_right_32_unsigned","nativeSrc":"34096:23:20","nodeType":"YulIdentifier","src":"34096:23:20"},"nativeSrc":"34096:35:20","nodeType":"YulFunctionCall","src":"34096:35:20"}],"functionName":{"name":"cleanup_from_storage_t_uint32","nativeSrc":"34066:29:20","nodeType":"YulIdentifier","src":"34066:29:20"},"nativeSrc":"34066:66:20","nodeType":"YulFunctionCall","src":"34066:66:20"},"variableNames":[{"name":"value","nativeSrc":"34057:5:20","nodeType":"YulIdentifier","src":"34057:5:20"}]}]},"name":"extract_from_storage_value_offset_4t_uint32","nativeSrc":"33973:165:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot_value","nativeSrc":"34026:10:20","nodeType":"YulTypedName","src":"34026:10:20","type":""}],"returnVariables":[{"name":"value","nativeSrc":"34041:5:20","nodeType":"YulTypedName","src":"34041:5:20","type":""}],"src":"33973:165:20"},{"body":{"nativeSrc":"34196:52:20","nodeType":"YulBlock","src":"34196:52:20","statements":[{"nativeSrc":"34206:35:20","nodeType":"YulAssignment","src":"34206:35:20","value":{"arguments":[{"kind":"number","nativeSrc":"34231:2:20","nodeType":"YulLiteral","src":"34231:2:20","type":"","value":"64"},{"name":"value","nativeSrc":"34235:5:20","nodeType":"YulIdentifier","src":"34235:5:20"}],"functionName":{"name":"shr","nativeSrc":"34227:3:20","nodeType":"YulIdentifier","src":"34227:3:20"},"nativeSrc":"34227:14:20","nodeType":"YulFunctionCall","src":"34227:14:20"},"variableNames":[{"name":"newValue","nativeSrc":"34206:8:20","nodeType":"YulIdentifier","src":"34206:8:20"}]}]},"name":"shift_right_64_unsigned","nativeSrc":"34144:104:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"34177:5:20","nodeType":"YulTypedName","src":"34177:5:20","type":""}],"returnVariables":[{"name":"newValue","nativeSrc":"34187:8:20","nodeType":"YulTypedName","src":"34187:8:20","type":""}],"src":"34144:104:20"},{"body":{"nativeSrc":"34328:91:20","nodeType":"YulBlock","src":"34328:91:20","statements":[{"nativeSrc":"34338:75:20","nodeType":"YulAssignment","src":"34338:75:20","value":{"arguments":[{"arguments":[{"name":"slot_value","nativeSrc":"34401:10:20","nodeType":"YulIdentifier","src":"34401:10:20"}],"functionName":{"name":"shift_right_64_unsigned","nativeSrc":"34377:23:20","nodeType":"YulIdentifier","src":"34377:23:20"},"nativeSrc":"34377:35:20","nodeType":"YulFunctionCall","src":"34377:35:20"}],"functionName":{"name":"cleanup_from_storage_t_uint32","nativeSrc":"34347:29:20","nodeType":"YulIdentifier","src":"34347:29:20"},"nativeSrc":"34347:66:20","nodeType":"YulFunctionCall","src":"34347:66:20"},"variableNames":[{"name":"value","nativeSrc":"34338:5:20","nodeType":"YulIdentifier","src":"34338:5:20"}]}]},"name":"extract_from_storage_value_offset_8t_uint32","nativeSrc":"34254:165:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot_value","nativeSrc":"34307:10:20","nodeType":"YulTypedName","src":"34307:10:20","type":""}],"returnVariables":[{"name":"value","nativeSrc":"34322:5:20","nodeType":"YulTypedName","src":"34322:5:20","type":""}],"src":"34254:165:20"},{"body":{"nativeSrc":"34477:52:20","nodeType":"YulBlock","src":"34477:52:20","statements":[{"nativeSrc":"34487:35:20","nodeType":"YulAssignment","src":"34487:35:20","value":{"arguments":[{"kind":"number","nativeSrc":"34512:2:20","nodeType":"YulLiteral","src":"34512:2:20","type":"","value":"96"},{"name":"value","nativeSrc":"34516:5:20","nodeType":"YulIdentifier","src":"34516:5:20"}],"functionName":{"name":"shr","nativeSrc":"34508:3:20","nodeType":"YulIdentifier","src":"34508:3:20"},"nativeSrc":"34508:14:20","nodeType":"YulFunctionCall","src":"34508:14:20"},"variableNames":[{"name":"newValue","nativeSrc":"34487:8:20","nodeType":"YulIdentifier","src":"34487:8:20"}]}]},"name":"shift_right_96_unsigned","nativeSrc":"34425:104:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"34458:5:20","nodeType":"YulTypedName","src":"34458:5:20","type":""}],"returnVariables":[{"name":"newValue","nativeSrc":"34468:8:20","nodeType":"YulTypedName","src":"34468:8:20","type":""}],"src":"34425:104:20"},{"body":{"nativeSrc":"34610:91:20","nodeType":"YulBlock","src":"34610:91:20","statements":[{"nativeSrc":"34620:75:20","nodeType":"YulAssignment","src":"34620:75:20","value":{"arguments":[{"arguments":[{"name":"slot_value","nativeSrc":"34683:10:20","nodeType":"YulIdentifier","src":"34683:10:20"}],"functionName":{"name":"shift_right_96_unsigned","nativeSrc":"34659:23:20","nodeType":"YulIdentifier","src":"34659:23:20"},"nativeSrc":"34659:35:20","nodeType":"YulFunctionCall","src":"34659:35:20"}],"functionName":{"name":"cleanup_from_storage_t_uint32","nativeSrc":"34629:29:20","nodeType":"YulIdentifier","src":"34629:29:20"},"nativeSrc":"34629:66:20","nodeType":"YulFunctionCall","src":"34629:66:20"},"variableNames":[{"name":"value","nativeSrc":"34620:5:20","nodeType":"YulIdentifier","src":"34620:5:20"}]}]},"name":"extract_from_storage_value_offset_12t_uint32","nativeSrc":"34535:166:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot_value","nativeSrc":"34589:10:20","nodeType":"YulTypedName","src":"34589:10:20","type":""}],"returnVariables":[{"name":"value","nativeSrc":"34604:5:20","nodeType":"YulTypedName","src":"34604:5:20","type":""}],"src":"34535:166:20"},{"body":{"nativeSrc":"34760:53:20","nodeType":"YulBlock","src":"34760:53:20","statements":[{"nativeSrc":"34770:36:20","nodeType":"YulAssignment","src":"34770:36:20","value":{"arguments":[{"kind":"number","nativeSrc":"34795:3:20","nodeType":"YulLiteral","src":"34795:3:20","type":"","value":"128"},{"name":"value","nativeSrc":"34800:5:20","nodeType":"YulIdentifier","src":"34800:5:20"}],"functionName":{"name":"shr","nativeSrc":"34791:3:20","nodeType":"YulIdentifier","src":"34791:3:20"},"nativeSrc":"34791:15:20","nodeType":"YulFunctionCall","src":"34791:15:20"},"variableNames":[{"name":"newValue","nativeSrc":"34770:8:20","nodeType":"YulIdentifier","src":"34770:8:20"}]}]},"name":"shift_right_128_unsigned","nativeSrc":"34707:106:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"34741:5:20","nodeType":"YulTypedName","src":"34741:5:20","type":""}],"returnVariables":[{"name":"newValue","nativeSrc":"34751:8:20","nodeType":"YulTypedName","src":"34751:8:20","type":""}],"src":"34707:106:20"},{"body":{"nativeSrc":"34894:92:20","nodeType":"YulBlock","src":"34894:92:20","statements":[{"nativeSrc":"34904:76:20","nodeType":"YulAssignment","src":"34904:76:20","value":{"arguments":[{"arguments":[{"name":"slot_value","nativeSrc":"34968:10:20","nodeType":"YulIdentifier","src":"34968:10:20"}],"functionName":{"name":"shift_right_128_unsigned","nativeSrc":"34943:24:20","nodeType":"YulIdentifier","src":"34943:24:20"},"nativeSrc":"34943:36:20","nodeType":"YulFunctionCall","src":"34943:36:20"}],"functionName":{"name":"cleanup_from_storage_t_uint32","nativeSrc":"34913:29:20","nodeType":"YulIdentifier","src":"34913:29:20"},"nativeSrc":"34913:67:20","nodeType":"YulFunctionCall","src":"34913:67:20"},"variableNames":[{"name":"value","nativeSrc":"34904:5:20","nodeType":"YulIdentifier","src":"34904:5:20"}]}]},"name":"extract_from_storage_value_offset_16t_uint32","nativeSrc":"34819:167:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot_value","nativeSrc":"34873:10:20","nodeType":"YulTypedName","src":"34873:10:20","type":""}],"returnVariables":[{"name":"value","nativeSrc":"34888:5:20","nodeType":"YulTypedName","src":"34888:5:20","type":""}],"src":"34819:167:20"},{"body":{"nativeSrc":"35045:53:20","nodeType":"YulBlock","src":"35045:53:20","statements":[{"nativeSrc":"35055:36:20","nodeType":"YulAssignment","src":"35055:36:20","value":{"arguments":[{"kind":"number","nativeSrc":"35080:3:20","nodeType":"YulLiteral","src":"35080:3:20","type":"","value":"160"},{"name":"value","nativeSrc":"35085:5:20","nodeType":"YulIdentifier","src":"35085:5:20"}],"functionName":{"name":"shr","nativeSrc":"35076:3:20","nodeType":"YulIdentifier","src":"35076:3:20"},"nativeSrc":"35076:15:20","nodeType":"YulFunctionCall","src":"35076:15:20"},"variableNames":[{"name":"newValue","nativeSrc":"35055:8:20","nodeType":"YulIdentifier","src":"35055:8:20"}]}]},"name":"shift_right_160_unsigned","nativeSrc":"34992:106:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"35026:5:20","nodeType":"YulTypedName","src":"35026:5:20","type":""}],"returnVariables":[{"name":"newValue","nativeSrc":"35036:8:20","nodeType":"YulTypedName","src":"35036:8:20","type":""}],"src":"34992:106:20"},{"body":{"nativeSrc":"35161:47:20","nodeType":"YulBlock","src":"35161:47:20","statements":[{"nativeSrc":"35171:31:20","nodeType":"YulAssignment","src":"35171:31:20","value":{"arguments":[{"name":"value","nativeSrc":"35186:5:20","nodeType":"YulIdentifier","src":"35186:5:20"},{"kind":"number","nativeSrc":"35193:8:20","nodeType":"YulLiteral","src":"35193:8:20","type":"","value":"0xffffff"}],"functionName":{"name":"and","nativeSrc":"35182:3:20","nodeType":"YulIdentifier","src":"35182:3:20"},"nativeSrc":"35182:20:20","nodeType":"YulFunctionCall","src":"35182:20:20"},"variableNames":[{"name":"cleaned","nativeSrc":"35171:7:20","nodeType":"YulIdentifier","src":"35171:7:20"}]}]},"name":"cleanup_from_storage_t_uint24","nativeSrc":"35104:104:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"35143:5:20","nodeType":"YulTypedName","src":"35143:5:20","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"35153:7:20","nodeType":"YulTypedName","src":"35153:7:20","type":""}],"src":"35104:104:20"},{"body":{"nativeSrc":"35289:92:20","nodeType":"YulBlock","src":"35289:92:20","statements":[{"nativeSrc":"35299:76:20","nodeType":"YulAssignment","src":"35299:76:20","value":{"arguments":[{"arguments":[{"name":"slot_value","nativeSrc":"35363:10:20","nodeType":"YulIdentifier","src":"35363:10:20"}],"functionName":{"name":"shift_right_160_unsigned","nativeSrc":"35338:24:20","nodeType":"YulIdentifier","src":"35338:24:20"},"nativeSrc":"35338:36:20","nodeType":"YulFunctionCall","src":"35338:36:20"}],"functionName":{"name":"cleanup_from_storage_t_uint24","nativeSrc":"35308:29:20","nodeType":"YulIdentifier","src":"35308:29:20"},"nativeSrc":"35308:67:20","nodeType":"YulFunctionCall","src":"35308:67:20"},"variableNames":[{"name":"value","nativeSrc":"35299:5:20","nodeType":"YulIdentifier","src":"35299:5:20"}]}]},"name":"extract_from_storage_value_offset_20t_uint24","nativeSrc":"35214:167:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot_value","nativeSrc":"35268:10:20","nodeType":"YulTypedName","src":"35268:10:20","type":""}],"returnVariables":[{"name":"value","nativeSrc":"35283:5:20","nodeType":"YulTypedName","src":"35283:5:20","type":""}],"src":"35214:167:20"},{"body":{"nativeSrc":"35440:52:20","nodeType":"YulBlock","src":"35440:52:20","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"35457:3:20","nodeType":"YulIdentifier","src":"35457:3:20"},{"arguments":[{"name":"value","nativeSrc":"35479:5:20","nodeType":"YulIdentifier","src":"35479:5:20"}],"functionName":{"name":"cleanup_t_uint24","nativeSrc":"35462:16:20","nodeType":"YulIdentifier","src":"35462:16:20"},"nativeSrc":"35462:23:20","nodeType":"YulFunctionCall","src":"35462:23:20"}],"functionName":{"name":"mstore","nativeSrc":"35450:6:20","nodeType":"YulIdentifier","src":"35450:6:20"},"nativeSrc":"35450:36:20","nodeType":"YulFunctionCall","src":"35450:36:20"},"nativeSrc":"35450:36:20","nodeType":"YulExpressionStatement","src":"35450:36:20"}]},"name":"abi_encode_t_uint24_to_t_uint24","nativeSrc":"35387:105:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"35428:5:20","nodeType":"YulTypedName","src":"35428:5:20","type":""},{"name":"pos","nativeSrc":"35435:3:20","nodeType":"YulTypedName","src":"35435:3:20","type":""}],"src":"35387:105:20"},{"body":{"nativeSrc":"35551:53:20","nodeType":"YulBlock","src":"35551:53:20","statements":[{"nativeSrc":"35561:36:20","nodeType":"YulAssignment","src":"35561:36:20","value":{"arguments":[{"kind":"number","nativeSrc":"35586:3:20","nodeType":"YulLiteral","src":"35586:3:20","type":"","value":"184"},{"name":"value","nativeSrc":"35591:5:20","nodeType":"YulIdentifier","src":"35591:5:20"}],"functionName":{"name":"shr","nativeSrc":"35582:3:20","nodeType":"YulIdentifier","src":"35582:3:20"},"nativeSrc":"35582:15:20","nodeType":"YulFunctionCall","src":"35582:15:20"},"variableNames":[{"name":"newValue","nativeSrc":"35561:8:20","nodeType":"YulIdentifier","src":"35561:8:20"}]}]},"name":"shift_right_184_unsigned","nativeSrc":"35498:106:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"35532:5:20","nodeType":"YulTypedName","src":"35532:5:20","type":""}],"returnVariables":[{"name":"newValue","nativeSrc":"35542:8:20","nodeType":"YulTypedName","src":"35542:8:20","type":""}],"src":"35498:106:20"},{"body":{"nativeSrc":"35685:92:20","nodeType":"YulBlock","src":"35685:92:20","statements":[{"nativeSrc":"35695:76:20","nodeType":"YulAssignment","src":"35695:76:20","value":{"arguments":[{"arguments":[{"name":"slot_value","nativeSrc":"35759:10:20","nodeType":"YulIdentifier","src":"35759:10:20"}],"functionName":{"name":"shift_right_184_unsigned","nativeSrc":"35734:24:20","nodeType":"YulIdentifier","src":"35734:24:20"},"nativeSrc":"35734:36:20","nodeType":"YulFunctionCall","src":"35734:36:20"}],"functionName":{"name":"cleanup_from_storage_t_uint24","nativeSrc":"35704:29:20","nodeType":"YulIdentifier","src":"35704:29:20"},"nativeSrc":"35704:67:20","nodeType":"YulFunctionCall","src":"35704:67:20"},"variableNames":[{"name":"value","nativeSrc":"35695:5:20","nodeType":"YulIdentifier","src":"35695:5:20"}]}]},"name":"extract_from_storage_value_offset_23t_uint24","nativeSrc":"35610:167:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot_value","nativeSrc":"35664:10:20","nodeType":"YulTypedName","src":"35664:10:20","type":""}],"returnVariables":[{"name":"value","nativeSrc":"35679:5:20","nodeType":"YulTypedName","src":"35679:5:20","type":""}],"src":"35610:167:20"},{"body":{"nativeSrc":"35836:53:20","nodeType":"YulBlock","src":"35836:53:20","statements":[{"nativeSrc":"35846:36:20","nodeType":"YulAssignment","src":"35846:36:20","value":{"arguments":[{"kind":"number","nativeSrc":"35871:3:20","nodeType":"YulLiteral","src":"35871:3:20","type":"","value":"208"},{"name":"value","nativeSrc":"35876:5:20","nodeType":"YulIdentifier","src":"35876:5:20"}],"functionName":{"name":"shr","nativeSrc":"35867:3:20","nodeType":"YulIdentifier","src":"35867:3:20"},"nativeSrc":"35867:15:20","nodeType":"YulFunctionCall","src":"35867:15:20"},"variableNames":[{"name":"newValue","nativeSrc":"35846:8:20","nodeType":"YulIdentifier","src":"35846:8:20"}]}]},"name":"shift_right_208_unsigned","nativeSrc":"35783:106:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"35817:5:20","nodeType":"YulTypedName","src":"35817:5:20","type":""}],"returnVariables":[{"name":"newValue","nativeSrc":"35827:8:20","nodeType":"YulTypedName","src":"35827:8:20","type":""}],"src":"35783:106:20"},{"body":{"nativeSrc":"35970:92:20","nodeType":"YulBlock","src":"35970:92:20","statements":[{"nativeSrc":"35980:76:20","nodeType":"YulAssignment","src":"35980:76:20","value":{"arguments":[{"arguments":[{"name":"slot_value","nativeSrc":"36044:10:20","nodeType":"YulIdentifier","src":"36044:10:20"}],"functionName":{"name":"shift_right_208_unsigned","nativeSrc":"36019:24:20","nodeType":"YulIdentifier","src":"36019:24:20"},"nativeSrc":"36019:36:20","nodeType":"YulFunctionCall","src":"36019:36:20"}],"functionName":{"name":"cleanup_from_storage_t_uint24","nativeSrc":"35989:29:20","nodeType":"YulIdentifier","src":"35989:29:20"},"nativeSrc":"35989:67:20","nodeType":"YulFunctionCall","src":"35989:67:20"},"variableNames":[{"name":"value","nativeSrc":"35980:5:20","nodeType":"YulIdentifier","src":"35980:5:20"}]}]},"name":"extract_from_storage_value_offset_26t_uint24","nativeSrc":"35895:167:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot_value","nativeSrc":"35949:10:20","nodeType":"YulTypedName","src":"35949:10:20","type":""}],"returnVariables":[{"name":"value","nativeSrc":"35964:5:20","nodeType":"YulTypedName","src":"35964:5:20","type":""}],"src":"35895:167:20"},{"body":{"nativeSrc":"36121:53:20","nodeType":"YulBlock","src":"36121:53:20","statements":[{"nativeSrc":"36131:36:20","nodeType":"YulAssignment","src":"36131:36:20","value":{"arguments":[{"kind":"number","nativeSrc":"36156:3:20","nodeType":"YulLiteral","src":"36156:3:20","type":"","value":"232"},{"name":"value","nativeSrc":"36161:5:20","nodeType":"YulIdentifier","src":"36161:5:20"}],"functionName":{"name":"shr","nativeSrc":"36152:3:20","nodeType":"YulIdentifier","src":"36152:3:20"},"nativeSrc":"36152:15:20","nodeType":"YulFunctionCall","src":"36152:15:20"},"variableNames":[{"name":"newValue","nativeSrc":"36131:8:20","nodeType":"YulIdentifier","src":"36131:8:20"}]}]},"name":"shift_right_232_unsigned","nativeSrc":"36068:106:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"36102:5:20","nodeType":"YulTypedName","src":"36102:5:20","type":""}],"returnVariables":[{"name":"newValue","nativeSrc":"36112:8:20","nodeType":"YulTypedName","src":"36112:8:20","type":""}],"src":"36068:106:20"},{"body":{"nativeSrc":"36255:92:20","nodeType":"YulBlock","src":"36255:92:20","statements":[{"nativeSrc":"36265:76:20","nodeType":"YulAssignment","src":"36265:76:20","value":{"arguments":[{"arguments":[{"name":"slot_value","nativeSrc":"36329:10:20","nodeType":"YulIdentifier","src":"36329:10:20"}],"functionName":{"name":"shift_right_232_unsigned","nativeSrc":"36304:24:20","nodeType":"YulIdentifier","src":"36304:24:20"},"nativeSrc":"36304:36:20","nodeType":"YulFunctionCall","src":"36304:36:20"}],"functionName":{"name":"cleanup_from_storage_t_uint24","nativeSrc":"36274:29:20","nodeType":"YulIdentifier","src":"36274:29:20"},"nativeSrc":"36274:67:20","nodeType":"YulFunctionCall","src":"36274:67:20"},"variableNames":[{"name":"value","nativeSrc":"36265:5:20","nodeType":"YulIdentifier","src":"36265:5:20"}]}]},"name":"extract_from_storage_value_offset_29t_uint24","nativeSrc":"36180:167:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot_value","nativeSrc":"36234:10:20","nodeType":"YulTypedName","src":"36234:10:20","type":""}],"returnVariables":[{"name":"value","nativeSrc":"36249:5:20","nodeType":"YulTypedName","src":"36249:5:20","type":""}],"src":"36180:167:20"},{"body":{"nativeSrc":"36548:2117:20","nodeType":"YulBlock","src":"36548:2117:20","statements":[{"nativeSrc":"36558:28:20","nodeType":"YulVariableDeclaration","src":"36558:28:20","value":{"arguments":[{"name":"pos","nativeSrc":"36574:3:20","nodeType":"YulIdentifier","src":"36574:3:20"},{"kind":"number","nativeSrc":"36579:6:20","nodeType":"YulLiteral","src":"36579:6:20","type":"","value":"0x0120"}],"functionName":{"name":"add","nativeSrc":"36570:3:20","nodeType":"YulIdentifier","src":"36570:3:20"},"nativeSrc":"36570:16:20","nodeType":"YulFunctionCall","src":"36570:16:20"},"variables":[{"name":"tail","nativeSrc":"36562:4:20","nodeType":"YulTypedName","src":"36562:4:20","type":""}]},{"nativeSrc":"36595:18:20","nodeType":"YulVariableDeclaration","src":"36595:18:20","value":{"kind":"number","nativeSrc":"36612:1:20","nodeType":"YulLiteral","src":"36612:1:20","type":"","value":"0"},"variables":[{"name":"slotValue","nativeSrc":"36599:9:20","nodeType":"YulTypedName","src":"36599:9:20","type":""}]},{"nativeSrc":"36623:267:20","nodeType":"YulBlock","src":"36623:267:20","statements":[{"nativeSrc":"36683:36:20","nodeType":"YulAssignment","src":"36683:36:20","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"36706:5:20","nodeType":"YulIdentifier","src":"36706:5:20"},{"kind":"number","nativeSrc":"36713:4:20","nodeType":"YulLiteral","src":"36713:4:20","type":"","value":"0x00"}],"functionName":{"name":"add","nativeSrc":"36702:3:20","nodeType":"YulIdentifier","src":"36702:3:20"},"nativeSrc":"36702:16:20","nodeType":"YulFunctionCall","src":"36702:16:20"}],"functionName":{"name":"sload","nativeSrc":"36696:5:20","nodeType":"YulIdentifier","src":"36696:5:20"},"nativeSrc":"36696:23:20","nodeType":"YulFunctionCall","src":"36696:23:20"},"variableNames":[{"name":"slotValue","nativeSrc":"36683:9:20","nodeType":"YulIdentifier","src":"36683:9:20"}]},{"nativeSrc":"36732:74:20","nodeType":"YulVariableDeclaration","src":"36732:74:20","value":{"arguments":[{"name":"slotValue","nativeSrc":"36796:9:20","nodeType":"YulIdentifier","src":"36796:9:20"}],"functionName":{"name":"extract_from_storage_value_offset_0t_uint32","nativeSrc":"36752:43:20","nodeType":"YulIdentifier","src":"36752:43:20"},"nativeSrc":"36752:54:20","nodeType":"YulFunctionCall","src":"36752:54:20"},"variables":[{"name":"memberValue0","nativeSrc":"36736:12:20","nodeType":"YulTypedName","src":"36736:12:20","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nativeSrc":"36851:12:20","nodeType":"YulIdentifier","src":"36851:12:20"},{"arguments":[{"name":"pos","nativeSrc":"36869:3:20","nodeType":"YulIdentifier","src":"36869:3:20"},{"kind":"number","nativeSrc":"36874:4:20","nodeType":"YulLiteral","src":"36874:4:20","type":"","value":"0x00"}],"functionName":{"name":"add","nativeSrc":"36865:3:20","nodeType":"YulIdentifier","src":"36865:3:20"},"nativeSrc":"36865:14:20","nodeType":"YulFunctionCall","src":"36865:14:20"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32","nativeSrc":"36819:31:20","nodeType":"YulIdentifier","src":"36819:31:20"},"nativeSrc":"36819:61:20","nodeType":"YulFunctionCall","src":"36819:61:20"},"nativeSrc":"36819:61:20","nodeType":"YulExpressionStatement","src":"36819:61:20"}]},{"nativeSrc":"36900:219:20","nodeType":"YulBlock","src":"36900:219:20","statements":[{"nativeSrc":"36961:74:20","nodeType":"YulVariableDeclaration","src":"36961:74:20","value":{"arguments":[{"name":"slotValue","nativeSrc":"37025:9:20","nodeType":"YulIdentifier","src":"37025:9:20"}],"functionName":{"name":"extract_from_storage_value_offset_4t_uint32","nativeSrc":"36981:43:20","nodeType":"YulIdentifier","src":"36981:43:20"},"nativeSrc":"36981:54:20","nodeType":"YulFunctionCall","src":"36981:54:20"},"variables":[{"name":"memberValue0","nativeSrc":"36965:12:20","nodeType":"YulTypedName","src":"36965:12:20","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nativeSrc":"37080:12:20","nodeType":"YulIdentifier","src":"37080:12:20"},{"arguments":[{"name":"pos","nativeSrc":"37098:3:20","nodeType":"YulIdentifier","src":"37098:3:20"},{"kind":"number","nativeSrc":"37103:4:20","nodeType":"YulLiteral","src":"37103:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"37094:3:20","nodeType":"YulIdentifier","src":"37094:3:20"},"nativeSrc":"37094:14:20","nodeType":"YulFunctionCall","src":"37094:14:20"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32","nativeSrc":"37048:31:20","nodeType":"YulIdentifier","src":"37048:31:20"},"nativeSrc":"37048:61:20","nodeType":"YulFunctionCall","src":"37048:61:20"},"nativeSrc":"37048:61:20","nodeType":"YulExpressionStatement","src":"37048:61:20"}]},{"nativeSrc":"37129:219:20","nodeType":"YulBlock","src":"37129:219:20","statements":[{"nativeSrc":"37190:74:20","nodeType":"YulVariableDeclaration","src":"37190:74:20","value":{"arguments":[{"name":"slotValue","nativeSrc":"37254:9:20","nodeType":"YulIdentifier","src":"37254:9:20"}],"functionName":{"name":"extract_from_storage_value_offset_8t_uint32","nativeSrc":"37210:43:20","nodeType":"YulIdentifier","src":"37210:43:20"},"nativeSrc":"37210:54:20","nodeType":"YulFunctionCall","src":"37210:54:20"},"variables":[{"name":"memberValue0","nativeSrc":"37194:12:20","nodeType":"YulTypedName","src":"37194:12:20","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nativeSrc":"37309:12:20","nodeType":"YulIdentifier","src":"37309:12:20"},{"arguments":[{"name":"pos","nativeSrc":"37327:3:20","nodeType":"YulIdentifier","src":"37327:3:20"},{"kind":"number","nativeSrc":"37332:4:20","nodeType":"YulLiteral","src":"37332:4:20","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"37323:3:20","nodeType":"YulIdentifier","src":"37323:3:20"},"nativeSrc":"37323:14:20","nodeType":"YulFunctionCall","src":"37323:14:20"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32","nativeSrc":"37277:31:20","nodeType":"YulIdentifier","src":"37277:31:20"},"nativeSrc":"37277:61:20","nodeType":"YulFunctionCall","src":"37277:61:20"},"nativeSrc":"37277:61:20","nodeType":"YulExpressionStatement","src":"37277:61:20"}]},{"nativeSrc":"37358:220:20","nodeType":"YulBlock","src":"37358:220:20","statements":[{"nativeSrc":"37419:75:20","nodeType":"YulVariableDeclaration","src":"37419:75:20","value":{"arguments":[{"name":"slotValue","nativeSrc":"37484:9:20","nodeType":"YulIdentifier","src":"37484:9:20"}],"functionName":{"name":"extract_from_storage_value_offset_12t_uint32","nativeSrc":"37439:44:20","nodeType":"YulIdentifier","src":"37439:44:20"},"nativeSrc":"37439:55:20","nodeType":"YulFunctionCall","src":"37439:55:20"},"variables":[{"name":"memberValue0","nativeSrc":"37423:12:20","nodeType":"YulTypedName","src":"37423:12:20","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nativeSrc":"37539:12:20","nodeType":"YulIdentifier","src":"37539:12:20"},{"arguments":[{"name":"pos","nativeSrc":"37557:3:20","nodeType":"YulIdentifier","src":"37557:3:20"},{"kind":"number","nativeSrc":"37562:4:20","nodeType":"YulLiteral","src":"37562:4:20","type":"","value":"0x60"}],"functionName":{"name":"add","nativeSrc":"37553:3:20","nodeType":"YulIdentifier","src":"37553:3:20"},"nativeSrc":"37553:14:20","nodeType":"YulFunctionCall","src":"37553:14:20"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32","nativeSrc":"37507:31:20","nodeType":"YulIdentifier","src":"37507:31:20"},"nativeSrc":"37507:61:20","nodeType":"YulFunctionCall","src":"37507:61:20"},"nativeSrc":"37507:61:20","nodeType":"YulExpressionStatement","src":"37507:61:20"}]},{"nativeSrc":"37588:220:20","nodeType":"YulBlock","src":"37588:220:20","statements":[{"nativeSrc":"37649:75:20","nodeType":"YulVariableDeclaration","src":"37649:75:20","value":{"arguments":[{"name":"slotValue","nativeSrc":"37714:9:20","nodeType":"YulIdentifier","src":"37714:9:20"}],"functionName":{"name":"extract_from_storage_value_offset_16t_uint32","nativeSrc":"37669:44:20","nodeType":"YulIdentifier","src":"37669:44:20"},"nativeSrc":"37669:55:20","nodeType":"YulFunctionCall","src":"37669:55:20"},"variables":[{"name":"memberValue0","nativeSrc":"37653:12:20","nodeType":"YulTypedName","src":"37653:12:20","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nativeSrc":"37769:12:20","nodeType":"YulIdentifier","src":"37769:12:20"},{"arguments":[{"name":"pos","nativeSrc":"37787:3:20","nodeType":"YulIdentifier","src":"37787:3:20"},{"kind":"number","nativeSrc":"37792:4:20","nodeType":"YulLiteral","src":"37792:4:20","type":"","value":"0x80"}],"functionName":{"name":"add","nativeSrc":"37783:3:20","nodeType":"YulIdentifier","src":"37783:3:20"},"nativeSrc":"37783:14:20","nodeType":"YulFunctionCall","src":"37783:14:20"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32","nativeSrc":"37737:31:20","nodeType":"YulIdentifier","src":"37737:31:20"},"nativeSrc":"37737:61:20","nodeType":"YulFunctionCall","src":"37737:61:20"},"nativeSrc":"37737:61:20","nodeType":"YulExpressionStatement","src":"37737:61:20"}]},{"nativeSrc":"37818:202:20","nodeType":"YulBlock","src":"37818:202:20","statements":[{"nativeSrc":"37861:75:20","nodeType":"YulVariableDeclaration","src":"37861:75:20","value":{"arguments":[{"name":"slotValue","nativeSrc":"37926:9:20","nodeType":"YulIdentifier","src":"37926:9:20"}],"functionName":{"name":"extract_from_storage_value_offset_20t_uint24","nativeSrc":"37881:44:20","nodeType":"YulIdentifier","src":"37881:44:20"},"nativeSrc":"37881:55:20","nodeType":"YulFunctionCall","src":"37881:55:20"},"variables":[{"name":"memberValue0","nativeSrc":"37865:12:20","nodeType":"YulTypedName","src":"37865:12:20","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nativeSrc":"37981:12:20","nodeType":"YulIdentifier","src":"37981:12:20"},{"arguments":[{"name":"pos","nativeSrc":"37999:3:20","nodeType":"YulIdentifier","src":"37999:3:20"},{"kind":"number","nativeSrc":"38004:4:20","nodeType":"YulLiteral","src":"38004:4:20","type":"","value":"0xa0"}],"functionName":{"name":"add","nativeSrc":"37995:3:20","nodeType":"YulIdentifier","src":"37995:3:20"},"nativeSrc":"37995:14:20","nodeType":"YulFunctionCall","src":"37995:14:20"}],"functionName":{"name":"abi_encode_t_uint24_to_t_uint24","nativeSrc":"37949:31:20","nodeType":"YulIdentifier","src":"37949:31:20"},"nativeSrc":"37949:61:20","nodeType":"YulFunctionCall","src":"37949:61:20"},"nativeSrc":"37949:61:20","nodeType":"YulExpressionStatement","src":"37949:61:20"}]},{"nativeSrc":"38030:202:20","nodeType":"YulBlock","src":"38030:202:20","statements":[{"nativeSrc":"38073:75:20","nodeType":"YulVariableDeclaration","src":"38073:75:20","value":{"arguments":[{"name":"slotValue","nativeSrc":"38138:9:20","nodeType":"YulIdentifier","src":"38138:9:20"}],"functionName":{"name":"extract_from_storage_value_offset_23t_uint24","nativeSrc":"38093:44:20","nodeType":"YulIdentifier","src":"38093:44:20"},"nativeSrc":"38093:55:20","nodeType":"YulFunctionCall","src":"38093:55:20"},"variables":[{"name":"memberValue0","nativeSrc":"38077:12:20","nodeType":"YulTypedName","src":"38077:12:20","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nativeSrc":"38193:12:20","nodeType":"YulIdentifier","src":"38193:12:20"},{"arguments":[{"name":"pos","nativeSrc":"38211:3:20","nodeType":"YulIdentifier","src":"38211:3:20"},{"kind":"number","nativeSrc":"38216:4:20","nodeType":"YulLiteral","src":"38216:4:20","type":"","value":"0xc0"}],"functionName":{"name":"add","nativeSrc":"38207:3:20","nodeType":"YulIdentifier","src":"38207:3:20"},"nativeSrc":"38207:14:20","nodeType":"YulFunctionCall","src":"38207:14:20"}],"functionName":{"name":"abi_encode_t_uint24_to_t_uint24","nativeSrc":"38161:31:20","nodeType":"YulIdentifier","src":"38161:31:20"},"nativeSrc":"38161:61:20","nodeType":"YulFunctionCall","src":"38161:61:20"},"nativeSrc":"38161:61:20","nodeType":"YulExpressionStatement","src":"38161:61:20"}]},{"nativeSrc":"38242:202:20","nodeType":"YulBlock","src":"38242:202:20","statements":[{"nativeSrc":"38285:75:20","nodeType":"YulVariableDeclaration","src":"38285:75:20","value":{"arguments":[{"name":"slotValue","nativeSrc":"38350:9:20","nodeType":"YulIdentifier","src":"38350:9:20"}],"functionName":{"name":"extract_from_storage_value_offset_26t_uint24","nativeSrc":"38305:44:20","nodeType":"YulIdentifier","src":"38305:44:20"},"nativeSrc":"38305:55:20","nodeType":"YulFunctionCall","src":"38305:55:20"},"variables":[{"name":"memberValue0","nativeSrc":"38289:12:20","nodeType":"YulTypedName","src":"38289:12:20","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nativeSrc":"38405:12:20","nodeType":"YulIdentifier","src":"38405:12:20"},{"arguments":[{"name":"pos","nativeSrc":"38423:3:20","nodeType":"YulIdentifier","src":"38423:3:20"},{"kind":"number","nativeSrc":"38428:4:20","nodeType":"YulLiteral","src":"38428:4:20","type":"","value":"0xe0"}],"functionName":{"name":"add","nativeSrc":"38419:3:20","nodeType":"YulIdentifier","src":"38419:3:20"},"nativeSrc":"38419:14:20","nodeType":"YulFunctionCall","src":"38419:14:20"}],"functionName":{"name":"abi_encode_t_uint24_to_t_uint24","nativeSrc":"38373:31:20","nodeType":"YulIdentifier","src":"38373:31:20"},"nativeSrc":"38373:61:20","nodeType":"YulFunctionCall","src":"38373:61:20"},"nativeSrc":"38373:61:20","nodeType":"YulExpressionStatement","src":"38373:61:20"}]},{"nativeSrc":"38454:204:20","nodeType":"YulBlock","src":"38454:204:20","statements":[{"nativeSrc":"38497:75:20","nodeType":"YulVariableDeclaration","src":"38497:75:20","value":{"arguments":[{"name":"slotValue","nativeSrc":"38562:9:20","nodeType":"YulIdentifier","src":"38562:9:20"}],"functionName":{"name":"extract_from_storage_value_offset_29t_uint24","nativeSrc":"38517:44:20","nodeType":"YulIdentifier","src":"38517:44:20"},"nativeSrc":"38517:55:20","nodeType":"YulFunctionCall","src":"38517:55:20"},"variables":[{"name":"memberValue0","nativeSrc":"38501:12:20","nodeType":"YulTypedName","src":"38501:12:20","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nativeSrc":"38617:12:20","nodeType":"YulIdentifier","src":"38617:12:20"},{"arguments":[{"name":"pos","nativeSrc":"38635:3:20","nodeType":"YulIdentifier","src":"38635:3:20"},{"kind":"number","nativeSrc":"38640:6:20","nodeType":"YulLiteral","src":"38640:6:20","type":"","value":"0x0100"}],"functionName":{"name":"add","nativeSrc":"38631:3:20","nodeType":"YulIdentifier","src":"38631:3:20"},"nativeSrc":"38631:16:20","nodeType":"YulFunctionCall","src":"38631:16:20"}],"functionName":{"name":"abi_encode_t_uint24_to_t_uint24","nativeSrc":"38585:31:20","nodeType":"YulIdentifier","src":"38585:31:20"},"nativeSrc":"38585:63:20","nodeType":"YulFunctionCall","src":"38585:63:20"},"nativeSrc":"38585:63:20","nodeType":"YulExpressionStatement","src":"38585:63:20"}]}]},"name":"abi_encode_t_struct$_FeeConfig_$2411_storage_to_t_struct$_FeeConfig_$2411_memory_ptr_fromStack","nativeSrc":"36431:2234:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"36535:5:20","nodeType":"YulTypedName","src":"36535:5:20","type":""},{"name":"pos","nativeSrc":"36542:3:20","nodeType":"YulTypedName","src":"36542:3:20","type":""}],"src":"36431:2234:20"},{"body":{"nativeSrc":"38950:578:20","nodeType":"YulBlock","src":"38950:578:20","statements":[{"nativeSrc":"38960:27:20","nodeType":"YulAssignment","src":"38960:27:20","value":{"arguments":[{"name":"headStart","nativeSrc":"38972:9:20","nodeType":"YulIdentifier","src":"38972:9:20"},{"kind":"number","nativeSrc":"38983:3:20","nodeType":"YulLiteral","src":"38983:3:20","type":"","value":"448"}],"functionName":{"name":"add","nativeSrc":"38968:3:20","nodeType":"YulIdentifier","src":"38968:3:20"},"nativeSrc":"38968:19:20","nodeType":"YulFunctionCall","src":"38968:19:20"},"variableNames":[{"name":"tail","nativeSrc":"38960:4:20","nodeType":"YulIdentifier","src":"38960:4:20"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"39039:6:20","nodeType":"YulIdentifier","src":"39039:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"39052:9:20","nodeType":"YulIdentifier","src":"39052:9:20"},{"kind":"number","nativeSrc":"39063:1:20","nodeType":"YulLiteral","src":"39063:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"39048:3:20","nodeType":"YulIdentifier","src":"39048:3:20"},"nativeSrc":"39048:17:20","nodeType":"YulFunctionCall","src":"39048:17:20"}],"functionName":{"name":"abi_encode_t_uint16_to_t_uint16_fromStack","nativeSrc":"38997:41:20","nodeType":"YulIdentifier","src":"38997:41:20"},"nativeSrc":"38997:69:20","nodeType":"YulFunctionCall","src":"38997:69:20"},"nativeSrc":"38997:69:20","nodeType":"YulExpressionStatement","src":"38997:69:20"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"39118:6:20","nodeType":"YulIdentifier","src":"39118:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"39131:9:20","nodeType":"YulIdentifier","src":"39131:9:20"},{"kind":"number","nativeSrc":"39142:2:20","nodeType":"YulLiteral","src":"39142:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"39127:3:20","nodeType":"YulIdentifier","src":"39127:3:20"},"nativeSrc":"39127:18:20","nodeType":"YulFunctionCall","src":"39127:18:20"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nativeSrc":"39076:41:20","nodeType":"YulIdentifier","src":"39076:41:20"},"nativeSrc":"39076:70:20","nodeType":"YulFunctionCall","src":"39076:70:20"},"nativeSrc":"39076:70:20","nodeType":"YulExpressionStatement","src":"39076:70:20"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"39198:6:20","nodeType":"YulIdentifier","src":"39198:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"39211:9:20","nodeType":"YulIdentifier","src":"39211:9:20"},{"kind":"number","nativeSrc":"39222:2:20","nodeType":"YulLiteral","src":"39222:2:20","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"39207:3:20","nodeType":"YulIdentifier","src":"39207:3:20"},"nativeSrc":"39207:18:20","nodeType":"YulFunctionCall","src":"39207:18:20"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nativeSrc":"39156:41:20","nodeType":"YulIdentifier","src":"39156:41:20"},"nativeSrc":"39156:70:20","nodeType":"YulFunctionCall","src":"39156:70:20"},"nativeSrc":"39156:70:20","nodeType":"YulExpressionStatement","src":"39156:70:20"},{"expression":{"arguments":[{"name":"value3","nativeSrc":"39278:6:20","nodeType":"YulIdentifier","src":"39278:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"39291:9:20","nodeType":"YulIdentifier","src":"39291:9:20"},{"kind":"number","nativeSrc":"39302:2:20","nodeType":"YulLiteral","src":"39302:2:20","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"39287:3:20","nodeType":"YulIdentifier","src":"39287:3:20"},"nativeSrc":"39287:18:20","nodeType":"YulFunctionCall","src":"39287:18:20"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nativeSrc":"39236:41:20","nodeType":"YulIdentifier","src":"39236:41:20"},"nativeSrc":"39236:70:20","nodeType":"YulFunctionCall","src":"39236:70:20"},"nativeSrc":"39236:70:20","nodeType":"YulExpressionStatement","src":"39236:70:20"},{"expression":{"arguments":[{"name":"value4","nativeSrc":"39358:6:20","nodeType":"YulIdentifier","src":"39358:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"39371:9:20","nodeType":"YulIdentifier","src":"39371:9:20"},{"kind":"number","nativeSrc":"39382:3:20","nodeType":"YulLiteral","src":"39382:3:20","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"39367:3:20","nodeType":"YulIdentifier","src":"39367:3:20"},"nativeSrc":"39367:19:20","nodeType":"YulFunctionCall","src":"39367:19:20"}],"functionName":{"name":"abi_encode_t_int256_to_t_int256_fromStack","nativeSrc":"39316:41:20","nodeType":"YulIdentifier","src":"39316:41:20"},"nativeSrc":"39316:71:20","nodeType":"YulFunctionCall","src":"39316:71:20"},"nativeSrc":"39316:71:20","nodeType":"YulExpressionStatement","src":"39316:71:20"},{"expression":{"arguments":[{"name":"value5","nativeSrc":"39492:6:20","nodeType":"YulIdentifier","src":"39492:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"39505:9:20","nodeType":"YulIdentifier","src":"39505:9:20"},{"kind":"number","nativeSrc":"39516:3:20","nodeType":"YulLiteral","src":"39516:3:20","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"39501:3:20","nodeType":"YulIdentifier","src":"39501:3:20"},"nativeSrc":"39501:19:20","nodeType":"YulFunctionCall","src":"39501:19:20"}],"functionName":{"name":"abi_encode_t_struct$_FeeConfig_$2411_storage_to_t_struct$_FeeConfig_$2411_memory_ptr_fromStack","nativeSrc":"39397:94:20","nodeType":"YulIdentifier","src":"39397:94:20"},"nativeSrc":"39397:124:20","nodeType":"YulFunctionCall","src":"39397:124:20"},"nativeSrc":"39397:124:20","nodeType":"YulExpressionStatement","src":"39397:124:20"}]},"name":"abi_encode_tuple_t_uint16_t_uint32_t_uint32_t_uint32_t_int256_t_struct$_FeeConfig_$2411_storage__to_t_uint16_t_uint32_t_uint32_t_uint32_t_int256_t_struct$_FeeConfig_$2411_memory_ptr__fromStack_reversed","nativeSrc":"38671:857:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"38882:9:20","nodeType":"YulTypedName","src":"38882:9:20","type":""},{"name":"value5","nativeSrc":"38894:6:20","nodeType":"YulTypedName","src":"38894:6:20","type":""},{"name":"value4","nativeSrc":"38902:6:20","nodeType":"YulTypedName","src":"38902:6:20","type":""},{"name":"value3","nativeSrc":"38910:6:20","nodeType":"YulTypedName","src":"38910:6:20","type":""},{"name":"value2","nativeSrc":"38918:6:20","nodeType":"YulTypedName","src":"38918:6:20","type":""},{"name":"value1","nativeSrc":"38926:6:20","nodeType":"YulTypedName","src":"38926:6:20","type":""},{"name":"value0","nativeSrc":"38934:6:20","nodeType":"YulTypedName","src":"38934:6:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"38945:4:20","nodeType":"YulTypedName","src":"38945:4:20","type":""}],"src":"38671:857:20"},{"body":{"nativeSrc":"39658:204:20","nodeType":"YulBlock","src":"39658:204:20","statements":[{"nativeSrc":"39668:26:20","nodeType":"YulAssignment","src":"39668:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"39680:9:20","nodeType":"YulIdentifier","src":"39680:9:20"},{"kind":"number","nativeSrc":"39691:2:20","nodeType":"YulLiteral","src":"39691:2:20","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"39676:3:20","nodeType":"YulIdentifier","src":"39676:3:20"},"nativeSrc":"39676:18:20","nodeType":"YulFunctionCall","src":"39676:18:20"},"variableNames":[{"name":"tail","nativeSrc":"39668:4:20","nodeType":"YulIdentifier","src":"39668:4:20"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"39746:6:20","nodeType":"YulIdentifier","src":"39746:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"39759:9:20","nodeType":"YulIdentifier","src":"39759:9:20"},{"kind":"number","nativeSrc":"39770:1:20","nodeType":"YulLiteral","src":"39770:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"39755:3:20","nodeType":"YulIdentifier","src":"39755:3:20"},"nativeSrc":"39755:17:20","nodeType":"YulFunctionCall","src":"39755:17:20"}],"functionName":{"name":"abi_encode_t_uint64_to_t_uint64_fromStack","nativeSrc":"39704:41:20","nodeType":"YulIdentifier","src":"39704:41:20"},"nativeSrc":"39704:69:20","nodeType":"YulFunctionCall","src":"39704:69:20"},"nativeSrc":"39704:69:20","nodeType":"YulExpressionStatement","src":"39704:69:20"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"39827:6:20","nodeType":"YulIdentifier","src":"39827:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"39840:9:20","nodeType":"YulIdentifier","src":"39840:9:20"},{"kind":"number","nativeSrc":"39851:2:20","nodeType":"YulLiteral","src":"39851:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"39836:3:20","nodeType":"YulIdentifier","src":"39836:3:20"},"nativeSrc":"39836:18:20","nodeType":"YulFunctionCall","src":"39836:18:20"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"39783:43:20","nodeType":"YulIdentifier","src":"39783:43:20"},"nativeSrc":"39783:72:20","nodeType":"YulFunctionCall","src":"39783:72:20"},"nativeSrc":"39783:72:20","nodeType":"YulExpressionStatement","src":"39783:72:20"}]},"name":"abi_encode_tuple_t_uint64_t_address__to_t_uint64_t_address__fromStack_reversed","nativeSrc":"39534:328:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"39622:9:20","nodeType":"YulTypedName","src":"39622:9:20","type":""},{"name":"value1","nativeSrc":"39634:6:20","nodeType":"YulTypedName","src":"39634:6:20","type":""},{"name":"value0","nativeSrc":"39642:6:20","nodeType":"YulTypedName","src":"39642:6:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"39653:4:20","nodeType":"YulTypedName","src":"39653:4:20","type":""}],"src":"39534:328:20"},{"body":{"nativeSrc":"39990:202:20","nodeType":"YulBlock","src":"39990:202:20","statements":[{"nativeSrc":"40000:26:20","nodeType":"YulAssignment","src":"40000:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"40012:9:20","nodeType":"YulIdentifier","src":"40012:9:20"},{"kind":"number","nativeSrc":"40023:2:20","nodeType":"YulLiteral","src":"40023:2:20","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"40008:3:20","nodeType":"YulIdentifier","src":"40008:3:20"},"nativeSrc":"40008:18:20","nodeType":"YulFunctionCall","src":"40008:18:20"},"variableNames":[{"name":"tail","nativeSrc":"40000:4:20","nodeType":"YulIdentifier","src":"40000:4:20"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"40078:6:20","nodeType":"YulIdentifier","src":"40078:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"40091:9:20","nodeType":"YulIdentifier","src":"40091:9:20"},{"kind":"number","nativeSrc":"40102:1:20","nodeType":"YulLiteral","src":"40102:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"40087:3:20","nodeType":"YulIdentifier","src":"40087:3:20"},"nativeSrc":"40087:17:20","nodeType":"YulFunctionCall","src":"40087:17:20"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nativeSrc":"40036:41:20","nodeType":"YulIdentifier","src":"40036:41:20"},"nativeSrc":"40036:69:20","nodeType":"YulFunctionCall","src":"40036:69:20"},"nativeSrc":"40036:69:20","nodeType":"YulExpressionStatement","src":"40036:69:20"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"40157:6:20","nodeType":"YulIdentifier","src":"40157:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"40170:9:20","nodeType":"YulIdentifier","src":"40170:9:20"},{"kind":"number","nativeSrc":"40181:2:20","nodeType":"YulLiteral","src":"40181:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"40166:3:20","nodeType":"YulIdentifier","src":"40166:3:20"},"nativeSrc":"40166:18:20","nodeType":"YulFunctionCall","src":"40166:18:20"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nativeSrc":"40115:41:20","nodeType":"YulIdentifier","src":"40115:41:20"},"nativeSrc":"40115:70:20","nodeType":"YulFunctionCall","src":"40115:70:20"},"nativeSrc":"40115:70:20","nodeType":"YulExpressionStatement","src":"40115:70:20"}]},"name":"abi_encode_tuple_t_uint32_t_uint32__to_t_uint32_t_uint32__fromStack_reversed","nativeSrc":"39868:324:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"39954:9:20","nodeType":"YulTypedName","src":"39954:9:20","type":""},{"name":"value1","nativeSrc":"39966:6:20","nodeType":"YulTypedName","src":"39966:6:20","type":""},{"name":"value0","nativeSrc":"39974:6:20","nodeType":"YulTypedName","src":"39974:6:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"39985:4:20","nodeType":"YulTypedName","src":"39985:4:20","type":""}],"src":"39868:324:20"},{"body":{"nativeSrc":"40241:162:20","nodeType":"YulBlock","src":"40241:162:20","statements":[{"nativeSrc":"40251:24:20","nodeType":"YulAssignment","src":"40251:24:20","value":{"arguments":[{"name":"x","nativeSrc":"40273:1:20","nodeType":"YulIdentifier","src":"40273:1:20"}],"functionName":{"name":"cleanup_t_uint64","nativeSrc":"40256:16:20","nodeType":"YulIdentifier","src":"40256:16:20"},"nativeSrc":"40256:19:20","nodeType":"YulFunctionCall","src":"40256:19:20"},"variableNames":[{"name":"x","nativeSrc":"40251:1:20","nodeType":"YulIdentifier","src":"40251:1:20"}]},{"nativeSrc":"40284:24:20","nodeType":"YulAssignment","src":"40284:24:20","value":{"arguments":[{"name":"y","nativeSrc":"40306:1:20","nodeType":"YulIdentifier","src":"40306:1:20"}],"functionName":{"name":"cleanup_t_uint64","nativeSrc":"40289:16:20","nodeType":"YulIdentifier","src":"40289:16:20"},"nativeSrc":"40289:19:20","nodeType":"YulFunctionCall","src":"40289:19:20"},"variableNames":[{"name":"y","nativeSrc":"40284:1:20","nodeType":"YulIdentifier","src":"40284:1:20"}]},{"nativeSrc":"40317:16:20","nodeType":"YulAssignment","src":"40317:16:20","value":{"arguments":[{"name":"x","nativeSrc":"40328:1:20","nodeType":"YulIdentifier","src":"40328:1:20"},{"name":"y","nativeSrc":"40331:1:20","nodeType":"YulIdentifier","src":"40331:1:20"}],"functionName":{"name":"add","nativeSrc":"40324:3:20","nodeType":"YulIdentifier","src":"40324:3:20"},"nativeSrc":"40324:9:20","nodeType":"YulFunctionCall","src":"40324:9:20"},"variableNames":[{"name":"sum","nativeSrc":"40317:3:20","nodeType":"YulIdentifier","src":"40317:3:20"}]},{"body":{"nativeSrc":"40374:22:20","nodeType":"YulBlock","src":"40374:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"40376:16:20","nodeType":"YulIdentifier","src":"40376:16:20"},"nativeSrc":"40376:18:20","nodeType":"YulFunctionCall","src":"40376:18:20"},"nativeSrc":"40376:18:20","nodeType":"YulExpressionStatement","src":"40376:18:20"}]},"condition":{"arguments":[{"name":"sum","nativeSrc":"40349:3:20","nodeType":"YulIdentifier","src":"40349:3:20"},{"kind":"number","nativeSrc":"40354:18:20","nodeType":"YulLiteral","src":"40354:18:20","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"40346:2:20","nodeType":"YulIdentifier","src":"40346:2:20"},"nativeSrc":"40346:27:20","nodeType":"YulFunctionCall","src":"40346:27:20"},"nativeSrc":"40343:53:20","nodeType":"YulIf","src":"40343:53:20"}]},"name":"checked_add_t_uint64","nativeSrc":"40198:205:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"40228:1:20","nodeType":"YulTypedName","src":"40228:1:20","type":""},{"name":"y","nativeSrc":"40231:1:20","nodeType":"YulTypedName","src":"40231:1:20","type":""}],"returnVariables":[{"name":"sum","nativeSrc":"40237:3:20","nodeType":"YulTypedName","src":"40237:3:20","type":""}],"src":"40198:205:20"},{"body":{"nativeSrc":"40641:531:20","nodeType":"YulBlock","src":"40641:531:20","statements":[{"nativeSrc":"40651:27:20","nodeType":"YulAssignment","src":"40651:27:20","value":{"arguments":[{"name":"headStart","nativeSrc":"40663:9:20","nodeType":"YulIdentifier","src":"40663:9:20"},{"kind":"number","nativeSrc":"40674:3:20","nodeType":"YulLiteral","src":"40674:3:20","type":"","value":"192"}],"functionName":{"name":"add","nativeSrc":"40659:3:20","nodeType":"YulIdentifier","src":"40659:3:20"},"nativeSrc":"40659:19:20","nodeType":"YulFunctionCall","src":"40659:19:20"},"variableNames":[{"name":"tail","nativeSrc":"40651:4:20","nodeType":"YulIdentifier","src":"40651:4:20"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"40732:6:20","nodeType":"YulIdentifier","src":"40732:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"40745:9:20","nodeType":"YulIdentifier","src":"40745:9:20"},{"kind":"number","nativeSrc":"40756:1:20","nodeType":"YulLiteral","src":"40756:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"40741:3:20","nodeType":"YulIdentifier","src":"40741:3:20"},"nativeSrc":"40741:17:20","nodeType":"YulFunctionCall","src":"40741:17:20"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"40688:43:20","nodeType":"YulIdentifier","src":"40688:43:20"},"nativeSrc":"40688:71:20","nodeType":"YulFunctionCall","src":"40688:71:20"},"nativeSrc":"40688:71:20","nodeType":"YulExpressionStatement","src":"40688:71:20"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"40813:6:20","nodeType":"YulIdentifier","src":"40813:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"40826:9:20","nodeType":"YulIdentifier","src":"40826:9:20"},{"kind":"number","nativeSrc":"40837:2:20","nodeType":"YulLiteral","src":"40837:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"40822:3:20","nodeType":"YulIdentifier","src":"40822:3:20"},"nativeSrc":"40822:18:20","nodeType":"YulFunctionCall","src":"40822:18:20"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"40769:43:20","nodeType":"YulIdentifier","src":"40769:43:20"},"nativeSrc":"40769:72:20","nodeType":"YulFunctionCall","src":"40769:72:20"},"nativeSrc":"40769:72:20","nodeType":"YulExpressionStatement","src":"40769:72:20"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"40893:6:20","nodeType":"YulIdentifier","src":"40893:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"40906:9:20","nodeType":"YulIdentifier","src":"40906:9:20"},{"kind":"number","nativeSrc":"40917:2:20","nodeType":"YulLiteral","src":"40917:2:20","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"40902:3:20","nodeType":"YulIdentifier","src":"40902:3:20"},"nativeSrc":"40902:18:20","nodeType":"YulFunctionCall","src":"40902:18:20"}],"functionName":{"name":"abi_encode_t_uint64_to_t_uint64_fromStack","nativeSrc":"40851:41:20","nodeType":"YulIdentifier","src":"40851:41:20"},"nativeSrc":"40851:70:20","nodeType":"YulFunctionCall","src":"40851:70:20"},"nativeSrc":"40851:70:20","nodeType":"YulExpressionStatement","src":"40851:70:20"},{"expression":{"arguments":[{"name":"value3","nativeSrc":"40973:6:20","nodeType":"YulIdentifier","src":"40973:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"40986:9:20","nodeType":"YulIdentifier","src":"40986:9:20"},{"kind":"number","nativeSrc":"40997:2:20","nodeType":"YulLiteral","src":"40997:2:20","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"40982:3:20","nodeType":"YulIdentifier","src":"40982:3:20"},"nativeSrc":"40982:18:20","nodeType":"YulFunctionCall","src":"40982:18:20"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nativeSrc":"40931:41:20","nodeType":"YulIdentifier","src":"40931:41:20"},"nativeSrc":"40931:70:20","nodeType":"YulFunctionCall","src":"40931:70:20"},"nativeSrc":"40931:70:20","nodeType":"YulExpressionStatement","src":"40931:70:20"},{"expression":{"arguments":[{"name":"value4","nativeSrc":"41053:6:20","nodeType":"YulIdentifier","src":"41053:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"41066:9:20","nodeType":"YulIdentifier","src":"41066:9:20"},{"kind":"number","nativeSrc":"41077:3:20","nodeType":"YulLiteral","src":"41077:3:20","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"41062:3:20","nodeType":"YulIdentifier","src":"41062:3:20"},"nativeSrc":"41062:19:20","nodeType":"YulFunctionCall","src":"41062:19:20"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nativeSrc":"41011:41:20","nodeType":"YulIdentifier","src":"41011:41:20"},"nativeSrc":"41011:71:20","nodeType":"YulFunctionCall","src":"41011:71:20"},"nativeSrc":"41011:71:20","nodeType":"YulExpressionStatement","src":"41011:71:20"},{"expression":{"arguments":[{"name":"value5","nativeSrc":"41136:6:20","nodeType":"YulIdentifier","src":"41136:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"41149:9:20","nodeType":"YulIdentifier","src":"41149:9:20"},{"kind":"number","nativeSrc":"41160:3:20","nodeType":"YulLiteral","src":"41160:3:20","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"41145:3:20","nodeType":"YulIdentifier","src":"41145:3:20"},"nativeSrc":"41145:19:20","nodeType":"YulFunctionCall","src":"41145:19:20"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"41092:43:20","nodeType":"YulIdentifier","src":"41092:43:20"},"nativeSrc":"41092:73:20","nodeType":"YulFunctionCall","src":"41092:73:20"},"nativeSrc":"41092:73:20","nodeType":"YulExpressionStatement","src":"41092:73:20"}]},"name":"abi_encode_tuple_t_uint256_t_uint256_t_uint64_t_uint32_t_uint32_t_address__to_t_uint256_t_uint256_t_uint64_t_uint32_t_uint32_t_address__fromStack_reversed","nativeSrc":"40409:763:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"40573:9:20","nodeType":"YulTypedName","src":"40573:9:20","type":""},{"name":"value5","nativeSrc":"40585:6:20","nodeType":"YulTypedName","src":"40585:6:20","type":""},{"name":"value4","nativeSrc":"40593:6:20","nodeType":"YulTypedName","src":"40593:6:20","type":""},{"name":"value3","nativeSrc":"40601:6:20","nodeType":"YulTypedName","src":"40601:6:20","type":""},{"name":"value2","nativeSrc":"40609:6:20","nodeType":"YulTypedName","src":"40609:6:20","type":""},{"name":"value1","nativeSrc":"40617:6:20","nodeType":"YulTypedName","src":"40617:6:20","type":""},{"name":"value0","nativeSrc":"40625:6:20","nodeType":"YulTypedName","src":"40625:6:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"40636:4:20","nodeType":"YulTypedName","src":"40636:4:20","type":""}],"src":"40409:763:20"},{"body":{"nativeSrc":"41382:448:20","nodeType":"YulBlock","src":"41382:448:20","statements":[{"nativeSrc":"41392:27:20","nodeType":"YulAssignment","src":"41392:27:20","value":{"arguments":[{"name":"headStart","nativeSrc":"41404:9:20","nodeType":"YulIdentifier","src":"41404:9:20"},{"kind":"number","nativeSrc":"41415:3:20","nodeType":"YulLiteral","src":"41415:3:20","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"41400:3:20","nodeType":"YulIdentifier","src":"41400:3:20"},"nativeSrc":"41400:19:20","nodeType":"YulFunctionCall","src":"41400:19:20"},"variableNames":[{"name":"tail","nativeSrc":"41392:4:20","nodeType":"YulIdentifier","src":"41392:4:20"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"41473:6:20","nodeType":"YulIdentifier","src":"41473:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"41486:9:20","nodeType":"YulIdentifier","src":"41486:9:20"},{"kind":"number","nativeSrc":"41497:1:20","nodeType":"YulLiteral","src":"41497:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"41482:3:20","nodeType":"YulIdentifier","src":"41482:3:20"},"nativeSrc":"41482:17:20","nodeType":"YulFunctionCall","src":"41482:17:20"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"41429:43:20","nodeType":"YulIdentifier","src":"41429:43:20"},"nativeSrc":"41429:71:20","nodeType":"YulFunctionCall","src":"41429:71:20"},"nativeSrc":"41429:71:20","nodeType":"YulExpressionStatement","src":"41429:71:20"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"41554:6:20","nodeType":"YulIdentifier","src":"41554:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"41567:9:20","nodeType":"YulIdentifier","src":"41567:9:20"},{"kind":"number","nativeSrc":"41578:2:20","nodeType":"YulLiteral","src":"41578:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"41563:3:20","nodeType":"YulIdentifier","src":"41563:3:20"},"nativeSrc":"41563:18:20","nodeType":"YulFunctionCall","src":"41563:18:20"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"41510:43:20","nodeType":"YulIdentifier","src":"41510:43:20"},"nativeSrc":"41510:72:20","nodeType":"YulFunctionCall","src":"41510:72:20"},"nativeSrc":"41510:72:20","nodeType":"YulExpressionStatement","src":"41510:72:20"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"41634:6:20","nodeType":"YulIdentifier","src":"41634:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"41647:9:20","nodeType":"YulIdentifier","src":"41647:9:20"},{"kind":"number","nativeSrc":"41658:2:20","nodeType":"YulLiteral","src":"41658:2:20","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"41643:3:20","nodeType":"YulIdentifier","src":"41643:3:20"},"nativeSrc":"41643:18:20","nodeType":"YulFunctionCall","src":"41643:18:20"}],"functionName":{"name":"abi_encode_t_uint16_to_t_uint16_fromStack","nativeSrc":"41592:41:20","nodeType":"YulIdentifier","src":"41592:41:20"},"nativeSrc":"41592:70:20","nodeType":"YulFunctionCall","src":"41592:70:20"},"nativeSrc":"41592:70:20","nodeType":"YulExpressionStatement","src":"41592:70:20"},{"expression":{"arguments":[{"name":"value3","nativeSrc":"41714:6:20","nodeType":"YulIdentifier","src":"41714:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"41727:9:20","nodeType":"YulIdentifier","src":"41727:9:20"},{"kind":"number","nativeSrc":"41738:2:20","nodeType":"YulLiteral","src":"41738:2:20","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"41723:3:20","nodeType":"YulIdentifier","src":"41723:3:20"},"nativeSrc":"41723:18:20","nodeType":"YulFunctionCall","src":"41723:18:20"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nativeSrc":"41672:41:20","nodeType":"YulIdentifier","src":"41672:41:20"},"nativeSrc":"41672:70:20","nodeType":"YulFunctionCall","src":"41672:70:20"},"nativeSrc":"41672:70:20","nodeType":"YulExpressionStatement","src":"41672:70:20"},{"expression":{"arguments":[{"name":"value4","nativeSrc":"41794:6:20","nodeType":"YulIdentifier","src":"41794:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"41807:9:20","nodeType":"YulIdentifier","src":"41807:9:20"},{"kind":"number","nativeSrc":"41818:3:20","nodeType":"YulLiteral","src":"41818:3:20","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"41803:3:20","nodeType":"YulIdentifier","src":"41803:3:20"},"nativeSrc":"41803:19:20","nodeType":"YulFunctionCall","src":"41803:19:20"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nativeSrc":"41752:41:20","nodeType":"YulIdentifier","src":"41752:41:20"},"nativeSrc":"41752:71:20","nodeType":"YulFunctionCall","src":"41752:71:20"},"nativeSrc":"41752:71:20","nodeType":"YulExpressionStatement","src":"41752:71:20"}]},"name":"abi_encode_tuple_t_uint256_t_uint256_t_uint16_t_uint32_t_uint32__to_t_uint256_t_uint256_t_uint16_t_uint32_t_uint32__fromStack_reversed","nativeSrc":"41178:652:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"41322:9:20","nodeType":"YulTypedName","src":"41322:9:20","type":""},{"name":"value4","nativeSrc":"41334:6:20","nodeType":"YulTypedName","src":"41334:6:20","type":""},{"name":"value3","nativeSrc":"41342:6:20","nodeType":"YulTypedName","src":"41342:6:20","type":""},{"name":"value2","nativeSrc":"41350:6:20","nodeType":"YulTypedName","src":"41350:6:20","type":""},{"name":"value1","nativeSrc":"41358:6:20","nodeType":"YulTypedName","src":"41358:6:20","type":""},{"name":"value0","nativeSrc":"41366:6:20","nodeType":"YulTypedName","src":"41366:6:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"41377:4:20","nodeType":"YulTypedName","src":"41377:4:20","type":""}],"src":"41178:652:20"},{"body":{"nativeSrc":"41880:172:20","nodeType":"YulBlock","src":"41880:172:20","statements":[{"nativeSrc":"41890:24:20","nodeType":"YulAssignment","src":"41890:24:20","value":{"arguments":[{"name":"x","nativeSrc":"41912:1:20","nodeType":"YulIdentifier","src":"41912:1:20"}],"functionName":{"name":"cleanup_t_uint96","nativeSrc":"41895:16:20","nodeType":"YulIdentifier","src":"41895:16:20"},"nativeSrc":"41895:19:20","nodeType":"YulFunctionCall","src":"41895:19:20"},"variableNames":[{"name":"x","nativeSrc":"41890:1:20","nodeType":"YulIdentifier","src":"41890:1:20"}]},{"nativeSrc":"41923:24:20","nodeType":"YulAssignment","src":"41923:24:20","value":{"arguments":[{"name":"y","nativeSrc":"41945:1:20","nodeType":"YulIdentifier","src":"41945:1:20"}],"functionName":{"name":"cleanup_t_uint96","nativeSrc":"41928:16:20","nodeType":"YulIdentifier","src":"41928:16:20"},"nativeSrc":"41928:19:20","nodeType":"YulFunctionCall","src":"41928:19:20"},"variableNames":[{"name":"y","nativeSrc":"41923:1:20","nodeType":"YulIdentifier","src":"41923:1:20"}]},{"nativeSrc":"41956:17:20","nodeType":"YulAssignment","src":"41956:17:20","value":{"arguments":[{"name":"x","nativeSrc":"41968:1:20","nodeType":"YulIdentifier","src":"41968:1:20"},{"name":"y","nativeSrc":"41971:1:20","nodeType":"YulIdentifier","src":"41971:1:20"}],"functionName":{"name":"sub","nativeSrc":"41964:3:20","nodeType":"YulIdentifier","src":"41964:3:20"},"nativeSrc":"41964:9:20","nodeType":"YulFunctionCall","src":"41964:9:20"},"variableNames":[{"name":"diff","nativeSrc":"41956:4:20","nodeType":"YulIdentifier","src":"41956:4:20"}]},{"body":{"nativeSrc":"42023:22:20","nodeType":"YulBlock","src":"42023:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"42025:16:20","nodeType":"YulIdentifier","src":"42025:16:20"},"nativeSrc":"42025:18:20","nodeType":"YulFunctionCall","src":"42025:18:20"},"nativeSrc":"42025:18:20","nodeType":"YulExpressionStatement","src":"42025:18:20"}]},"condition":{"arguments":[{"name":"diff","nativeSrc":"41989:4:20","nodeType":"YulIdentifier","src":"41989:4:20"},{"kind":"number","nativeSrc":"41995:26:20","nodeType":"YulLiteral","src":"41995:26:20","type":"","value":"0xffffffffffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"41986:2:20","nodeType":"YulIdentifier","src":"41986:2:20"},"nativeSrc":"41986:36:20","nodeType":"YulFunctionCall","src":"41986:36:20"},"nativeSrc":"41983:62:20","nodeType":"YulIf","src":"41983:62:20"}]},"name":"checked_sub_t_uint96","nativeSrc":"41836:216:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"41866:1:20","nodeType":"YulTypedName","src":"41866:1:20","type":""},{"name":"y","nativeSrc":"41869:1:20","nodeType":"YulTypedName","src":"41869:1:20","type":""}],"returnVariables":[{"name":"diff","nativeSrc":"41875:4:20","nodeType":"YulTypedName","src":"41875:4:20","type":""}],"src":"41836:216:20"},{"body":{"nativeSrc":"42117:81:20","nodeType":"YulBlock","src":"42117:81:20","statements":[{"nativeSrc":"42127:65:20","nodeType":"YulAssignment","src":"42127:65:20","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nativeSrc":"42184:5:20","nodeType":"YulIdentifier","src":"42184:5:20"}],"functionName":{"name":"cleanup_t_uint96","nativeSrc":"42167:16:20","nodeType":"YulIdentifier","src":"42167:16:20"},"nativeSrc":"42167:23:20","nodeType":"YulFunctionCall","src":"42167:23:20"}],"functionName":{"name":"identity","nativeSrc":"42158:8:20","nodeType":"YulIdentifier","src":"42158:8:20"},"nativeSrc":"42158:33:20","nodeType":"YulFunctionCall","src":"42158:33:20"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"42140:17:20","nodeType":"YulIdentifier","src":"42140:17:20"},"nativeSrc":"42140:52:20","nodeType":"YulFunctionCall","src":"42140:52:20"},"variableNames":[{"name":"converted","nativeSrc":"42127:9:20","nodeType":"YulIdentifier","src":"42127:9:20"}]}]},"name":"convert_t_uint96_to_t_uint256","nativeSrc":"42058:140:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"42097:5:20","nodeType":"YulTypedName","src":"42097:5:20","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"42107:9:20","nodeType":"YulTypedName","src":"42107:9:20","type":""}],"src":"42058:140:20"},{"body":{"nativeSrc":"42268:65:20","nodeType":"YulBlock","src":"42268:65:20","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"42285:3:20","nodeType":"YulIdentifier","src":"42285:3:20"},{"arguments":[{"name":"value","nativeSrc":"42320:5:20","nodeType":"YulIdentifier","src":"42320:5:20"}],"functionName":{"name":"convert_t_uint96_to_t_uint256","nativeSrc":"42290:29:20","nodeType":"YulIdentifier","src":"42290:29:20"},"nativeSrc":"42290:36:20","nodeType":"YulFunctionCall","src":"42290:36:20"}],"functionName":{"name":"mstore","nativeSrc":"42278:6:20","nodeType":"YulIdentifier","src":"42278:6:20"},"nativeSrc":"42278:49:20","nodeType":"YulFunctionCall","src":"42278:49:20"},"nativeSrc":"42278:49:20","nodeType":"YulExpressionStatement","src":"42278:49:20"}]},"name":"abi_encode_t_uint96_to_t_uint256_fromStack","nativeSrc":"42204:129:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"42256:5:20","nodeType":"YulTypedName","src":"42256:5:20","type":""},{"name":"pos","nativeSrc":"42263:3:20","nodeType":"YulTypedName","src":"42263:3:20","type":""}],"src":"42204:129:20"},{"body":{"nativeSrc":"42464:205:20","nodeType":"YulBlock","src":"42464:205:20","statements":[{"nativeSrc":"42474:26:20","nodeType":"YulAssignment","src":"42474:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"42486:9:20","nodeType":"YulIdentifier","src":"42486:9:20"},{"kind":"number","nativeSrc":"42497:2:20","nodeType":"YulLiteral","src":"42497:2:20","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"42482:3:20","nodeType":"YulIdentifier","src":"42482:3:20"},"nativeSrc":"42482:18:20","nodeType":"YulFunctionCall","src":"42482:18:20"},"variableNames":[{"name":"tail","nativeSrc":"42474:4:20","nodeType":"YulIdentifier","src":"42474:4:20"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"42554:6:20","nodeType":"YulIdentifier","src":"42554:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"42567:9:20","nodeType":"YulIdentifier","src":"42567:9:20"},{"kind":"number","nativeSrc":"42578:1:20","nodeType":"YulLiteral","src":"42578:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"42563:3:20","nodeType":"YulIdentifier","src":"42563:3:20"},"nativeSrc":"42563:17:20","nodeType":"YulFunctionCall","src":"42563:17:20"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"42510:43:20","nodeType":"YulIdentifier","src":"42510:43:20"},"nativeSrc":"42510:71:20","nodeType":"YulFunctionCall","src":"42510:71:20"},"nativeSrc":"42510:71:20","nodeType":"YulExpressionStatement","src":"42510:71:20"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"42634:6:20","nodeType":"YulIdentifier","src":"42634:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"42647:9:20","nodeType":"YulIdentifier","src":"42647:9:20"},{"kind":"number","nativeSrc":"42658:2:20","nodeType":"YulLiteral","src":"42658:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"42643:3:20","nodeType":"YulIdentifier","src":"42643:3:20"},"nativeSrc":"42643:18:20","nodeType":"YulFunctionCall","src":"42643:18:20"}],"functionName":{"name":"abi_encode_t_uint96_to_t_uint256_fromStack","nativeSrc":"42591:42:20","nodeType":"YulIdentifier","src":"42591:42:20"},"nativeSrc":"42591:71:20","nodeType":"YulFunctionCall","src":"42591:71:20"},"nativeSrc":"42591:71:20","nodeType":"YulExpressionStatement","src":"42591:71:20"}]},"name":"abi_encode_tuple_t_address_t_uint96__to_t_address_t_uint256__fromStack_reversed","nativeSrc":"42339:330:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"42428:9:20","nodeType":"YulTypedName","src":"42428:9:20","type":""},{"name":"value1","nativeSrc":"42440:6:20","nodeType":"YulTypedName","src":"42440:6:20","type":""},{"name":"value0","nativeSrc":"42448:6:20","nodeType":"YulTypedName","src":"42448:6:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"42459:4:20","nodeType":"YulTypedName","src":"42459:4:20","type":""}],"src":"42339:330:20"},{"body":{"nativeSrc":"42715:76:20","nodeType":"YulBlock","src":"42715:76:20","statements":[{"body":{"nativeSrc":"42769:16:20","nodeType":"YulBlock","src":"42769:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"42778:1:20","nodeType":"YulLiteral","src":"42778:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"42781:1:20","nodeType":"YulLiteral","src":"42781:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"42771:6:20","nodeType":"YulIdentifier","src":"42771:6:20"},"nativeSrc":"42771:12:20","nodeType":"YulFunctionCall","src":"42771:12:20"},"nativeSrc":"42771:12:20","nodeType":"YulExpressionStatement","src":"42771:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"42738:5:20","nodeType":"YulIdentifier","src":"42738:5:20"},{"arguments":[{"name":"value","nativeSrc":"42760:5:20","nodeType":"YulIdentifier","src":"42760:5:20"}],"functionName":{"name":"cleanup_t_bool","nativeSrc":"42745:14:20","nodeType":"YulIdentifier","src":"42745:14:20"},"nativeSrc":"42745:21:20","nodeType":"YulFunctionCall","src":"42745:21:20"}],"functionName":{"name":"eq","nativeSrc":"42735:2:20","nodeType":"YulIdentifier","src":"42735:2:20"},"nativeSrc":"42735:32:20","nodeType":"YulFunctionCall","src":"42735:32:20"}],"functionName":{"name":"iszero","nativeSrc":"42728:6:20","nodeType":"YulIdentifier","src":"42728:6:20"},"nativeSrc":"42728:40:20","nodeType":"YulFunctionCall","src":"42728:40:20"},"nativeSrc":"42725:60:20","nodeType":"YulIf","src":"42725:60:20"}]},"name":"validator_revert_t_bool","nativeSrc":"42675:116:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"42708:5:20","nodeType":"YulTypedName","src":"42708:5:20","type":""}],"src":"42675:116:20"},{"body":{"nativeSrc":"42857:77:20","nodeType":"YulBlock","src":"42857:77:20","statements":[{"nativeSrc":"42867:22:20","nodeType":"YulAssignment","src":"42867:22:20","value":{"arguments":[{"name":"offset","nativeSrc":"42882:6:20","nodeType":"YulIdentifier","src":"42882:6:20"}],"functionName":{"name":"mload","nativeSrc":"42876:5:20","nodeType":"YulIdentifier","src":"42876:5:20"},"nativeSrc":"42876:13:20","nodeType":"YulFunctionCall","src":"42876:13:20"},"variableNames":[{"name":"value","nativeSrc":"42867:5:20","nodeType":"YulIdentifier","src":"42867:5:20"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"42922:5:20","nodeType":"YulIdentifier","src":"42922:5:20"}],"functionName":{"name":"validator_revert_t_bool","nativeSrc":"42898:23:20","nodeType":"YulIdentifier","src":"42898:23:20"},"nativeSrc":"42898:30:20","nodeType":"YulFunctionCall","src":"42898:30:20"},"nativeSrc":"42898:30:20","nodeType":"YulExpressionStatement","src":"42898:30:20"}]},"name":"abi_decode_t_bool_fromMemory","nativeSrc":"42797:137:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"42835:6:20","nodeType":"YulTypedName","src":"42835:6:20","type":""},{"name":"end","nativeSrc":"42843:3:20","nodeType":"YulTypedName","src":"42843:3:20","type":""}],"returnVariables":[{"name":"value","nativeSrc":"42851:5:20","nodeType":"YulTypedName","src":"42851:5:20","type":""}],"src":"42797:137:20"},{"body":{"nativeSrc":"43014:271:20","nodeType":"YulBlock","src":"43014:271:20","statements":[{"body":{"nativeSrc":"43060:83:20","nodeType":"YulBlock","src":"43060:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"43062:77:20","nodeType":"YulIdentifier","src":"43062:77:20"},"nativeSrc":"43062:79:20","nodeType":"YulFunctionCall","src":"43062:79:20"},"nativeSrc":"43062:79:20","nodeType":"YulExpressionStatement","src":"43062:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"43035:7:20","nodeType":"YulIdentifier","src":"43035:7:20"},{"name":"headStart","nativeSrc":"43044:9:20","nodeType":"YulIdentifier","src":"43044:9:20"}],"functionName":{"name":"sub","nativeSrc":"43031:3:20","nodeType":"YulIdentifier","src":"43031:3:20"},"nativeSrc":"43031:23:20","nodeType":"YulFunctionCall","src":"43031:23:20"},{"kind":"number","nativeSrc":"43056:2:20","nodeType":"YulLiteral","src":"43056:2:20","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"43027:3:20","nodeType":"YulIdentifier","src":"43027:3:20"},"nativeSrc":"43027:32:20","nodeType":"YulFunctionCall","src":"43027:32:20"},"nativeSrc":"43024:119:20","nodeType":"YulIf","src":"43024:119:20"},{"nativeSrc":"43153:125:20","nodeType":"YulBlock","src":"43153:125:20","statements":[{"nativeSrc":"43168:15:20","nodeType":"YulVariableDeclaration","src":"43168:15:20","value":{"kind":"number","nativeSrc":"43182:1:20","nodeType":"YulLiteral","src":"43182:1:20","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"43172:6:20","nodeType":"YulTypedName","src":"43172:6:20","type":""}]},{"nativeSrc":"43197:71:20","nodeType":"YulAssignment","src":"43197:71:20","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"43240:9:20","nodeType":"YulIdentifier","src":"43240:9:20"},{"name":"offset","nativeSrc":"43251:6:20","nodeType":"YulIdentifier","src":"43251:6:20"}],"functionName":{"name":"add","nativeSrc":"43236:3:20","nodeType":"YulIdentifier","src":"43236:3:20"},"nativeSrc":"43236:22:20","nodeType":"YulFunctionCall","src":"43236:22:20"},{"name":"dataEnd","nativeSrc":"43260:7:20","nodeType":"YulIdentifier","src":"43260:7:20"}],"functionName":{"name":"abi_decode_t_bool_fromMemory","nativeSrc":"43207:28:20","nodeType":"YulIdentifier","src":"43207:28:20"},"nativeSrc":"43207:61:20","nodeType":"YulFunctionCall","src":"43207:61:20"},"variableNames":[{"name":"value0","nativeSrc":"43197:6:20","nodeType":"YulIdentifier","src":"43197:6:20"}]}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nativeSrc":"42940:345:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"42984:9:20","nodeType":"YulTypedName","src":"42984:9:20","type":""},{"name":"dataEnd","nativeSrc":"42995:7:20","nodeType":"YulTypedName","src":"42995:7:20","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"43007:6:20","nodeType":"YulTypedName","src":"43007:6:20","type":""}],"src":"42940:345:20"},{"body":{"nativeSrc":"43397:66:20","nodeType":"YulBlock","src":"43397:66:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"43419:6:20","nodeType":"YulIdentifier","src":"43419:6:20"},{"kind":"number","nativeSrc":"43427:1:20","nodeType":"YulLiteral","src":"43427:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"43415:3:20","nodeType":"YulIdentifier","src":"43415:3:20"},"nativeSrc":"43415:14:20","nodeType":"YulFunctionCall","src":"43415:14:20"},{"hexValue":"4d7573742062652070726f706f736564206f776e6572","kind":"string","nativeSrc":"43431:24:20","nodeType":"YulLiteral","src":"43431:24:20","type":"","value":"Must be proposed owner"}],"functionName":{"name":"mstore","nativeSrc":"43408:6:20","nodeType":"YulIdentifier","src":"43408:6:20"},"nativeSrc":"43408:48:20","nodeType":"YulFunctionCall","src":"43408:48:20"},"nativeSrc":"43408:48:20","nodeType":"YulExpressionStatement","src":"43408:48:20"}]},"name":"store_literal_in_memory_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c","nativeSrc":"43291:172:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"43389:6:20","nodeType":"YulTypedName","src":"43389:6:20","type":""}],"src":"43291:172:20"},{"body":{"nativeSrc":"43615:220:20","nodeType":"YulBlock","src":"43615:220:20","statements":[{"nativeSrc":"43625:74:20","nodeType":"YulAssignment","src":"43625:74:20","value":{"arguments":[{"name":"pos","nativeSrc":"43691:3:20","nodeType":"YulIdentifier","src":"43691:3:20"},{"kind":"number","nativeSrc":"43696:2:20","nodeType":"YulLiteral","src":"43696:2:20","type":"","value":"22"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"43632:58:20","nodeType":"YulIdentifier","src":"43632:58:20"},"nativeSrc":"43632:67:20","nodeType":"YulFunctionCall","src":"43632:67:20"},"variableNames":[{"name":"pos","nativeSrc":"43625:3:20","nodeType":"YulIdentifier","src":"43625:3:20"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"43797:3:20","nodeType":"YulIdentifier","src":"43797:3:20"}],"functionName":{"name":"store_literal_in_memory_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c","nativeSrc":"43708:88:20","nodeType":"YulIdentifier","src":"43708:88:20"},"nativeSrc":"43708:93:20","nodeType":"YulFunctionCall","src":"43708:93:20"},"nativeSrc":"43708:93:20","nodeType":"YulExpressionStatement","src":"43708:93:20"},{"nativeSrc":"43810:19:20","nodeType":"YulAssignment","src":"43810:19:20","value":{"arguments":[{"name":"pos","nativeSrc":"43821:3:20","nodeType":"YulIdentifier","src":"43821:3:20"},{"kind":"number","nativeSrc":"43826:2:20","nodeType":"YulLiteral","src":"43826:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"43817:3:20","nodeType":"YulIdentifier","src":"43817:3:20"},"nativeSrc":"43817:12:20","nodeType":"YulFunctionCall","src":"43817:12:20"},"variableNames":[{"name":"end","nativeSrc":"43810:3:20","nodeType":"YulIdentifier","src":"43810:3:20"}]}]},"name":"abi_encode_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c_to_t_string_memory_ptr_fromStack","nativeSrc":"43469:366:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"43603:3:20","nodeType":"YulTypedName","src":"43603:3:20","type":""}],"returnVariables":[{"name":"end","nativeSrc":"43611:3:20","nodeType":"YulTypedName","src":"43611:3:20","type":""}],"src":"43469:366:20"},{"body":{"nativeSrc":"44012:248:20","nodeType":"YulBlock","src":"44012:248:20","statements":[{"nativeSrc":"44022:26:20","nodeType":"YulAssignment","src":"44022:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"44034:9:20","nodeType":"YulIdentifier","src":"44034:9:20"},{"kind":"number","nativeSrc":"44045:2:20","nodeType":"YulLiteral","src":"44045:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"44030:3:20","nodeType":"YulIdentifier","src":"44030:3:20"},"nativeSrc":"44030:18:20","nodeType":"YulFunctionCall","src":"44030:18:20"},"variableNames":[{"name":"tail","nativeSrc":"44022:4:20","nodeType":"YulIdentifier","src":"44022:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"44069:9:20","nodeType":"YulIdentifier","src":"44069:9:20"},{"kind":"number","nativeSrc":"44080:1:20","nodeType":"YulLiteral","src":"44080:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"44065:3:20","nodeType":"YulIdentifier","src":"44065:3:20"},"nativeSrc":"44065:17:20","nodeType":"YulFunctionCall","src":"44065:17:20"},{"arguments":[{"name":"tail","nativeSrc":"44088:4:20","nodeType":"YulIdentifier","src":"44088:4:20"},{"name":"headStart","nativeSrc":"44094:9:20","nodeType":"YulIdentifier","src":"44094:9:20"}],"functionName":{"name":"sub","nativeSrc":"44084:3:20","nodeType":"YulIdentifier","src":"44084:3:20"},"nativeSrc":"44084:20:20","nodeType":"YulFunctionCall","src":"44084:20:20"}],"functionName":{"name":"mstore","nativeSrc":"44058:6:20","nodeType":"YulIdentifier","src":"44058:6:20"},"nativeSrc":"44058:47:20","nodeType":"YulFunctionCall","src":"44058:47:20"},"nativeSrc":"44058:47:20","nodeType":"YulExpressionStatement","src":"44058:47:20"},{"nativeSrc":"44114:139:20","nodeType":"YulAssignment","src":"44114:139:20","value":{"arguments":[{"name":"tail","nativeSrc":"44248:4:20","nodeType":"YulIdentifier","src":"44248:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c_to_t_string_memory_ptr_fromStack","nativeSrc":"44122:124:20","nodeType":"YulIdentifier","src":"44122:124:20"},"nativeSrc":"44122:131:20","nodeType":"YulFunctionCall","src":"44122:131:20"},"variableNames":[{"name":"tail","nativeSrc":"44114:4:20","nodeType":"YulIdentifier","src":"44114:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"43841:419:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"43992:9:20","nodeType":"YulTypedName","src":"43992:9:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"44007:4:20","nodeType":"YulTypedName","src":"44007:4:20","type":""}],"src":"43841:419:20"},{"body":{"nativeSrc":"44308:141:20","nodeType":"YulBlock","src":"44308:141:20","statements":[{"nativeSrc":"44318:32:20","nodeType":"YulAssignment","src":"44318:32:20","value":{"arguments":[{"name":"value","nativeSrc":"44344:5:20","nodeType":"YulIdentifier","src":"44344:5:20"}],"functionName":{"name":"cleanup_t_uint64","nativeSrc":"44327:16:20","nodeType":"YulIdentifier","src":"44327:16:20"},"nativeSrc":"44327:23:20","nodeType":"YulFunctionCall","src":"44327:23:20"},"variableNames":[{"name":"value","nativeSrc":"44318:5:20","nodeType":"YulIdentifier","src":"44318:5:20"}]},{"body":{"nativeSrc":"44392:22:20","nodeType":"YulBlock","src":"44392:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"44394:16:20","nodeType":"YulIdentifier","src":"44394:16:20"},"nativeSrc":"44394:18:20","nodeType":"YulFunctionCall","src":"44394:18:20"},"nativeSrc":"44394:18:20","nodeType":"YulExpressionStatement","src":"44394:18:20"}]},"condition":{"arguments":[{"name":"value","nativeSrc":"44365:5:20","nodeType":"YulIdentifier","src":"44365:5:20"},{"kind":"number","nativeSrc":"44372:18:20","nodeType":"YulLiteral","src":"44372:18:20","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"eq","nativeSrc":"44362:2:20","nodeType":"YulIdentifier","src":"44362:2:20"},"nativeSrc":"44362:29:20","nodeType":"YulFunctionCall","src":"44362:29:20"},"nativeSrc":"44359:55:20","nodeType":"YulIf","src":"44359:55:20"},{"nativeSrc":"44423:20:20","nodeType":"YulAssignment","src":"44423:20:20","value":{"arguments":[{"name":"value","nativeSrc":"44434:5:20","nodeType":"YulIdentifier","src":"44434:5:20"},{"kind":"number","nativeSrc":"44441:1:20","nodeType":"YulLiteral","src":"44441:1:20","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"44430:3:20","nodeType":"YulIdentifier","src":"44430:3:20"},"nativeSrc":"44430:13:20","nodeType":"YulFunctionCall","src":"44430:13:20"},"variableNames":[{"name":"ret","nativeSrc":"44423:3:20","nodeType":"YulIdentifier","src":"44423:3:20"}]}]},"name":"increment_t_uint64","nativeSrc":"44266:183:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"44294:5:20","nodeType":"YulTypedName","src":"44294:5:20","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"44304:3:20","nodeType":"YulTypedName","src":"44304:3:20","type":""}],"src":"44266:183:20"},{"body":{"nativeSrc":"44498:170:20","nodeType":"YulBlock","src":"44498:170:20","statements":[{"nativeSrc":"44508:24:20","nodeType":"YulAssignment","src":"44508:24:20","value":{"arguments":[{"name":"x","nativeSrc":"44530:1:20","nodeType":"YulIdentifier","src":"44530:1:20"}],"functionName":{"name":"cleanup_t_uint96","nativeSrc":"44513:16:20","nodeType":"YulIdentifier","src":"44513:16:20"},"nativeSrc":"44513:19:20","nodeType":"YulFunctionCall","src":"44513:19:20"},"variableNames":[{"name":"x","nativeSrc":"44508:1:20","nodeType":"YulIdentifier","src":"44508:1:20"}]},{"nativeSrc":"44541:24:20","nodeType":"YulAssignment","src":"44541:24:20","value":{"arguments":[{"name":"y","nativeSrc":"44563:1:20","nodeType":"YulIdentifier","src":"44563:1:20"}],"functionName":{"name":"cleanup_t_uint96","nativeSrc":"44546:16:20","nodeType":"YulIdentifier","src":"44546:16:20"},"nativeSrc":"44546:19:20","nodeType":"YulFunctionCall","src":"44546:19:20"},"variableNames":[{"name":"y","nativeSrc":"44541:1:20","nodeType":"YulIdentifier","src":"44541:1:20"}]},{"nativeSrc":"44574:16:20","nodeType":"YulAssignment","src":"44574:16:20","value":{"arguments":[{"name":"x","nativeSrc":"44585:1:20","nodeType":"YulIdentifier","src":"44585:1:20"},{"name":"y","nativeSrc":"44588:1:20","nodeType":"YulIdentifier","src":"44588:1:20"}],"functionName":{"name":"add","nativeSrc":"44581:3:20","nodeType":"YulIdentifier","src":"44581:3:20"},"nativeSrc":"44581:9:20","nodeType":"YulFunctionCall","src":"44581:9:20"},"variableNames":[{"name":"sum","nativeSrc":"44574:3:20","nodeType":"YulIdentifier","src":"44574:3:20"}]},{"body":{"nativeSrc":"44639:22:20","nodeType":"YulBlock","src":"44639:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"44641:16:20","nodeType":"YulIdentifier","src":"44641:16:20"},"nativeSrc":"44641:18:20","nodeType":"YulFunctionCall","src":"44641:18:20"},"nativeSrc":"44641:18:20","nodeType":"YulExpressionStatement","src":"44641:18:20"}]},"condition":{"arguments":[{"name":"sum","nativeSrc":"44606:3:20","nodeType":"YulIdentifier","src":"44606:3:20"},{"kind":"number","nativeSrc":"44611:26:20","nodeType":"YulLiteral","src":"44611:26:20","type":"","value":"0xffffffffffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"44603:2:20","nodeType":"YulIdentifier","src":"44603:2:20"},"nativeSrc":"44603:35:20","nodeType":"YulFunctionCall","src":"44603:35:20"},"nativeSrc":"44600:61:20","nodeType":"YulIf","src":"44600:61:20"}]},"name":"checked_add_t_uint96","nativeSrc":"44455:213:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"44485:1:20","nodeType":"YulTypedName","src":"44485:1:20","type":""},{"name":"y","nativeSrc":"44488:1:20","nodeType":"YulTypedName","src":"44488:1:20","type":""}],"returnVariables":[{"name":"sum","nativeSrc":"44494:3:20","nodeType":"YulTypedName","src":"44494:3:20","type":""}],"src":"44455:213:20"},{"body":{"nativeSrc":"44718:147:20","nodeType":"YulBlock","src":"44718:147:20","statements":[{"nativeSrc":"44728:25:20","nodeType":"YulAssignment","src":"44728:25:20","value":{"arguments":[{"name":"x","nativeSrc":"44751:1:20","nodeType":"YulIdentifier","src":"44751:1:20"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"44733:17:20","nodeType":"YulIdentifier","src":"44733:17:20"},"nativeSrc":"44733:20:20","nodeType":"YulFunctionCall","src":"44733:20:20"},"variableNames":[{"name":"x","nativeSrc":"44728:1:20","nodeType":"YulIdentifier","src":"44728:1:20"}]},{"nativeSrc":"44762:25:20","nodeType":"YulAssignment","src":"44762:25:20","value":{"arguments":[{"name":"y","nativeSrc":"44785:1:20","nodeType":"YulIdentifier","src":"44785:1:20"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"44767:17:20","nodeType":"YulIdentifier","src":"44767:17:20"},"nativeSrc":"44767:20:20","nodeType":"YulFunctionCall","src":"44767:20:20"},"variableNames":[{"name":"y","nativeSrc":"44762:1:20","nodeType":"YulIdentifier","src":"44762:1:20"}]},{"nativeSrc":"44796:16:20","nodeType":"YulAssignment","src":"44796:16:20","value":{"arguments":[{"name":"x","nativeSrc":"44807:1:20","nodeType":"YulIdentifier","src":"44807:1:20"},{"name":"y","nativeSrc":"44810:1:20","nodeType":"YulIdentifier","src":"44810:1:20"}],"functionName":{"name":"add","nativeSrc":"44803:3:20","nodeType":"YulIdentifier","src":"44803:3:20"},"nativeSrc":"44803:9:20","nodeType":"YulFunctionCall","src":"44803:9:20"},"variableNames":[{"name":"sum","nativeSrc":"44796:3:20","nodeType":"YulIdentifier","src":"44796:3:20"}]},{"body":{"nativeSrc":"44836:22:20","nodeType":"YulBlock","src":"44836:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"44838:16:20","nodeType":"YulIdentifier","src":"44838:16:20"},"nativeSrc":"44838:18:20","nodeType":"YulFunctionCall","src":"44838:18:20"},"nativeSrc":"44838:18:20","nodeType":"YulExpressionStatement","src":"44838:18:20"}]},"condition":{"arguments":[{"name":"x","nativeSrc":"44828:1:20","nodeType":"YulIdentifier","src":"44828:1:20"},{"name":"sum","nativeSrc":"44831:3:20","nodeType":"YulIdentifier","src":"44831:3:20"}],"functionName":{"name":"gt","nativeSrc":"44825:2:20","nodeType":"YulIdentifier","src":"44825:2:20"},"nativeSrc":"44825:10:20","nodeType":"YulFunctionCall","src":"44825:10:20"},"nativeSrc":"44822:36:20","nodeType":"YulIf","src":"44822:36:20"}]},"name":"checked_add_t_uint256","nativeSrc":"44674:191:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"44705:1:20","nodeType":"YulTypedName","src":"44705:1:20","type":""},{"name":"y","nativeSrc":"44708:1:20","nodeType":"YulTypedName","src":"44708:1:20","type":""}],"returnVariables":[{"name":"sum","nativeSrc":"44714:3:20","nodeType":"YulTypedName","src":"44714:3:20","type":""}],"src":"44674:191:20"},{"body":{"nativeSrc":"44997:206:20","nodeType":"YulBlock","src":"44997:206:20","statements":[{"nativeSrc":"45007:26:20","nodeType":"YulAssignment","src":"45007:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"45019:9:20","nodeType":"YulIdentifier","src":"45019:9:20"},{"kind":"number","nativeSrc":"45030:2:20","nodeType":"YulLiteral","src":"45030:2:20","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"45015:3:20","nodeType":"YulIdentifier","src":"45015:3:20"},"nativeSrc":"45015:18:20","nodeType":"YulFunctionCall","src":"45015:18:20"},"variableNames":[{"name":"tail","nativeSrc":"45007:4:20","nodeType":"YulIdentifier","src":"45007:4:20"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"45087:6:20","nodeType":"YulIdentifier","src":"45087:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"45100:9:20","nodeType":"YulIdentifier","src":"45100:9:20"},{"kind":"number","nativeSrc":"45111:1:20","nodeType":"YulLiteral","src":"45111:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"45096:3:20","nodeType":"YulIdentifier","src":"45096:3:20"},"nativeSrc":"45096:17:20","nodeType":"YulFunctionCall","src":"45096:17:20"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"45043:43:20","nodeType":"YulIdentifier","src":"45043:43:20"},"nativeSrc":"45043:71:20","nodeType":"YulFunctionCall","src":"45043:71:20"},"nativeSrc":"45043:71:20","nodeType":"YulExpressionStatement","src":"45043:71:20"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"45168:6:20","nodeType":"YulIdentifier","src":"45168:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"45181:9:20","nodeType":"YulIdentifier","src":"45181:9:20"},{"kind":"number","nativeSrc":"45192:2:20","nodeType":"YulLiteral","src":"45192:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"45177:3:20","nodeType":"YulIdentifier","src":"45177:3:20"},"nativeSrc":"45177:18:20","nodeType":"YulFunctionCall","src":"45177:18:20"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"45124:43:20","nodeType":"YulIdentifier","src":"45124:43:20"},"nativeSrc":"45124:72:20","nodeType":"YulFunctionCall","src":"45124:72:20"},"nativeSrc":"45124:72:20","nodeType":"YulExpressionStatement","src":"45124:72:20"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nativeSrc":"44871:332:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"44961:9:20","nodeType":"YulTypedName","src":"44961:9:20","type":""},{"name":"value1","nativeSrc":"44973:6:20","nodeType":"YulTypedName","src":"44973:6:20","type":""},{"name":"value0","nativeSrc":"44981:6:20","nodeType":"YulTypedName","src":"44981:6:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"44992:4:20","nodeType":"YulTypedName","src":"44992:4:20","type":""}],"src":"44871:332:20"},{"body":{"nativeSrc":"45283:40:20","nodeType":"YulBlock","src":"45283:40:20","statements":[{"nativeSrc":"45294:22:20","nodeType":"YulAssignment","src":"45294:22:20","value":{"arguments":[{"name":"value","nativeSrc":"45310:5:20","nodeType":"YulIdentifier","src":"45310:5:20"}],"functionName":{"name":"mload","nativeSrc":"45304:5:20","nodeType":"YulIdentifier","src":"45304:5:20"},"nativeSrc":"45304:12:20","nodeType":"YulFunctionCall","src":"45304:12:20"},"variableNames":[{"name":"length","nativeSrc":"45294:6:20","nodeType":"YulIdentifier","src":"45294:6:20"}]}]},"name":"array_length_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"45209:114:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"45266:5:20","nodeType":"YulTypedName","src":"45266:5:20","type":""}],"returnVariables":[{"name":"length","nativeSrc":"45276:6:20","nodeType":"YulTypedName","src":"45276:6:20","type":""}],"src":"45209:114:20"},{"body":{"nativeSrc":"45440:73:20","nodeType":"YulBlock","src":"45440:73:20","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"45457:3:20","nodeType":"YulIdentifier","src":"45457:3:20"},{"name":"length","nativeSrc":"45462:6:20","nodeType":"YulIdentifier","src":"45462:6:20"}],"functionName":{"name":"mstore","nativeSrc":"45450:6:20","nodeType":"YulIdentifier","src":"45450:6:20"},"nativeSrc":"45450:19:20","nodeType":"YulFunctionCall","src":"45450:19:20"},"nativeSrc":"45450:19:20","nodeType":"YulExpressionStatement","src":"45450:19:20"},{"nativeSrc":"45478:29:20","nodeType":"YulAssignment","src":"45478:29:20","value":{"arguments":[{"name":"pos","nativeSrc":"45497:3:20","nodeType":"YulIdentifier","src":"45497:3:20"},{"kind":"number","nativeSrc":"45502:4:20","nodeType":"YulLiteral","src":"45502:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"45493:3:20","nodeType":"YulIdentifier","src":"45493:3:20"},"nativeSrc":"45493:14:20","nodeType":"YulFunctionCall","src":"45493:14:20"},"variableNames":[{"name":"updated_pos","nativeSrc":"45478:11:20","nodeType":"YulIdentifier","src":"45478:11:20"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nativeSrc":"45329:184:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"45412:3:20","nodeType":"YulTypedName","src":"45412:3:20","type":""},{"name":"length","nativeSrc":"45417:6:20","nodeType":"YulTypedName","src":"45417:6:20","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"45428:11:20","nodeType":"YulTypedName","src":"45428:11:20","type":""}],"src":"45329:184:20"},{"body":{"nativeSrc":"45591:60:20","nodeType":"YulBlock","src":"45591:60:20","statements":[{"nativeSrc":"45601:11:20","nodeType":"YulAssignment","src":"45601:11:20","value":{"name":"ptr","nativeSrc":"45609:3:20","nodeType":"YulIdentifier","src":"45609:3:20"},"variableNames":[{"name":"data","nativeSrc":"45601:4:20","nodeType":"YulIdentifier","src":"45601:4:20"}]},{"nativeSrc":"45622:22:20","nodeType":"YulAssignment","src":"45622:22:20","value":{"arguments":[{"name":"ptr","nativeSrc":"45634:3:20","nodeType":"YulIdentifier","src":"45634:3:20"},{"kind":"number","nativeSrc":"45639:4:20","nodeType":"YulLiteral","src":"45639:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"45630:3:20","nodeType":"YulIdentifier","src":"45630:3:20"},"nativeSrc":"45630:14:20","nodeType":"YulFunctionCall","src":"45630:14:20"},"variableNames":[{"name":"data","nativeSrc":"45622:4:20","nodeType":"YulIdentifier","src":"45622:4:20"}]}]},"name":"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"45519:132:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"45578:3:20","nodeType":"YulTypedName","src":"45578:3:20","type":""}],"returnVariables":[{"name":"data","nativeSrc":"45586:4:20","nodeType":"YulTypedName","src":"45586:4:20","type":""}],"src":"45519:132:20"},{"body":{"nativeSrc":"45712:53:20","nodeType":"YulBlock","src":"45712:53:20","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"45729:3:20","nodeType":"YulIdentifier","src":"45729:3:20"},{"arguments":[{"name":"value","nativeSrc":"45752:5:20","nodeType":"YulIdentifier","src":"45752:5:20"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"45734:17:20","nodeType":"YulIdentifier","src":"45734:17:20"},"nativeSrc":"45734:24:20","nodeType":"YulFunctionCall","src":"45734:24:20"}],"functionName":{"name":"mstore","nativeSrc":"45722:6:20","nodeType":"YulIdentifier","src":"45722:6:20"},"nativeSrc":"45722:37:20","nodeType":"YulFunctionCall","src":"45722:37:20"},"nativeSrc":"45722:37:20","nodeType":"YulExpressionStatement","src":"45722:37:20"}]},"name":"abi_encode_t_uint256_to_t_uint256","nativeSrc":"45657:108:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"45700:5:20","nodeType":"YulTypedName","src":"45700:5:20","type":""},{"name":"pos","nativeSrc":"45707:3:20","nodeType":"YulTypedName","src":"45707:3:20","type":""}],"src":"45657:108:20"},{"body":{"nativeSrc":"45851:99:20","nodeType":"YulBlock","src":"45851:99:20","statements":[{"expression":{"arguments":[{"name":"value0","nativeSrc":"45895:6:20","nodeType":"YulIdentifier","src":"45895:6:20"},{"name":"pos","nativeSrc":"45903:3:20","nodeType":"YulIdentifier","src":"45903:3:20"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nativeSrc":"45861:33:20","nodeType":"YulIdentifier","src":"45861:33:20"},"nativeSrc":"45861:46:20","nodeType":"YulFunctionCall","src":"45861:46:20"},"nativeSrc":"45861:46:20","nodeType":"YulExpressionStatement","src":"45861:46:20"},{"nativeSrc":"45916:28:20","nodeType":"YulAssignment","src":"45916:28:20","value":{"arguments":[{"name":"pos","nativeSrc":"45934:3:20","nodeType":"YulIdentifier","src":"45934:3:20"},{"kind":"number","nativeSrc":"45939:4:20","nodeType":"YulLiteral","src":"45939:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"45930:3:20","nodeType":"YulIdentifier","src":"45930:3:20"},"nativeSrc":"45930:14:20","nodeType":"YulFunctionCall","src":"45930:14:20"},"variableNames":[{"name":"updatedPos","nativeSrc":"45916:10:20","nodeType":"YulIdentifier","src":"45916:10:20"}]}]},"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nativeSrc":"45771:179:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nativeSrc":"45824:6:20","nodeType":"YulTypedName","src":"45824:6:20","type":""},{"name":"pos","nativeSrc":"45832:3:20","nodeType":"YulTypedName","src":"45832:3:20","type":""}],"returnVariables":[{"name":"updatedPos","nativeSrc":"45840:10:20","nodeType":"YulTypedName","src":"45840:10:20","type":""}],"src":"45771:179:20"},{"body":{"nativeSrc":"46031:38:20","nodeType":"YulBlock","src":"46031:38:20","statements":[{"nativeSrc":"46041:22:20","nodeType":"YulAssignment","src":"46041:22:20","value":{"arguments":[{"name":"ptr","nativeSrc":"46053:3:20","nodeType":"YulIdentifier","src":"46053:3:20"},{"kind":"number","nativeSrc":"46058:4:20","nodeType":"YulLiteral","src":"46058:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"46049:3:20","nodeType":"YulIdentifier","src":"46049:3:20"},"nativeSrc":"46049:14:20","nodeType":"YulFunctionCall","src":"46049:14:20"},"variableNames":[{"name":"next","nativeSrc":"46041:4:20","nodeType":"YulIdentifier","src":"46041:4:20"}]}]},"name":"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"45956:113:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"46018:3:20","nodeType":"YulTypedName","src":"46018:3:20","type":""}],"returnVariables":[{"name":"next","nativeSrc":"46026:4:20","nodeType":"YulTypedName","src":"46026:4:20","type":""}],"src":"45956:113:20"},{"body":{"nativeSrc":"46229:608:20","nodeType":"YulBlock","src":"46229:608:20","statements":[{"nativeSrc":"46239:68:20","nodeType":"YulVariableDeclaration","src":"46239:68:20","value":{"arguments":[{"name":"value","nativeSrc":"46301:5:20","nodeType":"YulIdentifier","src":"46301:5:20"}],"functionName":{"name":"array_length_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"46253:47:20","nodeType":"YulIdentifier","src":"46253:47:20"},"nativeSrc":"46253:54:20","nodeType":"YulFunctionCall","src":"46253:54:20"},"variables":[{"name":"length","nativeSrc":"46243:6:20","nodeType":"YulTypedName","src":"46243:6:20","type":""}]},{"nativeSrc":"46316:93:20","nodeType":"YulAssignment","src":"46316:93:20","value":{"arguments":[{"name":"pos","nativeSrc":"46397:3:20","nodeType":"YulIdentifier","src":"46397:3:20"},{"name":"length","nativeSrc":"46402:6:20","nodeType":"YulIdentifier","src":"46402:6:20"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nativeSrc":"46323:73:20","nodeType":"YulIdentifier","src":"46323:73:20"},"nativeSrc":"46323:86:20","nodeType":"YulFunctionCall","src":"46323:86:20"},"variableNames":[{"name":"pos","nativeSrc":"46316:3:20","nodeType":"YulIdentifier","src":"46316:3:20"}]},{"nativeSrc":"46418:71:20","nodeType":"YulVariableDeclaration","src":"46418:71:20","value":{"arguments":[{"name":"value","nativeSrc":"46483:5:20","nodeType":"YulIdentifier","src":"46483:5:20"}],"functionName":{"name":"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"46433:49:20","nodeType":"YulIdentifier","src":"46433:49:20"},"nativeSrc":"46433:56:20","nodeType":"YulFunctionCall","src":"46433:56:20"},"variables":[{"name":"baseRef","nativeSrc":"46422:7:20","nodeType":"YulTypedName","src":"46422:7:20","type":""}]},{"nativeSrc":"46498:21:20","nodeType":"YulVariableDeclaration","src":"46498:21:20","value":{"name":"baseRef","nativeSrc":"46512:7:20","nodeType":"YulIdentifier","src":"46512:7:20"},"variables":[{"name":"srcPtr","nativeSrc":"46502:6:20","nodeType":"YulTypedName","src":"46502:6:20","type":""}]},{"body":{"nativeSrc":"46588:224:20","nodeType":"YulBlock","src":"46588:224:20","statements":[{"nativeSrc":"46602:34:20","nodeType":"YulVariableDeclaration","src":"46602:34:20","value":{"arguments":[{"name":"srcPtr","nativeSrc":"46629:6:20","nodeType":"YulIdentifier","src":"46629:6:20"}],"functionName":{"name":"mload","nativeSrc":"46623:5:20","nodeType":"YulIdentifier","src":"46623:5:20"},"nativeSrc":"46623:13:20","nodeType":"YulFunctionCall","src":"46623:13:20"},"variables":[{"name":"elementValue0","nativeSrc":"46606:13:20","nodeType":"YulTypedName","src":"46606:13:20","type":""}]},{"nativeSrc":"46649:70:20","nodeType":"YulAssignment","src":"46649:70:20","value":{"arguments":[{"name":"elementValue0","nativeSrc":"46700:13:20","nodeType":"YulIdentifier","src":"46700:13:20"},{"name":"pos","nativeSrc":"46715:3:20","nodeType":"YulIdentifier","src":"46715:3:20"}],"functionName":{"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nativeSrc":"46656:43:20","nodeType":"YulIdentifier","src":"46656:43:20"},"nativeSrc":"46656:63:20","nodeType":"YulFunctionCall","src":"46656:63:20"},"variableNames":[{"name":"pos","nativeSrc":"46649:3:20","nodeType":"YulIdentifier","src":"46649:3:20"}]},{"nativeSrc":"46732:70:20","nodeType":"YulAssignment","src":"46732:70:20","value":{"arguments":[{"name":"srcPtr","nativeSrc":"46795:6:20","nodeType":"YulIdentifier","src":"46795:6:20"}],"functionName":{"name":"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"46742:52:20","nodeType":"YulIdentifier","src":"46742:52:20"},"nativeSrc":"46742:60:20","nodeType":"YulFunctionCall","src":"46742:60:20"},"variableNames":[{"name":"srcPtr","nativeSrc":"46732:6:20","nodeType":"YulIdentifier","src":"46732:6:20"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"46550:1:20","nodeType":"YulIdentifier","src":"46550:1:20"},{"name":"length","nativeSrc":"46553:6:20","nodeType":"YulIdentifier","src":"46553:6:20"}],"functionName":{"name":"lt","nativeSrc":"46547:2:20","nodeType":"YulIdentifier","src":"46547:2:20"},"nativeSrc":"46547:13:20","nodeType":"YulFunctionCall","src":"46547:13:20"},"nativeSrc":"46528:284:20","nodeType":"YulForLoop","post":{"nativeSrc":"46561:18:20","nodeType":"YulBlock","src":"46561:18:20","statements":[{"nativeSrc":"46563:14:20","nodeType":"YulAssignment","src":"46563:14:20","value":{"arguments":[{"name":"i","nativeSrc":"46572:1:20","nodeType":"YulIdentifier","src":"46572:1:20"},{"kind":"number","nativeSrc":"46575:1:20","nodeType":"YulLiteral","src":"46575:1:20","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"46568:3:20","nodeType":"YulIdentifier","src":"46568:3:20"},"nativeSrc":"46568:9:20","nodeType":"YulFunctionCall","src":"46568:9:20"},"variableNames":[{"name":"i","nativeSrc":"46563:1:20","nodeType":"YulIdentifier","src":"46563:1:20"}]}]},"pre":{"nativeSrc":"46532:14:20","nodeType":"YulBlock","src":"46532:14:20","statements":[{"nativeSrc":"46534:10:20","nodeType":"YulVariableDeclaration","src":"46534:10:20","value":{"kind":"number","nativeSrc":"46543:1:20","nodeType":"YulLiteral","src":"46543:1:20","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"46538:1:20","nodeType":"YulTypedName","src":"46538:1:20","type":""}]}]},"src":"46528:284:20"},{"nativeSrc":"46821:10:20","nodeType":"YulAssignment","src":"46821:10:20","value":{"name":"pos","nativeSrc":"46828:3:20","nodeType":"YulIdentifier","src":"46828:3:20"},"variableNames":[{"name":"end","nativeSrc":"46821:3:20","nodeType":"YulIdentifier","src":"46821:3:20"}]}]},"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nativeSrc":"46105:732:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"46208:5:20","nodeType":"YulTypedName","src":"46208:5:20","type":""},{"name":"pos","nativeSrc":"46215:3:20","nodeType":"YulTypedName","src":"46215:3:20","type":""}],"returnVariables":[{"name":"end","nativeSrc":"46224:3:20","nodeType":"YulTypedName","src":"46224:3:20","type":""}],"src":"46105:732:20"},{"body":{"nativeSrc":"47019:307:20","nodeType":"YulBlock","src":"47019:307:20","statements":[{"nativeSrc":"47029:26:20","nodeType":"YulAssignment","src":"47029:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"47041:9:20","nodeType":"YulIdentifier","src":"47041:9:20"},{"kind":"number","nativeSrc":"47052:2:20","nodeType":"YulLiteral","src":"47052:2:20","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"47037:3:20","nodeType":"YulIdentifier","src":"47037:3:20"},"nativeSrc":"47037:18:20","nodeType":"YulFunctionCall","src":"47037:18:20"},"variableNames":[{"name":"tail","nativeSrc":"47029:4:20","nodeType":"YulIdentifier","src":"47029:4:20"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"47109:6:20","nodeType":"YulIdentifier","src":"47109:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"47122:9:20","nodeType":"YulIdentifier","src":"47122:9:20"},{"kind":"number","nativeSrc":"47133:1:20","nodeType":"YulLiteral","src":"47133:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"47118:3:20","nodeType":"YulIdentifier","src":"47118:3:20"},"nativeSrc":"47118:17:20","nodeType":"YulFunctionCall","src":"47118:17:20"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"47065:43:20","nodeType":"YulIdentifier","src":"47065:43:20"},"nativeSrc":"47065:71:20","nodeType":"YulFunctionCall","src":"47065:71:20"},"nativeSrc":"47065:71:20","nodeType":"YulExpressionStatement","src":"47065:71:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"47157:9:20","nodeType":"YulIdentifier","src":"47157:9:20"},{"kind":"number","nativeSrc":"47168:2:20","nodeType":"YulLiteral","src":"47168:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"47153:3:20","nodeType":"YulIdentifier","src":"47153:3:20"},"nativeSrc":"47153:18:20","nodeType":"YulFunctionCall","src":"47153:18:20"},{"arguments":[{"name":"tail","nativeSrc":"47177:4:20","nodeType":"YulIdentifier","src":"47177:4:20"},{"name":"headStart","nativeSrc":"47183:9:20","nodeType":"YulIdentifier","src":"47183:9:20"}],"functionName":{"name":"sub","nativeSrc":"47173:3:20","nodeType":"YulIdentifier","src":"47173:3:20"},"nativeSrc":"47173:20:20","nodeType":"YulFunctionCall","src":"47173:20:20"}],"functionName":{"name":"mstore","nativeSrc":"47146:6:20","nodeType":"YulIdentifier","src":"47146:6:20"},"nativeSrc":"47146:48:20","nodeType":"YulFunctionCall","src":"47146:48:20"},"nativeSrc":"47146:48:20","nodeType":"YulExpressionStatement","src":"47146:48:20"},{"nativeSrc":"47203:116:20","nodeType":"YulAssignment","src":"47203:116:20","value":{"arguments":[{"name":"value1","nativeSrc":"47305:6:20","nodeType":"YulIdentifier","src":"47305:6:20"},{"name":"tail","nativeSrc":"47314:4:20","nodeType":"YulIdentifier","src":"47314:4:20"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nativeSrc":"47211:93:20","nodeType":"YulIdentifier","src":"47211:93:20"},"nativeSrc":"47211:108:20","nodeType":"YulFunctionCall","src":"47211:108:20"},"variableNames":[{"name":"tail","nativeSrc":"47203:4:20","nodeType":"YulIdentifier","src":"47203:4:20"}]}]},"name":"abi_encode_tuple_t_uint256_t_array$_t_uint256_$dyn_memory_ptr__to_t_uint256_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nativeSrc":"46843:483:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"46983:9:20","nodeType":"YulTypedName","src":"46983:9:20","type":""},{"name":"value1","nativeSrc":"46995:6:20","nodeType":"YulTypedName","src":"46995:6:20","type":""},{"name":"value0","nativeSrc":"47003:6:20","nodeType":"YulTypedName","src":"47003:6:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"47014:4:20","nodeType":"YulTypedName","src":"47014:4:20","type":""}],"src":"46843:483:20"},{"body":{"nativeSrc":"47478:280:20","nodeType":"YulBlock","src":"47478:280:20","statements":[{"nativeSrc":"47488:26:20","nodeType":"YulAssignment","src":"47488:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"47500:9:20","nodeType":"YulIdentifier","src":"47500:9:20"},{"kind":"number","nativeSrc":"47511:2:20","nodeType":"YulLiteral","src":"47511:2:20","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"47496:3:20","nodeType":"YulIdentifier","src":"47496:3:20"},"nativeSrc":"47496:18:20","nodeType":"YulFunctionCall","src":"47496:18:20"},"variableNames":[{"name":"tail","nativeSrc":"47488:4:20","nodeType":"YulIdentifier","src":"47488:4:20"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"47568:6:20","nodeType":"YulIdentifier","src":"47568:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"47581:9:20","nodeType":"YulIdentifier","src":"47581:9:20"},{"kind":"number","nativeSrc":"47592:1:20","nodeType":"YulLiteral","src":"47592:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"47577:3:20","nodeType":"YulIdentifier","src":"47577:3:20"},"nativeSrc":"47577:17:20","nodeType":"YulFunctionCall","src":"47577:17:20"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"47524:43:20","nodeType":"YulIdentifier","src":"47524:43:20"},"nativeSrc":"47524:71:20","nodeType":"YulFunctionCall","src":"47524:71:20"},"nativeSrc":"47524:71:20","nodeType":"YulExpressionStatement","src":"47524:71:20"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"47647:6:20","nodeType":"YulIdentifier","src":"47647:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"47660:9:20","nodeType":"YulIdentifier","src":"47660:9:20"},{"kind":"number","nativeSrc":"47671:2:20","nodeType":"YulLiteral","src":"47671:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"47656:3:20","nodeType":"YulIdentifier","src":"47656:3:20"},"nativeSrc":"47656:18:20","nodeType":"YulFunctionCall","src":"47656:18:20"}],"functionName":{"name":"abi_encode_t_uint96_to_t_uint96_fromStack","nativeSrc":"47605:41:20","nodeType":"YulIdentifier","src":"47605:41:20"},"nativeSrc":"47605:70:20","nodeType":"YulFunctionCall","src":"47605:70:20"},"nativeSrc":"47605:70:20","nodeType":"YulExpressionStatement","src":"47605:70:20"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"47723:6:20","nodeType":"YulIdentifier","src":"47723:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"47736:9:20","nodeType":"YulIdentifier","src":"47736:9:20"},{"kind":"number","nativeSrc":"47747:2:20","nodeType":"YulLiteral","src":"47747:2:20","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"47732:3:20","nodeType":"YulIdentifier","src":"47732:3:20"},"nativeSrc":"47732:18:20","nodeType":"YulFunctionCall","src":"47732:18:20"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"47685:37:20","nodeType":"YulIdentifier","src":"47685:37:20"},"nativeSrc":"47685:66:20","nodeType":"YulFunctionCall","src":"47685:66:20"},"nativeSrc":"47685:66:20","nodeType":"YulExpressionStatement","src":"47685:66:20"}]},"name":"abi_encode_tuple_t_uint256_t_uint96_t_bool__to_t_uint256_t_uint96_t_bool__fromStack_reversed","nativeSrc":"47332:426:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"47434:9:20","nodeType":"YulTypedName","src":"47434:9:20","type":""},{"name":"value2","nativeSrc":"47446:6:20","nodeType":"YulTypedName","src":"47446:6:20","type":""},{"name":"value1","nativeSrc":"47454:6:20","nodeType":"YulTypedName","src":"47454:6:20","type":""},{"name":"value0","nativeSrc":"47462:6:20","nodeType":"YulTypedName","src":"47462:6:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"47473:4:20","nodeType":"YulTypedName","src":"47473:4:20","type":""}],"src":"47332:426:20"},{"body":{"nativeSrc":"47836:32:20","nodeType":"YulBlock","src":"47836:32:20","statements":[{"nativeSrc":"47847:14:20","nodeType":"YulAssignment","src":"47847:14:20","value":{"kind":"number","nativeSrc":"47857:4:20","nodeType":"YulLiteral","src":"47857:4:20","type":"","value":"0x02"},"variableNames":[{"name":"length","nativeSrc":"47847:6:20","nodeType":"YulIdentifier","src":"47847:6:20"}]}]},"name":"array_length_t_array$_t_uint256_$2_memory_ptr","nativeSrc":"47764:104:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"47819:5:20","nodeType":"YulTypedName","src":"47819:5:20","type":""}],"returnVariables":[{"name":"length","nativeSrc":"47829:6:20","nodeType":"YulTypedName","src":"47829:6:20","type":""}],"src":"47764:104:20"},{"body":{"nativeSrc":"47983:34:20","nodeType":"YulBlock","src":"47983:34:20","statements":[{"nativeSrc":"47993:18:20","nodeType":"YulAssignment","src":"47993:18:20","value":{"name":"pos","nativeSrc":"48008:3:20","nodeType":"YulIdentifier","src":"48008:3:20"},"variableNames":[{"name":"updated_pos","nativeSrc":"47993:11:20","nodeType":"YulIdentifier","src":"47993:11:20"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_uint256_$2_memory_ptr_fromStack","nativeSrc":"47874:143:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"47955:3:20","nodeType":"YulTypedName","src":"47955:3:20","type":""},{"name":"length","nativeSrc":"47960:6:20","nodeType":"YulTypedName","src":"47960:6:20","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"47971:11:20","nodeType":"YulTypedName","src":"47971:11:20","type":""}],"src":"47874:143:20"},{"body":{"nativeSrc":"48093:28:20","nodeType":"YulBlock","src":"48093:28:20","statements":[{"nativeSrc":"48103:11:20","nodeType":"YulAssignment","src":"48103:11:20","value":{"name":"ptr","nativeSrc":"48111:3:20","nodeType":"YulIdentifier","src":"48111:3:20"},"variableNames":[{"name":"data","nativeSrc":"48103:4:20","nodeType":"YulIdentifier","src":"48103:4:20"}]}]},"name":"array_dataslot_t_array$_t_uint256_$2_memory_ptr","nativeSrc":"48023:98:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"48080:3:20","nodeType":"YulTypedName","src":"48080:3:20","type":""}],"returnVariables":[{"name":"data","nativeSrc":"48088:4:20","nodeType":"YulTypedName","src":"48088:4:20","type":""}],"src":"48023:98:20"},{"body":{"nativeSrc":"48200:38:20","nodeType":"YulBlock","src":"48200:38:20","statements":[{"nativeSrc":"48210:22:20","nodeType":"YulAssignment","src":"48210:22:20","value":{"arguments":[{"name":"ptr","nativeSrc":"48222:3:20","nodeType":"YulIdentifier","src":"48222:3:20"},{"kind":"number","nativeSrc":"48227:4:20","nodeType":"YulLiteral","src":"48227:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"48218:3:20","nodeType":"YulIdentifier","src":"48218:3:20"},"nativeSrc":"48218:14:20","nodeType":"YulFunctionCall","src":"48218:14:20"},"variableNames":[{"name":"next","nativeSrc":"48210:4:20","nodeType":"YulIdentifier","src":"48210:4:20"}]}]},"name":"array_nextElement_t_array$_t_uint256_$2_memory_ptr","nativeSrc":"48127:111:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"48187:3:20","nodeType":"YulTypedName","src":"48187:3:20","type":""}],"returnVariables":[{"name":"next","nativeSrc":"48195:4:20","nodeType":"YulTypedName","src":"48195:4:20","type":""}],"src":"48127:111:20"},{"body":{"nativeSrc":"48388:582:20","nodeType":"YulBlock","src":"48388:582:20","statements":[{"nativeSrc":"48398:66:20","nodeType":"YulVariableDeclaration","src":"48398:66:20","value":{"arguments":[{"name":"value","nativeSrc":"48458:5:20","nodeType":"YulIdentifier","src":"48458:5:20"}],"functionName":{"name":"array_length_t_array$_t_uint256_$2_memory_ptr","nativeSrc":"48412:45:20","nodeType":"YulIdentifier","src":"48412:45:20"},"nativeSrc":"48412:52:20","nodeType":"YulFunctionCall","src":"48412:52:20"},"variables":[{"name":"length","nativeSrc":"48402:6:20","nodeType":"YulTypedName","src":"48402:6:20","type":""}]},{"nativeSrc":"48473:91:20","nodeType":"YulAssignment","src":"48473:91:20","value":{"arguments":[{"name":"pos","nativeSrc":"48552:3:20","nodeType":"YulIdentifier","src":"48552:3:20"},{"name":"length","nativeSrc":"48557:6:20","nodeType":"YulIdentifier","src":"48557:6:20"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_uint256_$2_memory_ptr_fromStack","nativeSrc":"48480:71:20","nodeType":"YulIdentifier","src":"48480:71:20"},"nativeSrc":"48480:84:20","nodeType":"YulFunctionCall","src":"48480:84:20"},"variableNames":[{"name":"pos","nativeSrc":"48473:3:20","nodeType":"YulIdentifier","src":"48473:3:20"}]},{"nativeSrc":"48573:69:20","nodeType":"YulVariableDeclaration","src":"48573:69:20","value":{"arguments":[{"name":"value","nativeSrc":"48636:5:20","nodeType":"YulIdentifier","src":"48636:5:20"}],"functionName":{"name":"array_dataslot_t_array$_t_uint256_$2_memory_ptr","nativeSrc":"48588:47:20","nodeType":"YulIdentifier","src":"48588:47:20"},"nativeSrc":"48588:54:20","nodeType":"YulFunctionCall","src":"48588:54:20"},"variables":[{"name":"baseRef","nativeSrc":"48577:7:20","nodeType":"YulTypedName","src":"48577:7:20","type":""}]},{"nativeSrc":"48651:21:20","nodeType":"YulVariableDeclaration","src":"48651:21:20","value":{"name":"baseRef","nativeSrc":"48665:7:20","nodeType":"YulIdentifier","src":"48665:7:20"},"variables":[{"name":"srcPtr","nativeSrc":"48655:6:20","nodeType":"YulTypedName","src":"48655:6:20","type":""}]},{"body":{"nativeSrc":"48741:222:20","nodeType":"YulBlock","src":"48741:222:20","statements":[{"nativeSrc":"48755:34:20","nodeType":"YulVariableDeclaration","src":"48755:34:20","value":{"arguments":[{"name":"srcPtr","nativeSrc":"48782:6:20","nodeType":"YulIdentifier","src":"48782:6:20"}],"functionName":{"name":"mload","nativeSrc":"48776:5:20","nodeType":"YulIdentifier","src":"48776:5:20"},"nativeSrc":"48776:13:20","nodeType":"YulFunctionCall","src":"48776:13:20"},"variables":[{"name":"elementValue0","nativeSrc":"48759:13:20","nodeType":"YulTypedName","src":"48759:13:20","type":""}]},{"nativeSrc":"48802:70:20","nodeType":"YulAssignment","src":"48802:70:20","value":{"arguments":[{"name":"elementValue0","nativeSrc":"48853:13:20","nodeType":"YulIdentifier","src":"48853:13:20"},{"name":"pos","nativeSrc":"48868:3:20","nodeType":"YulIdentifier","src":"48868:3:20"}],"functionName":{"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nativeSrc":"48809:43:20","nodeType":"YulIdentifier","src":"48809:43:20"},"nativeSrc":"48809:63:20","nodeType":"YulFunctionCall","src":"48809:63:20"},"variableNames":[{"name":"pos","nativeSrc":"48802:3:20","nodeType":"YulIdentifier","src":"48802:3:20"}]},{"nativeSrc":"48885:68:20","nodeType":"YulAssignment","src":"48885:68:20","value":{"arguments":[{"name":"srcPtr","nativeSrc":"48946:6:20","nodeType":"YulIdentifier","src":"48946:6:20"}],"functionName":{"name":"array_nextElement_t_array$_t_uint256_$2_memory_ptr","nativeSrc":"48895:50:20","nodeType":"YulIdentifier","src":"48895:50:20"},"nativeSrc":"48895:58:20","nodeType":"YulFunctionCall","src":"48895:58:20"},"variableNames":[{"name":"srcPtr","nativeSrc":"48885:6:20","nodeType":"YulIdentifier","src":"48885:6:20"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"48703:1:20","nodeType":"YulIdentifier","src":"48703:1:20"},{"name":"length","nativeSrc":"48706:6:20","nodeType":"YulIdentifier","src":"48706:6:20"}],"functionName":{"name":"lt","nativeSrc":"48700:2:20","nodeType":"YulIdentifier","src":"48700:2:20"},"nativeSrc":"48700:13:20","nodeType":"YulFunctionCall","src":"48700:13:20"},"nativeSrc":"48681:282:20","nodeType":"YulForLoop","post":{"nativeSrc":"48714:18:20","nodeType":"YulBlock","src":"48714:18:20","statements":[{"nativeSrc":"48716:14:20","nodeType":"YulAssignment","src":"48716:14:20","value":{"arguments":[{"name":"i","nativeSrc":"48725:1:20","nodeType":"YulIdentifier","src":"48725:1:20"},{"kind":"number","nativeSrc":"48728:1:20","nodeType":"YulLiteral","src":"48728:1:20","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"48721:3:20","nodeType":"YulIdentifier","src":"48721:3:20"},"nativeSrc":"48721:9:20","nodeType":"YulFunctionCall","src":"48721:9:20"},"variableNames":[{"name":"i","nativeSrc":"48716:1:20","nodeType":"YulIdentifier","src":"48716:1:20"}]}]},"pre":{"nativeSrc":"48685:14:20","nodeType":"YulBlock","src":"48685:14:20","statements":[{"nativeSrc":"48687:10:20","nodeType":"YulVariableDeclaration","src":"48687:10:20","value":{"kind":"number","nativeSrc":"48696:1:20","nodeType":"YulLiteral","src":"48696:1:20","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"48691:1:20","nodeType":"YulTypedName","src":"48691:1:20","type":""}]}]},"src":"48681:282:20"}]},"name":"abi_encode_t_array$_t_uint256_$2_memory_ptr_to_t_array$_t_uint256_$2_memory_ptr_fromStack","nativeSrc":"48276:694:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"48375:5:20","nodeType":"YulTypedName","src":"48375:5:20","type":""},{"name":"pos","nativeSrc":"48382:3:20","nodeType":"YulTypedName","src":"48382:3:20","type":""}],"src":"48276:694:20"},{"body":{"nativeSrc":"49120:170:20","nodeType":"YulBlock","src":"49120:170:20","statements":[{"nativeSrc":"49130:26:20","nodeType":"YulAssignment","src":"49130:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"49142:9:20","nodeType":"YulIdentifier","src":"49142:9:20"},{"kind":"number","nativeSrc":"49153:2:20","nodeType":"YulLiteral","src":"49153:2:20","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"49138:3:20","nodeType":"YulIdentifier","src":"49138:3:20"},"nativeSrc":"49138:18:20","nodeType":"YulFunctionCall","src":"49138:18:20"},"variableNames":[{"name":"tail","nativeSrc":"49130:4:20","nodeType":"YulIdentifier","src":"49130:4:20"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"49256:6:20","nodeType":"YulIdentifier","src":"49256:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"49269:9:20","nodeType":"YulIdentifier","src":"49269:9:20"},{"kind":"number","nativeSrc":"49280:1:20","nodeType":"YulLiteral","src":"49280:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"49265:3:20","nodeType":"YulIdentifier","src":"49265:3:20"},"nativeSrc":"49265:17:20","nodeType":"YulFunctionCall","src":"49265:17:20"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$2_memory_ptr_to_t_array$_t_uint256_$2_memory_ptr_fromStack","nativeSrc":"49166:89:20","nodeType":"YulIdentifier","src":"49166:89:20"},"nativeSrc":"49166:117:20","nodeType":"YulFunctionCall","src":"49166:117:20"},"nativeSrc":"49166:117:20","nodeType":"YulExpressionStatement","src":"49166:117:20"}]},"name":"abi_encode_tuple_t_array$_t_uint256_$2_memory_ptr__to_t_array$_t_uint256_$2_memory_ptr__fromStack_reversed","nativeSrc":"48976:314:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"49092:9:20","nodeType":"YulTypedName","src":"49092:9:20","type":""},{"name":"value0","nativeSrc":"49104:6:20","nodeType":"YulTypedName","src":"49104:6:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"49115:4:20","nodeType":"YulTypedName","src":"49115:4:20","type":""}],"src":"48976:314:20"},{"body":{"nativeSrc":"49359:80:20","nodeType":"YulBlock","src":"49359:80:20","statements":[{"nativeSrc":"49369:22:20","nodeType":"YulAssignment","src":"49369:22:20","value":{"arguments":[{"name":"offset","nativeSrc":"49384:6:20","nodeType":"YulIdentifier","src":"49384:6:20"}],"functionName":{"name":"mload","nativeSrc":"49378:5:20","nodeType":"YulIdentifier","src":"49378:5:20"},"nativeSrc":"49378:13:20","nodeType":"YulFunctionCall","src":"49378:13:20"},"variableNames":[{"name":"value","nativeSrc":"49369:5:20","nodeType":"YulIdentifier","src":"49369:5:20"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"49427:5:20","nodeType":"YulIdentifier","src":"49427:5:20"}],"functionName":{"name":"validator_revert_t_uint256","nativeSrc":"49400:26:20","nodeType":"YulIdentifier","src":"49400:26:20"},"nativeSrc":"49400:33:20","nodeType":"YulFunctionCall","src":"49400:33:20"},"nativeSrc":"49400:33:20","nodeType":"YulExpressionStatement","src":"49400:33:20"}]},"name":"abi_decode_t_uint256_fromMemory","nativeSrc":"49296:143:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"49337:6:20","nodeType":"YulTypedName","src":"49337:6:20","type":""},{"name":"end","nativeSrc":"49345:3:20","nodeType":"YulTypedName","src":"49345:3:20","type":""}],"returnVariables":[{"name":"value","nativeSrc":"49353:5:20","nodeType":"YulTypedName","src":"49353:5:20","type":""}],"src":"49296:143:20"},{"body":{"nativeSrc":"49522:274:20","nodeType":"YulBlock","src":"49522:274:20","statements":[{"body":{"nativeSrc":"49568:83:20","nodeType":"YulBlock","src":"49568:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"49570:77:20","nodeType":"YulIdentifier","src":"49570:77:20"},"nativeSrc":"49570:79:20","nodeType":"YulFunctionCall","src":"49570:79:20"},"nativeSrc":"49570:79:20","nodeType":"YulExpressionStatement","src":"49570:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"49543:7:20","nodeType":"YulIdentifier","src":"49543:7:20"},{"name":"headStart","nativeSrc":"49552:9:20","nodeType":"YulIdentifier","src":"49552:9:20"}],"functionName":{"name":"sub","nativeSrc":"49539:3:20","nodeType":"YulIdentifier","src":"49539:3:20"},"nativeSrc":"49539:23:20","nodeType":"YulFunctionCall","src":"49539:23:20"},{"kind":"number","nativeSrc":"49564:2:20","nodeType":"YulLiteral","src":"49564:2:20","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"49535:3:20","nodeType":"YulIdentifier","src":"49535:3:20"},"nativeSrc":"49535:32:20","nodeType":"YulFunctionCall","src":"49535:32:20"},"nativeSrc":"49532:119:20","nodeType":"YulIf","src":"49532:119:20"},{"nativeSrc":"49661:128:20","nodeType":"YulBlock","src":"49661:128:20","statements":[{"nativeSrc":"49676:15:20","nodeType":"YulVariableDeclaration","src":"49676:15:20","value":{"kind":"number","nativeSrc":"49690:1:20","nodeType":"YulLiteral","src":"49690:1:20","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"49680:6:20","nodeType":"YulTypedName","src":"49680:6:20","type":""}]},{"nativeSrc":"49705:74:20","nodeType":"YulAssignment","src":"49705:74:20","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"49751:9:20","nodeType":"YulIdentifier","src":"49751:9:20"},{"name":"offset","nativeSrc":"49762:6:20","nodeType":"YulIdentifier","src":"49762:6:20"}],"functionName":{"name":"add","nativeSrc":"49747:3:20","nodeType":"YulIdentifier","src":"49747:3:20"},"nativeSrc":"49747:22:20","nodeType":"YulFunctionCall","src":"49747:22:20"},{"name":"dataEnd","nativeSrc":"49771:7:20","nodeType":"YulIdentifier","src":"49771:7:20"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nativeSrc":"49715:31:20","nodeType":"YulIdentifier","src":"49715:31:20"},"nativeSrc":"49715:64:20","nodeType":"YulFunctionCall","src":"49715:64:20"},"variableNames":[{"name":"value0","nativeSrc":"49705:6:20","nodeType":"YulIdentifier","src":"49705:6:20"}]}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nativeSrc":"49445:351:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"49492:9:20","nodeType":"YulTypedName","src":"49492:9:20","type":""},{"name":"dataEnd","nativeSrc":"49503:7:20","nodeType":"YulTypedName","src":"49503:7:20","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"49515:6:20","nodeType":"YulTypedName","src":"49515:6:20","type":""}],"src":"49445:351:20"},{"body":{"nativeSrc":"49928:206:20","nodeType":"YulBlock","src":"49928:206:20","statements":[{"nativeSrc":"49938:26:20","nodeType":"YulAssignment","src":"49938:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"49950:9:20","nodeType":"YulIdentifier","src":"49950:9:20"},{"kind":"number","nativeSrc":"49961:2:20","nodeType":"YulLiteral","src":"49961:2:20","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"49946:3:20","nodeType":"YulIdentifier","src":"49946:3:20"},"nativeSrc":"49946:18:20","nodeType":"YulFunctionCall","src":"49946:18:20"},"variableNames":[{"name":"tail","nativeSrc":"49938:4:20","nodeType":"YulIdentifier","src":"49938:4:20"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"50018:6:20","nodeType":"YulIdentifier","src":"50018:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"50031:9:20","nodeType":"YulIdentifier","src":"50031:9:20"},{"kind":"number","nativeSrc":"50042:1:20","nodeType":"YulLiteral","src":"50042:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"50027:3:20","nodeType":"YulIdentifier","src":"50027:3:20"},"nativeSrc":"50027:17:20","nodeType":"YulFunctionCall","src":"50027:17:20"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"49974:43:20","nodeType":"YulIdentifier","src":"49974:43:20"},"nativeSrc":"49974:71:20","nodeType":"YulFunctionCall","src":"49974:71:20"},"nativeSrc":"49974:71:20","nodeType":"YulExpressionStatement","src":"49974:71:20"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"50099:6:20","nodeType":"YulIdentifier","src":"50099:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"50112:9:20","nodeType":"YulIdentifier","src":"50112:9:20"},{"kind":"number","nativeSrc":"50123:2:20","nodeType":"YulLiteral","src":"50123:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"50108:3:20","nodeType":"YulIdentifier","src":"50108:3:20"},"nativeSrc":"50108:18:20","nodeType":"YulFunctionCall","src":"50108:18:20"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"50055:43:20","nodeType":"YulIdentifier","src":"50055:43:20"},"nativeSrc":"50055:72:20","nodeType":"YulFunctionCall","src":"50055:72:20"},"nativeSrc":"50055:72:20","nodeType":"YulExpressionStatement","src":"50055:72:20"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nativeSrc":"49802:332:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"49892:9:20","nodeType":"YulTypedName","src":"49892:9:20","type":""},{"name":"value1","nativeSrc":"49904:6:20","nodeType":"YulTypedName","src":"49904:6:20","type":""},{"name":"value0","nativeSrc":"49912:6:20","nodeType":"YulTypedName","src":"49912:6:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"49923:4:20","nodeType":"YulTypedName","src":"49923:4:20","type":""}],"src":"49802:332:20"},{"body":{"nativeSrc":"50246:66:20","nodeType":"YulBlock","src":"50246:66:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"50268:6:20","nodeType":"YulIdentifier","src":"50268:6:20"},{"kind":"number","nativeSrc":"50276:1:20","nodeType":"YulLiteral","src":"50276:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"50264:3:20","nodeType":"YulIdentifier","src":"50264:3:20"},"nativeSrc":"50264:14:20","nodeType":"YulFunctionCall","src":"50264:14:20"},{"hexValue":"4f6e6c792063616c6c61626c65206279206f776e6572","kind":"string","nativeSrc":"50280:24:20","nodeType":"YulLiteral","src":"50280:24:20","type":"","value":"Only callable by owner"}],"functionName":{"name":"mstore","nativeSrc":"50257:6:20","nodeType":"YulIdentifier","src":"50257:6:20"},"nativeSrc":"50257:48:20","nodeType":"YulFunctionCall","src":"50257:48:20"},"nativeSrc":"50257:48:20","nodeType":"YulExpressionStatement","src":"50257:48:20"}]},"name":"store_literal_in_memory_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3","nativeSrc":"50140:172:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"50238:6:20","nodeType":"YulTypedName","src":"50238:6:20","type":""}],"src":"50140:172:20"},{"body":{"nativeSrc":"50464:220:20","nodeType":"YulBlock","src":"50464:220:20","statements":[{"nativeSrc":"50474:74:20","nodeType":"YulAssignment","src":"50474:74:20","value":{"arguments":[{"name":"pos","nativeSrc":"50540:3:20","nodeType":"YulIdentifier","src":"50540:3:20"},{"kind":"number","nativeSrc":"50545:2:20","nodeType":"YulLiteral","src":"50545:2:20","type":"","value":"22"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"50481:58:20","nodeType":"YulIdentifier","src":"50481:58:20"},"nativeSrc":"50481:67:20","nodeType":"YulFunctionCall","src":"50481:67:20"},"variableNames":[{"name":"pos","nativeSrc":"50474:3:20","nodeType":"YulIdentifier","src":"50474:3:20"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"50646:3:20","nodeType":"YulIdentifier","src":"50646:3:20"}],"functionName":{"name":"store_literal_in_memory_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3","nativeSrc":"50557:88:20","nodeType":"YulIdentifier","src":"50557:88:20"},"nativeSrc":"50557:93:20","nodeType":"YulFunctionCall","src":"50557:93:20"},"nativeSrc":"50557:93:20","nodeType":"YulExpressionStatement","src":"50557:93:20"},{"nativeSrc":"50659:19:20","nodeType":"YulAssignment","src":"50659:19:20","value":{"arguments":[{"name":"pos","nativeSrc":"50670:3:20","nodeType":"YulIdentifier","src":"50670:3:20"},{"kind":"number","nativeSrc":"50675:2:20","nodeType":"YulLiteral","src":"50675:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"50666:3:20","nodeType":"YulIdentifier","src":"50666:3:20"},"nativeSrc":"50666:12:20","nodeType":"YulFunctionCall","src":"50666:12:20"},"variableNames":[{"name":"end","nativeSrc":"50659:3:20","nodeType":"YulIdentifier","src":"50659:3:20"}]}]},"name":"abi_encode_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3_to_t_string_memory_ptr_fromStack","nativeSrc":"50318:366:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"50452:3:20","nodeType":"YulTypedName","src":"50452:3:20","type":""}],"returnVariables":[{"name":"end","nativeSrc":"50460:3:20","nodeType":"YulTypedName","src":"50460:3:20","type":""}],"src":"50318:366:20"},{"body":{"nativeSrc":"50861:248:20","nodeType":"YulBlock","src":"50861:248:20","statements":[{"nativeSrc":"50871:26:20","nodeType":"YulAssignment","src":"50871:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"50883:9:20","nodeType":"YulIdentifier","src":"50883:9:20"},{"kind":"number","nativeSrc":"50894:2:20","nodeType":"YulLiteral","src":"50894:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"50879:3:20","nodeType":"YulIdentifier","src":"50879:3:20"},"nativeSrc":"50879:18:20","nodeType":"YulFunctionCall","src":"50879:18:20"},"variableNames":[{"name":"tail","nativeSrc":"50871:4:20","nodeType":"YulIdentifier","src":"50871:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"50918:9:20","nodeType":"YulIdentifier","src":"50918:9:20"},{"kind":"number","nativeSrc":"50929:1:20","nodeType":"YulLiteral","src":"50929:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"50914:3:20","nodeType":"YulIdentifier","src":"50914:3:20"},"nativeSrc":"50914:17:20","nodeType":"YulFunctionCall","src":"50914:17:20"},{"arguments":[{"name":"tail","nativeSrc":"50937:4:20","nodeType":"YulIdentifier","src":"50937:4:20"},{"name":"headStart","nativeSrc":"50943:9:20","nodeType":"YulIdentifier","src":"50943:9:20"}],"functionName":{"name":"sub","nativeSrc":"50933:3:20","nodeType":"YulIdentifier","src":"50933:3:20"},"nativeSrc":"50933:20:20","nodeType":"YulFunctionCall","src":"50933:20:20"}],"functionName":{"name":"mstore","nativeSrc":"50907:6:20","nodeType":"YulIdentifier","src":"50907:6:20"},"nativeSrc":"50907:47:20","nodeType":"YulFunctionCall","src":"50907:47:20"},"nativeSrc":"50907:47:20","nodeType":"YulExpressionStatement","src":"50907:47:20"},{"nativeSrc":"50963:139:20","nodeType":"YulAssignment","src":"50963:139:20","value":{"arguments":[{"name":"tail","nativeSrc":"51097:4:20","nodeType":"YulIdentifier","src":"51097:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3_to_t_string_memory_ptr_fromStack","nativeSrc":"50971:124:20","nodeType":"YulIdentifier","src":"50971:124:20"},"nativeSrc":"50971:131:20","nodeType":"YulFunctionCall","src":"50971:131:20"},"variableNames":[{"name":"tail","nativeSrc":"50963:4:20","nodeType":"YulIdentifier","src":"50963:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"50690:419:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"50841:9:20","nodeType":"YulTypedName","src":"50841:9:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"50856:4:20","nodeType":"YulTypedName","src":"50856:4:20","type":""}],"src":"50690:419:20"},{"body":{"nativeSrc":"51293:367:20","nodeType":"YulBlock","src":"51293:367:20","statements":[{"nativeSrc":"51303:27:20","nodeType":"YulAssignment","src":"51303:27:20","value":{"arguments":[{"name":"headStart","nativeSrc":"51315:9:20","nodeType":"YulIdentifier","src":"51315:9:20"},{"kind":"number","nativeSrc":"51326:3:20","nodeType":"YulLiteral","src":"51326:3:20","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"51311:3:20","nodeType":"YulIdentifier","src":"51311:3:20"},"nativeSrc":"51311:19:20","nodeType":"YulFunctionCall","src":"51311:19:20"},"variableNames":[{"name":"tail","nativeSrc":"51303:4:20","nodeType":"YulIdentifier","src":"51303:4:20"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"51384:6:20","nodeType":"YulIdentifier","src":"51384:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"51397:9:20","nodeType":"YulIdentifier","src":"51397:9:20"},{"kind":"number","nativeSrc":"51408:1:20","nodeType":"YulLiteral","src":"51408:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"51393:3:20","nodeType":"YulIdentifier","src":"51393:3:20"},"nativeSrc":"51393:17:20","nodeType":"YulFunctionCall","src":"51393:17:20"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"51340:43:20","nodeType":"YulIdentifier","src":"51340:43:20"},"nativeSrc":"51340:71:20","nodeType":"YulFunctionCall","src":"51340:71:20"},"nativeSrc":"51340:71:20","nodeType":"YulExpressionStatement","src":"51340:71:20"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"51465:6:20","nodeType":"YulIdentifier","src":"51465:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"51478:9:20","nodeType":"YulIdentifier","src":"51478:9:20"},{"kind":"number","nativeSrc":"51489:2:20","nodeType":"YulLiteral","src":"51489:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"51474:3:20","nodeType":"YulIdentifier","src":"51474:3:20"},"nativeSrc":"51474:18:20","nodeType":"YulFunctionCall","src":"51474:18:20"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"51421:43:20","nodeType":"YulIdentifier","src":"51421:43:20"},"nativeSrc":"51421:72:20","nodeType":"YulFunctionCall","src":"51421:72:20"},"nativeSrc":"51421:72:20","nodeType":"YulExpressionStatement","src":"51421:72:20"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"51545:6:20","nodeType":"YulIdentifier","src":"51545:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"51558:9:20","nodeType":"YulIdentifier","src":"51558:9:20"},{"kind":"number","nativeSrc":"51569:2:20","nodeType":"YulLiteral","src":"51569:2:20","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"51554:3:20","nodeType":"YulIdentifier","src":"51554:3:20"},"nativeSrc":"51554:18:20","nodeType":"YulFunctionCall","src":"51554:18:20"}],"functionName":{"name":"abi_encode_t_uint64_to_t_uint64_fromStack","nativeSrc":"51503:41:20","nodeType":"YulIdentifier","src":"51503:41:20"},"nativeSrc":"51503:70:20","nodeType":"YulFunctionCall","src":"51503:70:20"},"nativeSrc":"51503:70:20","nodeType":"YulExpressionStatement","src":"51503:70:20"},{"expression":{"arguments":[{"name":"value3","nativeSrc":"51625:6:20","nodeType":"YulIdentifier","src":"51625:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"51638:9:20","nodeType":"YulIdentifier","src":"51638:9:20"},{"kind":"number","nativeSrc":"51649:2:20","nodeType":"YulLiteral","src":"51649:2:20","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"51634:3:20","nodeType":"YulIdentifier","src":"51634:3:20"},"nativeSrc":"51634:18:20","nodeType":"YulFunctionCall","src":"51634:18:20"}],"functionName":{"name":"abi_encode_t_uint64_to_t_uint64_fromStack","nativeSrc":"51583:41:20","nodeType":"YulIdentifier","src":"51583:41:20"},"nativeSrc":"51583:70:20","nodeType":"YulFunctionCall","src":"51583:70:20"},"nativeSrc":"51583:70:20","nodeType":"YulExpressionStatement","src":"51583:70:20"}]},"name":"abi_encode_tuple_t_bytes32_t_address_t_uint64_t_uint64__to_t_bytes32_t_address_t_uint64_t_uint64__fromStack_reversed","nativeSrc":"51115:545:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"51241:9:20","nodeType":"YulTypedName","src":"51241:9:20","type":""},{"name":"value3","nativeSrc":"51253:6:20","nodeType":"YulTypedName","src":"51253:6:20","type":""},{"name":"value2","nativeSrc":"51261:6:20","nodeType":"YulTypedName","src":"51261:6:20","type":""},{"name":"value1","nativeSrc":"51269:6:20","nodeType":"YulTypedName","src":"51269:6:20","type":""},{"name":"value0","nativeSrc":"51277:6:20","nodeType":"YulTypedName","src":"51277:6:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"51288:4:20","nodeType":"YulTypedName","src":"51288:4:20","type":""}],"src":"51115:545:20"},{"body":{"nativeSrc":"51792:206:20","nodeType":"YulBlock","src":"51792:206:20","statements":[{"nativeSrc":"51802:26:20","nodeType":"YulAssignment","src":"51802:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"51814:9:20","nodeType":"YulIdentifier","src":"51814:9:20"},{"kind":"number","nativeSrc":"51825:2:20","nodeType":"YulLiteral","src":"51825:2:20","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"51810:3:20","nodeType":"YulIdentifier","src":"51810:3:20"},"nativeSrc":"51810:18:20","nodeType":"YulFunctionCall","src":"51810:18:20"},"variableNames":[{"name":"tail","nativeSrc":"51802:4:20","nodeType":"YulIdentifier","src":"51802:4:20"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"51882:6:20","nodeType":"YulIdentifier","src":"51882:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"51895:9:20","nodeType":"YulIdentifier","src":"51895:9:20"},{"kind":"number","nativeSrc":"51906:1:20","nodeType":"YulLiteral","src":"51906:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"51891:3:20","nodeType":"YulIdentifier","src":"51891:3:20"},"nativeSrc":"51891:17:20","nodeType":"YulFunctionCall","src":"51891:17:20"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"51838:43:20","nodeType":"YulIdentifier","src":"51838:43:20"},"nativeSrc":"51838:71:20","nodeType":"YulFunctionCall","src":"51838:71:20"},"nativeSrc":"51838:71:20","nodeType":"YulExpressionStatement","src":"51838:71:20"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"51963:6:20","nodeType":"YulIdentifier","src":"51963:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"51976:9:20","nodeType":"YulIdentifier","src":"51976:9:20"},{"kind":"number","nativeSrc":"51987:2:20","nodeType":"YulLiteral","src":"51987:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"51972:3:20","nodeType":"YulIdentifier","src":"51972:3:20"},"nativeSrc":"51972:18:20","nodeType":"YulFunctionCall","src":"51972:18:20"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"51919:43:20","nodeType":"YulIdentifier","src":"51919:43:20"},"nativeSrc":"51919:72:20","nodeType":"YulFunctionCall","src":"51919:72:20"},"nativeSrc":"51919:72:20","nodeType":"YulExpressionStatement","src":"51919:72:20"}]},"name":"abi_encode_tuple_t_bytes32_t_uint256__to_t_bytes32_t_uint256__fromStack_reversed","nativeSrc":"51666:332:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"51756:9:20","nodeType":"YulTypedName","src":"51756:9:20","type":""},{"name":"value1","nativeSrc":"51768:6:20","nodeType":"YulTypedName","src":"51768:6:20","type":""},{"name":"value0","nativeSrc":"51776:6:20","nodeType":"YulTypedName","src":"51776:6:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"51787:4:20","nodeType":"YulTypedName","src":"51787:4:20","type":""}],"src":"51666:332:20"},{"body":{"nativeSrc":"52234:529:20","nodeType":"YulBlock","src":"52234:529:20","statements":[{"nativeSrc":"52244:27:20","nodeType":"YulAssignment","src":"52244:27:20","value":{"arguments":[{"name":"headStart","nativeSrc":"52256:9:20","nodeType":"YulIdentifier","src":"52256:9:20"},{"kind":"number","nativeSrc":"52267:3:20","nodeType":"YulLiteral","src":"52267:3:20","type":"","value":"192"}],"functionName":{"name":"add","nativeSrc":"52252:3:20","nodeType":"YulIdentifier","src":"52252:3:20"},"nativeSrc":"52252:19:20","nodeType":"YulFunctionCall","src":"52252:19:20"},"variableNames":[{"name":"tail","nativeSrc":"52244:4:20","nodeType":"YulIdentifier","src":"52244:4:20"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"52325:6:20","nodeType":"YulIdentifier","src":"52325:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"52338:9:20","nodeType":"YulIdentifier","src":"52338:9:20"},{"kind":"number","nativeSrc":"52349:1:20","nodeType":"YulLiteral","src":"52349:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"52334:3:20","nodeType":"YulIdentifier","src":"52334:3:20"},"nativeSrc":"52334:17:20","nodeType":"YulFunctionCall","src":"52334:17:20"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"52281:43:20","nodeType":"YulIdentifier","src":"52281:43:20"},"nativeSrc":"52281:71:20","nodeType":"YulFunctionCall","src":"52281:71:20"},"nativeSrc":"52281:71:20","nodeType":"YulExpressionStatement","src":"52281:71:20"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"52404:6:20","nodeType":"YulIdentifier","src":"52404:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"52417:9:20","nodeType":"YulIdentifier","src":"52417:9:20"},{"kind":"number","nativeSrc":"52428:2:20","nodeType":"YulLiteral","src":"52428:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"52413:3:20","nodeType":"YulIdentifier","src":"52413:3:20"},"nativeSrc":"52413:18:20","nodeType":"YulFunctionCall","src":"52413:18:20"}],"functionName":{"name":"abi_encode_t_uint64_to_t_uint64_fromStack","nativeSrc":"52362:41:20","nodeType":"YulIdentifier","src":"52362:41:20"},"nativeSrc":"52362:70:20","nodeType":"YulFunctionCall","src":"52362:70:20"},"nativeSrc":"52362:70:20","nodeType":"YulExpressionStatement","src":"52362:70:20"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"52484:6:20","nodeType":"YulIdentifier","src":"52484:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"52497:9:20","nodeType":"YulIdentifier","src":"52497:9:20"},{"kind":"number","nativeSrc":"52508:2:20","nodeType":"YulLiteral","src":"52508:2:20","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"52493:3:20","nodeType":"YulIdentifier","src":"52493:3:20"},"nativeSrc":"52493:18:20","nodeType":"YulFunctionCall","src":"52493:18:20"}],"functionName":{"name":"abi_encode_t_uint64_to_t_uint64_fromStack","nativeSrc":"52442:41:20","nodeType":"YulIdentifier","src":"52442:41:20"},"nativeSrc":"52442:70:20","nodeType":"YulFunctionCall","src":"52442:70:20"},"nativeSrc":"52442:70:20","nodeType":"YulExpressionStatement","src":"52442:70:20"},{"expression":{"arguments":[{"name":"value3","nativeSrc":"52564:6:20","nodeType":"YulIdentifier","src":"52564:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"52577:9:20","nodeType":"YulIdentifier","src":"52577:9:20"},{"kind":"number","nativeSrc":"52588:2:20","nodeType":"YulLiteral","src":"52588:2:20","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"52573:3:20","nodeType":"YulIdentifier","src":"52573:3:20"},"nativeSrc":"52573:18:20","nodeType":"YulFunctionCall","src":"52573:18:20"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nativeSrc":"52522:41:20","nodeType":"YulIdentifier","src":"52522:41:20"},"nativeSrc":"52522:70:20","nodeType":"YulFunctionCall","src":"52522:70:20"},"nativeSrc":"52522:70:20","nodeType":"YulExpressionStatement","src":"52522:70:20"},{"expression":{"arguments":[{"name":"value4","nativeSrc":"52644:6:20","nodeType":"YulIdentifier","src":"52644:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"52657:9:20","nodeType":"YulIdentifier","src":"52657:9:20"},{"kind":"number","nativeSrc":"52668:3:20","nodeType":"YulLiteral","src":"52668:3:20","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"52653:3:20","nodeType":"YulIdentifier","src":"52653:3:20"},"nativeSrc":"52653:19:20","nodeType":"YulFunctionCall","src":"52653:19:20"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nativeSrc":"52602:41:20","nodeType":"YulIdentifier","src":"52602:41:20"},"nativeSrc":"52602:71:20","nodeType":"YulFunctionCall","src":"52602:71:20"},"nativeSrc":"52602:71:20","nodeType":"YulExpressionStatement","src":"52602:71:20"},{"expression":{"arguments":[{"name":"value5","nativeSrc":"52727:6:20","nodeType":"YulIdentifier","src":"52727:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"52740:9:20","nodeType":"YulIdentifier","src":"52740:9:20"},{"kind":"number","nativeSrc":"52751:3:20","nodeType":"YulLiteral","src":"52751:3:20","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"52736:3:20","nodeType":"YulIdentifier","src":"52736:3:20"},"nativeSrc":"52736:19:20","nodeType":"YulFunctionCall","src":"52736:19:20"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"52683:43:20","nodeType":"YulIdentifier","src":"52683:43:20"},"nativeSrc":"52683:73:20","nodeType":"YulFunctionCall","src":"52683:73:20"},"nativeSrc":"52683:73:20","nodeType":"YulExpressionStatement","src":"52683:73:20"}]},"name":"abi_encode_tuple_t_uint256_t_uint64_t_uint64_t_uint32_t_uint32_t_address__to_t_uint256_t_uint64_t_uint64_t_uint32_t_uint32_t_address__fromStack_reversed","nativeSrc":"52004:759:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"52166:9:20","nodeType":"YulTypedName","src":"52166:9:20","type":""},{"name":"value5","nativeSrc":"52178:6:20","nodeType":"YulTypedName","src":"52178:6:20","type":""},{"name":"value4","nativeSrc":"52186:6:20","nodeType":"YulTypedName","src":"52186:6:20","type":""},{"name":"value3","nativeSrc":"52194:6:20","nodeType":"YulTypedName","src":"52194:6:20","type":""},{"name":"value2","nativeSrc":"52202:6:20","nodeType":"YulTypedName","src":"52202:6:20","type":""},{"name":"value1","nativeSrc":"52210:6:20","nodeType":"YulTypedName","src":"52210:6:20","type":""},{"name":"value0","nativeSrc":"52218:6:20","nodeType":"YulTypedName","src":"52218:6:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"52229:4:20","nodeType":"YulTypedName","src":"52229:4:20","type":""}],"src":"52004:759:20"},{"body":{"nativeSrc":"52828:81:20","nodeType":"YulBlock","src":"52828:81:20","statements":[{"nativeSrc":"52838:65:20","nodeType":"YulAssignment","src":"52838:65:20","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nativeSrc":"52895:5:20","nodeType":"YulIdentifier","src":"52895:5:20"}],"functionName":{"name":"cleanup_t_uint64","nativeSrc":"52878:16:20","nodeType":"YulIdentifier","src":"52878:16:20"},"nativeSrc":"52878:23:20","nodeType":"YulFunctionCall","src":"52878:23:20"}],"functionName":{"name":"identity","nativeSrc":"52869:8:20","nodeType":"YulIdentifier","src":"52869:8:20"},"nativeSrc":"52869:33:20","nodeType":"YulFunctionCall","src":"52869:33:20"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"52851:17:20","nodeType":"YulIdentifier","src":"52851:17:20"},"nativeSrc":"52851:52:20","nodeType":"YulFunctionCall","src":"52851:52:20"},"variableNames":[{"name":"converted","nativeSrc":"52838:9:20","nodeType":"YulIdentifier","src":"52838:9:20"}]}]},"name":"convert_t_uint64_to_t_uint256","nativeSrc":"52769:140:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"52808:5:20","nodeType":"YulTypedName","src":"52808:5:20","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"52818:9:20","nodeType":"YulTypedName","src":"52818:9:20","type":""}],"src":"52769:140:20"},{"body":{"nativeSrc":"52979:65:20","nodeType":"YulBlock","src":"52979:65:20","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"52996:3:20","nodeType":"YulIdentifier","src":"52996:3:20"},{"arguments":[{"name":"value","nativeSrc":"53031:5:20","nodeType":"YulIdentifier","src":"53031:5:20"}],"functionName":{"name":"convert_t_uint64_to_t_uint256","nativeSrc":"53001:29:20","nodeType":"YulIdentifier","src":"53001:29:20"},"nativeSrc":"53001:36:20","nodeType":"YulFunctionCall","src":"53001:36:20"}],"functionName":{"name":"mstore","nativeSrc":"52989:6:20","nodeType":"YulIdentifier","src":"52989:6:20"},"nativeSrc":"52989:49:20","nodeType":"YulFunctionCall","src":"52989:49:20"},"nativeSrc":"52989:49:20","nodeType":"YulExpressionStatement","src":"52989:49:20"}]},"name":"abi_encode_t_uint64_to_t_uint256_fromStack","nativeSrc":"52915:129:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"52967:5:20","nodeType":"YulTypedName","src":"52967:5:20","type":""},{"name":"pos","nativeSrc":"52974:3:20","nodeType":"YulTypedName","src":"52974:3:20","type":""}],"src":"52915:129:20"},{"body":{"nativeSrc":"53147:123:20","nodeType":"YulBlock","src":"53147:123:20","statements":[{"nativeSrc":"53157:26:20","nodeType":"YulAssignment","src":"53157:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"53169:9:20","nodeType":"YulIdentifier","src":"53169:9:20"},{"kind":"number","nativeSrc":"53180:2:20","nodeType":"YulLiteral","src":"53180:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"53165:3:20","nodeType":"YulIdentifier","src":"53165:3:20"},"nativeSrc":"53165:18:20","nodeType":"YulFunctionCall","src":"53165:18:20"},"variableNames":[{"name":"tail","nativeSrc":"53157:4:20","nodeType":"YulIdentifier","src":"53157:4:20"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"53236:6:20","nodeType":"YulIdentifier","src":"53236:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"53249:9:20","nodeType":"YulIdentifier","src":"53249:9:20"},{"kind":"number","nativeSrc":"53260:1:20","nodeType":"YulLiteral","src":"53260:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"53245:3:20","nodeType":"YulIdentifier","src":"53245:3:20"},"nativeSrc":"53245:17:20","nodeType":"YulFunctionCall","src":"53245:17:20"}],"functionName":{"name":"abi_encode_t_uint64_to_t_uint256_fromStack","nativeSrc":"53193:42:20","nodeType":"YulIdentifier","src":"53193:42:20"},"nativeSrc":"53193:70:20","nodeType":"YulFunctionCall","src":"53193:70:20"},"nativeSrc":"53193:70:20","nodeType":"YulExpressionStatement","src":"53193:70:20"}]},"name":"abi_encode_tuple_t_uint64__to_t_uint256__fromStack_reversed","nativeSrc":"53050:220:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"53119:9:20","nodeType":"YulTypedName","src":"53119:9:20","type":""},{"name":"value0","nativeSrc":"53131:6:20","nodeType":"YulTypedName","src":"53131:6:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"53142:4:20","nodeType":"YulTypedName","src":"53142:4:20","type":""}],"src":"53050:220:20"},{"body":{"nativeSrc":"53339:80:20","nodeType":"YulBlock","src":"53339:80:20","statements":[{"nativeSrc":"53349:22:20","nodeType":"YulAssignment","src":"53349:22:20","value":{"arguments":[{"name":"offset","nativeSrc":"53364:6:20","nodeType":"YulIdentifier","src":"53364:6:20"}],"functionName":{"name":"mload","nativeSrc":"53358:5:20","nodeType":"YulIdentifier","src":"53358:5:20"},"nativeSrc":"53358:13:20","nodeType":"YulFunctionCall","src":"53358:13:20"},"variableNames":[{"name":"value","nativeSrc":"53349:5:20","nodeType":"YulIdentifier","src":"53349:5:20"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"53407:5:20","nodeType":"YulIdentifier","src":"53407:5:20"}],"functionName":{"name":"validator_revert_t_bytes32","nativeSrc":"53380:26:20","nodeType":"YulIdentifier","src":"53380:26:20"},"nativeSrc":"53380:33:20","nodeType":"YulFunctionCall","src":"53380:33:20"},"nativeSrc":"53380:33:20","nodeType":"YulExpressionStatement","src":"53380:33:20"}]},"name":"abi_decode_t_bytes32_fromMemory","nativeSrc":"53276:143:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"53317:6:20","nodeType":"YulTypedName","src":"53317:6:20","type":""},{"name":"end","nativeSrc":"53325:3:20","nodeType":"YulTypedName","src":"53325:3:20","type":""}],"returnVariables":[{"name":"value","nativeSrc":"53333:5:20","nodeType":"YulTypedName","src":"53333:5:20","type":""}],"src":"53276:143:20"},{"body":{"nativeSrc":"53502:274:20","nodeType":"YulBlock","src":"53502:274:20","statements":[{"body":{"nativeSrc":"53548:83:20","nodeType":"YulBlock","src":"53548:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"53550:77:20","nodeType":"YulIdentifier","src":"53550:77:20"},"nativeSrc":"53550:79:20","nodeType":"YulFunctionCall","src":"53550:79:20"},"nativeSrc":"53550:79:20","nodeType":"YulExpressionStatement","src":"53550:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"53523:7:20","nodeType":"YulIdentifier","src":"53523:7:20"},{"name":"headStart","nativeSrc":"53532:9:20","nodeType":"YulIdentifier","src":"53532:9:20"}],"functionName":{"name":"sub","nativeSrc":"53519:3:20","nodeType":"YulIdentifier","src":"53519:3:20"},"nativeSrc":"53519:23:20","nodeType":"YulFunctionCall","src":"53519:23:20"},{"kind":"number","nativeSrc":"53544:2:20","nodeType":"YulLiteral","src":"53544:2:20","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"53515:3:20","nodeType":"YulIdentifier","src":"53515:3:20"},"nativeSrc":"53515:32:20","nodeType":"YulFunctionCall","src":"53515:32:20"},"nativeSrc":"53512:119:20","nodeType":"YulIf","src":"53512:119:20"},{"nativeSrc":"53641:128:20","nodeType":"YulBlock","src":"53641:128:20","statements":[{"nativeSrc":"53656:15:20","nodeType":"YulVariableDeclaration","src":"53656:15:20","value":{"kind":"number","nativeSrc":"53670:1:20","nodeType":"YulLiteral","src":"53670:1:20","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"53660:6:20","nodeType":"YulTypedName","src":"53660:6:20","type":""}]},{"nativeSrc":"53685:74:20","nodeType":"YulAssignment","src":"53685:74:20","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"53731:9:20","nodeType":"YulIdentifier","src":"53731:9:20"},{"name":"offset","nativeSrc":"53742:6:20","nodeType":"YulIdentifier","src":"53742:6:20"}],"functionName":{"name":"add","nativeSrc":"53727:3:20","nodeType":"YulIdentifier","src":"53727:3:20"},"nativeSrc":"53727:22:20","nodeType":"YulFunctionCall","src":"53727:22:20"},{"name":"dataEnd","nativeSrc":"53751:7:20","nodeType":"YulIdentifier","src":"53751:7:20"}],"functionName":{"name":"abi_decode_t_bytes32_fromMemory","nativeSrc":"53695:31:20","nodeType":"YulIdentifier","src":"53695:31:20"},"nativeSrc":"53695:64:20","nodeType":"YulFunctionCall","src":"53695:64:20"},"variableNames":[{"name":"value0","nativeSrc":"53685:6:20","nodeType":"YulIdentifier","src":"53685:6:20"}]}]}]},"name":"abi_decode_tuple_t_bytes32_fromMemory","nativeSrc":"53425:351:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"53472:9:20","nodeType":"YulTypedName","src":"53472:9:20","type":""},{"name":"dataEnd","nativeSrc":"53483:7:20","nodeType":"YulTypedName","src":"53483:7:20","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"53495:6:20","nodeType":"YulTypedName","src":"53495:6:20","type":""}],"src":"53425:351:20"},{"body":{"nativeSrc":"53829:32:20","nodeType":"YulBlock","src":"53829:32:20","statements":[{"nativeSrc":"53839:16:20","nodeType":"YulAssignment","src":"53839:16:20","value":{"name":"value","nativeSrc":"53850:5:20","nodeType":"YulIdentifier","src":"53850:5:20"},"variableNames":[{"name":"aligned","nativeSrc":"53839:7:20","nodeType":"YulIdentifier","src":"53839:7:20"}]}]},"name":"leftAlign_t_uint256","nativeSrc":"53782:79:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"53811:5:20","nodeType":"YulTypedName","src":"53811:5:20","type":""}],"returnVariables":[{"name":"aligned","nativeSrc":"53821:7:20","nodeType":"YulTypedName","src":"53821:7:20","type":""}],"src":"53782:79:20"},{"body":{"nativeSrc":"53950:74:20","nodeType":"YulBlock","src":"53950:74:20","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"53967:3:20","nodeType":"YulIdentifier","src":"53967:3:20"},{"arguments":[{"arguments":[{"name":"value","nativeSrc":"54010:5:20","nodeType":"YulIdentifier","src":"54010:5:20"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"53992:17:20","nodeType":"YulIdentifier","src":"53992:17:20"},"nativeSrc":"53992:24:20","nodeType":"YulFunctionCall","src":"53992:24:20"}],"functionName":{"name":"leftAlign_t_uint256","nativeSrc":"53972:19:20","nodeType":"YulIdentifier","src":"53972:19:20"},"nativeSrc":"53972:45:20","nodeType":"YulFunctionCall","src":"53972:45:20"}],"functionName":{"name":"mstore","nativeSrc":"53960:6:20","nodeType":"YulIdentifier","src":"53960:6:20"},"nativeSrc":"53960:58:20","nodeType":"YulFunctionCall","src":"53960:58:20"},"nativeSrc":"53960:58:20","nodeType":"YulExpressionStatement","src":"53960:58:20"}]},"name":"abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack","nativeSrc":"53867:157:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"53938:5:20","nodeType":"YulTypedName","src":"53938:5:20","type":""},{"name":"pos","nativeSrc":"53945:3:20","nodeType":"YulTypedName","src":"53945:3:20","type":""}],"src":"53867:157:20"},{"body":{"nativeSrc":"54077:32:20","nodeType":"YulBlock","src":"54077:32:20","statements":[{"nativeSrc":"54087:16:20","nodeType":"YulAssignment","src":"54087:16:20","value":{"name":"value","nativeSrc":"54098:5:20","nodeType":"YulIdentifier","src":"54098:5:20"},"variableNames":[{"name":"aligned","nativeSrc":"54087:7:20","nodeType":"YulIdentifier","src":"54087:7:20"}]}]},"name":"leftAlign_t_bytes32","nativeSrc":"54030:79:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"54059:5:20","nodeType":"YulTypedName","src":"54059:5:20","type":""}],"returnVariables":[{"name":"aligned","nativeSrc":"54069:7:20","nodeType":"YulTypedName","src":"54069:7:20","type":""}],"src":"54030:79:20"},{"body":{"nativeSrc":"54198:74:20","nodeType":"YulBlock","src":"54198:74:20","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"54215:3:20","nodeType":"YulIdentifier","src":"54215:3:20"},{"arguments":[{"arguments":[{"name":"value","nativeSrc":"54258:5:20","nodeType":"YulIdentifier","src":"54258:5:20"}],"functionName":{"name":"cleanup_t_bytes32","nativeSrc":"54240:17:20","nodeType":"YulIdentifier","src":"54240:17:20"},"nativeSrc":"54240:24:20","nodeType":"YulFunctionCall","src":"54240:24:20"}],"functionName":{"name":"leftAlign_t_bytes32","nativeSrc":"54220:19:20","nodeType":"YulIdentifier","src":"54220:19:20"},"nativeSrc":"54220:45:20","nodeType":"YulFunctionCall","src":"54220:45:20"}],"functionName":{"name":"mstore","nativeSrc":"54208:6:20","nodeType":"YulIdentifier","src":"54208:6:20"},"nativeSrc":"54208:58:20","nodeType":"YulFunctionCall","src":"54208:58:20"},"nativeSrc":"54208:58:20","nodeType":"YulExpressionStatement","src":"54208:58:20"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack","nativeSrc":"54115:157:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"54186:5:20","nodeType":"YulTypedName","src":"54186:5:20","type":""},{"name":"pos","nativeSrc":"54193:3:20","nodeType":"YulTypedName","src":"54193:3:20","type":""}],"src":"54115:157:20"},{"body":{"nativeSrc":"54422:253:20","nodeType":"YulBlock","src":"54422:253:20","statements":[{"expression":{"arguments":[{"name":"value0","nativeSrc":"54495:6:20","nodeType":"YulIdentifier","src":"54495:6:20"},{"name":"pos","nativeSrc":"54504:3:20","nodeType":"YulIdentifier","src":"54504:3:20"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack","nativeSrc":"54433:61:20","nodeType":"YulIdentifier","src":"54433:61:20"},"nativeSrc":"54433:75:20","nodeType":"YulFunctionCall","src":"54433:75:20"},"nativeSrc":"54433:75:20","nodeType":"YulExpressionStatement","src":"54433:75:20"},{"nativeSrc":"54517:19:20","nodeType":"YulAssignment","src":"54517:19:20","value":{"arguments":[{"name":"pos","nativeSrc":"54528:3:20","nodeType":"YulIdentifier","src":"54528:3:20"},{"kind":"number","nativeSrc":"54533:2:20","nodeType":"YulLiteral","src":"54533:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"54524:3:20","nodeType":"YulIdentifier","src":"54524:3:20"},"nativeSrc":"54524:12:20","nodeType":"YulFunctionCall","src":"54524:12:20"},"variableNames":[{"name":"pos","nativeSrc":"54517:3:20","nodeType":"YulIdentifier","src":"54517:3:20"}]},{"expression":{"arguments":[{"name":"value1","nativeSrc":"54608:6:20","nodeType":"YulIdentifier","src":"54608:6:20"},{"name":"pos","nativeSrc":"54617:3:20","nodeType":"YulIdentifier","src":"54617:3:20"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack","nativeSrc":"54546:61:20","nodeType":"YulIdentifier","src":"54546:61:20"},"nativeSrc":"54546:75:20","nodeType":"YulFunctionCall","src":"54546:75:20"},"nativeSrc":"54546:75:20","nodeType":"YulExpressionStatement","src":"54546:75:20"},{"nativeSrc":"54630:19:20","nodeType":"YulAssignment","src":"54630:19:20","value":{"arguments":[{"name":"pos","nativeSrc":"54641:3:20","nodeType":"YulIdentifier","src":"54641:3:20"},{"kind":"number","nativeSrc":"54646:2:20","nodeType":"YulLiteral","src":"54646:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"54637:3:20","nodeType":"YulIdentifier","src":"54637:3:20"},"nativeSrc":"54637:12:20","nodeType":"YulFunctionCall","src":"54637:12:20"},"variableNames":[{"name":"pos","nativeSrc":"54630:3:20","nodeType":"YulIdentifier","src":"54630:3:20"}]},{"nativeSrc":"54659:10:20","nodeType":"YulAssignment","src":"54659:10:20","value":{"name":"pos","nativeSrc":"54666:3:20","nodeType":"YulIdentifier","src":"54666:3:20"},"variableNames":[{"name":"end","nativeSrc":"54659:3:20","nodeType":"YulIdentifier","src":"54659:3:20"}]}]},"name":"abi_encode_tuple_packed_t_uint256_t_bytes32__to_t_uint256_t_bytes32__nonPadded_inplace_fromStack_reversed","nativeSrc":"54278:397:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"54393:3:20","nodeType":"YulTypedName","src":"54393:3:20","type":""},{"name":"value1","nativeSrc":"54399:6:20","nodeType":"YulTypedName","src":"54399:6:20","type":""},{"name":"value0","nativeSrc":"54407:6:20","nodeType":"YulTypedName","src":"54407:6:20","type":""}],"returnVariables":[{"name":"end","nativeSrc":"54418:3:20","nodeType":"YulTypedName","src":"54418:3:20","type":""}],"src":"54278:397:20"},{"body":{"nativeSrc":"54729:362:20","nodeType":"YulBlock","src":"54729:362:20","statements":[{"nativeSrc":"54739:25:20","nodeType":"YulAssignment","src":"54739:25:20","value":{"arguments":[{"name":"x","nativeSrc":"54762:1:20","nodeType":"YulIdentifier","src":"54762:1:20"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"54744:17:20","nodeType":"YulIdentifier","src":"54744:17:20"},"nativeSrc":"54744:20:20","nodeType":"YulFunctionCall","src":"54744:20:20"},"variableNames":[{"name":"x","nativeSrc":"54739:1:20","nodeType":"YulIdentifier","src":"54739:1:20"}]},{"nativeSrc":"54773:25:20","nodeType":"YulAssignment","src":"54773:25:20","value":{"arguments":[{"name":"y","nativeSrc":"54796:1:20","nodeType":"YulIdentifier","src":"54796:1:20"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"54778:17:20","nodeType":"YulIdentifier","src":"54778:17:20"},"nativeSrc":"54778:20:20","nodeType":"YulFunctionCall","src":"54778:20:20"},"variableNames":[{"name":"y","nativeSrc":"54773:1:20","nodeType":"YulIdentifier","src":"54773:1:20"}]},{"nativeSrc":"54807:28:20","nodeType":"YulVariableDeclaration","src":"54807:28:20","value":{"arguments":[{"name":"x","nativeSrc":"54830:1:20","nodeType":"YulIdentifier","src":"54830:1:20"},{"name":"y","nativeSrc":"54833:1:20","nodeType":"YulIdentifier","src":"54833:1:20"}],"functionName":{"name":"mul","nativeSrc":"54826:3:20","nodeType":"YulIdentifier","src":"54826:3:20"},"nativeSrc":"54826:9:20","nodeType":"YulFunctionCall","src":"54826:9:20"},"variables":[{"name":"product_raw","nativeSrc":"54811:11:20","nodeType":"YulTypedName","src":"54811:11:20","type":""}]},{"nativeSrc":"54844:41:20","nodeType":"YulAssignment","src":"54844:41:20","value":{"arguments":[{"name":"product_raw","nativeSrc":"54873:11:20","nodeType":"YulIdentifier","src":"54873:11:20"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"54855:17:20","nodeType":"YulIdentifier","src":"54855:17:20"},"nativeSrc":"54855:30:20","nodeType":"YulFunctionCall","src":"54855:30:20"},"variableNames":[{"name":"product","nativeSrc":"54844:7:20","nodeType":"YulIdentifier","src":"54844:7:20"}]},{"body":{"nativeSrc":"55062:22:20","nodeType":"YulBlock","src":"55062:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"55064:16:20","nodeType":"YulIdentifier","src":"55064:16:20"},"nativeSrc":"55064:18:20","nodeType":"YulFunctionCall","src":"55064:18:20"},"nativeSrc":"55064:18:20","nodeType":"YulExpressionStatement","src":"55064:18:20"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nativeSrc":"54995:1:20","nodeType":"YulIdentifier","src":"54995:1:20"}],"functionName":{"name":"iszero","nativeSrc":"54988:6:20","nodeType":"YulIdentifier","src":"54988:6:20"},"nativeSrc":"54988:9:20","nodeType":"YulFunctionCall","src":"54988:9:20"},{"arguments":[{"name":"y","nativeSrc":"55018:1:20","nodeType":"YulIdentifier","src":"55018:1:20"},{"arguments":[{"name":"product","nativeSrc":"55025:7:20","nodeType":"YulIdentifier","src":"55025:7:20"},{"name":"x","nativeSrc":"55034:1:20","nodeType":"YulIdentifier","src":"55034:1:20"}],"functionName":{"name":"div","nativeSrc":"55021:3:20","nodeType":"YulIdentifier","src":"55021:3:20"},"nativeSrc":"55021:15:20","nodeType":"YulFunctionCall","src":"55021:15:20"}],"functionName":{"name":"eq","nativeSrc":"55015:2:20","nodeType":"YulIdentifier","src":"55015:2:20"},"nativeSrc":"55015:22:20","nodeType":"YulFunctionCall","src":"55015:22:20"}],"functionName":{"name":"or","nativeSrc":"54968:2:20","nodeType":"YulIdentifier","src":"54968:2:20"},"nativeSrc":"54968:83:20","nodeType":"YulFunctionCall","src":"54968:83:20"}],"functionName":{"name":"iszero","nativeSrc":"54948:6:20","nodeType":"YulIdentifier","src":"54948:6:20"},"nativeSrc":"54948:113:20","nodeType":"YulFunctionCall","src":"54948:113:20"},"nativeSrc":"54945:139:20","nodeType":"YulIf","src":"54945:139:20"}]},"name":"checked_mul_t_uint256","nativeSrc":"54681:410:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"54712:1:20","nodeType":"YulTypedName","src":"54712:1:20","type":""},{"name":"y","nativeSrc":"54715:1:20","nodeType":"YulTypedName","src":"54715:1:20","type":""}],"returnVariables":[{"name":"product","nativeSrc":"54721:7:20","nodeType":"YulTypedName","src":"54721:7:20","type":""}],"src":"54681:410:20"},{"body":{"nativeSrc":"55125:152:20","nodeType":"YulBlock","src":"55125:152:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"55142:1:20","nodeType":"YulLiteral","src":"55142:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"55145:77:20","nodeType":"YulLiteral","src":"55145:77:20","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"55135:6:20","nodeType":"YulIdentifier","src":"55135:6:20"},"nativeSrc":"55135:88:20","nodeType":"YulFunctionCall","src":"55135:88:20"},"nativeSrc":"55135:88:20","nodeType":"YulExpressionStatement","src":"55135:88:20"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"55239:1:20","nodeType":"YulLiteral","src":"55239:1:20","type":"","value":"4"},{"kind":"number","nativeSrc":"55242:4:20","nodeType":"YulLiteral","src":"55242:4:20","type":"","value":"0x12"}],"functionName":{"name":"mstore","nativeSrc":"55232:6:20","nodeType":"YulIdentifier","src":"55232:6:20"},"nativeSrc":"55232:15:20","nodeType":"YulFunctionCall","src":"55232:15:20"},"nativeSrc":"55232:15:20","nodeType":"YulExpressionStatement","src":"55232:15:20"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"55263:1:20","nodeType":"YulLiteral","src":"55263:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"55266:4:20","nodeType":"YulLiteral","src":"55266:4:20","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"55256:6:20","nodeType":"YulIdentifier","src":"55256:6:20"},"nativeSrc":"55256:15:20","nodeType":"YulFunctionCall","src":"55256:15:20"},"nativeSrc":"55256:15:20","nodeType":"YulExpressionStatement","src":"55256:15:20"}]},"name":"panic_error_0x12","nativeSrc":"55097:180:20","nodeType":"YulFunctionDefinition","src":"55097:180:20"},{"body":{"nativeSrc":"55325:143:20","nodeType":"YulBlock","src":"55325:143:20","statements":[{"nativeSrc":"55335:25:20","nodeType":"YulAssignment","src":"55335:25:20","value":{"arguments":[{"name":"x","nativeSrc":"55358:1:20","nodeType":"YulIdentifier","src":"55358:1:20"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"55340:17:20","nodeType":"YulIdentifier","src":"55340:17:20"},"nativeSrc":"55340:20:20","nodeType":"YulFunctionCall","src":"55340:20:20"},"variableNames":[{"name":"x","nativeSrc":"55335:1:20","nodeType":"YulIdentifier","src":"55335:1:20"}]},{"nativeSrc":"55369:25:20","nodeType":"YulAssignment","src":"55369:25:20","value":{"arguments":[{"name":"y","nativeSrc":"55392:1:20","nodeType":"YulIdentifier","src":"55392:1:20"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"55374:17:20","nodeType":"YulIdentifier","src":"55374:17:20"},"nativeSrc":"55374:20:20","nodeType":"YulFunctionCall","src":"55374:20:20"},"variableNames":[{"name":"y","nativeSrc":"55369:1:20","nodeType":"YulIdentifier","src":"55369:1:20"}]},{"body":{"nativeSrc":"55416:22:20","nodeType":"YulBlock","src":"55416:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nativeSrc":"55418:16:20","nodeType":"YulIdentifier","src":"55418:16:20"},"nativeSrc":"55418:18:20","nodeType":"YulFunctionCall","src":"55418:18:20"},"nativeSrc":"55418:18:20","nodeType":"YulExpressionStatement","src":"55418:18:20"}]},"condition":{"arguments":[{"name":"y","nativeSrc":"55413:1:20","nodeType":"YulIdentifier","src":"55413:1:20"}],"functionName":{"name":"iszero","nativeSrc":"55406:6:20","nodeType":"YulIdentifier","src":"55406:6:20"},"nativeSrc":"55406:9:20","nodeType":"YulFunctionCall","src":"55406:9:20"},"nativeSrc":"55403:35:20","nodeType":"YulIf","src":"55403:35:20"},{"nativeSrc":"55448:14:20","nodeType":"YulAssignment","src":"55448:14:20","value":{"arguments":[{"name":"x","nativeSrc":"55457:1:20","nodeType":"YulIdentifier","src":"55457:1:20"},{"name":"y","nativeSrc":"55460:1:20","nodeType":"YulIdentifier","src":"55460:1:20"}],"functionName":{"name":"div","nativeSrc":"55453:3:20","nodeType":"YulIdentifier","src":"55453:3:20"},"nativeSrc":"55453:9:20","nodeType":"YulFunctionCall","src":"55453:9:20"},"variableNames":[{"name":"r","nativeSrc":"55448:1:20","nodeType":"YulIdentifier","src":"55448:1:20"}]}]},"name":"checked_div_t_uint256","nativeSrc":"55283:185:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"55314:1:20","nodeType":"YulTypedName","src":"55314:1:20","type":""},{"name":"y","nativeSrc":"55317:1:20","nodeType":"YulTypedName","src":"55317:1:20","type":""}],"returnVariables":[{"name":"r","nativeSrc":"55323:1:20","nodeType":"YulTypedName","src":"55323:1:20","type":""}],"src":"55283:185:20"},{"body":{"nativeSrc":"55580:67:20","nodeType":"YulBlock","src":"55580:67:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"55602:6:20","nodeType":"YulIdentifier","src":"55602:6:20"},{"kind":"number","nativeSrc":"55610:1:20","nodeType":"YulLiteral","src":"55610:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"55598:3:20","nodeType":"YulIdentifier","src":"55598:3:20"},"nativeSrc":"55598:14:20","nodeType":"YulFunctionCall","src":"55598:14:20"},{"hexValue":"43616e6e6f74207472616e7366657220746f2073656c66","kind":"string","nativeSrc":"55614:25:20","nodeType":"YulLiteral","src":"55614:25:20","type":"","value":"Cannot transfer to self"}],"functionName":{"name":"mstore","nativeSrc":"55591:6:20","nodeType":"YulIdentifier","src":"55591:6:20"},"nativeSrc":"55591:49:20","nodeType":"YulFunctionCall","src":"55591:49:20"},"nativeSrc":"55591:49:20","nodeType":"YulExpressionStatement","src":"55591:49:20"}]},"name":"store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2","nativeSrc":"55474:173:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"55572:6:20","nodeType":"YulTypedName","src":"55572:6:20","type":""}],"src":"55474:173:20"},{"body":{"nativeSrc":"55799:220:20","nodeType":"YulBlock","src":"55799:220:20","statements":[{"nativeSrc":"55809:74:20","nodeType":"YulAssignment","src":"55809:74:20","value":{"arguments":[{"name":"pos","nativeSrc":"55875:3:20","nodeType":"YulIdentifier","src":"55875:3:20"},{"kind":"number","nativeSrc":"55880:2:20","nodeType":"YulLiteral","src":"55880:2:20","type":"","value":"23"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"55816:58:20","nodeType":"YulIdentifier","src":"55816:58:20"},"nativeSrc":"55816:67:20","nodeType":"YulFunctionCall","src":"55816:67:20"},"variableNames":[{"name":"pos","nativeSrc":"55809:3:20","nodeType":"YulIdentifier","src":"55809:3:20"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"55981:3:20","nodeType":"YulIdentifier","src":"55981:3:20"}],"functionName":{"name":"store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2","nativeSrc":"55892:88:20","nodeType":"YulIdentifier","src":"55892:88:20"},"nativeSrc":"55892:93:20","nodeType":"YulFunctionCall","src":"55892:93:20"},"nativeSrc":"55892:93:20","nodeType":"YulExpressionStatement","src":"55892:93:20"},{"nativeSrc":"55994:19:20","nodeType":"YulAssignment","src":"55994:19:20","value":{"arguments":[{"name":"pos","nativeSrc":"56005:3:20","nodeType":"YulIdentifier","src":"56005:3:20"},{"kind":"number","nativeSrc":"56010:2:20","nodeType":"YulLiteral","src":"56010:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"56001:3:20","nodeType":"YulIdentifier","src":"56001:3:20"},"nativeSrc":"56001:12:20","nodeType":"YulFunctionCall","src":"56001:12:20"},"variableNames":[{"name":"end","nativeSrc":"55994:3:20","nodeType":"YulIdentifier","src":"55994:3:20"}]}]},"name":"abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack","nativeSrc":"55653:366:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"55787:3:20","nodeType":"YulTypedName","src":"55787:3:20","type":""}],"returnVariables":[{"name":"end","nativeSrc":"55795:3:20","nodeType":"YulTypedName","src":"55795:3:20","type":""}],"src":"55653:366:20"},{"body":{"nativeSrc":"56196:248:20","nodeType":"YulBlock","src":"56196:248:20","statements":[{"nativeSrc":"56206:26:20","nodeType":"YulAssignment","src":"56206:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"56218:9:20","nodeType":"YulIdentifier","src":"56218:9:20"},{"kind":"number","nativeSrc":"56229:2:20","nodeType":"YulLiteral","src":"56229:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"56214:3:20","nodeType":"YulIdentifier","src":"56214:3:20"},"nativeSrc":"56214:18:20","nodeType":"YulFunctionCall","src":"56214:18:20"},"variableNames":[{"name":"tail","nativeSrc":"56206:4:20","nodeType":"YulIdentifier","src":"56206:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"56253:9:20","nodeType":"YulIdentifier","src":"56253:9:20"},{"kind":"number","nativeSrc":"56264:1:20","nodeType":"YulLiteral","src":"56264:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"56249:3:20","nodeType":"YulIdentifier","src":"56249:3:20"},"nativeSrc":"56249:17:20","nodeType":"YulFunctionCall","src":"56249:17:20"},{"arguments":[{"name":"tail","nativeSrc":"56272:4:20","nodeType":"YulIdentifier","src":"56272:4:20"},{"name":"headStart","nativeSrc":"56278:9:20","nodeType":"YulIdentifier","src":"56278:9:20"}],"functionName":{"name":"sub","nativeSrc":"56268:3:20","nodeType":"YulIdentifier","src":"56268:3:20"},"nativeSrc":"56268:20:20","nodeType":"YulFunctionCall","src":"56268:20:20"}],"functionName":{"name":"mstore","nativeSrc":"56242:6:20","nodeType":"YulIdentifier","src":"56242:6:20"},"nativeSrc":"56242:47:20","nodeType":"YulFunctionCall","src":"56242:47:20"},"nativeSrc":"56242:47:20","nodeType":"YulExpressionStatement","src":"56242:47:20"},{"nativeSrc":"56298:139:20","nodeType":"YulAssignment","src":"56298:139:20","value":{"arguments":[{"name":"tail","nativeSrc":"56432:4:20","nodeType":"YulIdentifier","src":"56432:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack","nativeSrc":"56306:124:20","nodeType":"YulIdentifier","src":"56306:124:20"},"nativeSrc":"56306:131:20","nodeType":"YulFunctionCall","src":"56306:131:20"},"variableNames":[{"name":"tail","nativeSrc":"56298:4:20","nodeType":"YulIdentifier","src":"56298:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"56025:419:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"56176:9:20","nodeType":"YulTypedName","src":"56176:9:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"56191:4:20","nodeType":"YulTypedName","src":"56191:4:20","type":""}],"src":"56025:419:20"},{"body":{"nativeSrc":"56622:252:20","nodeType":"YulBlock","src":"56622:252:20","statements":[{"nativeSrc":"56632:26:20","nodeType":"YulAssignment","src":"56632:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"56644:9:20","nodeType":"YulIdentifier","src":"56644:9:20"},{"kind":"number","nativeSrc":"56655:2:20","nodeType":"YulLiteral","src":"56655:2:20","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"56640:3:20","nodeType":"YulIdentifier","src":"56640:3:20"},"nativeSrc":"56640:18:20","nodeType":"YulFunctionCall","src":"56640:18:20"},"variableNames":[{"name":"tail","nativeSrc":"56632:4:20","nodeType":"YulIdentifier","src":"56632:4:20"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"56712:6:20","nodeType":"YulIdentifier","src":"56712:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"56725:9:20","nodeType":"YulIdentifier","src":"56725:9:20"},{"kind":"number","nativeSrc":"56736:1:20","nodeType":"YulLiteral","src":"56736:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"56721:3:20","nodeType":"YulIdentifier","src":"56721:3:20"},"nativeSrc":"56721:17:20","nodeType":"YulFunctionCall","src":"56721:17:20"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"56668:43:20","nodeType":"YulIdentifier","src":"56668:43:20"},"nativeSrc":"56668:71:20","nodeType":"YulFunctionCall","src":"56668:71:20"},"nativeSrc":"56668:71:20","nodeType":"YulExpressionStatement","src":"56668:71:20"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"56839:6:20","nodeType":"YulIdentifier","src":"56839:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"56852:9:20","nodeType":"YulIdentifier","src":"56852:9:20"},{"kind":"number","nativeSrc":"56863:2:20","nodeType":"YulLiteral","src":"56863:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"56848:3:20","nodeType":"YulIdentifier","src":"56848:3:20"},"nativeSrc":"56848:18:20","nodeType":"YulFunctionCall","src":"56848:18:20"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$2_memory_ptr_to_t_array$_t_uint256_$2_memory_ptr_fromStack","nativeSrc":"56749:89:20","nodeType":"YulIdentifier","src":"56749:89:20"},"nativeSrc":"56749:118:20","nodeType":"YulFunctionCall","src":"56749:118:20"},"nativeSrc":"56749:118:20","nodeType":"YulExpressionStatement","src":"56749:118:20"}]},"name":"abi_encode_tuple_t_uint256_t_array$_t_uint256_$2_memory_ptr__to_t_uint256_t_array$_t_uint256_$2_memory_ptr__fromStack_reversed","nativeSrc":"56450:424:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"56586:9:20","nodeType":"YulTypedName","src":"56586:9:20","type":""},{"name":"value1","nativeSrc":"56598:6:20","nodeType":"YulTypedName","src":"56598:6:20","type":""},{"name":"value0","nativeSrc":"56606:6:20","nodeType":"YulTypedName","src":"56606:6:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"56617:4:20","nodeType":"YulTypedName","src":"56617:4:20","type":""}],"src":"56450:424:20"},{"body":{"nativeSrc":"56924:61:20","nodeType":"YulBlock","src":"56924:61:20","statements":[{"nativeSrc":"56934:45:20","nodeType":"YulAssignment","src":"56934:45:20","value":{"arguments":[{"name":"value","nativeSrc":"56949:5:20","nodeType":"YulIdentifier","src":"56949:5:20"},{"kind":"number","nativeSrc":"56956:22:20","nodeType":"YulLiteral","src":"56956:22:20","type":"","value":"0xffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"56945:3:20","nodeType":"YulIdentifier","src":"56945:3:20"},"nativeSrc":"56945:34:20","nodeType":"YulFunctionCall","src":"56945:34:20"},"variableNames":[{"name":"cleaned","nativeSrc":"56934:7:20","nodeType":"YulIdentifier","src":"56934:7:20"}]}]},"name":"cleanup_t_uint80","nativeSrc":"56880:105:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"56906:5:20","nodeType":"YulTypedName","src":"56906:5:20","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"56916:7:20","nodeType":"YulTypedName","src":"56916:7:20","type":""}],"src":"56880:105:20"},{"body":{"nativeSrc":"57033:78:20","nodeType":"YulBlock","src":"57033:78:20","statements":[{"body":{"nativeSrc":"57089:16:20","nodeType":"YulBlock","src":"57089:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"57098:1:20","nodeType":"YulLiteral","src":"57098:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"57101:1:20","nodeType":"YulLiteral","src":"57101:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"57091:6:20","nodeType":"YulIdentifier","src":"57091:6:20"},"nativeSrc":"57091:12:20","nodeType":"YulFunctionCall","src":"57091:12:20"},"nativeSrc":"57091:12:20","nodeType":"YulExpressionStatement","src":"57091:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"57056:5:20","nodeType":"YulIdentifier","src":"57056:5:20"},{"arguments":[{"name":"value","nativeSrc":"57080:5:20","nodeType":"YulIdentifier","src":"57080:5:20"}],"functionName":{"name":"cleanup_t_uint80","nativeSrc":"57063:16:20","nodeType":"YulIdentifier","src":"57063:16:20"},"nativeSrc":"57063:23:20","nodeType":"YulFunctionCall","src":"57063:23:20"}],"functionName":{"name":"eq","nativeSrc":"57053:2:20","nodeType":"YulIdentifier","src":"57053:2:20"},"nativeSrc":"57053:34:20","nodeType":"YulFunctionCall","src":"57053:34:20"}],"functionName":{"name":"iszero","nativeSrc":"57046:6:20","nodeType":"YulIdentifier","src":"57046:6:20"},"nativeSrc":"57046:42:20","nodeType":"YulFunctionCall","src":"57046:42:20"},"nativeSrc":"57043:62:20","nodeType":"YulIf","src":"57043:62:20"}]},"name":"validator_revert_t_uint80","nativeSrc":"56991:120:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"57026:5:20","nodeType":"YulTypedName","src":"57026:5:20","type":""}],"src":"56991:120:20"},{"body":{"nativeSrc":"57179:79:20","nodeType":"YulBlock","src":"57179:79:20","statements":[{"nativeSrc":"57189:22:20","nodeType":"YulAssignment","src":"57189:22:20","value":{"arguments":[{"name":"offset","nativeSrc":"57204:6:20","nodeType":"YulIdentifier","src":"57204:6:20"}],"functionName":{"name":"mload","nativeSrc":"57198:5:20","nodeType":"YulIdentifier","src":"57198:5:20"},"nativeSrc":"57198:13:20","nodeType":"YulFunctionCall","src":"57198:13:20"},"variableNames":[{"name":"value","nativeSrc":"57189:5:20","nodeType":"YulIdentifier","src":"57189:5:20"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"57246:5:20","nodeType":"YulIdentifier","src":"57246:5:20"}],"functionName":{"name":"validator_revert_t_uint80","nativeSrc":"57220:25:20","nodeType":"YulIdentifier","src":"57220:25:20"},"nativeSrc":"57220:32:20","nodeType":"YulFunctionCall","src":"57220:32:20"},"nativeSrc":"57220:32:20","nodeType":"YulExpressionStatement","src":"57220:32:20"}]},"name":"abi_decode_t_uint80_fromMemory","nativeSrc":"57117:141:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"57157:6:20","nodeType":"YulTypedName","src":"57157:6:20","type":""},{"name":"end","nativeSrc":"57165:3:20","nodeType":"YulTypedName","src":"57165:3:20","type":""}],"returnVariables":[{"name":"value","nativeSrc":"57173:5:20","nodeType":"YulTypedName","src":"57173:5:20","type":""}],"src":"57117:141:20"},{"body":{"nativeSrc":"57326:79:20","nodeType":"YulBlock","src":"57326:79:20","statements":[{"nativeSrc":"57336:22:20","nodeType":"YulAssignment","src":"57336:22:20","value":{"arguments":[{"name":"offset","nativeSrc":"57351:6:20","nodeType":"YulIdentifier","src":"57351:6:20"}],"functionName":{"name":"mload","nativeSrc":"57345:5:20","nodeType":"YulIdentifier","src":"57345:5:20"},"nativeSrc":"57345:13:20","nodeType":"YulFunctionCall","src":"57345:13:20"},"variableNames":[{"name":"value","nativeSrc":"57336:5:20","nodeType":"YulIdentifier","src":"57336:5:20"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"57393:5:20","nodeType":"YulIdentifier","src":"57393:5:20"}],"functionName":{"name":"validator_revert_t_int256","nativeSrc":"57367:25:20","nodeType":"YulIdentifier","src":"57367:25:20"},"nativeSrc":"57367:32:20","nodeType":"YulFunctionCall","src":"57367:32:20"},"nativeSrc":"57367:32:20","nodeType":"YulExpressionStatement","src":"57367:32:20"}]},"name":"abi_decode_t_int256_fromMemory","nativeSrc":"57264:141:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"57304:6:20","nodeType":"YulTypedName","src":"57304:6:20","type":""},{"name":"end","nativeSrc":"57312:3:20","nodeType":"YulTypedName","src":"57312:3:20","type":""}],"returnVariables":[{"name":"value","nativeSrc":"57320:5:20","nodeType":"YulTypedName","src":"57320:5:20","type":""}],"src":"57264:141:20"},{"body":{"nativeSrc":"57553:829:20","nodeType":"YulBlock","src":"57553:829:20","statements":[{"body":{"nativeSrc":"57600:83:20","nodeType":"YulBlock","src":"57600:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"57602:77:20","nodeType":"YulIdentifier","src":"57602:77:20"},"nativeSrc":"57602:79:20","nodeType":"YulFunctionCall","src":"57602:79:20"},"nativeSrc":"57602:79:20","nodeType":"YulExpressionStatement","src":"57602:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"57574:7:20","nodeType":"YulIdentifier","src":"57574:7:20"},{"name":"headStart","nativeSrc":"57583:9:20","nodeType":"YulIdentifier","src":"57583:9:20"}],"functionName":{"name":"sub","nativeSrc":"57570:3:20","nodeType":"YulIdentifier","src":"57570:3:20"},"nativeSrc":"57570:23:20","nodeType":"YulFunctionCall","src":"57570:23:20"},{"kind":"number","nativeSrc":"57595:3:20","nodeType":"YulLiteral","src":"57595:3:20","type":"","value":"160"}],"functionName":{"name":"slt","nativeSrc":"57566:3:20","nodeType":"YulIdentifier","src":"57566:3:20"},"nativeSrc":"57566:33:20","nodeType":"YulFunctionCall","src":"57566:33:20"},"nativeSrc":"57563:120:20","nodeType":"YulIf","src":"57563:120:20"},{"nativeSrc":"57693:127:20","nodeType":"YulBlock","src":"57693:127:20","statements":[{"nativeSrc":"57708:15:20","nodeType":"YulVariableDeclaration","src":"57708:15:20","value":{"kind":"number","nativeSrc":"57722:1:20","nodeType":"YulLiteral","src":"57722:1:20","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"57712:6:20","nodeType":"YulTypedName","src":"57712:6:20","type":""}]},{"nativeSrc":"57737:73:20","nodeType":"YulAssignment","src":"57737:73:20","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"57782:9:20","nodeType":"YulIdentifier","src":"57782:9:20"},{"name":"offset","nativeSrc":"57793:6:20","nodeType":"YulIdentifier","src":"57793:6:20"}],"functionName":{"name":"add","nativeSrc":"57778:3:20","nodeType":"YulIdentifier","src":"57778:3:20"},"nativeSrc":"57778:22:20","nodeType":"YulFunctionCall","src":"57778:22:20"},{"name":"dataEnd","nativeSrc":"57802:7:20","nodeType":"YulIdentifier","src":"57802:7:20"}],"functionName":{"name":"abi_decode_t_uint80_fromMemory","nativeSrc":"57747:30:20","nodeType":"YulIdentifier","src":"57747:30:20"},"nativeSrc":"57747:63:20","nodeType":"YulFunctionCall","src":"57747:63:20"},"variableNames":[{"name":"value0","nativeSrc":"57737:6:20","nodeType":"YulIdentifier","src":"57737:6:20"}]}]},{"nativeSrc":"57830:128:20","nodeType":"YulBlock","src":"57830:128:20","statements":[{"nativeSrc":"57845:16:20","nodeType":"YulVariableDeclaration","src":"57845:16:20","value":{"kind":"number","nativeSrc":"57859:2:20","nodeType":"YulLiteral","src":"57859:2:20","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"57849:6:20","nodeType":"YulTypedName","src":"57849:6:20","type":""}]},{"nativeSrc":"57875:73:20","nodeType":"YulAssignment","src":"57875:73:20","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"57920:9:20","nodeType":"YulIdentifier","src":"57920:9:20"},{"name":"offset","nativeSrc":"57931:6:20","nodeType":"YulIdentifier","src":"57931:6:20"}],"functionName":{"name":"add","nativeSrc":"57916:3:20","nodeType":"YulIdentifier","src":"57916:3:20"},"nativeSrc":"57916:22:20","nodeType":"YulFunctionCall","src":"57916:22:20"},{"name":"dataEnd","nativeSrc":"57940:7:20","nodeType":"YulIdentifier","src":"57940:7:20"}],"functionName":{"name":"abi_decode_t_int256_fromMemory","nativeSrc":"57885:30:20","nodeType":"YulIdentifier","src":"57885:30:20"},"nativeSrc":"57885:63:20","nodeType":"YulFunctionCall","src":"57885:63:20"},"variableNames":[{"name":"value1","nativeSrc":"57875:6:20","nodeType":"YulIdentifier","src":"57875:6:20"}]}]},{"nativeSrc":"57968:129:20","nodeType":"YulBlock","src":"57968:129:20","statements":[{"nativeSrc":"57983:16:20","nodeType":"YulVariableDeclaration","src":"57983:16:20","value":{"kind":"number","nativeSrc":"57997:2:20","nodeType":"YulLiteral","src":"57997:2:20","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"57987:6:20","nodeType":"YulTypedName","src":"57987:6:20","type":""}]},{"nativeSrc":"58013:74:20","nodeType":"YulAssignment","src":"58013:74:20","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"58059:9:20","nodeType":"YulIdentifier","src":"58059:9:20"},{"name":"offset","nativeSrc":"58070:6:20","nodeType":"YulIdentifier","src":"58070:6:20"}],"functionName":{"name":"add","nativeSrc":"58055:3:20","nodeType":"YulIdentifier","src":"58055:3:20"},"nativeSrc":"58055:22:20","nodeType":"YulFunctionCall","src":"58055:22:20"},{"name":"dataEnd","nativeSrc":"58079:7:20","nodeType":"YulIdentifier","src":"58079:7:20"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nativeSrc":"58023:31:20","nodeType":"YulIdentifier","src":"58023:31:20"},"nativeSrc":"58023:64:20","nodeType":"YulFunctionCall","src":"58023:64:20"},"variableNames":[{"name":"value2","nativeSrc":"58013:6:20","nodeType":"YulIdentifier","src":"58013:6:20"}]}]},{"nativeSrc":"58107:129:20","nodeType":"YulBlock","src":"58107:129:20","statements":[{"nativeSrc":"58122:16:20","nodeType":"YulVariableDeclaration","src":"58122:16:20","value":{"kind":"number","nativeSrc":"58136:2:20","nodeType":"YulLiteral","src":"58136:2:20","type":"","value":"96"},"variables":[{"name":"offset","nativeSrc":"58126:6:20","nodeType":"YulTypedName","src":"58126:6:20","type":""}]},{"nativeSrc":"58152:74:20","nodeType":"YulAssignment","src":"58152:74:20","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"58198:9:20","nodeType":"YulIdentifier","src":"58198:9:20"},{"name":"offset","nativeSrc":"58209:6:20","nodeType":"YulIdentifier","src":"58209:6:20"}],"functionName":{"name":"add","nativeSrc":"58194:3:20","nodeType":"YulIdentifier","src":"58194:3:20"},"nativeSrc":"58194:22:20","nodeType":"YulFunctionCall","src":"58194:22:20"},{"name":"dataEnd","nativeSrc":"58218:7:20","nodeType":"YulIdentifier","src":"58218:7:20"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nativeSrc":"58162:31:20","nodeType":"YulIdentifier","src":"58162:31:20"},"nativeSrc":"58162:64:20","nodeType":"YulFunctionCall","src":"58162:64:20"},"variableNames":[{"name":"value3","nativeSrc":"58152:6:20","nodeType":"YulIdentifier","src":"58152:6:20"}]}]},{"nativeSrc":"58246:129:20","nodeType":"YulBlock","src":"58246:129:20","statements":[{"nativeSrc":"58261:17:20","nodeType":"YulVariableDeclaration","src":"58261:17:20","value":{"kind":"number","nativeSrc":"58275:3:20","nodeType":"YulLiteral","src":"58275:3:20","type":"","value":"128"},"variables":[{"name":"offset","nativeSrc":"58265:6:20","nodeType":"YulTypedName","src":"58265:6:20","type":""}]},{"nativeSrc":"58292:73:20","nodeType":"YulAssignment","src":"58292:73:20","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"58337:9:20","nodeType":"YulIdentifier","src":"58337:9:20"},{"name":"offset","nativeSrc":"58348:6:20","nodeType":"YulIdentifier","src":"58348:6:20"}],"functionName":{"name":"add","nativeSrc":"58333:3:20","nodeType":"YulIdentifier","src":"58333:3:20"},"nativeSrc":"58333:22:20","nodeType":"YulFunctionCall","src":"58333:22:20"},{"name":"dataEnd","nativeSrc":"58357:7:20","nodeType":"YulIdentifier","src":"58357:7:20"}],"functionName":{"name":"abi_decode_t_uint80_fromMemory","nativeSrc":"58302:30:20","nodeType":"YulIdentifier","src":"58302:30:20"},"nativeSrc":"58302:63:20","nodeType":"YulFunctionCall","src":"58302:63:20"},"variableNames":[{"name":"value4","nativeSrc":"58292:6:20","nodeType":"YulIdentifier","src":"58292:6:20"}]}]}]},"name":"abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory","nativeSrc":"57411:971:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"57491:9:20","nodeType":"YulTypedName","src":"57491:9:20","type":""},{"name":"dataEnd","nativeSrc":"57502:7:20","nodeType":"YulTypedName","src":"57502:7:20","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"57514:6:20","nodeType":"YulTypedName","src":"57514:6:20","type":""},{"name":"value1","nativeSrc":"57522:6:20","nodeType":"YulTypedName","src":"57522:6:20","type":""},{"name":"value2","nativeSrc":"57530:6:20","nodeType":"YulTypedName","src":"57530:6:20","type":""},{"name":"value3","nativeSrc":"57538:6:20","nodeType":"YulTypedName","src":"57538:6:20","type":""},{"name":"value4","nativeSrc":"57546:6:20","nodeType":"YulTypedName","src":"57546:6:20","type":""}],"src":"57411:971:20"},{"body":{"nativeSrc":"58494:70:20","nodeType":"YulBlock","src":"58494:70:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"58516:6:20","nodeType":"YulIdentifier","src":"58516:6:20"},{"kind":"number","nativeSrc":"58524:1:20","nodeType":"YulLiteral","src":"58524:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"58512:3:20","nodeType":"YulIdentifier","src":"58512:3:20"},"nativeSrc":"58512:14:20","nodeType":"YulFunctionCall","src":"58512:14:20"},{"hexValue":"7075626c6963206b6579206973206e6f74206f6e206375727665","kind":"string","nativeSrc":"58528:28:20","nodeType":"YulLiteral","src":"58528:28:20","type":"","value":"public key is not on curve"}],"functionName":{"name":"mstore","nativeSrc":"58505:6:20","nodeType":"YulIdentifier","src":"58505:6:20"},"nativeSrc":"58505:52:20","nodeType":"YulFunctionCall","src":"58505:52:20"},"nativeSrc":"58505:52:20","nodeType":"YulExpressionStatement","src":"58505:52:20"}]},"name":"store_literal_in_memory_ae4825d6ed8aab0513e68c27d2710aa68bcf110761c187d047951a5ec2580d8c","nativeSrc":"58388:176:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"58486:6:20","nodeType":"YulTypedName","src":"58486:6:20","type":""}],"src":"58388:176:20"},{"body":{"nativeSrc":"58716:220:20","nodeType":"YulBlock","src":"58716:220:20","statements":[{"nativeSrc":"58726:74:20","nodeType":"YulAssignment","src":"58726:74:20","value":{"arguments":[{"name":"pos","nativeSrc":"58792:3:20","nodeType":"YulIdentifier","src":"58792:3:20"},{"kind":"number","nativeSrc":"58797:2:20","nodeType":"YulLiteral","src":"58797:2:20","type":"","value":"26"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"58733:58:20","nodeType":"YulIdentifier","src":"58733:58:20"},"nativeSrc":"58733:67:20","nodeType":"YulFunctionCall","src":"58733:67:20"},"variableNames":[{"name":"pos","nativeSrc":"58726:3:20","nodeType":"YulIdentifier","src":"58726:3:20"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"58898:3:20","nodeType":"YulIdentifier","src":"58898:3:20"}],"functionName":{"name":"store_literal_in_memory_ae4825d6ed8aab0513e68c27d2710aa68bcf110761c187d047951a5ec2580d8c","nativeSrc":"58809:88:20","nodeType":"YulIdentifier","src":"58809:88:20"},"nativeSrc":"58809:93:20","nodeType":"YulFunctionCall","src":"58809:93:20"},"nativeSrc":"58809:93:20","nodeType":"YulExpressionStatement","src":"58809:93:20"},{"nativeSrc":"58911:19:20","nodeType":"YulAssignment","src":"58911:19:20","value":{"arguments":[{"name":"pos","nativeSrc":"58922:3:20","nodeType":"YulIdentifier","src":"58922:3:20"},{"kind":"number","nativeSrc":"58927:2:20","nodeType":"YulLiteral","src":"58927:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"58918:3:20","nodeType":"YulIdentifier","src":"58918:3:20"},"nativeSrc":"58918:12:20","nodeType":"YulFunctionCall","src":"58918:12:20"},"variableNames":[{"name":"end","nativeSrc":"58911:3:20","nodeType":"YulIdentifier","src":"58911:3:20"}]}]},"name":"abi_encode_t_stringliteral_ae4825d6ed8aab0513e68c27d2710aa68bcf110761c187d047951a5ec2580d8c_to_t_string_memory_ptr_fromStack","nativeSrc":"58570:366:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"58704:3:20","nodeType":"YulTypedName","src":"58704:3:20","type":""}],"returnVariables":[{"name":"end","nativeSrc":"58712:3:20","nodeType":"YulTypedName","src":"58712:3:20","type":""}],"src":"58570:366:20"},{"body":{"nativeSrc":"59113:248:20","nodeType":"YulBlock","src":"59113:248:20","statements":[{"nativeSrc":"59123:26:20","nodeType":"YulAssignment","src":"59123:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"59135:9:20","nodeType":"YulIdentifier","src":"59135:9:20"},{"kind":"number","nativeSrc":"59146:2:20","nodeType":"YulLiteral","src":"59146:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"59131:3:20","nodeType":"YulIdentifier","src":"59131:3:20"},"nativeSrc":"59131:18:20","nodeType":"YulFunctionCall","src":"59131:18:20"},"variableNames":[{"name":"tail","nativeSrc":"59123:4:20","nodeType":"YulIdentifier","src":"59123:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"59170:9:20","nodeType":"YulIdentifier","src":"59170:9:20"},{"kind":"number","nativeSrc":"59181:1:20","nodeType":"YulLiteral","src":"59181:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"59166:3:20","nodeType":"YulIdentifier","src":"59166:3:20"},"nativeSrc":"59166:17:20","nodeType":"YulFunctionCall","src":"59166:17:20"},{"arguments":[{"name":"tail","nativeSrc":"59189:4:20","nodeType":"YulIdentifier","src":"59189:4:20"},{"name":"headStart","nativeSrc":"59195:9:20","nodeType":"YulIdentifier","src":"59195:9:20"}],"functionName":{"name":"sub","nativeSrc":"59185:3:20","nodeType":"YulIdentifier","src":"59185:3:20"},"nativeSrc":"59185:20:20","nodeType":"YulFunctionCall","src":"59185:20:20"}],"functionName":{"name":"mstore","nativeSrc":"59159:6:20","nodeType":"YulIdentifier","src":"59159:6:20"},"nativeSrc":"59159:47:20","nodeType":"YulFunctionCall","src":"59159:47:20"},"nativeSrc":"59159:47:20","nodeType":"YulExpressionStatement","src":"59159:47:20"},{"nativeSrc":"59215:139:20","nodeType":"YulAssignment","src":"59215:139:20","value":{"arguments":[{"name":"tail","nativeSrc":"59349:4:20","nodeType":"YulIdentifier","src":"59349:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_ae4825d6ed8aab0513e68c27d2710aa68bcf110761c187d047951a5ec2580d8c_to_t_string_memory_ptr_fromStack","nativeSrc":"59223:124:20","nodeType":"YulIdentifier","src":"59223:124:20"},"nativeSrc":"59223:131:20","nodeType":"YulFunctionCall","src":"59223:131:20"},"variableNames":[{"name":"tail","nativeSrc":"59215:4:20","nodeType":"YulIdentifier","src":"59215:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_ae4825d6ed8aab0513e68c27d2710aa68bcf110761c187d047951a5ec2580d8c__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"58942:419:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"59093:9:20","nodeType":"YulTypedName","src":"59093:9:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"59108:4:20","nodeType":"YulTypedName","src":"59108:4:20","type":""}],"src":"58942:419:20"},{"body":{"nativeSrc":"59473:65:20","nodeType":"YulBlock","src":"59473:65:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"59495:6:20","nodeType":"YulIdentifier","src":"59495:6:20"},{"kind":"number","nativeSrc":"59503:1:20","nodeType":"YulLiteral","src":"59503:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"59491:3:20","nodeType":"YulIdentifier","src":"59491:3:20"},"nativeSrc":"59491:14:20","nodeType":"YulFunctionCall","src":"59491:14:20"},{"hexValue":"67616d6d61206973206e6f74206f6e206375727665","kind":"string","nativeSrc":"59507:23:20","nodeType":"YulLiteral","src":"59507:23:20","type":"","value":"gamma is not on curve"}],"functionName":{"name":"mstore","nativeSrc":"59484:6:20","nodeType":"YulIdentifier","src":"59484:6:20"},"nativeSrc":"59484:47:20","nodeType":"YulFunctionCall","src":"59484:47:20"},"nativeSrc":"59484:47:20","nodeType":"YulExpressionStatement","src":"59484:47:20"}]},"name":"store_literal_in_memory_c6038a70864418dbffbd772a49c391c3536f6b633b3f2ccbcd6a6e15dbadd34c","nativeSrc":"59367:171:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"59465:6:20","nodeType":"YulTypedName","src":"59465:6:20","type":""}],"src":"59367:171:20"},{"body":{"nativeSrc":"59690:220:20","nodeType":"YulBlock","src":"59690:220:20","statements":[{"nativeSrc":"59700:74:20","nodeType":"YulAssignment","src":"59700:74:20","value":{"arguments":[{"name":"pos","nativeSrc":"59766:3:20","nodeType":"YulIdentifier","src":"59766:3:20"},{"kind":"number","nativeSrc":"59771:2:20","nodeType":"YulLiteral","src":"59771:2:20","type":"","value":"21"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"59707:58:20","nodeType":"YulIdentifier","src":"59707:58:20"},"nativeSrc":"59707:67:20","nodeType":"YulFunctionCall","src":"59707:67:20"},"variableNames":[{"name":"pos","nativeSrc":"59700:3:20","nodeType":"YulIdentifier","src":"59700:3:20"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"59872:3:20","nodeType":"YulIdentifier","src":"59872:3:20"}],"functionName":{"name":"store_literal_in_memory_c6038a70864418dbffbd772a49c391c3536f6b633b3f2ccbcd6a6e15dbadd34c","nativeSrc":"59783:88:20","nodeType":"YulIdentifier","src":"59783:88:20"},"nativeSrc":"59783:93:20","nodeType":"YulFunctionCall","src":"59783:93:20"},"nativeSrc":"59783:93:20","nodeType":"YulExpressionStatement","src":"59783:93:20"},{"nativeSrc":"59885:19:20","nodeType":"YulAssignment","src":"59885:19:20","value":{"arguments":[{"name":"pos","nativeSrc":"59896:3:20","nodeType":"YulIdentifier","src":"59896:3:20"},{"kind":"number","nativeSrc":"59901:2:20","nodeType":"YulLiteral","src":"59901:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"59892:3:20","nodeType":"YulIdentifier","src":"59892:3:20"},"nativeSrc":"59892:12:20","nodeType":"YulFunctionCall","src":"59892:12:20"},"variableNames":[{"name":"end","nativeSrc":"59885:3:20","nodeType":"YulIdentifier","src":"59885:3:20"}]}]},"name":"abi_encode_t_stringliteral_c6038a70864418dbffbd772a49c391c3536f6b633b3f2ccbcd6a6e15dbadd34c_to_t_string_memory_ptr_fromStack","nativeSrc":"59544:366:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"59678:3:20","nodeType":"YulTypedName","src":"59678:3:20","type":""}],"returnVariables":[{"name":"end","nativeSrc":"59686:3:20","nodeType":"YulTypedName","src":"59686:3:20","type":""}],"src":"59544:366:20"},{"body":{"nativeSrc":"60087:248:20","nodeType":"YulBlock","src":"60087:248:20","statements":[{"nativeSrc":"60097:26:20","nodeType":"YulAssignment","src":"60097:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"60109:9:20","nodeType":"YulIdentifier","src":"60109:9:20"},{"kind":"number","nativeSrc":"60120:2:20","nodeType":"YulLiteral","src":"60120:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"60105:3:20","nodeType":"YulIdentifier","src":"60105:3:20"},"nativeSrc":"60105:18:20","nodeType":"YulFunctionCall","src":"60105:18:20"},"variableNames":[{"name":"tail","nativeSrc":"60097:4:20","nodeType":"YulIdentifier","src":"60097:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"60144:9:20","nodeType":"YulIdentifier","src":"60144:9:20"},{"kind":"number","nativeSrc":"60155:1:20","nodeType":"YulLiteral","src":"60155:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"60140:3:20","nodeType":"YulIdentifier","src":"60140:3:20"},"nativeSrc":"60140:17:20","nodeType":"YulFunctionCall","src":"60140:17:20"},{"arguments":[{"name":"tail","nativeSrc":"60163:4:20","nodeType":"YulIdentifier","src":"60163:4:20"},{"name":"headStart","nativeSrc":"60169:9:20","nodeType":"YulIdentifier","src":"60169:9:20"}],"functionName":{"name":"sub","nativeSrc":"60159:3:20","nodeType":"YulIdentifier","src":"60159:3:20"},"nativeSrc":"60159:20:20","nodeType":"YulFunctionCall","src":"60159:20:20"}],"functionName":{"name":"mstore","nativeSrc":"60133:6:20","nodeType":"YulIdentifier","src":"60133:6:20"},"nativeSrc":"60133:47:20","nodeType":"YulFunctionCall","src":"60133:47:20"},"nativeSrc":"60133:47:20","nodeType":"YulExpressionStatement","src":"60133:47:20"},{"nativeSrc":"60189:139:20","nodeType":"YulAssignment","src":"60189:139:20","value":{"arguments":[{"name":"tail","nativeSrc":"60323:4:20","nodeType":"YulIdentifier","src":"60323:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_c6038a70864418dbffbd772a49c391c3536f6b633b3f2ccbcd6a6e15dbadd34c_to_t_string_memory_ptr_fromStack","nativeSrc":"60197:124:20","nodeType":"YulIdentifier","src":"60197:124:20"},"nativeSrc":"60197:131:20","nodeType":"YulFunctionCall","src":"60197:131:20"},"variableNames":[{"name":"tail","nativeSrc":"60189:4:20","nodeType":"YulIdentifier","src":"60189:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_c6038a70864418dbffbd772a49c391c3536f6b633b3f2ccbcd6a6e15dbadd34c__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"59916:419:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"60067:9:20","nodeType":"YulTypedName","src":"60067:9:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"60082:4:20","nodeType":"YulTypedName","src":"60082:4:20","type":""}],"src":"59916:419:20"},{"body":{"nativeSrc":"60447:73:20","nodeType":"YulBlock","src":"60447:73:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"60469:6:20","nodeType":"YulIdentifier","src":"60469:6:20"},{"kind":"number","nativeSrc":"60477:1:20","nodeType":"YulLiteral","src":"60477:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"60465:3:20","nodeType":"YulIdentifier","src":"60465:3:20"},"nativeSrc":"60465:14:20","nodeType":"YulFunctionCall","src":"60465:14:20"},{"hexValue":"6347616d6d615769746e657373206973206e6f74206f6e206375727665","kind":"string","nativeSrc":"60481:31:20","nodeType":"YulLiteral","src":"60481:31:20","type":"","value":"cGammaWitness is not on curve"}],"functionName":{"name":"mstore","nativeSrc":"60458:6:20","nodeType":"YulIdentifier","src":"60458:6:20"},"nativeSrc":"60458:55:20","nodeType":"YulFunctionCall","src":"60458:55:20"},"nativeSrc":"60458:55:20","nodeType":"YulExpressionStatement","src":"60458:55:20"}]},"name":"store_literal_in_memory_9f90959a5b25997fe56cdafc2f72d300e298468f5ac5e847db7890be22108d2b","nativeSrc":"60341:179:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"60439:6:20","nodeType":"YulTypedName","src":"60439:6:20","type":""}],"src":"60341:179:20"},{"body":{"nativeSrc":"60672:220:20","nodeType":"YulBlock","src":"60672:220:20","statements":[{"nativeSrc":"60682:74:20","nodeType":"YulAssignment","src":"60682:74:20","value":{"arguments":[{"name":"pos","nativeSrc":"60748:3:20","nodeType":"YulIdentifier","src":"60748:3:20"},{"kind":"number","nativeSrc":"60753:2:20","nodeType":"YulLiteral","src":"60753:2:20","type":"","value":"29"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"60689:58:20","nodeType":"YulIdentifier","src":"60689:58:20"},"nativeSrc":"60689:67:20","nodeType":"YulFunctionCall","src":"60689:67:20"},"variableNames":[{"name":"pos","nativeSrc":"60682:3:20","nodeType":"YulIdentifier","src":"60682:3:20"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"60854:3:20","nodeType":"YulIdentifier","src":"60854:3:20"}],"functionName":{"name":"store_literal_in_memory_9f90959a5b25997fe56cdafc2f72d300e298468f5ac5e847db7890be22108d2b","nativeSrc":"60765:88:20","nodeType":"YulIdentifier","src":"60765:88:20"},"nativeSrc":"60765:93:20","nodeType":"YulFunctionCall","src":"60765:93:20"},"nativeSrc":"60765:93:20","nodeType":"YulExpressionStatement","src":"60765:93:20"},{"nativeSrc":"60867:19:20","nodeType":"YulAssignment","src":"60867:19:20","value":{"arguments":[{"name":"pos","nativeSrc":"60878:3:20","nodeType":"YulIdentifier","src":"60878:3:20"},{"kind":"number","nativeSrc":"60883:2:20","nodeType":"YulLiteral","src":"60883:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"60874:3:20","nodeType":"YulIdentifier","src":"60874:3:20"},"nativeSrc":"60874:12:20","nodeType":"YulFunctionCall","src":"60874:12:20"},"variableNames":[{"name":"end","nativeSrc":"60867:3:20","nodeType":"YulIdentifier","src":"60867:3:20"}]}]},"name":"abi_encode_t_stringliteral_9f90959a5b25997fe56cdafc2f72d300e298468f5ac5e847db7890be22108d2b_to_t_string_memory_ptr_fromStack","nativeSrc":"60526:366:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"60660:3:20","nodeType":"YulTypedName","src":"60660:3:20","type":""}],"returnVariables":[{"name":"end","nativeSrc":"60668:3:20","nodeType":"YulTypedName","src":"60668:3:20","type":""}],"src":"60526:366:20"},{"body":{"nativeSrc":"61069:248:20","nodeType":"YulBlock","src":"61069:248:20","statements":[{"nativeSrc":"61079:26:20","nodeType":"YulAssignment","src":"61079:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"61091:9:20","nodeType":"YulIdentifier","src":"61091:9:20"},{"kind":"number","nativeSrc":"61102:2:20","nodeType":"YulLiteral","src":"61102:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"61087:3:20","nodeType":"YulIdentifier","src":"61087:3:20"},"nativeSrc":"61087:18:20","nodeType":"YulFunctionCall","src":"61087:18:20"},"variableNames":[{"name":"tail","nativeSrc":"61079:4:20","nodeType":"YulIdentifier","src":"61079:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"61126:9:20","nodeType":"YulIdentifier","src":"61126:9:20"},{"kind":"number","nativeSrc":"61137:1:20","nodeType":"YulLiteral","src":"61137:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"61122:3:20","nodeType":"YulIdentifier","src":"61122:3:20"},"nativeSrc":"61122:17:20","nodeType":"YulFunctionCall","src":"61122:17:20"},{"arguments":[{"name":"tail","nativeSrc":"61145:4:20","nodeType":"YulIdentifier","src":"61145:4:20"},{"name":"headStart","nativeSrc":"61151:9:20","nodeType":"YulIdentifier","src":"61151:9:20"}],"functionName":{"name":"sub","nativeSrc":"61141:3:20","nodeType":"YulIdentifier","src":"61141:3:20"},"nativeSrc":"61141:20:20","nodeType":"YulFunctionCall","src":"61141:20:20"}],"functionName":{"name":"mstore","nativeSrc":"61115:6:20","nodeType":"YulIdentifier","src":"61115:6:20"},"nativeSrc":"61115:47:20","nodeType":"YulFunctionCall","src":"61115:47:20"},"nativeSrc":"61115:47:20","nodeType":"YulExpressionStatement","src":"61115:47:20"},{"nativeSrc":"61171:139:20","nodeType":"YulAssignment","src":"61171:139:20","value":{"arguments":[{"name":"tail","nativeSrc":"61305:4:20","nodeType":"YulIdentifier","src":"61305:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_9f90959a5b25997fe56cdafc2f72d300e298468f5ac5e847db7890be22108d2b_to_t_string_memory_ptr_fromStack","nativeSrc":"61179:124:20","nodeType":"YulIdentifier","src":"61179:124:20"},"nativeSrc":"61179:131:20","nodeType":"YulFunctionCall","src":"61179:131:20"},"variableNames":[{"name":"tail","nativeSrc":"61171:4:20","nodeType":"YulIdentifier","src":"61171:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_9f90959a5b25997fe56cdafc2f72d300e298468f5ac5e847db7890be22108d2b__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"60898:419:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"61049:9:20","nodeType":"YulTypedName","src":"61049:9:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"61064:4:20","nodeType":"YulTypedName","src":"61064:4:20","type":""}],"src":"60898:419:20"},{"body":{"nativeSrc":"61429:72:20","nodeType":"YulBlock","src":"61429:72:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"61451:6:20","nodeType":"YulIdentifier","src":"61451:6:20"},{"kind":"number","nativeSrc":"61459:1:20","nodeType":"YulLiteral","src":"61459:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"61447:3:20","nodeType":"YulIdentifier","src":"61447:3:20"},"nativeSrc":"61447:14:20","nodeType":"YulFunctionCall","src":"61447:14:20"},{"hexValue":"73486173685769746e657373206973206e6f74206f6e206375727665","kind":"string","nativeSrc":"61463:30:20","nodeType":"YulLiteral","src":"61463:30:20","type":"","value":"sHashWitness is not on curve"}],"functionName":{"name":"mstore","nativeSrc":"61440:6:20","nodeType":"YulIdentifier","src":"61440:6:20"},"nativeSrc":"61440:54:20","nodeType":"YulFunctionCall","src":"61440:54:20"},"nativeSrc":"61440:54:20","nodeType":"YulExpressionStatement","src":"61440:54:20"}]},"name":"store_literal_in_memory_ff425c3ce65530e49c0c35a5fdd7a61b00545f1fcc6482c28903cdcf48ac624f","nativeSrc":"61323:178:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"61421:6:20","nodeType":"YulTypedName","src":"61421:6:20","type":""}],"src":"61323:178:20"},{"body":{"nativeSrc":"61653:220:20","nodeType":"YulBlock","src":"61653:220:20","statements":[{"nativeSrc":"61663:74:20","nodeType":"YulAssignment","src":"61663:74:20","value":{"arguments":[{"name":"pos","nativeSrc":"61729:3:20","nodeType":"YulIdentifier","src":"61729:3:20"},{"kind":"number","nativeSrc":"61734:2:20","nodeType":"YulLiteral","src":"61734:2:20","type":"","value":"28"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"61670:58:20","nodeType":"YulIdentifier","src":"61670:58:20"},"nativeSrc":"61670:67:20","nodeType":"YulFunctionCall","src":"61670:67:20"},"variableNames":[{"name":"pos","nativeSrc":"61663:3:20","nodeType":"YulIdentifier","src":"61663:3:20"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"61835:3:20","nodeType":"YulIdentifier","src":"61835:3:20"}],"functionName":{"name":"store_literal_in_memory_ff425c3ce65530e49c0c35a5fdd7a61b00545f1fcc6482c28903cdcf48ac624f","nativeSrc":"61746:88:20","nodeType":"YulIdentifier","src":"61746:88:20"},"nativeSrc":"61746:93:20","nodeType":"YulFunctionCall","src":"61746:93:20"},"nativeSrc":"61746:93:20","nodeType":"YulExpressionStatement","src":"61746:93:20"},{"nativeSrc":"61848:19:20","nodeType":"YulAssignment","src":"61848:19:20","value":{"arguments":[{"name":"pos","nativeSrc":"61859:3:20","nodeType":"YulIdentifier","src":"61859:3:20"},{"kind":"number","nativeSrc":"61864:2:20","nodeType":"YulLiteral","src":"61864:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"61855:3:20","nodeType":"YulIdentifier","src":"61855:3:20"},"nativeSrc":"61855:12:20","nodeType":"YulFunctionCall","src":"61855:12:20"},"variableNames":[{"name":"end","nativeSrc":"61848:3:20","nodeType":"YulIdentifier","src":"61848:3:20"}]}]},"name":"abi_encode_t_stringliteral_ff425c3ce65530e49c0c35a5fdd7a61b00545f1fcc6482c28903cdcf48ac624f_to_t_string_memory_ptr_fromStack","nativeSrc":"61507:366:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"61641:3:20","nodeType":"YulTypedName","src":"61641:3:20","type":""}],"returnVariables":[{"name":"end","nativeSrc":"61649:3:20","nodeType":"YulTypedName","src":"61649:3:20","type":""}],"src":"61507:366:20"},{"body":{"nativeSrc":"62050:248:20","nodeType":"YulBlock","src":"62050:248:20","statements":[{"nativeSrc":"62060:26:20","nodeType":"YulAssignment","src":"62060:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"62072:9:20","nodeType":"YulIdentifier","src":"62072:9:20"},{"kind":"number","nativeSrc":"62083:2:20","nodeType":"YulLiteral","src":"62083:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"62068:3:20","nodeType":"YulIdentifier","src":"62068:3:20"},"nativeSrc":"62068:18:20","nodeType":"YulFunctionCall","src":"62068:18:20"},"variableNames":[{"name":"tail","nativeSrc":"62060:4:20","nodeType":"YulIdentifier","src":"62060:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"62107:9:20","nodeType":"YulIdentifier","src":"62107:9:20"},{"kind":"number","nativeSrc":"62118:1:20","nodeType":"YulLiteral","src":"62118:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"62103:3:20","nodeType":"YulIdentifier","src":"62103:3:20"},"nativeSrc":"62103:17:20","nodeType":"YulFunctionCall","src":"62103:17:20"},{"arguments":[{"name":"tail","nativeSrc":"62126:4:20","nodeType":"YulIdentifier","src":"62126:4:20"},{"name":"headStart","nativeSrc":"62132:9:20","nodeType":"YulIdentifier","src":"62132:9:20"}],"functionName":{"name":"sub","nativeSrc":"62122:3:20","nodeType":"YulIdentifier","src":"62122:3:20"},"nativeSrc":"62122:20:20","nodeType":"YulFunctionCall","src":"62122:20:20"}],"functionName":{"name":"mstore","nativeSrc":"62096:6:20","nodeType":"YulIdentifier","src":"62096:6:20"},"nativeSrc":"62096:47:20","nodeType":"YulFunctionCall","src":"62096:47:20"},"nativeSrc":"62096:47:20","nodeType":"YulExpressionStatement","src":"62096:47:20"},{"nativeSrc":"62152:139:20","nodeType":"YulAssignment","src":"62152:139:20","value":{"arguments":[{"name":"tail","nativeSrc":"62286:4:20","nodeType":"YulIdentifier","src":"62286:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_ff425c3ce65530e49c0c35a5fdd7a61b00545f1fcc6482c28903cdcf48ac624f_to_t_string_memory_ptr_fromStack","nativeSrc":"62160:124:20","nodeType":"YulIdentifier","src":"62160:124:20"},"nativeSrc":"62160:131:20","nodeType":"YulFunctionCall","src":"62160:131:20"},"variableNames":[{"name":"tail","nativeSrc":"62152:4:20","nodeType":"YulIdentifier","src":"62152:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_ff425c3ce65530e49c0c35a5fdd7a61b00545f1fcc6482c28903cdcf48ac624f__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"61879:419:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"62030:9:20","nodeType":"YulTypedName","src":"62030:9:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"62045:4:20","nodeType":"YulTypedName","src":"62045:4:20","type":""}],"src":"61879:419:20"},{"body":{"nativeSrc":"62410:69:20","nodeType":"YulBlock","src":"62410:69:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"62432:6:20","nodeType":"YulIdentifier","src":"62432:6:20"},{"kind":"number","nativeSrc":"62440:1:20","nodeType":"YulLiteral","src":"62440:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"62428:3:20","nodeType":"YulIdentifier","src":"62428:3:20"},"nativeSrc":"62428:14:20","nodeType":"YulFunctionCall","src":"62428:14:20"},{"hexValue":"6164647228632a706b2b732a6729213d5f755769746e657373","kind":"string","nativeSrc":"62444:27:20","nodeType":"YulLiteral","src":"62444:27:20","type":"","value":"addr(c*pk+s*g)!=_uWitness"}],"functionName":{"name":"mstore","nativeSrc":"62421:6:20","nodeType":"YulIdentifier","src":"62421:6:20"},"nativeSrc":"62421:51:20","nodeType":"YulFunctionCall","src":"62421:51:20"},"nativeSrc":"62421:51:20","nodeType":"YulExpressionStatement","src":"62421:51:20"}]},"name":"store_literal_in_memory_897d9ab785e875f3b83c51a39f09c2f6a852e06c26e3faf90359e5ad589f8cf1","nativeSrc":"62304:175:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"62402:6:20","nodeType":"YulTypedName","src":"62402:6:20","type":""}],"src":"62304:175:20"},{"body":{"nativeSrc":"62631:220:20","nodeType":"YulBlock","src":"62631:220:20","statements":[{"nativeSrc":"62641:74:20","nodeType":"YulAssignment","src":"62641:74:20","value":{"arguments":[{"name":"pos","nativeSrc":"62707:3:20","nodeType":"YulIdentifier","src":"62707:3:20"},{"kind":"number","nativeSrc":"62712:2:20","nodeType":"YulLiteral","src":"62712:2:20","type":"","value":"25"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"62648:58:20","nodeType":"YulIdentifier","src":"62648:58:20"},"nativeSrc":"62648:67:20","nodeType":"YulFunctionCall","src":"62648:67:20"},"variableNames":[{"name":"pos","nativeSrc":"62641:3:20","nodeType":"YulIdentifier","src":"62641:3:20"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"62813:3:20","nodeType":"YulIdentifier","src":"62813:3:20"}],"functionName":{"name":"store_literal_in_memory_897d9ab785e875f3b83c51a39f09c2f6a852e06c26e3faf90359e5ad589f8cf1","nativeSrc":"62724:88:20","nodeType":"YulIdentifier","src":"62724:88:20"},"nativeSrc":"62724:93:20","nodeType":"YulFunctionCall","src":"62724:93:20"},"nativeSrc":"62724:93:20","nodeType":"YulExpressionStatement","src":"62724:93:20"},{"nativeSrc":"62826:19:20","nodeType":"YulAssignment","src":"62826:19:20","value":{"arguments":[{"name":"pos","nativeSrc":"62837:3:20","nodeType":"YulIdentifier","src":"62837:3:20"},{"kind":"number","nativeSrc":"62842:2:20","nodeType":"YulLiteral","src":"62842:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"62833:3:20","nodeType":"YulIdentifier","src":"62833:3:20"},"nativeSrc":"62833:12:20","nodeType":"YulFunctionCall","src":"62833:12:20"},"variableNames":[{"name":"end","nativeSrc":"62826:3:20","nodeType":"YulIdentifier","src":"62826:3:20"}]}]},"name":"abi_encode_t_stringliteral_897d9ab785e875f3b83c51a39f09c2f6a852e06c26e3faf90359e5ad589f8cf1_to_t_string_memory_ptr_fromStack","nativeSrc":"62485:366:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"62619:3:20","nodeType":"YulTypedName","src":"62619:3:20","type":""}],"returnVariables":[{"name":"end","nativeSrc":"62627:3:20","nodeType":"YulTypedName","src":"62627:3:20","type":""}],"src":"62485:366:20"},{"body":{"nativeSrc":"63028:248:20","nodeType":"YulBlock","src":"63028:248:20","statements":[{"nativeSrc":"63038:26:20","nodeType":"YulAssignment","src":"63038:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"63050:9:20","nodeType":"YulIdentifier","src":"63050:9:20"},{"kind":"number","nativeSrc":"63061:2:20","nodeType":"YulLiteral","src":"63061:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"63046:3:20","nodeType":"YulIdentifier","src":"63046:3:20"},"nativeSrc":"63046:18:20","nodeType":"YulFunctionCall","src":"63046:18:20"},"variableNames":[{"name":"tail","nativeSrc":"63038:4:20","nodeType":"YulIdentifier","src":"63038:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"63085:9:20","nodeType":"YulIdentifier","src":"63085:9:20"},{"kind":"number","nativeSrc":"63096:1:20","nodeType":"YulLiteral","src":"63096:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"63081:3:20","nodeType":"YulIdentifier","src":"63081:3:20"},"nativeSrc":"63081:17:20","nodeType":"YulFunctionCall","src":"63081:17:20"},{"arguments":[{"name":"tail","nativeSrc":"63104:4:20","nodeType":"YulIdentifier","src":"63104:4:20"},{"name":"headStart","nativeSrc":"63110:9:20","nodeType":"YulIdentifier","src":"63110:9:20"}],"functionName":{"name":"sub","nativeSrc":"63100:3:20","nodeType":"YulIdentifier","src":"63100:3:20"},"nativeSrc":"63100:20:20","nodeType":"YulFunctionCall","src":"63100:20:20"}],"functionName":{"name":"mstore","nativeSrc":"63074:6:20","nodeType":"YulIdentifier","src":"63074:6:20"},"nativeSrc":"63074:47:20","nodeType":"YulFunctionCall","src":"63074:47:20"},"nativeSrc":"63074:47:20","nodeType":"YulExpressionStatement","src":"63074:47:20"},{"nativeSrc":"63130:139:20","nodeType":"YulAssignment","src":"63130:139:20","value":{"arguments":[{"name":"tail","nativeSrc":"63264:4:20","nodeType":"YulIdentifier","src":"63264:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_897d9ab785e875f3b83c51a39f09c2f6a852e06c26e3faf90359e5ad589f8cf1_to_t_string_memory_ptr_fromStack","nativeSrc":"63138:124:20","nodeType":"YulIdentifier","src":"63138:124:20"},"nativeSrc":"63138:131:20","nodeType":"YulFunctionCall","src":"63138:131:20"},"variableNames":[{"name":"tail","nativeSrc":"63130:4:20","nodeType":"YulIdentifier","src":"63130:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_897d9ab785e875f3b83c51a39f09c2f6a852e06c26e3faf90359e5ad589f8cf1__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"62857:419:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"63008:9:20","nodeType":"YulTypedName","src":"63008:9:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"63023:4:20","nodeType":"YulTypedName","src":"63023:4:20","type":""}],"src":"62857:419:20"},{"body":{"nativeSrc":"63388:57:20","nodeType":"YulBlock","src":"63388:57:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"63410:6:20","nodeType":"YulIdentifier","src":"63410:6:20"},{"kind":"number","nativeSrc":"63418:1:20","nodeType":"YulLiteral","src":"63418:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"63406:3:20","nodeType":"YulIdentifier","src":"63406:3:20"},"nativeSrc":"63406:14:20","nodeType":"YulFunctionCall","src":"63406:14:20"},{"hexValue":"696e76616c69642070726f6f66","kind":"string","nativeSrc":"63422:15:20","nodeType":"YulLiteral","src":"63422:15:20","type":"","value":"invalid proof"}],"functionName":{"name":"mstore","nativeSrc":"63399:6:20","nodeType":"YulIdentifier","src":"63399:6:20"},"nativeSrc":"63399:39:20","nodeType":"YulFunctionCall","src":"63399:39:20"},"nativeSrc":"63399:39:20","nodeType":"YulExpressionStatement","src":"63399:39:20"}]},"name":"store_literal_in_memory_cfa179d50ad7851ac140a84fb212f48699dbd00170b3afe087b0d09f632d1624","nativeSrc":"63282:163:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"63380:6:20","nodeType":"YulTypedName","src":"63380:6:20","type":""}],"src":"63282:163:20"},{"body":{"nativeSrc":"63597:220:20","nodeType":"YulBlock","src":"63597:220:20","statements":[{"nativeSrc":"63607:74:20","nodeType":"YulAssignment","src":"63607:74:20","value":{"arguments":[{"name":"pos","nativeSrc":"63673:3:20","nodeType":"YulIdentifier","src":"63673:3:20"},{"kind":"number","nativeSrc":"63678:2:20","nodeType":"YulLiteral","src":"63678:2:20","type":"","value":"13"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"63614:58:20","nodeType":"YulIdentifier","src":"63614:58:20"},"nativeSrc":"63614:67:20","nodeType":"YulFunctionCall","src":"63614:67:20"},"variableNames":[{"name":"pos","nativeSrc":"63607:3:20","nodeType":"YulIdentifier","src":"63607:3:20"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"63779:3:20","nodeType":"YulIdentifier","src":"63779:3:20"}],"functionName":{"name":"store_literal_in_memory_cfa179d50ad7851ac140a84fb212f48699dbd00170b3afe087b0d09f632d1624","nativeSrc":"63690:88:20","nodeType":"YulIdentifier","src":"63690:88:20"},"nativeSrc":"63690:93:20","nodeType":"YulFunctionCall","src":"63690:93:20"},"nativeSrc":"63690:93:20","nodeType":"YulExpressionStatement","src":"63690:93:20"},{"nativeSrc":"63792:19:20","nodeType":"YulAssignment","src":"63792:19:20","value":{"arguments":[{"name":"pos","nativeSrc":"63803:3:20","nodeType":"YulIdentifier","src":"63803:3:20"},{"kind":"number","nativeSrc":"63808:2:20","nodeType":"YulLiteral","src":"63808:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"63799:3:20","nodeType":"YulIdentifier","src":"63799:3:20"},"nativeSrc":"63799:12:20","nodeType":"YulFunctionCall","src":"63799:12:20"},"variableNames":[{"name":"end","nativeSrc":"63792:3:20","nodeType":"YulIdentifier","src":"63792:3:20"}]}]},"name":"abi_encode_t_stringliteral_cfa179d50ad7851ac140a84fb212f48699dbd00170b3afe087b0d09f632d1624_to_t_string_memory_ptr_fromStack","nativeSrc":"63451:366:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"63585:3:20","nodeType":"YulTypedName","src":"63585:3:20","type":""}],"returnVariables":[{"name":"end","nativeSrc":"63593:3:20","nodeType":"YulTypedName","src":"63593:3:20","type":""}],"src":"63451:366:20"},{"body":{"nativeSrc":"63994:248:20","nodeType":"YulBlock","src":"63994:248:20","statements":[{"nativeSrc":"64004:26:20","nodeType":"YulAssignment","src":"64004:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"64016:9:20","nodeType":"YulIdentifier","src":"64016:9:20"},{"kind":"number","nativeSrc":"64027:2:20","nodeType":"YulLiteral","src":"64027:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"64012:3:20","nodeType":"YulIdentifier","src":"64012:3:20"},"nativeSrc":"64012:18:20","nodeType":"YulFunctionCall","src":"64012:18:20"},"variableNames":[{"name":"tail","nativeSrc":"64004:4:20","nodeType":"YulIdentifier","src":"64004:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"64051:9:20","nodeType":"YulIdentifier","src":"64051:9:20"},{"kind":"number","nativeSrc":"64062:1:20","nodeType":"YulLiteral","src":"64062:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"64047:3:20","nodeType":"YulIdentifier","src":"64047:3:20"},"nativeSrc":"64047:17:20","nodeType":"YulFunctionCall","src":"64047:17:20"},{"arguments":[{"name":"tail","nativeSrc":"64070:4:20","nodeType":"YulIdentifier","src":"64070:4:20"},{"name":"headStart","nativeSrc":"64076:9:20","nodeType":"YulIdentifier","src":"64076:9:20"}],"functionName":{"name":"sub","nativeSrc":"64066:3:20","nodeType":"YulIdentifier","src":"64066:3:20"},"nativeSrc":"64066:20:20","nodeType":"YulFunctionCall","src":"64066:20:20"}],"functionName":{"name":"mstore","nativeSrc":"64040:6:20","nodeType":"YulIdentifier","src":"64040:6:20"},"nativeSrc":"64040:47:20","nodeType":"YulFunctionCall","src":"64040:47:20"},"nativeSrc":"64040:47:20","nodeType":"YulExpressionStatement","src":"64040:47:20"},{"nativeSrc":"64096:139:20","nodeType":"YulAssignment","src":"64096:139:20","value":{"arguments":[{"name":"tail","nativeSrc":"64230:4:20","nodeType":"YulIdentifier","src":"64230:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_cfa179d50ad7851ac140a84fb212f48699dbd00170b3afe087b0d09f632d1624_to_t_string_memory_ptr_fromStack","nativeSrc":"64104:124:20","nodeType":"YulIdentifier","src":"64104:124:20"},"nativeSrc":"64104:131:20","nodeType":"YulFunctionCall","src":"64104:131:20"},"variableNames":[{"name":"tail","nativeSrc":"64096:4:20","nodeType":"YulIdentifier","src":"64096:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_cfa179d50ad7851ac140a84fb212f48699dbd00170b3afe087b0d09f632d1624__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"63823:419:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"63974:9:20","nodeType":"YulTypedName","src":"63974:9:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"63989:4:20","nodeType":"YulTypedName","src":"63989:4:20","type":""}],"src":"63823:419:20"},{"body":{"nativeSrc":"64354:62:20","nodeType":"YulBlock","src":"64354:62:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"64376:6:20","nodeType":"YulIdentifier","src":"64376:6:20"},{"kind":"number","nativeSrc":"64384:1:20","nodeType":"YulLiteral","src":"64384:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"64372:3:20","nodeType":"YulIdentifier","src":"64372:3:20"},"nativeSrc":"64372:14:20","nodeType":"YulFunctionCall","src":"64372:14:20"},{"hexValue":"696e76616c696420782d6f7264696e617465","kind":"string","nativeSrc":"64388:20:20","nodeType":"YulLiteral","src":"64388:20:20","type":"","value":"invalid x-ordinate"}],"functionName":{"name":"mstore","nativeSrc":"64365:6:20","nodeType":"YulIdentifier","src":"64365:6:20"},"nativeSrc":"64365:44:20","nodeType":"YulFunctionCall","src":"64365:44:20"},"nativeSrc":"64365:44:20","nodeType":"YulExpressionStatement","src":"64365:44:20"}]},"name":"store_literal_in_memory_787cf99fb194dba922561b5b1fd0b18a6a49c57eaa01d9c5279f2b2a5bdc1a86","nativeSrc":"64248:168:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"64346:6:20","nodeType":"YulTypedName","src":"64346:6:20","type":""}],"src":"64248:168:20"},{"body":{"nativeSrc":"64568:220:20","nodeType":"YulBlock","src":"64568:220:20","statements":[{"nativeSrc":"64578:74:20","nodeType":"YulAssignment","src":"64578:74:20","value":{"arguments":[{"name":"pos","nativeSrc":"64644:3:20","nodeType":"YulIdentifier","src":"64644:3:20"},{"kind":"number","nativeSrc":"64649:2:20","nodeType":"YulLiteral","src":"64649:2:20","type":"","value":"18"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"64585:58:20","nodeType":"YulIdentifier","src":"64585:58:20"},"nativeSrc":"64585:67:20","nodeType":"YulFunctionCall","src":"64585:67:20"},"variableNames":[{"name":"pos","nativeSrc":"64578:3:20","nodeType":"YulIdentifier","src":"64578:3:20"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"64750:3:20","nodeType":"YulIdentifier","src":"64750:3:20"}],"functionName":{"name":"store_literal_in_memory_787cf99fb194dba922561b5b1fd0b18a6a49c57eaa01d9c5279f2b2a5bdc1a86","nativeSrc":"64661:88:20","nodeType":"YulIdentifier","src":"64661:88:20"},"nativeSrc":"64661:93:20","nodeType":"YulFunctionCall","src":"64661:93:20"},"nativeSrc":"64661:93:20","nodeType":"YulExpressionStatement","src":"64661:93:20"},{"nativeSrc":"64763:19:20","nodeType":"YulAssignment","src":"64763:19:20","value":{"arguments":[{"name":"pos","nativeSrc":"64774:3:20","nodeType":"YulIdentifier","src":"64774:3:20"},{"kind":"number","nativeSrc":"64779:2:20","nodeType":"YulLiteral","src":"64779:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"64770:3:20","nodeType":"YulIdentifier","src":"64770:3:20"},"nativeSrc":"64770:12:20","nodeType":"YulFunctionCall","src":"64770:12:20"},"variableNames":[{"name":"end","nativeSrc":"64763:3:20","nodeType":"YulIdentifier","src":"64763:3:20"}]}]},"name":"abi_encode_t_stringliteral_787cf99fb194dba922561b5b1fd0b18a6a49c57eaa01d9c5279f2b2a5bdc1a86_to_t_string_memory_ptr_fromStack","nativeSrc":"64422:366:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"64556:3:20","nodeType":"YulTypedName","src":"64556:3:20","type":""}],"returnVariables":[{"name":"end","nativeSrc":"64564:3:20","nodeType":"YulTypedName","src":"64564:3:20","type":""}],"src":"64422:366:20"},{"body":{"nativeSrc":"64965:248:20","nodeType":"YulBlock","src":"64965:248:20","statements":[{"nativeSrc":"64975:26:20","nodeType":"YulAssignment","src":"64975:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"64987:9:20","nodeType":"YulIdentifier","src":"64987:9:20"},{"kind":"number","nativeSrc":"64998:2:20","nodeType":"YulLiteral","src":"64998:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"64983:3:20","nodeType":"YulIdentifier","src":"64983:3:20"},"nativeSrc":"64983:18:20","nodeType":"YulFunctionCall","src":"64983:18:20"},"variableNames":[{"name":"tail","nativeSrc":"64975:4:20","nodeType":"YulIdentifier","src":"64975:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"65022:9:20","nodeType":"YulIdentifier","src":"65022:9:20"},{"kind":"number","nativeSrc":"65033:1:20","nodeType":"YulLiteral","src":"65033:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"65018:3:20","nodeType":"YulIdentifier","src":"65018:3:20"},"nativeSrc":"65018:17:20","nodeType":"YulFunctionCall","src":"65018:17:20"},{"arguments":[{"name":"tail","nativeSrc":"65041:4:20","nodeType":"YulIdentifier","src":"65041:4:20"},{"name":"headStart","nativeSrc":"65047:9:20","nodeType":"YulIdentifier","src":"65047:9:20"}],"functionName":{"name":"sub","nativeSrc":"65037:3:20","nodeType":"YulIdentifier","src":"65037:3:20"},"nativeSrc":"65037:20:20","nodeType":"YulFunctionCall","src":"65037:20:20"}],"functionName":{"name":"mstore","nativeSrc":"65011:6:20","nodeType":"YulIdentifier","src":"65011:6:20"},"nativeSrc":"65011:47:20","nodeType":"YulFunctionCall","src":"65011:47:20"},"nativeSrc":"65011:47:20","nodeType":"YulExpressionStatement","src":"65011:47:20"},{"nativeSrc":"65067:139:20","nodeType":"YulAssignment","src":"65067:139:20","value":{"arguments":[{"name":"tail","nativeSrc":"65201:4:20","nodeType":"YulIdentifier","src":"65201:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_787cf99fb194dba922561b5b1fd0b18a6a49c57eaa01d9c5279f2b2a5bdc1a86_to_t_string_memory_ptr_fromStack","nativeSrc":"65075:124:20","nodeType":"YulIdentifier","src":"65075:124:20"},"nativeSrc":"65075:131:20","nodeType":"YulFunctionCall","src":"65075:131:20"},"variableNames":[{"name":"tail","nativeSrc":"65067:4:20","nodeType":"YulIdentifier","src":"65067:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_787cf99fb194dba922561b5b1fd0b18a6a49c57eaa01d9c5279f2b2a5bdc1a86__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"64794:419:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"64945:9:20","nodeType":"YulTypedName","src":"64945:9:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"64960:4:20","nodeType":"YulTypedName","src":"64960:4:20","type":""}],"src":"64794:419:20"},{"body":{"nativeSrc":"65325:62:20","nodeType":"YulBlock","src":"65325:62:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"65347:6:20","nodeType":"YulIdentifier","src":"65347:6:20"},{"kind":"number","nativeSrc":"65355:1:20","nodeType":"YulLiteral","src":"65355:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"65343:3:20","nodeType":"YulIdentifier","src":"65343:3:20"},"nativeSrc":"65343:14:20","nodeType":"YulFunctionCall","src":"65343:14:20"},{"hexValue":"696e76616c696420792d6f7264696e617465","kind":"string","nativeSrc":"65359:20:20","nodeType":"YulLiteral","src":"65359:20:20","type":"","value":"invalid y-ordinate"}],"functionName":{"name":"mstore","nativeSrc":"65336:6:20","nodeType":"YulIdentifier","src":"65336:6:20"},"nativeSrc":"65336:44:20","nodeType":"YulFunctionCall","src":"65336:44:20"},"nativeSrc":"65336:44:20","nodeType":"YulExpressionStatement","src":"65336:44:20"}]},"name":"store_literal_in_memory_ecc598139057476f7e46578e2e254b173afe0910225980583669989d2a737f84","nativeSrc":"65219:168:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"65317:6:20","nodeType":"YulTypedName","src":"65317:6:20","type":""}],"src":"65219:168:20"},{"body":{"nativeSrc":"65539:220:20","nodeType":"YulBlock","src":"65539:220:20","statements":[{"nativeSrc":"65549:74:20","nodeType":"YulAssignment","src":"65549:74:20","value":{"arguments":[{"name":"pos","nativeSrc":"65615:3:20","nodeType":"YulIdentifier","src":"65615:3:20"},{"kind":"number","nativeSrc":"65620:2:20","nodeType":"YulLiteral","src":"65620:2:20","type":"","value":"18"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"65556:58:20","nodeType":"YulIdentifier","src":"65556:58:20"},"nativeSrc":"65556:67:20","nodeType":"YulFunctionCall","src":"65556:67:20"},"variableNames":[{"name":"pos","nativeSrc":"65549:3:20","nodeType":"YulIdentifier","src":"65549:3:20"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"65721:3:20","nodeType":"YulIdentifier","src":"65721:3:20"}],"functionName":{"name":"store_literal_in_memory_ecc598139057476f7e46578e2e254b173afe0910225980583669989d2a737f84","nativeSrc":"65632:88:20","nodeType":"YulIdentifier","src":"65632:88:20"},"nativeSrc":"65632:93:20","nodeType":"YulFunctionCall","src":"65632:93:20"},"nativeSrc":"65632:93:20","nodeType":"YulExpressionStatement","src":"65632:93:20"},{"nativeSrc":"65734:19:20","nodeType":"YulAssignment","src":"65734:19:20","value":{"arguments":[{"name":"pos","nativeSrc":"65745:3:20","nodeType":"YulIdentifier","src":"65745:3:20"},{"kind":"number","nativeSrc":"65750:2:20","nodeType":"YulLiteral","src":"65750:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"65741:3:20","nodeType":"YulIdentifier","src":"65741:3:20"},"nativeSrc":"65741:12:20","nodeType":"YulFunctionCall","src":"65741:12:20"},"variableNames":[{"name":"end","nativeSrc":"65734:3:20","nodeType":"YulIdentifier","src":"65734:3:20"}]}]},"name":"abi_encode_t_stringliteral_ecc598139057476f7e46578e2e254b173afe0910225980583669989d2a737f84_to_t_string_memory_ptr_fromStack","nativeSrc":"65393:366:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"65527:3:20","nodeType":"YulTypedName","src":"65527:3:20","type":""}],"returnVariables":[{"name":"end","nativeSrc":"65535:3:20","nodeType":"YulTypedName","src":"65535:3:20","type":""}],"src":"65393:366:20"},{"body":{"nativeSrc":"65936:248:20","nodeType":"YulBlock","src":"65936:248:20","statements":[{"nativeSrc":"65946:26:20","nodeType":"YulAssignment","src":"65946:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"65958:9:20","nodeType":"YulIdentifier","src":"65958:9:20"},{"kind":"number","nativeSrc":"65969:2:20","nodeType":"YulLiteral","src":"65969:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"65954:3:20","nodeType":"YulIdentifier","src":"65954:3:20"},"nativeSrc":"65954:18:20","nodeType":"YulFunctionCall","src":"65954:18:20"},"variableNames":[{"name":"tail","nativeSrc":"65946:4:20","nodeType":"YulIdentifier","src":"65946:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"65993:9:20","nodeType":"YulIdentifier","src":"65993:9:20"},{"kind":"number","nativeSrc":"66004:1:20","nodeType":"YulLiteral","src":"66004:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"65989:3:20","nodeType":"YulIdentifier","src":"65989:3:20"},"nativeSrc":"65989:17:20","nodeType":"YulFunctionCall","src":"65989:17:20"},{"arguments":[{"name":"tail","nativeSrc":"66012:4:20","nodeType":"YulIdentifier","src":"66012:4:20"},{"name":"headStart","nativeSrc":"66018:9:20","nodeType":"YulIdentifier","src":"66018:9:20"}],"functionName":{"name":"sub","nativeSrc":"66008:3:20","nodeType":"YulIdentifier","src":"66008:3:20"},"nativeSrc":"66008:20:20","nodeType":"YulFunctionCall","src":"66008:20:20"}],"functionName":{"name":"mstore","nativeSrc":"65982:6:20","nodeType":"YulIdentifier","src":"65982:6:20"},"nativeSrc":"65982:47:20","nodeType":"YulFunctionCall","src":"65982:47:20"},"nativeSrc":"65982:47:20","nodeType":"YulExpressionStatement","src":"65982:47:20"},{"nativeSrc":"66038:139:20","nodeType":"YulAssignment","src":"66038:139:20","value":{"arguments":[{"name":"tail","nativeSrc":"66172:4:20","nodeType":"YulIdentifier","src":"66172:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_ecc598139057476f7e46578e2e254b173afe0910225980583669989d2a737f84_to_t_string_memory_ptr_fromStack","nativeSrc":"66046:124:20","nodeType":"YulIdentifier","src":"66046:124:20"},"nativeSrc":"66046:131:20","nodeType":"YulFunctionCall","src":"66046:131:20"},"variableNames":[{"name":"tail","nativeSrc":"66038:4:20","nodeType":"YulIdentifier","src":"66038:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_ecc598139057476f7e46578e2e254b173afe0910225980583669989d2a737f84__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"65765:419:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"65916:9:20","nodeType":"YulTypedName","src":"65916:9:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"65931:4:20","nodeType":"YulTypedName","src":"65931:4:20","type":""}],"src":"65765:419:20"},{"body":{"nativeSrc":"66296:55:20","nodeType":"YulBlock","src":"66296:55:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"66318:6:20","nodeType":"YulIdentifier","src":"66318:6:20"},{"kind":"number","nativeSrc":"66326:1:20","nodeType":"YulLiteral","src":"66326:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"66314:3:20","nodeType":"YulIdentifier","src":"66314:3:20"},"nativeSrc":"66314:14:20","nodeType":"YulFunctionCall","src":"66314:14:20"},{"hexValue":"626164207769746e657373","kind":"string","nativeSrc":"66330:13:20","nodeType":"YulLiteral","src":"66330:13:20","type":"","value":"bad witness"}],"functionName":{"name":"mstore","nativeSrc":"66307:6:20","nodeType":"YulIdentifier","src":"66307:6:20"},"nativeSrc":"66307:37:20","nodeType":"YulFunctionCall","src":"66307:37:20"},"nativeSrc":"66307:37:20","nodeType":"YulExpressionStatement","src":"66307:37:20"}]},"name":"store_literal_in_memory_7fcbfa9df9f83be5218dd62480bcb5cdae56a970e549b88ff2403f5fcded9211","nativeSrc":"66190:161:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"66288:6:20","nodeType":"YulTypedName","src":"66288:6:20","type":""}],"src":"66190:161:20"},{"body":{"nativeSrc":"66503:220:20","nodeType":"YulBlock","src":"66503:220:20","statements":[{"nativeSrc":"66513:74:20","nodeType":"YulAssignment","src":"66513:74:20","value":{"arguments":[{"name":"pos","nativeSrc":"66579:3:20","nodeType":"YulIdentifier","src":"66579:3:20"},{"kind":"number","nativeSrc":"66584:2:20","nodeType":"YulLiteral","src":"66584:2:20","type":"","value":"11"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"66520:58:20","nodeType":"YulIdentifier","src":"66520:58:20"},"nativeSrc":"66520:67:20","nodeType":"YulFunctionCall","src":"66520:67:20"},"variableNames":[{"name":"pos","nativeSrc":"66513:3:20","nodeType":"YulIdentifier","src":"66513:3:20"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"66685:3:20","nodeType":"YulIdentifier","src":"66685:3:20"}],"functionName":{"name":"store_literal_in_memory_7fcbfa9df9f83be5218dd62480bcb5cdae56a970e549b88ff2403f5fcded9211","nativeSrc":"66596:88:20","nodeType":"YulIdentifier","src":"66596:88:20"},"nativeSrc":"66596:93:20","nodeType":"YulFunctionCall","src":"66596:93:20"},"nativeSrc":"66596:93:20","nodeType":"YulExpressionStatement","src":"66596:93:20"},{"nativeSrc":"66698:19:20","nodeType":"YulAssignment","src":"66698:19:20","value":{"arguments":[{"name":"pos","nativeSrc":"66709:3:20","nodeType":"YulIdentifier","src":"66709:3:20"},{"kind":"number","nativeSrc":"66714:2:20","nodeType":"YulLiteral","src":"66714:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"66705:3:20","nodeType":"YulIdentifier","src":"66705:3:20"},"nativeSrc":"66705:12:20","nodeType":"YulFunctionCall","src":"66705:12:20"},"variableNames":[{"name":"end","nativeSrc":"66698:3:20","nodeType":"YulIdentifier","src":"66698:3:20"}]}]},"name":"abi_encode_t_stringliteral_7fcbfa9df9f83be5218dd62480bcb5cdae56a970e549b88ff2403f5fcded9211_to_t_string_memory_ptr_fromStack","nativeSrc":"66357:366:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"66491:3:20","nodeType":"YulTypedName","src":"66491:3:20","type":""}],"returnVariables":[{"name":"end","nativeSrc":"66499:3:20","nodeType":"YulTypedName","src":"66499:3:20","type":""}],"src":"66357:366:20"},{"body":{"nativeSrc":"66900:248:20","nodeType":"YulBlock","src":"66900:248:20","statements":[{"nativeSrc":"66910:26:20","nodeType":"YulAssignment","src":"66910:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"66922:9:20","nodeType":"YulIdentifier","src":"66922:9:20"},{"kind":"number","nativeSrc":"66933:2:20","nodeType":"YulLiteral","src":"66933:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"66918:3:20","nodeType":"YulIdentifier","src":"66918:3:20"},"nativeSrc":"66918:18:20","nodeType":"YulFunctionCall","src":"66918:18:20"},"variableNames":[{"name":"tail","nativeSrc":"66910:4:20","nodeType":"YulIdentifier","src":"66910:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"66957:9:20","nodeType":"YulIdentifier","src":"66957:9:20"},{"kind":"number","nativeSrc":"66968:1:20","nodeType":"YulLiteral","src":"66968:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"66953:3:20","nodeType":"YulIdentifier","src":"66953:3:20"},"nativeSrc":"66953:17:20","nodeType":"YulFunctionCall","src":"66953:17:20"},{"arguments":[{"name":"tail","nativeSrc":"66976:4:20","nodeType":"YulIdentifier","src":"66976:4:20"},{"name":"headStart","nativeSrc":"66982:9:20","nodeType":"YulIdentifier","src":"66982:9:20"}],"functionName":{"name":"sub","nativeSrc":"66972:3:20","nodeType":"YulIdentifier","src":"66972:3:20"},"nativeSrc":"66972:20:20","nodeType":"YulFunctionCall","src":"66972:20:20"}],"functionName":{"name":"mstore","nativeSrc":"66946:6:20","nodeType":"YulIdentifier","src":"66946:6:20"},"nativeSrc":"66946:47:20","nodeType":"YulFunctionCall","src":"66946:47:20"},"nativeSrc":"66946:47:20","nodeType":"YulExpressionStatement","src":"66946:47:20"},{"nativeSrc":"67002:139:20","nodeType":"YulAssignment","src":"67002:139:20","value":{"arguments":[{"name":"tail","nativeSrc":"67136:4:20","nodeType":"YulIdentifier","src":"67136:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_7fcbfa9df9f83be5218dd62480bcb5cdae56a970e549b88ff2403f5fcded9211_to_t_string_memory_ptr_fromStack","nativeSrc":"67010:124:20","nodeType":"YulIdentifier","src":"67010:124:20"},"nativeSrc":"67010:131:20","nodeType":"YulFunctionCall","src":"67010:131:20"},"variableNames":[{"name":"tail","nativeSrc":"67002:4:20","nodeType":"YulIdentifier","src":"67002:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_7fcbfa9df9f83be5218dd62480bcb5cdae56a970e549b88ff2403f5fcded9211__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"66729:419:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"66880:9:20","nodeType":"YulTypedName","src":"66880:9:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"66895:4:20","nodeType":"YulTypedName","src":"66895:4:20","type":""}],"src":"66729:419:20"},{"body":{"nativeSrc":"67197:43:20","nodeType":"YulBlock","src":"67197:43:20","statements":[{"nativeSrc":"67207:27:20","nodeType":"YulAssignment","src":"67207:27:20","value":{"arguments":[{"name":"value","nativeSrc":"67222:5:20","nodeType":"YulIdentifier","src":"67222:5:20"},{"kind":"number","nativeSrc":"67229:4:20","nodeType":"YulLiteral","src":"67229:4:20","type":"","value":"0xff"}],"functionName":{"name":"and","nativeSrc":"67218:3:20","nodeType":"YulIdentifier","src":"67218:3:20"},"nativeSrc":"67218:16:20","nodeType":"YulFunctionCall","src":"67218:16:20"},"variableNames":[{"name":"cleaned","nativeSrc":"67207:7:20","nodeType":"YulIdentifier","src":"67207:7:20"}]}]},"name":"cleanup_t_uint8","nativeSrc":"67154:86:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"67179:5:20","nodeType":"YulTypedName","src":"67179:5:20","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"67189:7:20","nodeType":"YulTypedName","src":"67189:7:20","type":""}],"src":"67154:86:20"},{"body":{"nativeSrc":"67307:51:20","nodeType":"YulBlock","src":"67307:51:20","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"67324:3:20","nodeType":"YulIdentifier","src":"67324:3:20"},{"arguments":[{"name":"value","nativeSrc":"67345:5:20","nodeType":"YulIdentifier","src":"67345:5:20"}],"functionName":{"name":"cleanup_t_uint8","nativeSrc":"67329:15:20","nodeType":"YulIdentifier","src":"67329:15:20"},"nativeSrc":"67329:22:20","nodeType":"YulFunctionCall","src":"67329:22:20"}],"functionName":{"name":"mstore","nativeSrc":"67317:6:20","nodeType":"YulIdentifier","src":"67317:6:20"},"nativeSrc":"67317:35:20","nodeType":"YulFunctionCall","src":"67317:35:20"},"nativeSrc":"67317:35:20","nodeType":"YulExpressionStatement","src":"67317:35:20"}]},"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nativeSrc":"67246:112:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"67295:5:20","nodeType":"YulTypedName","src":"67295:5:20","type":""},{"name":"pos","nativeSrc":"67302:3:20","nodeType":"YulTypedName","src":"67302:3:20","type":""}],"src":"67246:112:20"},{"body":{"nativeSrc":"67542:367:20","nodeType":"YulBlock","src":"67542:367:20","statements":[{"nativeSrc":"67552:27:20","nodeType":"YulAssignment","src":"67552:27:20","value":{"arguments":[{"name":"headStart","nativeSrc":"67564:9:20","nodeType":"YulIdentifier","src":"67564:9:20"},{"kind":"number","nativeSrc":"67575:3:20","nodeType":"YulLiteral","src":"67575:3:20","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"67560:3:20","nodeType":"YulIdentifier","src":"67560:3:20"},"nativeSrc":"67560:19:20","nodeType":"YulFunctionCall","src":"67560:19:20"},"variableNames":[{"name":"tail","nativeSrc":"67552:4:20","nodeType":"YulIdentifier","src":"67552:4:20"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"67633:6:20","nodeType":"YulIdentifier","src":"67633:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"67646:9:20","nodeType":"YulIdentifier","src":"67646:9:20"},{"kind":"number","nativeSrc":"67657:1:20","nodeType":"YulLiteral","src":"67657:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"67642:3:20","nodeType":"YulIdentifier","src":"67642:3:20"},"nativeSrc":"67642:17:20","nodeType":"YulFunctionCall","src":"67642:17:20"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"67589:43:20","nodeType":"YulIdentifier","src":"67589:43:20"},"nativeSrc":"67589:71:20","nodeType":"YulFunctionCall","src":"67589:71:20"},"nativeSrc":"67589:71:20","nodeType":"YulExpressionStatement","src":"67589:71:20"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"67710:6:20","nodeType":"YulIdentifier","src":"67710:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"67723:9:20","nodeType":"YulIdentifier","src":"67723:9:20"},{"kind":"number","nativeSrc":"67734:2:20","nodeType":"YulLiteral","src":"67734:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"67719:3:20","nodeType":"YulIdentifier","src":"67719:3:20"},"nativeSrc":"67719:18:20","nodeType":"YulFunctionCall","src":"67719:18:20"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nativeSrc":"67670:39:20","nodeType":"YulIdentifier","src":"67670:39:20"},"nativeSrc":"67670:68:20","nodeType":"YulFunctionCall","src":"67670:68:20"},"nativeSrc":"67670:68:20","nodeType":"YulExpressionStatement","src":"67670:68:20"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"67792:6:20","nodeType":"YulIdentifier","src":"67792:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"67805:9:20","nodeType":"YulIdentifier","src":"67805:9:20"},{"kind":"number","nativeSrc":"67816:2:20","nodeType":"YulLiteral","src":"67816:2:20","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"67801:3:20","nodeType":"YulIdentifier","src":"67801:3:20"},"nativeSrc":"67801:18:20","nodeType":"YulFunctionCall","src":"67801:18:20"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"67748:43:20","nodeType":"YulIdentifier","src":"67748:43:20"},"nativeSrc":"67748:72:20","nodeType":"YulFunctionCall","src":"67748:72:20"},"nativeSrc":"67748:72:20","nodeType":"YulExpressionStatement","src":"67748:72:20"},{"expression":{"arguments":[{"name":"value3","nativeSrc":"67874:6:20","nodeType":"YulIdentifier","src":"67874:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"67887:9:20","nodeType":"YulIdentifier","src":"67887:9:20"},{"kind":"number","nativeSrc":"67898:2:20","nodeType":"YulLiteral","src":"67898:2:20","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"67883:3:20","nodeType":"YulIdentifier","src":"67883:3:20"},"nativeSrc":"67883:18:20","nodeType":"YulFunctionCall","src":"67883:18:20"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"67830:43:20","nodeType":"YulIdentifier","src":"67830:43:20"},"nativeSrc":"67830:72:20","nodeType":"YulFunctionCall","src":"67830:72:20"},"nativeSrc":"67830:72:20","nodeType":"YulExpressionStatement","src":"67830:72:20"}]},"name":"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed","nativeSrc":"67364:545:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"67490:9:20","nodeType":"YulTypedName","src":"67490:9:20","type":""},{"name":"value3","nativeSrc":"67502:6:20","nodeType":"YulTypedName","src":"67502:6:20","type":""},{"name":"value2","nativeSrc":"67510:6:20","nodeType":"YulTypedName","src":"67510:6:20","type":""},{"name":"value1","nativeSrc":"67518:6:20","nodeType":"YulTypedName","src":"67518:6:20","type":""},{"name":"value0","nativeSrc":"67526:6:20","nodeType":"YulTypedName","src":"67526:6:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"67537:4:20","nodeType":"YulTypedName","src":"67537:4:20","type":""}],"src":"67364:545:20"},{"body":{"nativeSrc":"68042:34:20","nodeType":"YulBlock","src":"68042:34:20","statements":[{"nativeSrc":"68052:18:20","nodeType":"YulAssignment","src":"68052:18:20","value":{"name":"pos","nativeSrc":"68067:3:20","nodeType":"YulIdentifier","src":"68067:3:20"},"variableNames":[{"name":"updated_pos","nativeSrc":"68052:11:20","nodeType":"YulIdentifier","src":"68052:11:20"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_uint256_$2_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"67915:161:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"68014:3:20","nodeType":"YulTypedName","src":"68014:3:20","type":""},{"name":"length","nativeSrc":"68019:6:20","nodeType":"YulTypedName","src":"68019:6:20","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"68030:11:20","nodeType":"YulTypedName","src":"68030:11:20","type":""}],"src":"67915:161:20"},{"body":{"nativeSrc":"68145:53:20","nodeType":"YulBlock","src":"68145:53:20","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"68162:3:20","nodeType":"YulIdentifier","src":"68162:3:20"},{"arguments":[{"name":"value","nativeSrc":"68185:5:20","nodeType":"YulIdentifier","src":"68185:5:20"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"68167:17:20","nodeType":"YulIdentifier","src":"68167:17:20"},"nativeSrc":"68167:24:20","nodeType":"YulFunctionCall","src":"68167:24:20"}],"functionName":{"name":"mstore","nativeSrc":"68155:6:20","nodeType":"YulIdentifier","src":"68155:6:20"},"nativeSrc":"68155:37:20","nodeType":"YulFunctionCall","src":"68155:37:20"},"nativeSrc":"68155:37:20","nodeType":"YulExpressionStatement","src":"68155:37:20"}]},"name":"abi_encode_t_uint256_to_t_uint256_inplace","nativeSrc":"68082:116:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"68133:5:20","nodeType":"YulTypedName","src":"68133:5:20","type":""},{"name":"pos","nativeSrc":"68140:3:20","nodeType":"YulTypedName","src":"68140:3:20","type":""}],"src":"68082:116:20"},{"body":{"nativeSrc":"68292:107:20","nodeType":"YulBlock","src":"68292:107:20","statements":[{"expression":{"arguments":[{"name":"value0","nativeSrc":"68344:6:20","nodeType":"YulIdentifier","src":"68344:6:20"},{"name":"pos","nativeSrc":"68352:3:20","nodeType":"YulIdentifier","src":"68352:3:20"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_inplace","nativeSrc":"68302:41:20","nodeType":"YulIdentifier","src":"68302:41:20"},"nativeSrc":"68302:54:20","nodeType":"YulFunctionCall","src":"68302:54:20"},"nativeSrc":"68302:54:20","nodeType":"YulExpressionStatement","src":"68302:54:20"},{"nativeSrc":"68365:28:20","nodeType":"YulAssignment","src":"68365:28:20","value":{"arguments":[{"name":"pos","nativeSrc":"68383:3:20","nodeType":"YulIdentifier","src":"68383:3:20"},{"kind":"number","nativeSrc":"68388:4:20","nodeType":"YulLiteral","src":"68388:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"68379:3:20","nodeType":"YulIdentifier","src":"68379:3:20"},"nativeSrc":"68379:14:20","nodeType":"YulFunctionCall","src":"68379:14:20"},"variableNames":[{"name":"updatedPos","nativeSrc":"68365:10:20","nodeType":"YulIdentifier","src":"68365:10:20"}]}]},"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256_inplace","nativeSrc":"68204:195:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nativeSrc":"68265:6:20","nodeType":"YulTypedName","src":"68265:6:20","type":""},{"name":"pos","nativeSrc":"68273:3:20","nodeType":"YulTypedName","src":"68273:3:20","type":""}],"returnVariables":[{"name":"updatedPos","nativeSrc":"68281:10:20","nodeType":"YulTypedName","src":"68281:10:20","type":""}],"src":"68204:195:20"},{"body":{"nativeSrc":"68567:608:20","nodeType":"YulBlock","src":"68567:608:20","statements":[{"nativeSrc":"68577:66:20","nodeType":"YulVariableDeclaration","src":"68577:66:20","value":{"arguments":[{"name":"value","nativeSrc":"68637:5:20","nodeType":"YulIdentifier","src":"68637:5:20"}],"functionName":{"name":"array_length_t_array$_t_uint256_$2_memory_ptr","nativeSrc":"68591:45:20","nodeType":"YulIdentifier","src":"68591:45:20"},"nativeSrc":"68591:52:20","nodeType":"YulFunctionCall","src":"68591:52:20"},"variables":[{"name":"length","nativeSrc":"68581:6:20","nodeType":"YulTypedName","src":"68581:6:20","type":""}]},{"nativeSrc":"68652:109:20","nodeType":"YulAssignment","src":"68652:109:20","value":{"arguments":[{"name":"pos","nativeSrc":"68749:3:20","nodeType":"YulIdentifier","src":"68749:3:20"},{"name":"length","nativeSrc":"68754:6:20","nodeType":"YulIdentifier","src":"68754:6:20"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_uint256_$2_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"68659:89:20","nodeType":"YulIdentifier","src":"68659:89:20"},"nativeSrc":"68659:102:20","nodeType":"YulFunctionCall","src":"68659:102:20"},"variableNames":[{"name":"pos","nativeSrc":"68652:3:20","nodeType":"YulIdentifier","src":"68652:3:20"}]},{"nativeSrc":"68770:69:20","nodeType":"YulVariableDeclaration","src":"68770:69:20","value":{"arguments":[{"name":"value","nativeSrc":"68833:5:20","nodeType":"YulIdentifier","src":"68833:5:20"}],"functionName":{"name":"array_dataslot_t_array$_t_uint256_$2_memory_ptr","nativeSrc":"68785:47:20","nodeType":"YulIdentifier","src":"68785:47:20"},"nativeSrc":"68785:54:20","nodeType":"YulFunctionCall","src":"68785:54:20"},"variables":[{"name":"baseRef","nativeSrc":"68774:7:20","nodeType":"YulTypedName","src":"68774:7:20","type":""}]},{"nativeSrc":"68848:21:20","nodeType":"YulVariableDeclaration","src":"68848:21:20","value":{"name":"baseRef","nativeSrc":"68862:7:20","nodeType":"YulIdentifier","src":"68862:7:20"},"variables":[{"name":"srcPtr","nativeSrc":"68852:6:20","nodeType":"YulTypedName","src":"68852:6:20","type":""}]},{"body":{"nativeSrc":"68938:230:20","nodeType":"YulBlock","src":"68938:230:20","statements":[{"nativeSrc":"68952:34:20","nodeType":"YulVariableDeclaration","src":"68952:34:20","value":{"arguments":[{"name":"srcPtr","nativeSrc":"68979:6:20","nodeType":"YulIdentifier","src":"68979:6:20"}],"functionName":{"name":"mload","nativeSrc":"68973:5:20","nodeType":"YulIdentifier","src":"68973:5:20"},"nativeSrc":"68973:13:20","nodeType":"YulFunctionCall","src":"68973:13:20"},"variables":[{"name":"elementValue0","nativeSrc":"68956:13:20","nodeType":"YulTypedName","src":"68956:13:20","type":""}]},{"nativeSrc":"68999:78:20","nodeType":"YulAssignment","src":"68999:78:20","value":{"arguments":[{"name":"elementValue0","nativeSrc":"69058:13:20","nodeType":"YulIdentifier","src":"69058:13:20"},{"name":"pos","nativeSrc":"69073:3:20","nodeType":"YulIdentifier","src":"69073:3:20"}],"functionName":{"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256_inplace","nativeSrc":"69006:51:20","nodeType":"YulIdentifier","src":"69006:51:20"},"nativeSrc":"69006:71:20","nodeType":"YulFunctionCall","src":"69006:71:20"},"variableNames":[{"name":"pos","nativeSrc":"68999:3:20","nodeType":"YulIdentifier","src":"68999:3:20"}]},{"nativeSrc":"69090:68:20","nodeType":"YulAssignment","src":"69090:68:20","value":{"arguments":[{"name":"srcPtr","nativeSrc":"69151:6:20","nodeType":"YulIdentifier","src":"69151:6:20"}],"functionName":{"name":"array_nextElement_t_array$_t_uint256_$2_memory_ptr","nativeSrc":"69100:50:20","nodeType":"YulIdentifier","src":"69100:50:20"},"nativeSrc":"69100:58:20","nodeType":"YulFunctionCall","src":"69100:58:20"},"variableNames":[{"name":"srcPtr","nativeSrc":"69090:6:20","nodeType":"YulIdentifier","src":"69090:6:20"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"68900:1:20","nodeType":"YulIdentifier","src":"68900:1:20"},{"name":"length","nativeSrc":"68903:6:20","nodeType":"YulIdentifier","src":"68903:6:20"}],"functionName":{"name":"lt","nativeSrc":"68897:2:20","nodeType":"YulIdentifier","src":"68897:2:20"},"nativeSrc":"68897:13:20","nodeType":"YulFunctionCall","src":"68897:13:20"},"nativeSrc":"68878:290:20","nodeType":"YulForLoop","post":{"nativeSrc":"68911:18:20","nodeType":"YulBlock","src":"68911:18:20","statements":[{"nativeSrc":"68913:14:20","nodeType":"YulAssignment","src":"68913:14:20","value":{"arguments":[{"name":"i","nativeSrc":"68922:1:20","nodeType":"YulIdentifier","src":"68922:1:20"},{"kind":"number","nativeSrc":"68925:1:20","nodeType":"YulLiteral","src":"68925:1:20","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"68918:3:20","nodeType":"YulIdentifier","src":"68918:3:20"},"nativeSrc":"68918:9:20","nodeType":"YulFunctionCall","src":"68918:9:20"},"variableNames":[{"name":"i","nativeSrc":"68913:1:20","nodeType":"YulIdentifier","src":"68913:1:20"}]}]},"pre":{"nativeSrc":"68882:14:20","nodeType":"YulBlock","src":"68882:14:20","statements":[{"nativeSrc":"68884:10:20","nodeType":"YulVariableDeclaration","src":"68884:10:20","value":{"kind":"number","nativeSrc":"68893:1:20","nodeType":"YulLiteral","src":"68893:1:20","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"68888:1:20","nodeType":"YulTypedName","src":"68888:1:20","type":""}]}]},"src":"68878:290:20"}]},"name":"abi_encode_t_array$_t_uint256_$2_memory_ptr_to_t_array$_t_uint256_$2_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"68437:738:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"68554:5:20","nodeType":"YulTypedName","src":"68554:5:20","type":""},{"name":"pos","nativeSrc":"68561:3:20","nodeType":"YulTypedName","src":"68561:3:20","type":""}],"src":"68437:738:20"},{"body":{"nativeSrc":"69399:412:20","nodeType":"YulBlock","src":"69399:412:20","statements":[{"expression":{"arguments":[{"name":"value0","nativeSrc":"69472:6:20","nodeType":"YulIdentifier","src":"69472:6:20"},{"name":"pos","nativeSrc":"69481:3:20","nodeType":"YulIdentifier","src":"69481:3:20"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack","nativeSrc":"69410:61:20","nodeType":"YulIdentifier","src":"69410:61:20"},"nativeSrc":"69410:75:20","nodeType":"YulFunctionCall","src":"69410:75:20"},"nativeSrc":"69410:75:20","nodeType":"YulExpressionStatement","src":"69410:75:20"},{"nativeSrc":"69494:19:20","nodeType":"YulAssignment","src":"69494:19:20","value":{"arguments":[{"name":"pos","nativeSrc":"69505:3:20","nodeType":"YulIdentifier","src":"69505:3:20"},{"kind":"number","nativeSrc":"69510:2:20","nodeType":"YulLiteral","src":"69510:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"69501:3:20","nodeType":"YulIdentifier","src":"69501:3:20"},"nativeSrc":"69501:12:20","nodeType":"YulFunctionCall","src":"69501:12:20"},"variableNames":[{"name":"pos","nativeSrc":"69494:3:20","nodeType":"YulIdentifier","src":"69494:3:20"}]},{"expression":{"arguments":[{"name":"value1","nativeSrc":"69631:6:20","nodeType":"YulIdentifier","src":"69631:6:20"},{"name":"pos","nativeSrc":"69640:3:20","nodeType":"YulIdentifier","src":"69640:3:20"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$2_memory_ptr_to_t_array$_t_uint256_$2_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"69523:107:20","nodeType":"YulIdentifier","src":"69523:107:20"},"nativeSrc":"69523:121:20","nodeType":"YulFunctionCall","src":"69523:121:20"},"nativeSrc":"69523:121:20","nodeType":"YulExpressionStatement","src":"69523:121:20"},{"nativeSrc":"69653:19:20","nodeType":"YulAssignment","src":"69653:19:20","value":{"arguments":[{"name":"pos","nativeSrc":"69664:3:20","nodeType":"YulIdentifier","src":"69664:3:20"},{"kind":"number","nativeSrc":"69669:2:20","nodeType":"YulLiteral","src":"69669:2:20","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"69660:3:20","nodeType":"YulIdentifier","src":"69660:3:20"},"nativeSrc":"69660:12:20","nodeType":"YulFunctionCall","src":"69660:12:20"},"variableNames":[{"name":"pos","nativeSrc":"69653:3:20","nodeType":"YulIdentifier","src":"69653:3:20"}]},{"expression":{"arguments":[{"name":"value2","nativeSrc":"69744:6:20","nodeType":"YulIdentifier","src":"69744:6:20"},{"name":"pos","nativeSrc":"69753:3:20","nodeType":"YulIdentifier","src":"69753:3:20"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack","nativeSrc":"69682:61:20","nodeType":"YulIdentifier","src":"69682:61:20"},"nativeSrc":"69682:75:20","nodeType":"YulFunctionCall","src":"69682:75:20"},"nativeSrc":"69682:75:20","nodeType":"YulExpressionStatement","src":"69682:75:20"},{"nativeSrc":"69766:19:20","nodeType":"YulAssignment","src":"69766:19:20","value":{"arguments":[{"name":"pos","nativeSrc":"69777:3:20","nodeType":"YulIdentifier","src":"69777:3:20"},{"kind":"number","nativeSrc":"69782:2:20","nodeType":"YulLiteral","src":"69782:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"69773:3:20","nodeType":"YulIdentifier","src":"69773:3:20"},"nativeSrc":"69773:12:20","nodeType":"YulFunctionCall","src":"69773:12:20"},"variableNames":[{"name":"pos","nativeSrc":"69766:3:20","nodeType":"YulIdentifier","src":"69766:3:20"}]},{"nativeSrc":"69795:10:20","nodeType":"YulAssignment","src":"69795:10:20","value":{"name":"pos","nativeSrc":"69802:3:20","nodeType":"YulIdentifier","src":"69802:3:20"},"variableNames":[{"name":"end","nativeSrc":"69795:3:20","nodeType":"YulIdentifier","src":"69795:3:20"}]}]},"name":"abi_encode_tuple_packed_t_uint256_t_array$_t_uint256_$2_memory_ptr_t_uint256__to_t_uint256_t_array$_t_uint256_$2_memory_ptr_t_uint256__nonPadded_inplace_fromStack_reversed","nativeSrc":"69181:630:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"69362:3:20","nodeType":"YulTypedName","src":"69362:3:20","type":""},{"name":"value2","nativeSrc":"69368:6:20","nodeType":"YulTypedName","src":"69368:6:20","type":""},{"name":"value1","nativeSrc":"69376:6:20","nodeType":"YulTypedName","src":"69376:6:20","type":""},{"name":"value0","nativeSrc":"69384:6:20","nodeType":"YulTypedName","src":"69384:6:20","type":""}],"returnVariables":[{"name":"end","nativeSrc":"69395:3:20","nodeType":"YulTypedName","src":"69395:3:20","type":""}],"src":"69181:630:20"},{"body":{"nativeSrc":"69933:140:20","nodeType":"YulBlock","src":"69933:140:20","statements":[{"expression":{"arguments":[{"name":"value0","nativeSrc":"70006:6:20","nodeType":"YulIdentifier","src":"70006:6:20"},{"name":"pos","nativeSrc":"70015:3:20","nodeType":"YulIdentifier","src":"70015:3:20"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack","nativeSrc":"69944:61:20","nodeType":"YulIdentifier","src":"69944:61:20"},"nativeSrc":"69944:75:20","nodeType":"YulFunctionCall","src":"69944:75:20"},"nativeSrc":"69944:75:20","nodeType":"YulExpressionStatement","src":"69944:75:20"},{"nativeSrc":"70028:19:20","nodeType":"YulAssignment","src":"70028:19:20","value":{"arguments":[{"name":"pos","nativeSrc":"70039:3:20","nodeType":"YulIdentifier","src":"70039:3:20"},{"kind":"number","nativeSrc":"70044:2:20","nodeType":"YulLiteral","src":"70044:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"70035:3:20","nodeType":"YulIdentifier","src":"70035:3:20"},"nativeSrc":"70035:12:20","nodeType":"YulFunctionCall","src":"70035:12:20"},"variableNames":[{"name":"pos","nativeSrc":"70028:3:20","nodeType":"YulIdentifier","src":"70028:3:20"}]},{"nativeSrc":"70057:10:20","nodeType":"YulAssignment","src":"70057:10:20","value":{"name":"pos","nativeSrc":"70064:3:20","nodeType":"YulIdentifier","src":"70064:3:20"},"variableNames":[{"name":"end","nativeSrc":"70057:3:20","nodeType":"YulIdentifier","src":"70057:3:20"}]}]},"name":"abi_encode_tuple_packed_t_uint256__to_t_uint256__nonPadded_inplace_fromStack_reversed","nativeSrc":"69817:256:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"69912:3:20","nodeType":"YulTypedName","src":"69912:3:20","type":""},{"name":"value0","nativeSrc":"69918:6:20","nodeType":"YulTypedName","src":"69918:6:20","type":""}],"returnVariables":[{"name":"end","nativeSrc":"69929:3:20","nodeType":"YulTypedName","src":"69929:3:20","type":""}],"src":"69817:256:20"},{"body":{"nativeSrc":"70185:74:20","nodeType":"YulBlock","src":"70185:74:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"70207:6:20","nodeType":"YulIdentifier","src":"70207:6:20"},{"kind":"number","nativeSrc":"70215:1:20","nodeType":"YulLiteral","src":"70215:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"70203:3:20","nodeType":"YulIdentifier","src":"70203:3:20"},"nativeSrc":"70203:14:20","nodeType":"YulFunctionCall","src":"70203:14:20"},{"hexValue":"706f696e747320696e2073756d206d7573742062652064697374696e6374","kind":"string","nativeSrc":"70219:32:20","nodeType":"YulLiteral","src":"70219:32:20","type":"","value":"points in sum must be distinct"}],"functionName":{"name":"mstore","nativeSrc":"70196:6:20","nodeType":"YulIdentifier","src":"70196:6:20"},"nativeSrc":"70196:56:20","nodeType":"YulFunctionCall","src":"70196:56:20"},"nativeSrc":"70196:56:20","nodeType":"YulExpressionStatement","src":"70196:56:20"}]},"name":"store_literal_in_memory_2ce93c410880bb13bca91831655ee36bc7ab052e7c8cb24dd914165b1030eeca","nativeSrc":"70079:180:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"70177:6:20","nodeType":"YulTypedName","src":"70177:6:20","type":""}],"src":"70079:180:20"},{"body":{"nativeSrc":"70411:220:20","nodeType":"YulBlock","src":"70411:220:20","statements":[{"nativeSrc":"70421:74:20","nodeType":"YulAssignment","src":"70421:74:20","value":{"arguments":[{"name":"pos","nativeSrc":"70487:3:20","nodeType":"YulIdentifier","src":"70487:3:20"},{"kind":"number","nativeSrc":"70492:2:20","nodeType":"YulLiteral","src":"70492:2:20","type":"","value":"30"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"70428:58:20","nodeType":"YulIdentifier","src":"70428:58:20"},"nativeSrc":"70428:67:20","nodeType":"YulFunctionCall","src":"70428:67:20"},"variableNames":[{"name":"pos","nativeSrc":"70421:3:20","nodeType":"YulIdentifier","src":"70421:3:20"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"70593:3:20","nodeType":"YulIdentifier","src":"70593:3:20"}],"functionName":{"name":"store_literal_in_memory_2ce93c410880bb13bca91831655ee36bc7ab052e7c8cb24dd914165b1030eeca","nativeSrc":"70504:88:20","nodeType":"YulIdentifier","src":"70504:88:20"},"nativeSrc":"70504:93:20","nodeType":"YulFunctionCall","src":"70504:93:20"},"nativeSrc":"70504:93:20","nodeType":"YulExpressionStatement","src":"70504:93:20"},{"nativeSrc":"70606:19:20","nodeType":"YulAssignment","src":"70606:19:20","value":{"arguments":[{"name":"pos","nativeSrc":"70617:3:20","nodeType":"YulIdentifier","src":"70617:3:20"},{"kind":"number","nativeSrc":"70622:2:20","nodeType":"YulLiteral","src":"70622:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"70613:3:20","nodeType":"YulIdentifier","src":"70613:3:20"},"nativeSrc":"70613:12:20","nodeType":"YulFunctionCall","src":"70613:12:20"},"variableNames":[{"name":"end","nativeSrc":"70606:3:20","nodeType":"YulIdentifier","src":"70606:3:20"}]}]},"name":"abi_encode_t_stringliteral_2ce93c410880bb13bca91831655ee36bc7ab052e7c8cb24dd914165b1030eeca_to_t_string_memory_ptr_fromStack","nativeSrc":"70265:366:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"70399:3:20","nodeType":"YulTypedName","src":"70399:3:20","type":""}],"returnVariables":[{"name":"end","nativeSrc":"70407:3:20","nodeType":"YulTypedName","src":"70407:3:20","type":""}],"src":"70265:366:20"},{"body":{"nativeSrc":"70808:248:20","nodeType":"YulBlock","src":"70808:248:20","statements":[{"nativeSrc":"70818:26:20","nodeType":"YulAssignment","src":"70818:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"70830:9:20","nodeType":"YulIdentifier","src":"70830:9:20"},{"kind":"number","nativeSrc":"70841:2:20","nodeType":"YulLiteral","src":"70841:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"70826:3:20","nodeType":"YulIdentifier","src":"70826:3:20"},"nativeSrc":"70826:18:20","nodeType":"YulFunctionCall","src":"70826:18:20"},"variableNames":[{"name":"tail","nativeSrc":"70818:4:20","nodeType":"YulIdentifier","src":"70818:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"70865:9:20","nodeType":"YulIdentifier","src":"70865:9:20"},{"kind":"number","nativeSrc":"70876:1:20","nodeType":"YulLiteral","src":"70876:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"70861:3:20","nodeType":"YulIdentifier","src":"70861:3:20"},"nativeSrc":"70861:17:20","nodeType":"YulFunctionCall","src":"70861:17:20"},{"arguments":[{"name":"tail","nativeSrc":"70884:4:20","nodeType":"YulIdentifier","src":"70884:4:20"},{"name":"headStart","nativeSrc":"70890:9:20","nodeType":"YulIdentifier","src":"70890:9:20"}],"functionName":{"name":"sub","nativeSrc":"70880:3:20","nodeType":"YulIdentifier","src":"70880:3:20"},"nativeSrc":"70880:20:20","nodeType":"YulFunctionCall","src":"70880:20:20"}],"functionName":{"name":"mstore","nativeSrc":"70854:6:20","nodeType":"YulIdentifier","src":"70854:6:20"},"nativeSrc":"70854:47:20","nodeType":"YulFunctionCall","src":"70854:47:20"},"nativeSrc":"70854:47:20","nodeType":"YulExpressionStatement","src":"70854:47:20"},{"nativeSrc":"70910:139:20","nodeType":"YulAssignment","src":"70910:139:20","value":{"arguments":[{"name":"tail","nativeSrc":"71044:4:20","nodeType":"YulIdentifier","src":"71044:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_2ce93c410880bb13bca91831655ee36bc7ab052e7c8cb24dd914165b1030eeca_to_t_string_memory_ptr_fromStack","nativeSrc":"70918:124:20","nodeType":"YulIdentifier","src":"70918:124:20"},"nativeSrc":"70918:131:20","nodeType":"YulFunctionCall","src":"70918:131:20"},"variableNames":[{"name":"tail","nativeSrc":"70910:4:20","nodeType":"YulIdentifier","src":"70910:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_2ce93c410880bb13bca91831655ee36bc7ab052e7c8cb24dd914165b1030eeca__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"70637:419:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"70788:9:20","nodeType":"YulTypedName","src":"70788:9:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"70803:4:20","nodeType":"YulTypedName","src":"70803:4:20","type":""}],"src":"70637:419:20"},{"body":{"nativeSrc":"71168:66:20","nodeType":"YulBlock","src":"71168:66:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"71190:6:20","nodeType":"YulIdentifier","src":"71190:6:20"},{"kind":"number","nativeSrc":"71198:1:20","nodeType":"YulLiteral","src":"71198:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"71186:3:20","nodeType":"YulIdentifier","src":"71186:3:20"},"nativeSrc":"71186:14:20","nodeType":"YulFunctionCall","src":"71186:14:20"},{"hexValue":"4669727374206d756c20636865636b206661696c6564","kind":"string","nativeSrc":"71202:24:20","nodeType":"YulLiteral","src":"71202:24:20","type":"","value":"First mul check failed"}],"functionName":{"name":"mstore","nativeSrc":"71179:6:20","nodeType":"YulIdentifier","src":"71179:6:20"},"nativeSrc":"71179:48:20","nodeType":"YulFunctionCall","src":"71179:48:20"},"nativeSrc":"71179:48:20","nodeType":"YulExpressionStatement","src":"71179:48:20"}]},"name":"store_literal_in_memory_d9cf4c09fcc6ead19e539ee3210816df98f1219b8b47e830620ffd543bfea51f","nativeSrc":"71062:172:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"71160:6:20","nodeType":"YulTypedName","src":"71160:6:20","type":""}],"src":"71062:172:20"},{"body":{"nativeSrc":"71386:220:20","nodeType":"YulBlock","src":"71386:220:20","statements":[{"nativeSrc":"71396:74:20","nodeType":"YulAssignment","src":"71396:74:20","value":{"arguments":[{"name":"pos","nativeSrc":"71462:3:20","nodeType":"YulIdentifier","src":"71462:3:20"},{"kind":"number","nativeSrc":"71467:2:20","nodeType":"YulLiteral","src":"71467:2:20","type":"","value":"22"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"71403:58:20","nodeType":"YulIdentifier","src":"71403:58:20"},"nativeSrc":"71403:67:20","nodeType":"YulFunctionCall","src":"71403:67:20"},"variableNames":[{"name":"pos","nativeSrc":"71396:3:20","nodeType":"YulIdentifier","src":"71396:3:20"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"71568:3:20","nodeType":"YulIdentifier","src":"71568:3:20"}],"functionName":{"name":"store_literal_in_memory_d9cf4c09fcc6ead19e539ee3210816df98f1219b8b47e830620ffd543bfea51f","nativeSrc":"71479:88:20","nodeType":"YulIdentifier","src":"71479:88:20"},"nativeSrc":"71479:93:20","nodeType":"YulFunctionCall","src":"71479:93:20"},"nativeSrc":"71479:93:20","nodeType":"YulExpressionStatement","src":"71479:93:20"},{"nativeSrc":"71581:19:20","nodeType":"YulAssignment","src":"71581:19:20","value":{"arguments":[{"name":"pos","nativeSrc":"71592:3:20","nodeType":"YulIdentifier","src":"71592:3:20"},{"kind":"number","nativeSrc":"71597:2:20","nodeType":"YulLiteral","src":"71597:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"71588:3:20","nodeType":"YulIdentifier","src":"71588:3:20"},"nativeSrc":"71588:12:20","nodeType":"YulFunctionCall","src":"71588:12:20"},"variableNames":[{"name":"end","nativeSrc":"71581:3:20","nodeType":"YulIdentifier","src":"71581:3:20"}]}]},"name":"abi_encode_t_stringliteral_d9cf4c09fcc6ead19e539ee3210816df98f1219b8b47e830620ffd543bfea51f_to_t_string_memory_ptr_fromStack","nativeSrc":"71240:366:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"71374:3:20","nodeType":"YulTypedName","src":"71374:3:20","type":""}],"returnVariables":[{"name":"end","nativeSrc":"71382:3:20","nodeType":"YulTypedName","src":"71382:3:20","type":""}],"src":"71240:366:20"},{"body":{"nativeSrc":"71783:248:20","nodeType":"YulBlock","src":"71783:248:20","statements":[{"nativeSrc":"71793:26:20","nodeType":"YulAssignment","src":"71793:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"71805:9:20","nodeType":"YulIdentifier","src":"71805:9:20"},{"kind":"number","nativeSrc":"71816:2:20","nodeType":"YulLiteral","src":"71816:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"71801:3:20","nodeType":"YulIdentifier","src":"71801:3:20"},"nativeSrc":"71801:18:20","nodeType":"YulFunctionCall","src":"71801:18:20"},"variableNames":[{"name":"tail","nativeSrc":"71793:4:20","nodeType":"YulIdentifier","src":"71793:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"71840:9:20","nodeType":"YulIdentifier","src":"71840:9:20"},{"kind":"number","nativeSrc":"71851:1:20","nodeType":"YulLiteral","src":"71851:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"71836:3:20","nodeType":"YulIdentifier","src":"71836:3:20"},"nativeSrc":"71836:17:20","nodeType":"YulFunctionCall","src":"71836:17:20"},{"arguments":[{"name":"tail","nativeSrc":"71859:4:20","nodeType":"YulIdentifier","src":"71859:4:20"},{"name":"headStart","nativeSrc":"71865:9:20","nodeType":"YulIdentifier","src":"71865:9:20"}],"functionName":{"name":"sub","nativeSrc":"71855:3:20","nodeType":"YulIdentifier","src":"71855:3:20"},"nativeSrc":"71855:20:20","nodeType":"YulFunctionCall","src":"71855:20:20"}],"functionName":{"name":"mstore","nativeSrc":"71829:6:20","nodeType":"YulIdentifier","src":"71829:6:20"},"nativeSrc":"71829:47:20","nodeType":"YulFunctionCall","src":"71829:47:20"},"nativeSrc":"71829:47:20","nodeType":"YulExpressionStatement","src":"71829:47:20"},{"nativeSrc":"71885:139:20","nodeType":"YulAssignment","src":"71885:139:20","value":{"arguments":[{"name":"tail","nativeSrc":"72019:4:20","nodeType":"YulIdentifier","src":"72019:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_d9cf4c09fcc6ead19e539ee3210816df98f1219b8b47e830620ffd543bfea51f_to_t_string_memory_ptr_fromStack","nativeSrc":"71893:124:20","nodeType":"YulIdentifier","src":"71893:124:20"},"nativeSrc":"71893:131:20","nodeType":"YulFunctionCall","src":"71893:131:20"},"variableNames":[{"name":"tail","nativeSrc":"71885:4:20","nodeType":"YulIdentifier","src":"71885:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_d9cf4c09fcc6ead19e539ee3210816df98f1219b8b47e830620ffd543bfea51f__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"71612:419:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"71763:9:20","nodeType":"YulTypedName","src":"71763:9:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"71778:4:20","nodeType":"YulTypedName","src":"71778:4:20","type":""}],"src":"71612:419:20"},{"body":{"nativeSrc":"72143:67:20","nodeType":"YulBlock","src":"72143:67:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"72165:6:20","nodeType":"YulIdentifier","src":"72165:6:20"},{"kind":"number","nativeSrc":"72173:1:20","nodeType":"YulLiteral","src":"72173:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"72161:3:20","nodeType":"YulIdentifier","src":"72161:3:20"},"nativeSrc":"72161:14:20","nodeType":"YulFunctionCall","src":"72161:14:20"},{"hexValue":"5365636f6e64206d756c20636865636b206661696c6564","kind":"string","nativeSrc":"72177:25:20","nodeType":"YulLiteral","src":"72177:25:20","type":"","value":"Second mul check failed"}],"functionName":{"name":"mstore","nativeSrc":"72154:6:20","nodeType":"YulIdentifier","src":"72154:6:20"},"nativeSrc":"72154:49:20","nodeType":"YulFunctionCall","src":"72154:49:20"},"nativeSrc":"72154:49:20","nodeType":"YulExpressionStatement","src":"72154:49:20"}]},"name":"store_literal_in_memory_13447e9fa8630e4bb2fa50f1493aa790167933f55263568ac4ad74cb4d138234","nativeSrc":"72037:173:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"72135:6:20","nodeType":"YulTypedName","src":"72135:6:20","type":""}],"src":"72037:173:20"},{"body":{"nativeSrc":"72362:220:20","nodeType":"YulBlock","src":"72362:220:20","statements":[{"nativeSrc":"72372:74:20","nodeType":"YulAssignment","src":"72372:74:20","value":{"arguments":[{"name":"pos","nativeSrc":"72438:3:20","nodeType":"YulIdentifier","src":"72438:3:20"},{"kind":"number","nativeSrc":"72443:2:20","nodeType":"YulLiteral","src":"72443:2:20","type":"","value":"23"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"72379:58:20","nodeType":"YulIdentifier","src":"72379:58:20"},"nativeSrc":"72379:67:20","nodeType":"YulFunctionCall","src":"72379:67:20"},"variableNames":[{"name":"pos","nativeSrc":"72372:3:20","nodeType":"YulIdentifier","src":"72372:3:20"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"72544:3:20","nodeType":"YulIdentifier","src":"72544:3:20"}],"functionName":{"name":"store_literal_in_memory_13447e9fa8630e4bb2fa50f1493aa790167933f55263568ac4ad74cb4d138234","nativeSrc":"72455:88:20","nodeType":"YulIdentifier","src":"72455:88:20"},"nativeSrc":"72455:93:20","nodeType":"YulFunctionCall","src":"72455:93:20"},"nativeSrc":"72455:93:20","nodeType":"YulExpressionStatement","src":"72455:93:20"},{"nativeSrc":"72557:19:20","nodeType":"YulAssignment","src":"72557:19:20","value":{"arguments":[{"name":"pos","nativeSrc":"72568:3:20","nodeType":"YulIdentifier","src":"72568:3:20"},{"kind":"number","nativeSrc":"72573:2:20","nodeType":"YulLiteral","src":"72573:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"72564:3:20","nodeType":"YulIdentifier","src":"72564:3:20"},"nativeSrc":"72564:12:20","nodeType":"YulFunctionCall","src":"72564:12:20"},"variableNames":[{"name":"end","nativeSrc":"72557:3:20","nodeType":"YulIdentifier","src":"72557:3:20"}]}]},"name":"abi_encode_t_stringliteral_13447e9fa8630e4bb2fa50f1493aa790167933f55263568ac4ad74cb4d138234_to_t_string_memory_ptr_fromStack","nativeSrc":"72216:366:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"72350:3:20","nodeType":"YulTypedName","src":"72350:3:20","type":""}],"returnVariables":[{"name":"end","nativeSrc":"72358:3:20","nodeType":"YulTypedName","src":"72358:3:20","type":""}],"src":"72216:366:20"},{"body":{"nativeSrc":"72759:248:20","nodeType":"YulBlock","src":"72759:248:20","statements":[{"nativeSrc":"72769:26:20","nodeType":"YulAssignment","src":"72769:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"72781:9:20","nodeType":"YulIdentifier","src":"72781:9:20"},{"kind":"number","nativeSrc":"72792:2:20","nodeType":"YulLiteral","src":"72792:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"72777:3:20","nodeType":"YulIdentifier","src":"72777:3:20"},"nativeSrc":"72777:18:20","nodeType":"YulFunctionCall","src":"72777:18:20"},"variableNames":[{"name":"tail","nativeSrc":"72769:4:20","nodeType":"YulIdentifier","src":"72769:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"72816:9:20","nodeType":"YulIdentifier","src":"72816:9:20"},{"kind":"number","nativeSrc":"72827:1:20","nodeType":"YulLiteral","src":"72827:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"72812:3:20","nodeType":"YulIdentifier","src":"72812:3:20"},"nativeSrc":"72812:17:20","nodeType":"YulFunctionCall","src":"72812:17:20"},{"arguments":[{"name":"tail","nativeSrc":"72835:4:20","nodeType":"YulIdentifier","src":"72835:4:20"},{"name":"headStart","nativeSrc":"72841:9:20","nodeType":"YulIdentifier","src":"72841:9:20"}],"functionName":{"name":"sub","nativeSrc":"72831:3:20","nodeType":"YulIdentifier","src":"72831:3:20"},"nativeSrc":"72831:20:20","nodeType":"YulFunctionCall","src":"72831:20:20"}],"functionName":{"name":"mstore","nativeSrc":"72805:6:20","nodeType":"YulIdentifier","src":"72805:6:20"},"nativeSrc":"72805:47:20","nodeType":"YulFunctionCall","src":"72805:47:20"},"nativeSrc":"72805:47:20","nodeType":"YulExpressionStatement","src":"72805:47:20"},{"nativeSrc":"72861:139:20","nodeType":"YulAssignment","src":"72861:139:20","value":{"arguments":[{"name":"tail","nativeSrc":"72995:4:20","nodeType":"YulIdentifier","src":"72995:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_13447e9fa8630e4bb2fa50f1493aa790167933f55263568ac4ad74cb4d138234_to_t_string_memory_ptr_fromStack","nativeSrc":"72869:124:20","nodeType":"YulIdentifier","src":"72869:124:20"},"nativeSrc":"72869:131:20","nodeType":"YulFunctionCall","src":"72869:131:20"},"variableNames":[{"name":"tail","nativeSrc":"72861:4:20","nodeType":"YulIdentifier","src":"72861:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_13447e9fa8630e4bb2fa50f1493aa790167933f55263568ac4ad74cb4d138234__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"72588:419:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"72739:9:20","nodeType":"YulTypedName","src":"72739:9:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"72754:4:20","nodeType":"YulTypedName","src":"72754:4:20","type":""}],"src":"72588:419:20"},{"body":{"nativeSrc":"73055:52:20","nodeType":"YulBlock","src":"73055:52:20","statements":[{"nativeSrc":"73065:35:20","nodeType":"YulAssignment","src":"73065:35:20","value":{"arguments":[{"kind":"number","nativeSrc":"73090:2:20","nodeType":"YulLiteral","src":"73090:2:20","type":"","value":"96"},{"name":"value","nativeSrc":"73094:5:20","nodeType":"YulIdentifier","src":"73094:5:20"}],"functionName":{"name":"shl","nativeSrc":"73086:3:20","nodeType":"YulIdentifier","src":"73086:3:20"},"nativeSrc":"73086:14:20","nodeType":"YulFunctionCall","src":"73086:14:20"},"variableNames":[{"name":"newValue","nativeSrc":"73065:8:20","nodeType":"YulIdentifier","src":"73065:8:20"}]}]},"name":"shift_left_96","nativeSrc":"73013:94:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"73036:5:20","nodeType":"YulTypedName","src":"73036:5:20","type":""}],"returnVariables":[{"name":"newValue","nativeSrc":"73046:8:20","nodeType":"YulTypedName","src":"73046:8:20","type":""}],"src":"73013:94:20"},{"body":{"nativeSrc":"73160:47:20","nodeType":"YulBlock","src":"73160:47:20","statements":[{"nativeSrc":"73170:31:20","nodeType":"YulAssignment","src":"73170:31:20","value":{"arguments":[{"name":"value","nativeSrc":"73195:5:20","nodeType":"YulIdentifier","src":"73195:5:20"}],"functionName":{"name":"shift_left_96","nativeSrc":"73181:13:20","nodeType":"YulIdentifier","src":"73181:13:20"},"nativeSrc":"73181:20:20","nodeType":"YulFunctionCall","src":"73181:20:20"},"variableNames":[{"name":"aligned","nativeSrc":"73170:7:20","nodeType":"YulIdentifier","src":"73170:7:20"}]}]},"name":"leftAlign_t_uint160","nativeSrc":"73113:94:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"73142:5:20","nodeType":"YulTypedName","src":"73142:5:20","type":""}],"returnVariables":[{"name":"aligned","nativeSrc":"73152:7:20","nodeType":"YulTypedName","src":"73152:7:20","type":""}],"src":"73113:94:20"},{"body":{"nativeSrc":"73260:53:20","nodeType":"YulBlock","src":"73260:53:20","statements":[{"nativeSrc":"73270:37:20","nodeType":"YulAssignment","src":"73270:37:20","value":{"arguments":[{"name":"value","nativeSrc":"73301:5:20","nodeType":"YulIdentifier","src":"73301:5:20"}],"functionName":{"name":"leftAlign_t_uint160","nativeSrc":"73281:19:20","nodeType":"YulIdentifier","src":"73281:19:20"},"nativeSrc":"73281:26:20","nodeType":"YulFunctionCall","src":"73281:26:20"},"variableNames":[{"name":"aligned","nativeSrc":"73270:7:20","nodeType":"YulIdentifier","src":"73270:7:20"}]}]},"name":"leftAlign_t_address","nativeSrc":"73213:100:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"73242:5:20","nodeType":"YulTypedName","src":"73242:5:20","type":""}],"returnVariables":[{"name":"aligned","nativeSrc":"73252:7:20","nodeType":"YulTypedName","src":"73252:7:20","type":""}],"src":"73213:100:20"},{"body":{"nativeSrc":"73402:74:20","nodeType":"YulBlock","src":"73402:74:20","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"73419:3:20","nodeType":"YulIdentifier","src":"73419:3:20"},{"arguments":[{"arguments":[{"name":"value","nativeSrc":"73462:5:20","nodeType":"YulIdentifier","src":"73462:5:20"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"73444:17:20","nodeType":"YulIdentifier","src":"73444:17:20"},"nativeSrc":"73444:24:20","nodeType":"YulFunctionCall","src":"73444:24:20"}],"functionName":{"name":"leftAlign_t_address","nativeSrc":"73424:19:20","nodeType":"YulIdentifier","src":"73424:19:20"},"nativeSrc":"73424:45:20","nodeType":"YulFunctionCall","src":"73424:45:20"}],"functionName":{"name":"mstore","nativeSrc":"73412:6:20","nodeType":"YulIdentifier","src":"73412:6:20"},"nativeSrc":"73412:58:20","nodeType":"YulFunctionCall","src":"73412:58:20"},"nativeSrc":"73412:58:20","nodeType":"YulExpressionStatement","src":"73412:58:20"}]},"name":"abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack","nativeSrc":"73319:157:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"73390:5:20","nodeType":"YulTypedName","src":"73390:5:20","type":""},{"name":"pos","nativeSrc":"73397:3:20","nodeType":"YulTypedName","src":"73397:3:20","type":""}],"src":"73319:157:20"},{"body":{"nativeSrc":"73922:889:20","nodeType":"YulBlock","src":"73922:889:20","statements":[{"expression":{"arguments":[{"name":"value0","nativeSrc":"73995:6:20","nodeType":"YulIdentifier","src":"73995:6:20"},{"name":"pos","nativeSrc":"74004:3:20","nodeType":"YulIdentifier","src":"74004:3:20"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack","nativeSrc":"73933:61:20","nodeType":"YulIdentifier","src":"73933:61:20"},"nativeSrc":"73933:75:20","nodeType":"YulFunctionCall","src":"73933:75:20"},"nativeSrc":"73933:75:20","nodeType":"YulExpressionStatement","src":"73933:75:20"},{"nativeSrc":"74017:19:20","nodeType":"YulAssignment","src":"74017:19:20","value":{"arguments":[{"name":"pos","nativeSrc":"74028:3:20","nodeType":"YulIdentifier","src":"74028:3:20"},{"kind":"number","nativeSrc":"74033:2:20","nodeType":"YulLiteral","src":"74033:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"74024:3:20","nodeType":"YulIdentifier","src":"74024:3:20"},"nativeSrc":"74024:12:20","nodeType":"YulFunctionCall","src":"74024:12:20"},"variableNames":[{"name":"pos","nativeSrc":"74017:3:20","nodeType":"YulIdentifier","src":"74017:3:20"}]},{"expression":{"arguments":[{"name":"value1","nativeSrc":"74154:6:20","nodeType":"YulIdentifier","src":"74154:6:20"},{"name":"pos","nativeSrc":"74163:3:20","nodeType":"YulIdentifier","src":"74163:3:20"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$2_memory_ptr_to_t_array$_t_uint256_$2_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"74046:107:20","nodeType":"YulIdentifier","src":"74046:107:20"},"nativeSrc":"74046:121:20","nodeType":"YulFunctionCall","src":"74046:121:20"},"nativeSrc":"74046:121:20","nodeType":"YulExpressionStatement","src":"74046:121:20"},{"nativeSrc":"74176:19:20","nodeType":"YulAssignment","src":"74176:19:20","value":{"arguments":[{"name":"pos","nativeSrc":"74187:3:20","nodeType":"YulIdentifier","src":"74187:3:20"},{"kind":"number","nativeSrc":"74192:2:20","nodeType":"YulLiteral","src":"74192:2:20","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"74183:3:20","nodeType":"YulIdentifier","src":"74183:3:20"},"nativeSrc":"74183:12:20","nodeType":"YulFunctionCall","src":"74183:12:20"},"variableNames":[{"name":"pos","nativeSrc":"74176:3:20","nodeType":"YulIdentifier","src":"74176:3:20"}]},{"expression":{"arguments":[{"name":"value2","nativeSrc":"74313:6:20","nodeType":"YulIdentifier","src":"74313:6:20"},{"name":"pos","nativeSrc":"74322:3:20","nodeType":"YulIdentifier","src":"74322:3:20"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$2_memory_ptr_to_t_array$_t_uint256_$2_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"74205:107:20","nodeType":"YulIdentifier","src":"74205:107:20"},"nativeSrc":"74205:121:20","nodeType":"YulFunctionCall","src":"74205:121:20"},"nativeSrc":"74205:121:20","nodeType":"YulExpressionStatement","src":"74205:121:20"},{"nativeSrc":"74335:19:20","nodeType":"YulAssignment","src":"74335:19:20","value":{"arguments":[{"name":"pos","nativeSrc":"74346:3:20","nodeType":"YulIdentifier","src":"74346:3:20"},{"kind":"number","nativeSrc":"74351:2:20","nodeType":"YulLiteral","src":"74351:2:20","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"74342:3:20","nodeType":"YulIdentifier","src":"74342:3:20"},"nativeSrc":"74342:12:20","nodeType":"YulFunctionCall","src":"74342:12:20"},"variableNames":[{"name":"pos","nativeSrc":"74335:3:20","nodeType":"YulIdentifier","src":"74335:3:20"}]},{"expression":{"arguments":[{"name":"value3","nativeSrc":"74472:6:20","nodeType":"YulIdentifier","src":"74472:6:20"},{"name":"pos","nativeSrc":"74481:3:20","nodeType":"YulIdentifier","src":"74481:3:20"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$2_memory_ptr_to_t_array$_t_uint256_$2_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"74364:107:20","nodeType":"YulIdentifier","src":"74364:107:20"},"nativeSrc":"74364:121:20","nodeType":"YulFunctionCall","src":"74364:121:20"},"nativeSrc":"74364:121:20","nodeType":"YulExpressionStatement","src":"74364:121:20"},{"nativeSrc":"74494:19:20","nodeType":"YulAssignment","src":"74494:19:20","value":{"arguments":[{"name":"pos","nativeSrc":"74505:3:20","nodeType":"YulIdentifier","src":"74505:3:20"},{"kind":"number","nativeSrc":"74510:2:20","nodeType":"YulLiteral","src":"74510:2:20","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"74501:3:20","nodeType":"YulIdentifier","src":"74501:3:20"},"nativeSrc":"74501:12:20","nodeType":"YulFunctionCall","src":"74501:12:20"},"variableNames":[{"name":"pos","nativeSrc":"74494:3:20","nodeType":"YulIdentifier","src":"74494:3:20"}]},{"expression":{"arguments":[{"name":"value4","nativeSrc":"74631:6:20","nodeType":"YulIdentifier","src":"74631:6:20"},{"name":"pos","nativeSrc":"74640:3:20","nodeType":"YulIdentifier","src":"74640:3:20"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$2_memory_ptr_to_t_array$_t_uint256_$2_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"74523:107:20","nodeType":"YulIdentifier","src":"74523:107:20"},"nativeSrc":"74523:121:20","nodeType":"YulFunctionCall","src":"74523:121:20"},"nativeSrc":"74523:121:20","nodeType":"YulExpressionStatement","src":"74523:121:20"},{"nativeSrc":"74653:19:20","nodeType":"YulAssignment","src":"74653:19:20","value":{"arguments":[{"name":"pos","nativeSrc":"74664:3:20","nodeType":"YulIdentifier","src":"74664:3:20"},{"kind":"number","nativeSrc":"74669:2:20","nodeType":"YulLiteral","src":"74669:2:20","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"74660:3:20","nodeType":"YulIdentifier","src":"74660:3:20"},"nativeSrc":"74660:12:20","nodeType":"YulFunctionCall","src":"74660:12:20"},"variableNames":[{"name":"pos","nativeSrc":"74653:3:20","nodeType":"YulIdentifier","src":"74653:3:20"}]},{"expression":{"arguments":[{"name":"value5","nativeSrc":"74744:6:20","nodeType":"YulIdentifier","src":"74744:6:20"},{"name":"pos","nativeSrc":"74753:3:20","nodeType":"YulIdentifier","src":"74753:3:20"}],"functionName":{"name":"abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack","nativeSrc":"74682:61:20","nodeType":"YulIdentifier","src":"74682:61:20"},"nativeSrc":"74682:75:20","nodeType":"YulFunctionCall","src":"74682:75:20"},"nativeSrc":"74682:75:20","nodeType":"YulExpressionStatement","src":"74682:75:20"},{"nativeSrc":"74766:19:20","nodeType":"YulAssignment","src":"74766:19:20","value":{"arguments":[{"name":"pos","nativeSrc":"74777:3:20","nodeType":"YulIdentifier","src":"74777:3:20"},{"kind":"number","nativeSrc":"74782:2:20","nodeType":"YulLiteral","src":"74782:2:20","type":"","value":"20"}],"functionName":{"name":"add","nativeSrc":"74773:3:20","nodeType":"YulIdentifier","src":"74773:3:20"},"nativeSrc":"74773:12:20","nodeType":"YulFunctionCall","src":"74773:12:20"},"variableNames":[{"name":"pos","nativeSrc":"74766:3:20","nodeType":"YulIdentifier","src":"74766:3:20"}]},{"nativeSrc":"74795:10:20","nodeType":"YulAssignment","src":"74795:10:20","value":{"name":"pos","nativeSrc":"74802:3:20","nodeType":"YulIdentifier","src":"74802:3:20"},"variableNames":[{"name":"end","nativeSrc":"74795:3:20","nodeType":"YulIdentifier","src":"74795:3:20"}]}]},"name":"abi_encode_tuple_packed_t_uint256_t_array$_t_uint256_$2_memory_ptr_t_array$_t_uint256_$2_memory_ptr_t_array$_t_uint256_$2_memory_ptr_t_array$_t_uint256_$2_memory_ptr_t_address__to_t_uint256_t_array$_t_uint256_$2_memory_ptr_t_array$_t_uint256_$2_memory_ptr_t_array$_t_uint256_$2_memory_ptr_t_array$_t_uint256_$2_memory_ptr_t_address__nonPadded_inplace_fromStack_reversed","nativeSrc":"73482:1329:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"73861:3:20","nodeType":"YulTypedName","src":"73861:3:20","type":""},{"name":"value5","nativeSrc":"73867:6:20","nodeType":"YulTypedName","src":"73867:6:20","type":""},{"name":"value4","nativeSrc":"73875:6:20","nodeType":"YulTypedName","src":"73875:6:20","type":""},{"name":"value3","nativeSrc":"73883:6:20","nodeType":"YulTypedName","src":"73883:6:20","type":""},{"name":"value2","nativeSrc":"73891:6:20","nodeType":"YulTypedName","src":"73891:6:20","type":""},{"name":"value1","nativeSrc":"73899:6:20","nodeType":"YulTypedName","src":"73899:6:20","type":""},{"name":"value0","nativeSrc":"73907:6:20","nodeType":"YulTypedName","src":"73907:6:20","type":""}],"returnVariables":[{"name":"end","nativeSrc":"73918:3:20","nodeType":"YulTypedName","src":"73918:3:20","type":""}],"src":"73482:1329:20"},{"body":{"nativeSrc":"74923:55:20","nodeType":"YulBlock","src":"74923:55:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"74945:6:20","nodeType":"YulIdentifier","src":"74945:6:20"},{"kind":"number","nativeSrc":"74953:1:20","nodeType":"YulLiteral","src":"74953:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"74941:3:20","nodeType":"YulIdentifier","src":"74941:3:20"},"nativeSrc":"74941:14:20","nodeType":"YulFunctionCall","src":"74941:14:20"},{"hexValue":"7a65726f207363616c6172","kind":"string","nativeSrc":"74957:13:20","nodeType":"YulLiteral","src":"74957:13:20","type":"","value":"zero scalar"}],"functionName":{"name":"mstore","nativeSrc":"74934:6:20","nodeType":"YulIdentifier","src":"74934:6:20"},"nativeSrc":"74934:37:20","nodeType":"YulFunctionCall","src":"74934:37:20"},"nativeSrc":"74934:37:20","nodeType":"YulExpressionStatement","src":"74934:37:20"}]},"name":"store_literal_in_memory_e71e9381bf8fff7d9eeee436d182c3c8b982b1d416953f4ca9ccf572989baeca","nativeSrc":"74817:161:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"74915:6:20","nodeType":"YulTypedName","src":"74915:6:20","type":""}],"src":"74817:161:20"},{"body":{"nativeSrc":"75130:220:20","nodeType":"YulBlock","src":"75130:220:20","statements":[{"nativeSrc":"75140:74:20","nodeType":"YulAssignment","src":"75140:74:20","value":{"arguments":[{"name":"pos","nativeSrc":"75206:3:20","nodeType":"YulIdentifier","src":"75206:3:20"},{"kind":"number","nativeSrc":"75211:2:20","nodeType":"YulLiteral","src":"75211:2:20","type":"","value":"11"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"75147:58:20","nodeType":"YulIdentifier","src":"75147:58:20"},"nativeSrc":"75147:67:20","nodeType":"YulFunctionCall","src":"75147:67:20"},"variableNames":[{"name":"pos","nativeSrc":"75140:3:20","nodeType":"YulIdentifier","src":"75140:3:20"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"75312:3:20","nodeType":"YulIdentifier","src":"75312:3:20"}],"functionName":{"name":"store_literal_in_memory_e71e9381bf8fff7d9eeee436d182c3c8b982b1d416953f4ca9ccf572989baeca","nativeSrc":"75223:88:20","nodeType":"YulIdentifier","src":"75223:88:20"},"nativeSrc":"75223:93:20","nodeType":"YulFunctionCall","src":"75223:93:20"},"nativeSrc":"75223:93:20","nodeType":"YulExpressionStatement","src":"75223:93:20"},{"nativeSrc":"75325:19:20","nodeType":"YulAssignment","src":"75325:19:20","value":{"arguments":[{"name":"pos","nativeSrc":"75336:3:20","nodeType":"YulIdentifier","src":"75336:3:20"},{"kind":"number","nativeSrc":"75341:2:20","nodeType":"YulLiteral","src":"75341:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"75332:3:20","nodeType":"YulIdentifier","src":"75332:3:20"},"nativeSrc":"75332:12:20","nodeType":"YulFunctionCall","src":"75332:12:20"},"variableNames":[{"name":"end","nativeSrc":"75325:3:20","nodeType":"YulIdentifier","src":"75325:3:20"}]}]},"name":"abi_encode_t_stringliteral_e71e9381bf8fff7d9eeee436d182c3c8b982b1d416953f4ca9ccf572989baeca_to_t_string_memory_ptr_fromStack","nativeSrc":"74984:366:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"75118:3:20","nodeType":"YulTypedName","src":"75118:3:20","type":""}],"returnVariables":[{"name":"end","nativeSrc":"75126:3:20","nodeType":"YulTypedName","src":"75126:3:20","type":""}],"src":"74984:366:20"},{"body":{"nativeSrc":"75527:248:20","nodeType":"YulBlock","src":"75527:248:20","statements":[{"nativeSrc":"75537:26:20","nodeType":"YulAssignment","src":"75537:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"75549:9:20","nodeType":"YulIdentifier","src":"75549:9:20"},{"kind":"number","nativeSrc":"75560:2:20","nodeType":"YulLiteral","src":"75560:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"75545:3:20","nodeType":"YulIdentifier","src":"75545:3:20"},"nativeSrc":"75545:18:20","nodeType":"YulFunctionCall","src":"75545:18:20"},"variableNames":[{"name":"tail","nativeSrc":"75537:4:20","nodeType":"YulIdentifier","src":"75537:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"75584:9:20","nodeType":"YulIdentifier","src":"75584:9:20"},{"kind":"number","nativeSrc":"75595:1:20","nodeType":"YulLiteral","src":"75595:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"75580:3:20","nodeType":"YulIdentifier","src":"75580:3:20"},"nativeSrc":"75580:17:20","nodeType":"YulFunctionCall","src":"75580:17:20"},{"arguments":[{"name":"tail","nativeSrc":"75603:4:20","nodeType":"YulIdentifier","src":"75603:4:20"},{"name":"headStart","nativeSrc":"75609:9:20","nodeType":"YulIdentifier","src":"75609:9:20"}],"functionName":{"name":"sub","nativeSrc":"75599:3:20","nodeType":"YulIdentifier","src":"75599:3:20"},"nativeSrc":"75599:20:20","nodeType":"YulFunctionCall","src":"75599:20:20"}],"functionName":{"name":"mstore","nativeSrc":"75573:6:20","nodeType":"YulIdentifier","src":"75573:6:20"},"nativeSrc":"75573:47:20","nodeType":"YulFunctionCall","src":"75573:47:20"},"nativeSrc":"75573:47:20","nodeType":"YulExpressionStatement","src":"75573:47:20"},{"nativeSrc":"75629:139:20","nodeType":"YulAssignment","src":"75629:139:20","value":{"arguments":[{"name":"tail","nativeSrc":"75763:4:20","nodeType":"YulIdentifier","src":"75763:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_e71e9381bf8fff7d9eeee436d182c3c8b982b1d416953f4ca9ccf572989baeca_to_t_string_memory_ptr_fromStack","nativeSrc":"75637:124:20","nodeType":"YulIdentifier","src":"75637:124:20"},"nativeSrc":"75637:131:20","nodeType":"YulFunctionCall","src":"75637:131:20"},"variableNames":[{"name":"tail","nativeSrc":"75629:4:20","nodeType":"YulIdentifier","src":"75629:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_e71e9381bf8fff7d9eeee436d182c3c8b982b1d416953f4ca9ccf572989baeca__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"75356:419:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"75507:9:20","nodeType":"YulTypedName","src":"75507:9:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"75522:4:20","nodeType":"YulTypedName","src":"75522:4:20","type":""}],"src":"75356:419:20"},{"body":{"nativeSrc":"75815:142:20","nodeType":"YulBlock","src":"75815:142:20","statements":[{"nativeSrc":"75825:25:20","nodeType":"YulAssignment","src":"75825:25:20","value":{"arguments":[{"name":"x","nativeSrc":"75848:1:20","nodeType":"YulIdentifier","src":"75848:1:20"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"75830:17:20","nodeType":"YulIdentifier","src":"75830:17:20"},"nativeSrc":"75830:20:20","nodeType":"YulFunctionCall","src":"75830:20:20"},"variableNames":[{"name":"x","nativeSrc":"75825:1:20","nodeType":"YulIdentifier","src":"75825:1:20"}]},{"nativeSrc":"75859:25:20","nodeType":"YulAssignment","src":"75859:25:20","value":{"arguments":[{"name":"y","nativeSrc":"75882:1:20","nodeType":"YulIdentifier","src":"75882:1:20"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"75864:17:20","nodeType":"YulIdentifier","src":"75864:17:20"},"nativeSrc":"75864:20:20","nodeType":"YulFunctionCall","src":"75864:20:20"},"variableNames":[{"name":"y","nativeSrc":"75859:1:20","nodeType":"YulIdentifier","src":"75859:1:20"}]},{"body":{"nativeSrc":"75906:22:20","nodeType":"YulBlock","src":"75906:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nativeSrc":"75908:16:20","nodeType":"YulIdentifier","src":"75908:16:20"},"nativeSrc":"75908:18:20","nodeType":"YulFunctionCall","src":"75908:18:20"},"nativeSrc":"75908:18:20","nodeType":"YulExpressionStatement","src":"75908:18:20"}]},"condition":{"arguments":[{"name":"y","nativeSrc":"75903:1:20","nodeType":"YulIdentifier","src":"75903:1:20"}],"functionName":{"name":"iszero","nativeSrc":"75896:6:20","nodeType":"YulIdentifier","src":"75896:6:20"},"nativeSrc":"75896:9:20","nodeType":"YulFunctionCall","src":"75896:9:20"},"nativeSrc":"75893:35:20","nodeType":"YulIf","src":"75893:35:20"},{"nativeSrc":"75937:14:20","nodeType":"YulAssignment","src":"75937:14:20","value":{"arguments":[{"name":"x","nativeSrc":"75946:1:20","nodeType":"YulIdentifier","src":"75946:1:20"},{"name":"y","nativeSrc":"75949:1:20","nodeType":"YulIdentifier","src":"75949:1:20"}],"functionName":{"name":"mod","nativeSrc":"75942:3:20","nodeType":"YulIdentifier","src":"75942:3:20"},"nativeSrc":"75942:9:20","nodeType":"YulFunctionCall","src":"75942:9:20"},"variableNames":[{"name":"r","nativeSrc":"75937:1:20","nodeType":"YulIdentifier","src":"75937:1:20"}]}]},"name":"mod_t_uint256","nativeSrc":"75781:176:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"75804:1:20","nodeType":"YulTypedName","src":"75804:1:20","type":""},{"name":"y","nativeSrc":"75807:1:20","nodeType":"YulTypedName","src":"75807:1:20","type":""}],"returnVariables":[{"name":"r","nativeSrc":"75813:1:20","nodeType":"YulTypedName","src":"75813:1:20","type":""}],"src":"75781:176:20"},{"body":{"nativeSrc":"76125:186:20","nodeType":"YulBlock","src":"76125:186:20","statements":[{"expression":{"arguments":[{"name":"value0","nativeSrc":"76244:6:20","nodeType":"YulIdentifier","src":"76244:6:20"},{"name":"pos","nativeSrc":"76253:3:20","nodeType":"YulIdentifier","src":"76253:3:20"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$2_memory_ptr_to_t_array$_t_uint256_$2_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"76136:107:20","nodeType":"YulIdentifier","src":"76136:107:20"},"nativeSrc":"76136:121:20","nodeType":"YulFunctionCall","src":"76136:121:20"},"nativeSrc":"76136:121:20","nodeType":"YulExpressionStatement","src":"76136:121:20"},{"nativeSrc":"76266:19:20","nodeType":"YulAssignment","src":"76266:19:20","value":{"arguments":[{"name":"pos","nativeSrc":"76277:3:20","nodeType":"YulIdentifier","src":"76277:3:20"},{"kind":"number","nativeSrc":"76282:2:20","nodeType":"YulLiteral","src":"76282:2:20","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"76273:3:20","nodeType":"YulIdentifier","src":"76273:3:20"},"nativeSrc":"76273:12:20","nodeType":"YulFunctionCall","src":"76273:12:20"},"variableNames":[{"name":"pos","nativeSrc":"76266:3:20","nodeType":"YulIdentifier","src":"76266:3:20"}]},{"nativeSrc":"76295:10:20","nodeType":"YulAssignment","src":"76295:10:20","value":{"name":"pos","nativeSrc":"76302:3:20","nodeType":"YulIdentifier","src":"76302:3:20"},"variableNames":[{"name":"end","nativeSrc":"76295:3:20","nodeType":"YulIdentifier","src":"76295:3:20"}]}]},"name":"abi_encode_tuple_packed_t_array$_t_uint256_$2_memory_ptr__to_t_array$_t_uint256_$2_memory_ptr__nonPadded_inplace_fromStack_reversed","nativeSrc":"75963:348:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"76104:3:20","nodeType":"YulTypedName","src":"76104:3:20","type":""},{"name":"value0","nativeSrc":"76110:6:20","nodeType":"YulTypedName","src":"76110:6:20","type":""}],"returnVariables":[{"name":"end","nativeSrc":"76121:3:20","nodeType":"YulTypedName","src":"76121:3:20","type":""}],"src":"75963:348:20"},{"body":{"nativeSrc":"76423:69:20","nodeType":"YulBlock","src":"76423:69:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"76445:6:20","nodeType":"YulIdentifier","src":"76445:6:20"},{"kind":"number","nativeSrc":"76453:1:20","nodeType":"YulLiteral","src":"76453:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"76441:3:20","nodeType":"YulIdentifier","src":"76441:3:20"},"nativeSrc":"76441:14:20","nodeType":"YulFunctionCall","src":"76441:14:20"},{"hexValue":"696e765a206d75737420626520696e7665727365206f66207a","kind":"string","nativeSrc":"76457:27:20","nodeType":"YulLiteral","src":"76457:27:20","type":"","value":"invZ must be inverse of z"}],"functionName":{"name":"mstore","nativeSrc":"76434:6:20","nodeType":"YulIdentifier","src":"76434:6:20"},"nativeSrc":"76434:51:20","nodeType":"YulFunctionCall","src":"76434:51:20"},"nativeSrc":"76434:51:20","nodeType":"YulExpressionStatement","src":"76434:51:20"}]},"name":"store_literal_in_memory_95046d93d9b2e6ba778cd180e8c682e7d907547386cb54bf80bca322c50144ca","nativeSrc":"76317:175:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"76415:6:20","nodeType":"YulTypedName","src":"76415:6:20","type":""}],"src":"76317:175:20"},{"body":{"nativeSrc":"76644:220:20","nodeType":"YulBlock","src":"76644:220:20","statements":[{"nativeSrc":"76654:74:20","nodeType":"YulAssignment","src":"76654:74:20","value":{"arguments":[{"name":"pos","nativeSrc":"76720:3:20","nodeType":"YulIdentifier","src":"76720:3:20"},{"kind":"number","nativeSrc":"76725:2:20","nodeType":"YulLiteral","src":"76725:2:20","type":"","value":"25"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"76661:58:20","nodeType":"YulIdentifier","src":"76661:58:20"},"nativeSrc":"76661:67:20","nodeType":"YulFunctionCall","src":"76661:67:20"},"variableNames":[{"name":"pos","nativeSrc":"76654:3:20","nodeType":"YulIdentifier","src":"76654:3:20"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"76826:3:20","nodeType":"YulIdentifier","src":"76826:3:20"}],"functionName":{"name":"store_literal_in_memory_95046d93d9b2e6ba778cd180e8c682e7d907547386cb54bf80bca322c50144ca","nativeSrc":"76737:88:20","nodeType":"YulIdentifier","src":"76737:88:20"},"nativeSrc":"76737:93:20","nodeType":"YulFunctionCall","src":"76737:93:20"},"nativeSrc":"76737:93:20","nodeType":"YulExpressionStatement","src":"76737:93:20"},{"nativeSrc":"76839:19:20","nodeType":"YulAssignment","src":"76839:19:20","value":{"arguments":[{"name":"pos","nativeSrc":"76850:3:20","nodeType":"YulIdentifier","src":"76850:3:20"},{"kind":"number","nativeSrc":"76855:2:20","nodeType":"YulLiteral","src":"76855:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"76846:3:20","nodeType":"YulIdentifier","src":"76846:3:20"},"nativeSrc":"76846:12:20","nodeType":"YulFunctionCall","src":"76846:12:20"},"variableNames":[{"name":"end","nativeSrc":"76839:3:20","nodeType":"YulIdentifier","src":"76839:3:20"}]}]},"name":"abi_encode_t_stringliteral_95046d93d9b2e6ba778cd180e8c682e7d907547386cb54bf80bca322c50144ca_to_t_string_memory_ptr_fromStack","nativeSrc":"76498:366:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"76632:3:20","nodeType":"YulTypedName","src":"76632:3:20","type":""}],"returnVariables":[{"name":"end","nativeSrc":"76640:3:20","nodeType":"YulTypedName","src":"76640:3:20","type":""}],"src":"76498:366:20"},{"body":{"nativeSrc":"77041:248:20","nodeType":"YulBlock","src":"77041:248:20","statements":[{"nativeSrc":"77051:26:20","nodeType":"YulAssignment","src":"77051:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"77063:9:20","nodeType":"YulIdentifier","src":"77063:9:20"},{"kind":"number","nativeSrc":"77074:2:20","nodeType":"YulLiteral","src":"77074:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"77059:3:20","nodeType":"YulIdentifier","src":"77059:3:20"},"nativeSrc":"77059:18:20","nodeType":"YulFunctionCall","src":"77059:18:20"},"variableNames":[{"name":"tail","nativeSrc":"77051:4:20","nodeType":"YulIdentifier","src":"77051:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"77098:9:20","nodeType":"YulIdentifier","src":"77098:9:20"},{"kind":"number","nativeSrc":"77109:1:20","nodeType":"YulLiteral","src":"77109:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"77094:3:20","nodeType":"YulIdentifier","src":"77094:3:20"},"nativeSrc":"77094:17:20","nodeType":"YulFunctionCall","src":"77094:17:20"},{"arguments":[{"name":"tail","nativeSrc":"77117:4:20","nodeType":"YulIdentifier","src":"77117:4:20"},{"name":"headStart","nativeSrc":"77123:9:20","nodeType":"YulIdentifier","src":"77123:9:20"}],"functionName":{"name":"sub","nativeSrc":"77113:3:20","nodeType":"YulIdentifier","src":"77113:3:20"},"nativeSrc":"77113:20:20","nodeType":"YulFunctionCall","src":"77113:20:20"}],"functionName":{"name":"mstore","nativeSrc":"77087:6:20","nodeType":"YulIdentifier","src":"77087:6:20"},"nativeSrc":"77087:47:20","nodeType":"YulFunctionCall","src":"77087:47:20"},"nativeSrc":"77087:47:20","nodeType":"YulExpressionStatement","src":"77087:47:20"},{"nativeSrc":"77143:139:20","nodeType":"YulAssignment","src":"77143:139:20","value":{"arguments":[{"name":"tail","nativeSrc":"77277:4:20","nodeType":"YulIdentifier","src":"77277:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_95046d93d9b2e6ba778cd180e8c682e7d907547386cb54bf80bca322c50144ca_to_t_string_memory_ptr_fromStack","nativeSrc":"77151:124:20","nodeType":"YulIdentifier","src":"77151:124:20"},"nativeSrc":"77151:131:20","nodeType":"YulFunctionCall","src":"77151:131:20"},"variableNames":[{"name":"tail","nativeSrc":"77143:4:20","nodeType":"YulIdentifier","src":"77143:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_95046d93d9b2e6ba778cd180e8c682e7d907547386cb54bf80bca322c50144ca__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"76870:419:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"77021:9:20","nodeType":"YulTypedName","src":"77021:9:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"77036:4:20","nodeType":"YulTypedName","src":"77036:4:20","type":""}],"src":"76870:419:20"},{"body":{"nativeSrc":"77401:62:20","nodeType":"YulBlock","src":"77401:62:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"77423:6:20","nodeType":"YulIdentifier","src":"77423:6:20"},{"kind":"number","nativeSrc":"77431:1:20","nodeType":"YulLiteral","src":"77431:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"77419:3:20","nodeType":"YulIdentifier","src":"77419:3:20"},"nativeSrc":"77419:14:20","nodeType":"YulFunctionCall","src":"77419:14:20"},{"hexValue":"6269674d6f64457870206661696c75726521","kind":"string","nativeSrc":"77435:20:20","nodeType":"YulLiteral","src":"77435:20:20","type":"","value":"bigModExp failure!"}],"functionName":{"name":"mstore","nativeSrc":"77412:6:20","nodeType":"YulIdentifier","src":"77412:6:20"},"nativeSrc":"77412:44:20","nodeType":"YulFunctionCall","src":"77412:44:20"},"nativeSrc":"77412:44:20","nodeType":"YulExpressionStatement","src":"77412:44:20"}]},"name":"store_literal_in_memory_4bd695d9be776d24ba6aaa6ea48a189f388adfd8a5e6a1df7bd6471290ea4e5f","nativeSrc":"77295:168:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"77393:6:20","nodeType":"YulTypedName","src":"77393:6:20","type":""}],"src":"77295:168:20"},{"body":{"nativeSrc":"77615:220:20","nodeType":"YulBlock","src":"77615:220:20","statements":[{"nativeSrc":"77625:74:20","nodeType":"YulAssignment","src":"77625:74:20","value":{"arguments":[{"name":"pos","nativeSrc":"77691:3:20","nodeType":"YulIdentifier","src":"77691:3:20"},{"kind":"number","nativeSrc":"77696:2:20","nodeType":"YulLiteral","src":"77696:2:20","type":"","value":"18"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"77632:58:20","nodeType":"YulIdentifier","src":"77632:58:20"},"nativeSrc":"77632:67:20","nodeType":"YulFunctionCall","src":"77632:67:20"},"variableNames":[{"name":"pos","nativeSrc":"77625:3:20","nodeType":"YulIdentifier","src":"77625:3:20"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"77797:3:20","nodeType":"YulIdentifier","src":"77797:3:20"}],"functionName":{"name":"store_literal_in_memory_4bd695d9be776d24ba6aaa6ea48a189f388adfd8a5e6a1df7bd6471290ea4e5f","nativeSrc":"77708:88:20","nodeType":"YulIdentifier","src":"77708:88:20"},"nativeSrc":"77708:93:20","nodeType":"YulFunctionCall","src":"77708:93:20"},"nativeSrc":"77708:93:20","nodeType":"YulExpressionStatement","src":"77708:93:20"},{"nativeSrc":"77810:19:20","nodeType":"YulAssignment","src":"77810:19:20","value":{"arguments":[{"name":"pos","nativeSrc":"77821:3:20","nodeType":"YulIdentifier","src":"77821:3:20"},{"kind":"number","nativeSrc":"77826:2:20","nodeType":"YulLiteral","src":"77826:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"77817:3:20","nodeType":"YulIdentifier","src":"77817:3:20"},"nativeSrc":"77817:12:20","nodeType":"YulFunctionCall","src":"77817:12:20"},"variableNames":[{"name":"end","nativeSrc":"77810:3:20","nodeType":"YulIdentifier","src":"77810:3:20"}]}]},"name":"abi_encode_t_stringliteral_4bd695d9be776d24ba6aaa6ea48a189f388adfd8a5e6a1df7bd6471290ea4e5f_to_t_string_memory_ptr_fromStack","nativeSrc":"77469:366:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"77603:3:20","nodeType":"YulTypedName","src":"77603:3:20","type":""}],"returnVariables":[{"name":"end","nativeSrc":"77611:3:20","nodeType":"YulTypedName","src":"77611:3:20","type":""}],"src":"77469:366:20"},{"body":{"nativeSrc":"78012:248:20","nodeType":"YulBlock","src":"78012:248:20","statements":[{"nativeSrc":"78022:26:20","nodeType":"YulAssignment","src":"78022:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"78034:9:20","nodeType":"YulIdentifier","src":"78034:9:20"},{"kind":"number","nativeSrc":"78045:2:20","nodeType":"YulLiteral","src":"78045:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"78030:3:20","nodeType":"YulIdentifier","src":"78030:3:20"},"nativeSrc":"78030:18:20","nodeType":"YulFunctionCall","src":"78030:18:20"},"variableNames":[{"name":"tail","nativeSrc":"78022:4:20","nodeType":"YulIdentifier","src":"78022:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"78069:9:20","nodeType":"YulIdentifier","src":"78069:9:20"},{"kind":"number","nativeSrc":"78080:1:20","nodeType":"YulLiteral","src":"78080:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"78065:3:20","nodeType":"YulIdentifier","src":"78065:3:20"},"nativeSrc":"78065:17:20","nodeType":"YulFunctionCall","src":"78065:17:20"},{"arguments":[{"name":"tail","nativeSrc":"78088:4:20","nodeType":"YulIdentifier","src":"78088:4:20"},{"name":"headStart","nativeSrc":"78094:9:20","nodeType":"YulIdentifier","src":"78094:9:20"}],"functionName":{"name":"sub","nativeSrc":"78084:3:20","nodeType":"YulIdentifier","src":"78084:3:20"},"nativeSrc":"78084:20:20","nodeType":"YulFunctionCall","src":"78084:20:20"}],"functionName":{"name":"mstore","nativeSrc":"78058:6:20","nodeType":"YulIdentifier","src":"78058:6:20"},"nativeSrc":"78058:47:20","nodeType":"YulFunctionCall","src":"78058:47:20"},"nativeSrc":"78058:47:20","nodeType":"YulExpressionStatement","src":"78058:47:20"},{"nativeSrc":"78114:139:20","nodeType":"YulAssignment","src":"78114:139:20","value":{"arguments":[{"name":"tail","nativeSrc":"78248:4:20","nodeType":"YulIdentifier","src":"78248:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_4bd695d9be776d24ba6aaa6ea48a189f388adfd8a5e6a1df7bd6471290ea4e5f_to_t_string_memory_ptr_fromStack","nativeSrc":"78122:124:20","nodeType":"YulIdentifier","src":"78122:124:20"},"nativeSrc":"78122:131:20","nodeType":"YulFunctionCall","src":"78122:131:20"},"variableNames":[{"name":"tail","nativeSrc":"78114:4:20","nodeType":"YulIdentifier","src":"78114:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_4bd695d9be776d24ba6aaa6ea48a189f388adfd8a5e6a1df7bd6471290ea4e5f__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"77841:419:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"77992:9:20","nodeType":"YulTypedName","src":"77992:9:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"78007:4:20","nodeType":"YulTypedName","src":"78007:4:20","type":""}],"src":"77841:419:20"}]},"contents":"{\n\n    function cleanup_t_uint16(value) -> cleaned {\n        cleaned := and(value, 0xffff)\n    }\n\n    function abi_encode_t_uint16_to_t_uint16_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint16(value))\n    }\n\n    function cleanup_t_uint32(value) -> cleaned {\n        cleaned := and(value, 0xffffffff)\n    }\n\n    function abi_encode_t_uint32_to_t_uint32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint32(value))\n    }\n\n    function array_length_t_array$_t_bytes32_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_bytes32_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_bytes32_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encodeUpdatedPos_t_bytes32_to_t_bytes32(value0, pos) -> updatedPos {\n        abi_encode_t_bytes32_to_t_bytes32(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_bytes32_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // bytes32[] -> bytes32[]\n    function abi_encode_t_array$_t_bytes32_$dyn_memory_ptr_to_t_array$_t_bytes32_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_bytes32_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_bytes32_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_bytes32_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_bytes32_to_t_bytes32(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_bytes32_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_uint16_t_uint32_t_array$_t_bytes32_$dyn_memory_ptr__to_t_uint16_t_uint32_t_array$_t_bytes32_$dyn_memory_ptr__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint16_to_t_uint16_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_bytes32_$dyn_memory_ptr_to_t_array$_t_bytes32_$dyn_memory_ptr_fromStack(value2,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function validator_revert_t_uint64(value) {\n        if iszero(eq(value, cleanup_t_uint64(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint64(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint64(value)\n    }\n\n    function abi_decode_tuple_t_uint64(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint64(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_uint64t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint64(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint64_to_t_uint64_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint64(value))\n    }\n\n    function abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint64_to_t_uint64_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // uint256[2]\n    function abi_decode_t_array$_t_uint256_$2_calldata_ptr(offset, end) -> arrayPos {\n        arrayPos := offset\n        if gt(add(arrayPos, mul(0x02, 0x20)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_array$_t_uint256_$2_calldata_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_array$_t_uint256_$2_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint16_to_t_uint16_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_LinkTokenInterface_$712_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_LinkTokenInterface_$712_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_LinkTokenInterface_$712_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_LinkTokenInterface_$712__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_LinkTokenInterface_$712_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_int256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_int256_to_t_int256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_int256(value))\n    }\n\n    function abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_int256_to_t_int256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint16(value) {\n        if iszero(eq(value, cleanup_t_uint16(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint16(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint16(value)\n    }\n\n    function validator_revert_t_uint32(value) {\n        if iszero(eq(value, cleanup_t_uint32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint32(value)\n    }\n\n    function validator_revert_t_int256(value) {\n        if iszero(eq(value, cleanup_t_int256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_int256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_int256(value)\n    }\n\n    function revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint24(value) -> cleaned {\n        cleaned := and(value, 0xffffff)\n    }\n\n    function validator_revert_t_uint24(value) {\n        if iszero(eq(value, cleanup_t_uint24(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint24(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint24(value)\n    }\n\n    // struct VRFCoordinatorV2.FeeConfig\n    function abi_decode_t_struct$_FeeConfig_$2411_memory_ptr(headStart, end) -> value {\n        if slt(sub(end, headStart), 0x0120) { revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f() }\n        value := allocate_memory(0x0120)\n\n        {\n            // fulfillmentFlatFeeLinkPPMTier1\n\n            let offset := 0\n\n            mstore(add(value, 0x00), abi_decode_t_uint32(add(headStart, offset), end))\n\n        }\n\n        {\n            // fulfillmentFlatFeeLinkPPMTier2\n\n            let offset := 32\n\n            mstore(add(value, 0x20), abi_decode_t_uint32(add(headStart, offset), end))\n\n        }\n\n        {\n            // fulfillmentFlatFeeLinkPPMTier3\n\n            let offset := 64\n\n            mstore(add(value, 0x40), abi_decode_t_uint32(add(headStart, offset), end))\n\n        }\n\n        {\n            // fulfillmentFlatFeeLinkPPMTier4\n\n            let offset := 96\n\n            mstore(add(value, 0x60), abi_decode_t_uint32(add(headStart, offset), end))\n\n        }\n\n        {\n            // fulfillmentFlatFeeLinkPPMTier5\n\n            let offset := 128\n\n            mstore(add(value, 0x80), abi_decode_t_uint32(add(headStart, offset), end))\n\n        }\n\n        {\n            // reqsForTier2\n\n            let offset := 160\n\n            mstore(add(value, 0xa0), abi_decode_t_uint24(add(headStart, offset), end))\n\n        }\n\n        {\n            // reqsForTier3\n\n            let offset := 192\n\n            mstore(add(value, 0xc0), abi_decode_t_uint24(add(headStart, offset), end))\n\n        }\n\n        {\n            // reqsForTier4\n\n            let offset := 224\n\n            mstore(add(value, 0xe0), abi_decode_t_uint24(add(headStart, offset), end))\n\n        }\n\n        {\n            // reqsForTier5\n\n            let offset := 256\n\n            mstore(add(value, 0x0100), abi_decode_t_uint24(add(headStart, offset), end))\n\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint16t_uint32t_uint32t_uint32t_int256t_struct$_FeeConfig_$2411_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5 {\n        if slt(sub(dataEnd, headStart), 448) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint16(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_int256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_struct$_FeeConfig_$2411_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32t_uint64t_uint16t_uint32t_uint32(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint64(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint16(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint24_to_t_uint24_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint24(value))\n    }\n\n    function abi_encode_tuple_t_uint32_t_uint32_t_uint32_t_uint32_t_uint32_t_uint24_t_uint24_t_uint24_t_uint24__to_t_uint32_t_uint32_t_uint32_t_uint32_t_uint32_t_uint24_t_uint24_t_uint24_t_uint24__fromStack_reversed(headStart , value8, value7, value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 288)\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_uint24_to_t_uint24_fromStack(value5,  add(headStart, 160))\n\n        abi_encode_t_uint24_to_t_uint24_fromStack(value6,  add(headStart, 192))\n\n        abi_encode_t_uint24_to_t_uint24_fromStack(value7,  add(headStart, 224))\n\n        abi_encode_t_uint24_to_t_uint24_fromStack(value8,  add(headStart, 256))\n\n    }\n\n    function cleanup_t_uint96(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffff)\n    }\n\n    function validator_revert_t_uint96(value) {\n        if iszero(eq(value, cleanup_t_uint96(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint96(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint96(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint96(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint96(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function convert_t_contract$_BlockhashStoreInterface_$303_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_BlockhashStoreInterface_$303_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_BlockhashStoreInterface_$303_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_BlockhashStoreInterface_$303__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_BlockhashStoreInterface_$303_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_array$_t_uint256_$2_calldata_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_array$_t_uint256_$2_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint96_to_t_uint96_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint96(value))\n    }\n\n    function array_length_t_array$_t_address_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_address_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encodeUpdatedPos_t_address_to_t_address(value0, pos) -> updatedPos {\n        abi_encode_t_address_to_t_address(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_address_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // address[] -> address[]\n    function abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_address_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_address_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_address_to_t_address(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_address_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_uint96_t_uint64_t_address_t_array$_t_address_$dyn_memory_ptr__to_t_uint96_t_uint64_t_address_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_uint96_to_t_uint96_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint64_to_t_uint64_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x01)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2, value3 := abi_decode_t_bytes_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function convert_t_contract$_AggregatorV3Interface_$293_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_AggregatorV3Interface_$293_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_AggregatorV3Interface_$293_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_AggregatorV3Interface_$293__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_AggregatorV3Interface_$293_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_allocation_size_t_array$_t_uint256_$2_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n    }\n\n    // uint256[2]\n    function abi_decode_available_length_t_array$_t_uint256_$2_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_uint256_$2_memory_ptr(length))\n        let dst := array\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_uint256(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // uint256[2]\n    function abi_decode_t_array$_t_uint256_$2_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := 0x02\n        array := abi_decode_available_length_t_array$_t_uint256_$2_memory_ptr(offset, length, end)\n    }\n\n    // struct VRF.Proof\n    function abi_decode_t_struct$_Proof_$1989_memory_ptr(headStart, end) -> value {\n        if slt(sub(end, headStart), 0x01a0) { revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f() }\n        value := allocate_memory(0x0120)\n\n        {\n            // pk\n\n            let offset := 0\n\n            mstore(add(value, 0x00), abi_decode_t_array$_t_uint256_$2_memory_ptr(add(headStart, offset), end))\n\n        }\n\n        {\n            // gamma\n\n            let offset := 64\n\n            mstore(add(value, 0x20), abi_decode_t_array$_t_uint256_$2_memory_ptr(add(headStart, offset), end))\n\n        }\n\n        {\n            // c\n\n            let offset := 128\n\n            mstore(add(value, 0x40), abi_decode_t_uint256(add(headStart, offset), end))\n\n        }\n\n        {\n            // s\n\n            let offset := 160\n\n            mstore(add(value, 0x60), abi_decode_t_uint256(add(headStart, offset), end))\n\n        }\n\n        {\n            // seed\n\n            let offset := 192\n\n            mstore(add(value, 0x80), abi_decode_t_uint256(add(headStart, offset), end))\n\n        }\n\n        {\n            // uWitness\n\n            let offset := 224\n\n            mstore(add(value, 0xa0), abi_decode_t_address(add(headStart, offset), end))\n\n        }\n\n        {\n            // cGammaWitness\n\n            let offset := 256\n\n            mstore(add(value, 0xc0), abi_decode_t_array$_t_uint256_$2_memory_ptr(add(headStart, offset), end))\n\n        }\n\n        {\n            // sHashWitness\n\n            let offset := 320\n\n            mstore(add(value, 0xe0), abi_decode_t_array$_t_uint256_$2_memory_ptr(add(headStart, offset), end))\n\n        }\n\n        {\n            // zInv\n\n            let offset := 384\n\n            mstore(add(value, 0x0100), abi_decode_t_uint256(add(headStart, offset), end))\n\n        }\n\n    }\n\n    // struct VRFCoordinatorV2.RequestCommitment\n    function abi_decode_t_struct$_RequestCommitment_$2318_memory_ptr(headStart, end) -> value {\n        if slt(sub(end, headStart), 0xa0) { revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f() }\n        value := allocate_memory(0xa0)\n\n        {\n            // blockNum\n\n            let offset := 0\n\n            mstore(add(value, 0x00), abi_decode_t_uint64(add(headStart, offset), end))\n\n        }\n\n        {\n            // subId\n\n            let offset := 32\n\n            mstore(add(value, 0x20), abi_decode_t_uint64(add(headStart, offset), end))\n\n        }\n\n        {\n            // callbackGasLimit\n\n            let offset := 64\n\n            mstore(add(value, 0x40), abi_decode_t_uint32(add(headStart, offset), end))\n\n        }\n\n        {\n            // numWords\n\n            let offset := 96\n\n            mstore(add(value, 0x60), abi_decode_t_uint32(add(headStart, offset), end))\n\n        }\n\n        {\n            // sender\n\n            let offset := 128\n\n            mstore(add(value, 0x80), abi_decode_t_address(add(headStart, offset), end))\n\n        }\n\n    }\n\n    function abi_decode_tuple_t_struct$_Proof_$1989_memory_ptrt_struct$_RequestCommitment_$2318_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 576) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_struct$_Proof_$1989_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 416\n\n            value1 := abi_decode_t_struct$_RequestCommitment_$2318_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint96__to_t_uint96__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint96_to_t_uint96_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint16_t_uint32_t_uint32_t_uint32__to_t_uint16_t_uint32_t_uint32_t_uint32__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_uint16_to_t_uint16_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function abi_decode_tuple_t_array$_t_uint256_$2_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_array$_t_uint256_$2_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x31() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n\n    function abi_encode_tuple_t_uint16_t_uint16_t_uint16__to_t_uint16_t_uint16_t_uint16__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint16_to_t_uint16_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint16_to_t_uint16_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint16_to_t_uint16_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function shift_right_0_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(0, value)\n\n    }\n\n    function cleanup_from_storage_t_uint32(value) -> cleaned {\n        cleaned := and(value, 0xffffffff)\n    }\n\n    function extract_from_storage_value_offset_0t_uint32(slot_value) -> value {\n        value := cleanup_from_storage_t_uint32(shift_right_0_unsigned(slot_value))\n    }\n\n    function abi_encode_t_uint32_to_t_uint32(value, pos) {\n        mstore(pos, cleanup_t_uint32(value))\n    }\n\n    function shift_right_32_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(32, value)\n\n    }\n\n    function extract_from_storage_value_offset_4t_uint32(slot_value) -> value {\n        value := cleanup_from_storage_t_uint32(shift_right_32_unsigned(slot_value))\n    }\n\n    function shift_right_64_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(64, value)\n\n    }\n\n    function extract_from_storage_value_offset_8t_uint32(slot_value) -> value {\n        value := cleanup_from_storage_t_uint32(shift_right_64_unsigned(slot_value))\n    }\n\n    function shift_right_96_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(96, value)\n\n    }\n\n    function extract_from_storage_value_offset_12t_uint32(slot_value) -> value {\n        value := cleanup_from_storage_t_uint32(shift_right_96_unsigned(slot_value))\n    }\n\n    function shift_right_128_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(128, value)\n\n    }\n\n    function extract_from_storage_value_offset_16t_uint32(slot_value) -> value {\n        value := cleanup_from_storage_t_uint32(shift_right_128_unsigned(slot_value))\n    }\n\n    function shift_right_160_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(160, value)\n\n    }\n\n    function cleanup_from_storage_t_uint24(value) -> cleaned {\n        cleaned := and(value, 0xffffff)\n    }\n\n    function extract_from_storage_value_offset_20t_uint24(slot_value) -> value {\n        value := cleanup_from_storage_t_uint24(shift_right_160_unsigned(slot_value))\n    }\n\n    function abi_encode_t_uint24_to_t_uint24(value, pos) {\n        mstore(pos, cleanup_t_uint24(value))\n    }\n\n    function shift_right_184_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(184, value)\n\n    }\n\n    function extract_from_storage_value_offset_23t_uint24(slot_value) -> value {\n        value := cleanup_from_storage_t_uint24(shift_right_184_unsigned(slot_value))\n    }\n\n    function shift_right_208_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(208, value)\n\n    }\n\n    function extract_from_storage_value_offset_26t_uint24(slot_value) -> value {\n        value := cleanup_from_storage_t_uint24(shift_right_208_unsigned(slot_value))\n    }\n\n    function shift_right_232_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(232, value)\n\n    }\n\n    function extract_from_storage_value_offset_29t_uint24(slot_value) -> value {\n        value := cleanup_from_storage_t_uint24(shift_right_232_unsigned(slot_value))\n    }\n\n    // struct VRFCoordinatorV2.FeeConfig -> struct VRFCoordinatorV2.FeeConfig\n    function abi_encode_t_struct$_FeeConfig_$2411_storage_to_t_struct$_FeeConfig_$2411_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0x0120)\n        let slotValue := 0\n\n        {\n            // fulfillmentFlatFeeLinkPPMTier1\n            slotValue := sload(add(value, 0x00))\n            let memberValue0 := extract_from_storage_value_offset_0t_uint32(slotValue)\n            abi_encode_t_uint32_to_t_uint32(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // fulfillmentFlatFeeLinkPPMTier2\n\n            let memberValue0 := extract_from_storage_value_offset_4t_uint32(slotValue)\n            abi_encode_t_uint32_to_t_uint32(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // fulfillmentFlatFeeLinkPPMTier3\n\n            let memberValue0 := extract_from_storage_value_offset_8t_uint32(slotValue)\n            abi_encode_t_uint32_to_t_uint32(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // fulfillmentFlatFeeLinkPPMTier4\n\n            let memberValue0 := extract_from_storage_value_offset_12t_uint32(slotValue)\n            abi_encode_t_uint32_to_t_uint32(memberValue0, add(pos, 0x60))\n        }\n\n        {\n            // fulfillmentFlatFeeLinkPPMTier5\n\n            let memberValue0 := extract_from_storage_value_offset_16t_uint32(slotValue)\n            abi_encode_t_uint32_to_t_uint32(memberValue0, add(pos, 0x80))\n        }\n\n        {\n            // reqsForTier2\n\n            let memberValue0 := extract_from_storage_value_offset_20t_uint24(slotValue)\n            abi_encode_t_uint24_to_t_uint24(memberValue0, add(pos, 0xa0))\n        }\n\n        {\n            // reqsForTier3\n\n            let memberValue0 := extract_from_storage_value_offset_23t_uint24(slotValue)\n            abi_encode_t_uint24_to_t_uint24(memberValue0, add(pos, 0xc0))\n        }\n\n        {\n            // reqsForTier4\n\n            let memberValue0 := extract_from_storage_value_offset_26t_uint24(slotValue)\n            abi_encode_t_uint24_to_t_uint24(memberValue0, add(pos, 0xe0))\n        }\n\n        {\n            // reqsForTier5\n\n            let memberValue0 := extract_from_storage_value_offset_29t_uint24(slotValue)\n            abi_encode_t_uint24_to_t_uint24(memberValue0, add(pos, 0x0100))\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint16_t_uint32_t_uint32_t_uint32_t_int256_t_struct$_FeeConfig_$2411_storage__to_t_uint16_t_uint32_t_uint32_t_uint32_t_int256_t_struct$_FeeConfig_$2411_memory_ptr__fromStack_reversed(headStart , value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 448)\n\n        abi_encode_t_uint16_to_t_uint16_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_int256_to_t_int256_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_struct$_FeeConfig_$2411_storage_to_t_struct$_FeeConfig_$2411_memory_ptr_fromStack(value5,  add(headStart, 160))\n\n    }\n\n    function abi_encode_tuple_t_uint64_t_address__to_t_uint64_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint64_to_t_uint64_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_uint32_t_uint32__to_t_uint32_t_uint32__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function checked_add_t_uint64(x, y) -> sum {\n        x := cleanup_t_uint64(x)\n        y := cleanup_t_uint64(y)\n        sum := add(x, y)\n\n        if gt(sum, 0xffffffffffffffff) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint64_t_uint32_t_uint32_t_address__to_t_uint256_t_uint256_t_uint64_t_uint32_t_uint32_t_address__fromStack_reversed(headStart , value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 192)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint64_to_t_uint64_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_address_to_t_address_fromStack(value5,  add(headStart, 160))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint16_t_uint32_t_uint32__to_t_uint256_t_uint256_t_uint16_t_uint32_t_uint32__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint16_to_t_uint16_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function checked_sub_t_uint96(x, y) -> diff {\n        x := cleanup_t_uint96(x)\n        y := cleanup_t_uint96(y)\n        diff := sub(x, y)\n\n        if gt(diff, 0xffffffffffffffffffffffff) { panic_error_0x11() }\n\n    }\n\n    function convert_t_uint96_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint96(value)))\n    }\n\n    function abi_encode_t_uint96_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, convert_t_uint96_to_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint96__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint96_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Must be proposed owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function increment_t_uint64(value) -> ret {\n        value := cleanup_t_uint64(value)\n        if eq(value, 0xffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function checked_add_t_uint96(x, y) -> sum {\n        x := cleanup_t_uint96(x)\n        y := cleanup_t_uint96(y)\n        sum := add(x, y)\n\n        if gt(sum, 0xffffffffffffffffffffffff) { panic_error_0x11() }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_uint256_t_array$_t_uint256_$dyn_memory_ptr__to_t_uint256_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint96_t_bool__to_t_uint256_t_uint96_t_bool__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint96_to_t_uint96_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function array_length_t_array$_t_uint256_$2_memory_ptr(value) -> length {\n\n        length := 0x02\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$2_memory_ptr_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function array_dataslot_t_array$_t_uint256_$2_memory_ptr(ptr) -> data {\n        data := ptr\n\n    }\n\n    function array_nextElement_t_array$_t_uint256_$2_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint256[2] -> uint256[2]\n    function abi_encode_t_array$_t_uint256_$2_memory_ptr_to_t_array$_t_uint256_$2_memory_ptr_fromStack(value, pos)  {\n        let length := array_length_t_array$_t_uint256_$2_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$2_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$2_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$2_memory_ptr(srcPtr)\n        }\n\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$2_memory_ptr__to_t_array$_t_uint256_$2_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_array$_t_uint256_$2_memory_ptr_to_t_array$_t_uint256_$2_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3(memPtr) {\n\n        mstore(add(memPtr, 0), \"Only callable by owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_bytes32_t_address_t_uint64_t_uint64__to_t_bytes32_t_address_t_uint64_t_uint64__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint64_to_t_uint64_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint64_to_t_uint64_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function abi_encode_tuple_t_bytes32_t_uint256__to_t_bytes32_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint64_t_uint64_t_uint32_t_uint32_t_address__to_t_uint256_t_uint64_t_uint64_t_uint32_t_uint32_t_address__fromStack_reversed(headStart , value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 192)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint64_to_t_uint64_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint64_to_t_uint64_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_address_to_t_address_fromStack(value5,  add(headStart, 160))\n\n    }\n\n    function convert_t_uint64_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint64(value)))\n    }\n\n    function abi_encode_t_uint64_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, convert_t_uint64_to_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint64__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint64_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_t_bytes32_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function leftAlign_t_uint256(value) -> aligned {\n        aligned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_uint256(cleanup_t_uint256(value)))\n    }\n\n    function leftAlign_t_bytes32(value) -> aligned {\n        aligned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_bytes32(cleanup_t_bytes32(value)))\n    }\n\n    function abi_encode_tuple_packed_t_uint256_t_bytes32__to_t_uint256_t_bytes32__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value0,  pos)\n        pos := add(pos, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack(value1,  pos)\n        pos := add(pos, 32)\n\n        end := pos\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cannot transfer to self\")\n\n    }\n\n    function abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_array$_t_uint256_$2_memory_ptr__to_t_uint256_t_array$_t_uint256_$2_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_array$_t_uint256_$2_memory_ptr_to_t_array$_t_uint256_$2_memory_ptr_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function cleanup_t_uint80(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffff)\n    }\n\n    function validator_revert_t_uint80(value) {\n        if iszero(eq(value, cleanup_t_uint80(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint80_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint80(value)\n    }\n\n    function abi_decode_t_int256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_int256(value)\n    }\n\n    function abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint80_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_int256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint80_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_ae4825d6ed8aab0513e68c27d2710aa68bcf110761c187d047951a5ec2580d8c(memPtr) {\n\n        mstore(add(memPtr, 0), \"public key is not on curve\")\n\n    }\n\n    function abi_encode_t_stringliteral_ae4825d6ed8aab0513e68c27d2710aa68bcf110761c187d047951a5ec2580d8c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_ae4825d6ed8aab0513e68c27d2710aa68bcf110761c187d047951a5ec2580d8c(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ae4825d6ed8aab0513e68c27d2710aa68bcf110761c187d047951a5ec2580d8c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ae4825d6ed8aab0513e68c27d2710aa68bcf110761c187d047951a5ec2580d8c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c6038a70864418dbffbd772a49c391c3536f6b633b3f2ccbcd6a6e15dbadd34c(memPtr) {\n\n        mstore(add(memPtr, 0), \"gamma is not on curve\")\n\n    }\n\n    function abi_encode_t_stringliteral_c6038a70864418dbffbd772a49c391c3536f6b633b3f2ccbcd6a6e15dbadd34c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_c6038a70864418dbffbd772a49c391c3536f6b633b3f2ccbcd6a6e15dbadd34c(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c6038a70864418dbffbd772a49c391c3536f6b633b3f2ccbcd6a6e15dbadd34c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c6038a70864418dbffbd772a49c391c3536f6b633b3f2ccbcd6a6e15dbadd34c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9f90959a5b25997fe56cdafc2f72d300e298468f5ac5e847db7890be22108d2b(memPtr) {\n\n        mstore(add(memPtr, 0), \"cGammaWitness is not on curve\")\n\n    }\n\n    function abi_encode_t_stringliteral_9f90959a5b25997fe56cdafc2f72d300e298468f5ac5e847db7890be22108d2b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_9f90959a5b25997fe56cdafc2f72d300e298468f5ac5e847db7890be22108d2b(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9f90959a5b25997fe56cdafc2f72d300e298468f5ac5e847db7890be22108d2b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9f90959a5b25997fe56cdafc2f72d300e298468f5ac5e847db7890be22108d2b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_ff425c3ce65530e49c0c35a5fdd7a61b00545f1fcc6482c28903cdcf48ac624f(memPtr) {\n\n        mstore(add(memPtr, 0), \"sHashWitness is not on curve\")\n\n    }\n\n    function abi_encode_t_stringliteral_ff425c3ce65530e49c0c35a5fdd7a61b00545f1fcc6482c28903cdcf48ac624f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_ff425c3ce65530e49c0c35a5fdd7a61b00545f1fcc6482c28903cdcf48ac624f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ff425c3ce65530e49c0c35a5fdd7a61b00545f1fcc6482c28903cdcf48ac624f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ff425c3ce65530e49c0c35a5fdd7a61b00545f1fcc6482c28903cdcf48ac624f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_897d9ab785e875f3b83c51a39f09c2f6a852e06c26e3faf90359e5ad589f8cf1(memPtr) {\n\n        mstore(add(memPtr, 0), \"addr(c*pk+s*g)!=_uWitness\")\n\n    }\n\n    function abi_encode_t_stringliteral_897d9ab785e875f3b83c51a39f09c2f6a852e06c26e3faf90359e5ad589f8cf1_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_897d9ab785e875f3b83c51a39f09c2f6a852e06c26e3faf90359e5ad589f8cf1(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_897d9ab785e875f3b83c51a39f09c2f6a852e06c26e3faf90359e5ad589f8cf1__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_897d9ab785e875f3b83c51a39f09c2f6a852e06c26e3faf90359e5ad589f8cf1_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_cfa179d50ad7851ac140a84fb212f48699dbd00170b3afe087b0d09f632d1624(memPtr) {\n\n        mstore(add(memPtr, 0), \"invalid proof\")\n\n    }\n\n    function abi_encode_t_stringliteral_cfa179d50ad7851ac140a84fb212f48699dbd00170b3afe087b0d09f632d1624_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 13)\n        store_literal_in_memory_cfa179d50ad7851ac140a84fb212f48699dbd00170b3afe087b0d09f632d1624(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_cfa179d50ad7851ac140a84fb212f48699dbd00170b3afe087b0d09f632d1624__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_cfa179d50ad7851ac140a84fb212f48699dbd00170b3afe087b0d09f632d1624_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_787cf99fb194dba922561b5b1fd0b18a6a49c57eaa01d9c5279f2b2a5bdc1a86(memPtr) {\n\n        mstore(add(memPtr, 0), \"invalid x-ordinate\")\n\n    }\n\n    function abi_encode_t_stringliteral_787cf99fb194dba922561b5b1fd0b18a6a49c57eaa01d9c5279f2b2a5bdc1a86_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_787cf99fb194dba922561b5b1fd0b18a6a49c57eaa01d9c5279f2b2a5bdc1a86(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_787cf99fb194dba922561b5b1fd0b18a6a49c57eaa01d9c5279f2b2a5bdc1a86__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_787cf99fb194dba922561b5b1fd0b18a6a49c57eaa01d9c5279f2b2a5bdc1a86_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_ecc598139057476f7e46578e2e254b173afe0910225980583669989d2a737f84(memPtr) {\n\n        mstore(add(memPtr, 0), \"invalid y-ordinate\")\n\n    }\n\n    function abi_encode_t_stringliteral_ecc598139057476f7e46578e2e254b173afe0910225980583669989d2a737f84_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_ecc598139057476f7e46578e2e254b173afe0910225980583669989d2a737f84(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ecc598139057476f7e46578e2e254b173afe0910225980583669989d2a737f84__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ecc598139057476f7e46578e2e254b173afe0910225980583669989d2a737f84_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_7fcbfa9df9f83be5218dd62480bcb5cdae56a970e549b88ff2403f5fcded9211(memPtr) {\n\n        mstore(add(memPtr, 0), \"bad witness\")\n\n    }\n\n    function abi_encode_t_stringliteral_7fcbfa9df9f83be5218dd62480bcb5cdae56a970e549b88ff2403f5fcded9211_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 11)\n        store_literal_in_memory_7fcbfa9df9f83be5218dd62480bcb5cdae56a970e549b88ff2403f5fcded9211(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7fcbfa9df9f83be5218dd62480bcb5cdae56a970e549b88ff2403f5fcded9211__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7fcbfa9df9f83be5218dd62480bcb5cdae56a970e549b88ff2403f5fcded9211_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$2_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_inplace(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256_inplace(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256_inplace(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    // uint256[2] -> uint256[2]\n    function abi_encode_t_array$_t_uint256_$2_memory_ptr_to_t_array$_t_uint256_$2_memory_ptr_nonPadded_inplace_fromStack(value, pos)  {\n        let length := array_length_t_array$_t_uint256_$2_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$2_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$2_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256_inplace(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$2_memory_ptr(srcPtr)\n        }\n\n    }\n\n    function abi_encode_tuple_packed_t_uint256_t_array$_t_uint256_$2_memory_ptr_t_uint256__to_t_uint256_t_array$_t_uint256_$2_memory_ptr_t_uint256__nonPadded_inplace_fromStack_reversed(pos , value2, value1, value0) -> end {\n\n        abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value0,  pos)\n        pos := add(pos, 32)\n\n        abi_encode_t_array$_t_uint256_$2_memory_ptr_to_t_array$_t_uint256_$2_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n        pos := add(pos, 64)\n\n        abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value2,  pos)\n        pos := add(pos, 32)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_packed_t_uint256__to_t_uint256__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value0,  pos)\n        pos := add(pos, 32)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_2ce93c410880bb13bca91831655ee36bc7ab052e7c8cb24dd914165b1030eeca(memPtr) {\n\n        mstore(add(memPtr, 0), \"points in sum must be distinct\")\n\n    }\n\n    function abi_encode_t_stringliteral_2ce93c410880bb13bca91831655ee36bc7ab052e7c8cb24dd914165b1030eeca_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 30)\n        store_literal_in_memory_2ce93c410880bb13bca91831655ee36bc7ab052e7c8cb24dd914165b1030eeca(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_2ce93c410880bb13bca91831655ee36bc7ab052e7c8cb24dd914165b1030eeca__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2ce93c410880bb13bca91831655ee36bc7ab052e7c8cb24dd914165b1030eeca_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_d9cf4c09fcc6ead19e539ee3210816df98f1219b8b47e830620ffd543bfea51f(memPtr) {\n\n        mstore(add(memPtr, 0), \"First mul check failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_d9cf4c09fcc6ead19e539ee3210816df98f1219b8b47e830620ffd543bfea51f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_d9cf4c09fcc6ead19e539ee3210816df98f1219b8b47e830620ffd543bfea51f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d9cf4c09fcc6ead19e539ee3210816df98f1219b8b47e830620ffd543bfea51f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d9cf4c09fcc6ead19e539ee3210816df98f1219b8b47e830620ffd543bfea51f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_13447e9fa8630e4bb2fa50f1493aa790167933f55263568ac4ad74cb4d138234(memPtr) {\n\n        mstore(add(memPtr, 0), \"Second mul check failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_13447e9fa8630e4bb2fa50f1493aa790167933f55263568ac4ad74cb4d138234_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_13447e9fa8630e4bb2fa50f1493aa790167933f55263568ac4ad74cb4d138234(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_13447e9fa8630e4bb2fa50f1493aa790167933f55263568ac4ad74cb4d138234__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_13447e9fa8630e4bb2fa50f1493aa790167933f55263568ac4ad74cb4d138234_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function shift_left_96(value) -> newValue {\n        newValue :=\n\n        shl(96, value)\n\n    }\n\n    function leftAlign_t_uint160(value) -> aligned {\n        aligned := shift_left_96(value)\n    }\n\n    function leftAlign_t_address(value) -> aligned {\n        aligned := leftAlign_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_address(cleanup_t_address(value)))\n    }\n\n    function abi_encode_tuple_packed_t_uint256_t_array$_t_uint256_$2_memory_ptr_t_array$_t_uint256_$2_memory_ptr_t_array$_t_uint256_$2_memory_ptr_t_array$_t_uint256_$2_memory_ptr_t_address__to_t_uint256_t_array$_t_uint256_$2_memory_ptr_t_array$_t_uint256_$2_memory_ptr_t_array$_t_uint256_$2_memory_ptr_t_array$_t_uint256_$2_memory_ptr_t_address__nonPadded_inplace_fromStack_reversed(pos , value5, value4, value3, value2, value1, value0) -> end {\n\n        abi_encode_t_uint256_to_t_uint256_nonPadded_inplace_fromStack(value0,  pos)\n        pos := add(pos, 32)\n\n        abi_encode_t_array$_t_uint256_$2_memory_ptr_to_t_array$_t_uint256_$2_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n        pos := add(pos, 64)\n\n        abi_encode_t_array$_t_uint256_$2_memory_ptr_to_t_array$_t_uint256_$2_memory_ptr_nonPadded_inplace_fromStack(value2,  pos)\n        pos := add(pos, 64)\n\n        abi_encode_t_array$_t_uint256_$2_memory_ptr_to_t_array$_t_uint256_$2_memory_ptr_nonPadded_inplace_fromStack(value3,  pos)\n        pos := add(pos, 64)\n\n        abi_encode_t_array$_t_uint256_$2_memory_ptr_to_t_array$_t_uint256_$2_memory_ptr_nonPadded_inplace_fromStack(value4,  pos)\n        pos := add(pos, 64)\n\n        abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value5,  pos)\n        pos := add(pos, 20)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_e71e9381bf8fff7d9eeee436d182c3c8b982b1d416953f4ca9ccf572989baeca(memPtr) {\n\n        mstore(add(memPtr, 0), \"zero scalar\")\n\n    }\n\n    function abi_encode_t_stringliteral_e71e9381bf8fff7d9eeee436d182c3c8b982b1d416953f4ca9ccf572989baeca_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 11)\n        store_literal_in_memory_e71e9381bf8fff7d9eeee436d182c3c8b982b1d416953f4ca9ccf572989baeca(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e71e9381bf8fff7d9eeee436d182c3c8b982b1d416953f4ca9ccf572989baeca__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e71e9381bf8fff7d9eeee436d182c3c8b982b1d416953f4ca9ccf572989baeca_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function mod_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n\n    function abi_encode_tuple_packed_t_array$_t_uint256_$2_memory_ptr__to_t_array$_t_uint256_$2_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        abi_encode_t_array$_t_uint256_$2_memory_ptr_to_t_array$_t_uint256_$2_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n        pos := add(pos, 64)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_95046d93d9b2e6ba778cd180e8c682e7d907547386cb54bf80bca322c50144ca(memPtr) {\n\n        mstore(add(memPtr, 0), \"invZ must be inverse of z\")\n\n    }\n\n    function abi_encode_t_stringliteral_95046d93d9b2e6ba778cd180e8c682e7d907547386cb54bf80bca322c50144ca_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_95046d93d9b2e6ba778cd180e8c682e7d907547386cb54bf80bca322c50144ca(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_95046d93d9b2e6ba778cd180e8c682e7d907547386cb54bf80bca322c50144ca__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_95046d93d9b2e6ba778cd180e8c682e7d907547386cb54bf80bca322c50144ca_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_4bd695d9be776d24ba6aaa6ea48a189f388adfd8a5e6a1df7bd6471290ea4e5f(memPtr) {\n\n        mstore(add(memPtr, 0), \"bigModExp failure!\")\n\n    }\n\n    function abi_encode_t_stringliteral_4bd695d9be776d24ba6aaa6ea48a189f388adfd8a5e6a1df7bd6471290ea4e5f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_4bd695d9be776d24ba6aaa6ea48a189f388adfd8a5e6a1df7bd6471290ea4e5f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4bd695d9be776d24ba6aaa6ea48a189f388adfd8a5e6a1df7bd6471290ea4e5f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4bd695d9be776d24ba6aaa6ea48a189f388adfd8a5e6a1df7bd6471290ea4e5f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n","id":20,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"2118":[{"length":32,"start":3530},{"length":32,"start":6327},{"length":32,"start":12210},{"length":32,"start":15617},{"length":32,"start":15913},{"length":32,"start":18133}],"2121":[{"length":32,"start":12985},{"length":32,"start":20597}],"2124":[{"length":32,"start":6543},{"length":32,"start":19180}]},"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x21B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6F64F03F GT PUSH2 0x125 JUMPI DUP1 PUSH4 0xAD178361 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xD2F9F9A7 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xD2F9F9A7 EQ PUSH2 0x604 JUMPI DUP1 PUSH4 0xD7AE1D30 EQ PUSH2 0x634 JUMPI DUP1 PUSH4 0xE72F6E30 EQ PUSH2 0x650 JUMPI DUP1 PUSH4 0xE82AD7D4 EQ PUSH2 0x66C JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x69C JUMPI PUSH2 0x21B JUMP JUMPDEST DUP1 PUSH4 0xAD178361 EQ PUSH2 0x565 JUMPI DUP1 PUSH4 0xAF198B97 EQ PUSH2 0x583 JUMPI DUP1 PUSH4 0xC3F909D4 EQ PUSH2 0x5B3 JUMPI DUP1 PUSH4 0xCAF70C4A EQ PUSH2 0x5D4 JUMPI PUSH2 0x21B JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x4BE JUMPI DUP1 PUSH4 0x9F87FAD7 EQ PUSH2 0x4DC JUMPI DUP1 PUSH4 0xA21A23E4 EQ PUSH2 0x4F8 JUMPI DUP1 PUSH4 0xA47C7696 EQ PUSH2 0x516 JUMPI DUP1 PUSH4 0xA4C0ED36 EQ PUSH2 0x549 JUMPI PUSH2 0x21B JUMP JUMPDEST DUP1 PUSH4 0x6F64F03F EQ PUSH2 0x460 JUMPI DUP1 PUSH4 0x7341C10C EQ PUSH2 0x47C JUMPI DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x498 JUMPI DUP1 PUSH4 0x82359740 EQ PUSH2 0x4A2 JUMPI PUSH2 0x21B JUMP JUMPDEST DUP1 PUSH4 0x356DAC71 GT PUSH2 0x1A8 JUMPI DUP1 PUSH4 0x5FBBC0D2 GT PUSH2 0x177 JUMPI DUP1 PUSH4 0x5FBBC0D2 EQ PUSH2 0x3B2 JUMPI DUP1 PUSH4 0x64D51A2A EQ PUSH2 0x3D8 JUMPI DUP1 PUSH4 0x66316D8D EQ PUSH2 0x3F6 JUMPI DUP1 PUSH4 0x689C4517 EQ PUSH2 0x412 JUMPI DUP1 PUSH4 0x69BCDB7D EQ PUSH2 0x430 JUMPI PUSH2 0x21B JUMP JUMPDEST DUP1 PUSH4 0x356DAC71 EQ PUSH2 0x32A JUMPI DUP1 PUSH4 0x40D6BB82 EQ PUSH2 0x348 JUMPI DUP1 PUSH4 0x4CB48A54 EQ PUSH2 0x366 JUMPI DUP1 PUSH4 0x5D3B1D30 EQ PUSH2 0x382 JUMPI PUSH2 0x21B JUMP JUMPDEST DUP1 PUSH4 0x8821D58 GT PUSH2 0x1EF JUMPI DUP1 PUSH4 0x8821D58 EQ PUSH2 0x296 JUMPI DUP1 PUSH4 0x12B58349 EQ PUSH2 0x2B2 JUMPI DUP1 PUSH4 0x15C48B84 EQ PUSH2 0x2D0 JUMPI DUP1 PUSH4 0x181F5A77 EQ PUSH2 0x2EE JUMPI DUP1 PUSH4 0x1B6B6D23 EQ PUSH2 0x30C JUMPI PUSH2 0x21B JUMP JUMPDEST DUP1 PUSH3 0x12291 EQ PUSH2 0x220 JUMPI DUP1 PUSH4 0x2BCC5B6 EQ PUSH2 0x240 JUMPI DUP1 PUSH4 0x4C357CB EQ PUSH2 0x25C JUMPI DUP1 PUSH4 0x6BFA637 EQ PUSH2 0x278 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x228 PUSH2 0x6B8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x237 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x6639 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x25A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x255 SWAP2 SWAP1 PUSH2 0x66CB JUMP JUMPDEST PUSH2 0x746 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x276 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x271 SWAP2 SWAP1 PUSH2 0x6756 JUMP JUMPDEST PUSH2 0x855 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x280 PUSH2 0xAF6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28D SWAP2 SWAP1 PUSH2 0x67A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2AB SWAP2 SWAP1 PUSH2 0x67E7 JUMP JUMPDEST PUSH2 0xB14 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2BA PUSH2 0xD56 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C7 SWAP2 SWAP1 PUSH2 0x682D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D8 PUSH2 0xD86 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E5 SWAP2 SWAP1 PUSH2 0x6848 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F6 PUSH2 0xD8B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x303 SWAP2 SWAP1 PUSH2 0x68F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x314 PUSH2 0xDC8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x321 SWAP2 SWAP1 PUSH2 0x6974 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x332 PUSH2 0xDEC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x33F SWAP2 SWAP1 PUSH2 0x69A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x350 PUSH2 0xDF6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x35D SWAP2 SWAP1 PUSH2 0x69C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x380 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x37B SWAP2 SWAP1 PUSH2 0x6BFD JUMP JUMPDEST PUSH2 0xDFC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x39C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x397 SWAP2 SWAP1 PUSH2 0x6CB7 JUMP JUMPDEST PUSH2 0x1148 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A9 SWAP2 SWAP1 PUSH2 0x682D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3BA PUSH2 0x15E1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3CF SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x6D41 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3E0 PUSH2 0x16CE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3ED SWAP2 SWAP1 PUSH2 0x6848 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x410 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x40B SWAP2 SWAP1 PUSH2 0x6E12 JUMP JUMPDEST PUSH2 0x16D3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x41A PUSH2 0x198D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x427 SWAP2 SWAP1 PUSH2 0x6E73 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x44A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x445 SWAP2 SWAP1 PUSH2 0x6EBA JUMP JUMPDEST PUSH2 0x19B1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x457 SWAP2 SWAP1 PUSH2 0x6EF6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x47A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x475 SWAP2 SWAP1 PUSH2 0x6F11 JUMP JUMPDEST PUSH2 0x19CE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x496 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x491 SWAP2 SWAP1 PUSH2 0x6756 JUMP JUMPDEST PUSH2 0x1B8C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4A0 PUSH2 0x1F51 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4BC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4B7 SWAP2 SWAP1 PUSH2 0x66CB JUMP JUMPDEST PUSH2 0x20E6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4C6 PUSH2 0x244E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4D3 SWAP2 SWAP1 PUSH2 0x6F60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4F6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4F1 SWAP2 SWAP1 PUSH2 0x6756 JUMP JUMPDEST PUSH2 0x2477 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x500 PUSH2 0x29FA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x50D SWAP2 SWAP1 PUSH2 0x67A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x530 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x52B SWAP2 SWAP1 PUSH2 0x66CB JUMP JUMPDEST PUSH2 0x2D21 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x540 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x7048 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x563 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x55E SWAP2 SWAP1 PUSH2 0x70F4 JUMP JUMPDEST PUSH2 0x2F66 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x56D PUSH2 0x32B7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x57A SWAP2 SWAP1 PUSH2 0x7189 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x59D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x598 SWAP2 SWAP1 PUSH2 0x73C3 JUMP JUMPDEST PUSH2 0x32DB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5AA SWAP2 SWAP1 PUSH2 0x7405 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5BB PUSH2 0x381A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5CB SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x7420 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5EE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5E9 SWAP2 SWAP1 PUSH2 0x7465 JUMP JUMPDEST PUSH2 0x3884 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5FB SWAP2 SWAP1 PUSH2 0x6EF6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x61E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x619 SWAP2 SWAP1 PUSH2 0x66CB JUMP JUMPDEST PUSH2 0x38B4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x62B SWAP2 SWAP1 PUSH2 0x69C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x64E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x649 SWAP2 SWAP1 PUSH2 0x6756 JUMP JUMPDEST PUSH2 0x3B35 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x66A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x665 SWAP2 SWAP1 PUSH2 0x7492 JUMP JUMPDEST PUSH2 0x3CF5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x686 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x681 SWAP2 SWAP1 PUSH2 0x66CB JUMP JUMPDEST PUSH2 0x3F06 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x693 SWAP2 SWAP1 PUSH2 0x74DA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6B6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6B1 SWAP2 SWAP1 PUSH2 0x7492 JUMP JUMPDEST PUSH2 0x41CC JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x60 PUSH1 0xB PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND PUSH1 0xB PUSH1 0x0 ADD PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH1 0x7 DUP1 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x734 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x720 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 POP SWAP1 SWAP2 SWAP3 JUMP JUMPDEST PUSH2 0x74E PUSH2 0x41E0 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x7FE JUMPI PUSH1 0x40 MLOAD PUSH32 0x1F6A65B600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x852 DUP2 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x4270 JUMP JUMPDEST POP JUMP JUMPDEST DUP2 PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x90B JUMPI PUSH1 0x40 MLOAD PUSH32 0x1F6A65B600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x97B JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xD8A3FB5200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x972 SWAP2 SWAP1 PUSH2 0x6F60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xB PUSH1 0x0 ADD PUSH1 0x6 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x9C5 JUMPI PUSH1 0x40 MLOAD PUSH32 0xED3BA6A600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 DUP7 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xAF0 JUMPI DUP3 PUSH1 0x3 PUSH1 0x0 DUP7 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH32 0x69436EA6DF009049404F564EFF6622CD00522B0BD6A89EFD9E52A355C4A879BE CALLER DUP6 PUSH1 0x40 MLOAD PUSH2 0xAE7 SWAP3 SWAP2 SWAP1 PUSH2 0x74F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xB1C PUSH2 0x41E0 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB5E DUP3 PUSH1 0x2 DUP1 PUSH1 0x20 MUL PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP3 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP PUSH2 0x3884 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC09 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x77F5B84C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC00 SWAP2 SWAP1 PUSH2 0x6EF6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x0 JUMPDEST PUSH1 0x7 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0xD02 JUMPI DUP3 PUSH1 0x7 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xC64 JUMPI PUSH2 0xC63 PUSH2 0x751E JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SUB PUSH2 0xCF5 JUMPI PUSH1 0x0 PUSH1 0x7 PUSH1 0x1 PUSH1 0x7 DUP1 SLOAD SWAP1 POP PUSH2 0xC8A SWAP2 SWAP1 PUSH2 0x757C JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0xC9B JUMPI PUSH2 0xC9A PUSH2 0x751E JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 PUSH1 0x7 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0xCBD JUMPI PUSH2 0xCBC PUSH2 0x751E JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x7 DUP1 SLOAD DUP1 PUSH2 0xCDD JUMPI PUSH2 0xCDC PUSH2 0x75B0 JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE POP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0xC42 JUMP JUMPDEST POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x72BE339577868F868798BAC2C93E52D6F034FEF4689A9848996C14EBB7416C0D DUP4 PUSH1 0x40 MLOAD PUSH2 0xD49 SWAP2 SWAP1 PUSH2 0x6EF6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xC8 DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x16 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x565246436F6F7264696E61746F72563220312E302E3000000000000000000000 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1F4 DUP2 JUMP JUMPDEST PUSH2 0xE04 PUSH2 0x41E0 JUMP JUMPDEST PUSH1 0xC8 PUSH2 0xFFFF AND DUP7 PUSH2 0xFFFF AND GT ISZERO PUSH2 0xE57 JUMPI DUP6 DUP7 PUSH1 0xC8 PUSH1 0x40 MLOAD PUSH32 0xA738697600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE4E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x75DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 SGT PUSH2 0xE9C JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x43D4CF6600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE93 SWAP2 SWAP1 PUSH2 0x69A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 DUP8 PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH4 0xFFFFFFFF AND DUP2 MSTORE POP PUSH1 0xB PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH2 0xFFFF MUL NOT AND SWAP1 DUP4 PUSH2 0xFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x6 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x7 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0xB PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP DUP1 PUSH1 0xC PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0xC PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x10 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH3 0xFFFFFF MUL NOT AND SWAP1 DUP4 PUSH3 0xFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x17 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH3 0xFFFFFF MUL NOT AND SWAP1 DUP4 PUSH3 0xFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xE0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x1A PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH3 0xFFFFFF MUL NOT AND SWAP1 DUP4 PUSH3 0xFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x100 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x1D PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH3 0xFFFFFF MUL NOT AND SWAP1 DUP4 PUSH3 0xFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP DUP2 PUSH1 0xA DUP2 SWAP1 SSTORE POP PUSH32 0xC21E3BD2E0B339D2848F0DD956947A88966C242C0C0C582A33137A5C1CEB5CB2 DUP7 DUP7 DUP7 DUP7 DUP7 PUSH1 0xC PUSH1 0x40 MLOAD PUSH2 0x1138 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x7895 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xB PUSH1 0x0 ADD PUSH1 0x6 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1194 JUMPI PUSH1 0x40 MLOAD PUSH32 0xED3BA6A600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 DUP8 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1244 JUMPI PUSH1 0x40 MLOAD PUSH32 0x1F6A65B600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP8 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1312 JUMPI DUP6 CALLER PUSH1 0x40 MLOAD PUSH32 0xF0019FE600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1309 SWAP3 SWAP2 SWAP1 PUSH2 0x78F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xB PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND PUSH2 0xFFFF AND DUP6 PUSH2 0xFFFF AND LT DUP1 PUSH2 0x1343 JUMPI POP PUSH1 0xC8 PUSH2 0xFFFF AND DUP6 PUSH2 0xFFFF AND GT JUMPDEST ISZERO PUSH2 0x139D JUMPI DUP5 PUSH1 0xB PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND PUSH1 0xC8 PUSH1 0x40 MLOAD PUSH32 0xA738697600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1394 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x75DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xB PUSH1 0x0 ADD PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP5 PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x141A JUMPI DUP4 PUSH1 0xB PUSH1 0x0 ADD PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH1 0x40 MLOAD PUSH32 0xF5D7E01E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1411 SWAP3 SWAP2 SWAP1 PUSH2 0x7920 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1F4 PUSH4 0xFFFFFFFF AND DUP4 PUSH4 0xFFFFFFFF AND GT ISZERO PUSH2 0x1471 JUMPI DUP3 PUSH2 0x1F4 PUSH1 0x40 MLOAD PUSH32 0x47386BEC00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1468 SWAP3 SWAP2 SWAP1 PUSH2 0x7920 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 PUSH2 0x1480 SWAP2 SWAP1 PUSH2 0x7949 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH2 0x1491 DUP11 CALLER DUP12 DUP7 PUSH2 0x4800 JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP2 PUSH2 0x149E PUSH2 0x4872 JUMP JUMPDEST DUP11 DUP10 DUP10 CALLER PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x14B7 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x7985 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x9 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP10 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP12 PUSH32 0x63373D1C4696214B898952999C9AAEC57DAC1EE2723CEC59BEA6888F489A9772 DUP6 DUP6 DUP14 DUP14 DUP14 PUSH1 0x40 MLOAD PUSH2 0x153E SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x79E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP3 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP12 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 SWAP5 POP POP POP POP POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xC PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH1 0xC PUSH1 0x0 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH1 0xC PUSH1 0x0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH1 0xC PUSH1 0x0 ADD PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH1 0xC PUSH1 0x0 ADD PUSH1 0x10 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH1 0xC PUSH1 0x0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH3 0xFFFFFF AND PUSH1 0xC PUSH1 0x0 ADD PUSH1 0x17 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH3 0xFFFFFF AND PUSH1 0xC PUSH1 0x0 ADD PUSH1 0x1A SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH3 0xFFFFFF AND PUSH1 0xC PUSH1 0x0 ADD PUSH1 0x1D SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH3 0xFFFFFF AND SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 SWAP8 SWAP9 JUMP JUMPDEST PUSH1 0x64 DUP2 JUMP JUMPDEST PUSH1 0xB PUSH1 0x0 ADD PUSH1 0x6 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x171D JUMPI PUSH1 0x40 MLOAD PUSH32 0xED3BA6A600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND LT ISZERO PUSH2 0x17CA JUMPI PUSH1 0x40 MLOAD PUSH32 0xF4D678B800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x8 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1830 SWAP2 SWAP1 PUSH2 0x7A39 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x5 PUSH1 0x8 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1887 SWAP2 SWAP1 PUSH2 0x7A39 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1910 SWAP3 SWAP2 SWAP1 PUSH2 0x7AAA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x192F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1953 SWAP2 SWAP1 PUSH2 0x7AFF JUMP JUMPDEST PUSH2 0x1989 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF4D678B800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19D6 PUSH2 0x41E0 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A18 DUP3 PUSH1 0x2 DUP1 PUSH1 0x20 MUL PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP3 PUSH1 0x2 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP PUSH2 0x3884 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x6 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1ABE JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x4A0B8FA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AB5 SWAP2 SWAP1 PUSH2 0x6EF6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x6 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x7 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE729AE16526293F74ADE739043022254F1489F616295A25BF72DFB4511ED73B8 DUP3 PUSH1 0x40 MLOAD PUSH2 0x1B7F SWAP2 SWAP1 PUSH2 0x6EF6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1C42 JUMPI PUSH1 0x40 MLOAD PUSH32 0x1F6A65B600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1CB2 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xD8A3FB5200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CA9 SWAP2 SWAP1 PUSH2 0x6F60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xB PUSH1 0x0 ADD PUSH1 0x6 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1CFC JUMPI PUSH1 0x40 MLOAD PUSH32 0xED3BA6A600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x64 PUSH2 0xFFFF AND PUSH1 0x3 PUSH1 0x0 DUP7 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD SWAP1 POP SUB PUSH2 0x1D67 JUMPI PUSH1 0x40 MLOAD PUSH32 0x5A48E0F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1F4B JUMPI PUSH1 0x1 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x3 PUSH1 0x0 DUP6 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD DUP4 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH32 0x43DC749A04AC8FB825CBD514F7C0E13F13BC6F2EE66043B76629D51776CFF8E0 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1F42 SWAP2 SWAP1 PUSH2 0x6F60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1FE1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1FD8 SWAP1 PUSH2 0x7B78 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0xB PUSH1 0x0 ADD PUSH1 0x6 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x2130 JUMPI PUSH1 0x40 MLOAD PUSH32 0xED3BA6A600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x21E0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x1F6A65B600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x22E4 JUMPI PUSH1 0x3 PUSH1 0x0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD PUSH32 0xD084E97500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x22DB SWAP2 SWAP1 PUSH2 0x6F60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP CALLER PUSH1 0x3 PUSH1 0x0 DUP5 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH32 0x6F1DC65165FFFFEDFD8E507B4A0F1FCFDADA045ED11F6C26BA27CEDFE87802F0 DUP3 CALLER PUSH1 0x40 MLOAD PUSH2 0x2442 SWAP3 SWAP2 SWAP1 PUSH2 0x74F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x252D JUMPI PUSH1 0x40 MLOAD PUSH32 0x1F6A65B600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x259D JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xD8A3FB5200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2594 SWAP2 SWAP1 PUSH2 0x6F60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xB PUSH1 0x0 ADD PUSH1 0x6 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x25E7 JUMPI PUSH1 0x40 MLOAD PUSH32 0xED3BA6A600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x25F0 DUP5 PUSH2 0x3F06 JUMP JUMPDEST ISZERO PUSH2 0x2627 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB42F66E800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND SUB PUSH2 0x26F0 JUMPI DUP4 DUP4 PUSH1 0x40 MLOAD PUSH32 0xF0019FE600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x26E7 SWAP3 SWAP2 SWAP1 PUSH2 0x78F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP7 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x279C JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x2752 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP3 MLOAD PUSH2 0x27B3 SWAP2 SWAP1 PUSH2 0x757C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x2934 JUMPI DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x27EB JUMPI PUSH2 0x27EA PUSH2 0x751E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2927 JUMPI PUSH1 0x0 DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x2823 JUMPI PUSH2 0x2822 PUSH2 0x751E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP DUP1 PUSH1 0x3 PUSH1 0x0 DUP11 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x286A JUMPI PUSH2 0x2869 PUSH2 0x751E JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x3 PUSH1 0x0 DUP10 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD DUP1 PUSH2 0x28EC JUMPI PUSH2 0x28EB PUSH2 0x75B0 JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE SWAP1 SSTORE POP PUSH2 0x2934 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x27B8 JUMP JUMPDEST POP PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP8 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE DUP6 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH32 0x182BFF9831466789164CA77075FFFD84916D35A8180BA73C27E45634549B445B DUP7 PUSH1 0x40 MLOAD PUSH2 0x29EA SWAP2 SWAP1 PUSH2 0x6F60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xB PUSH1 0x0 ADD PUSH1 0x6 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x2A46 JUMPI PUSH1 0x40 MLOAD PUSH32 0xED3BA6A600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP2 DUP2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x2A6C SWAP1 PUSH2 0x7B98 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2ACA JUMPI PUSH2 0x2AC9 PUSH2 0x6A67 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2AF8 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP PUSH1 0x4 PUSH1 0x0 DUP5 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0xC PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE POP PUSH1 0x3 PUSH1 0x0 DUP5 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x2CD3 SWAP3 SWAP2 SWAP1 PUSH2 0x6407 JUMP JUMPDEST POP SWAP1 POP POP DUP2 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH32 0x464722B4166576D3DCBBA877B999BC35CF911F4EAF434B7EBA68FA113951D0BF CALLER PUSH1 0x40 MLOAD PUSH2 0x2D11 SWAP2 SWAP1 PUSH2 0x6F60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP2 SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 DUP8 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2DD8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x1F6A65B600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP7 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x4 PUSH1 0x0 DUP8 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 DUP9 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 DUP10 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD DUP1 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x2F50 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x2F06 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP SWAP2 SWAP4 POP SWAP2 SWAP4 JUMP JUMPDEST PUSH1 0xB PUSH1 0x0 ADD PUSH1 0x6 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x2FB0 JUMPI PUSH1 0x40 MLOAD PUSH32 0xED3BA6A600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x3035 JUMPI PUSH1 0x40 MLOAD PUSH32 0x44B0E3C300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x20 DUP3 DUP3 SWAP1 POP EQ PUSH2 0x3072 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8129BBCD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 DUP2 ADD SWAP1 PUSH2 0x3083 SWAP2 SWAP1 PUSH2 0x66CB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x3135 JUMPI PUSH1 0x40 MLOAD PUSH32 0x1F6A65B600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP5 PUSH1 0x4 PUSH1 0x0 DUP5 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x31DB SWAP2 SWAP1 PUSH2 0x7BC8 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP5 PUSH1 0x5 PUSH1 0x8 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x3232 SWAP2 SWAP1 PUSH2 0x7BC8 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH32 0xD39EC07F4E209F627A4C427971473820DC129761BA28DE8906BD56F57101D4F8 DUP3 DUP8 DUP5 PUSH2 0x3299 SWAP2 SWAP1 PUSH2 0x7C08 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x32A7 SWAP3 SWAP2 SWAP1 PUSH2 0x7C3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xB PUSH1 0x0 ADD PUSH1 0x6 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x3327 JUMPI PUSH1 0x40 MLOAD PUSH32 0xED3BA6A600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 GAS SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x333B DUP8 DUP8 PUSH2 0x490F JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH1 0x0 DUP7 PUSH1 0x60 ADD MLOAD PUSH4 0xFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3367 JUMPI PUSH2 0x3366 PUSH2 0x6A67 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x3395 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP8 PUSH1 0x60 ADD MLOAD PUSH4 0xFFFFFFFF AND DUP2 LT ISZERO PUSH2 0x3405 JUMPI DUP3 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x33C0 SWAP3 SWAP2 SWAP1 PUSH2 0x7C3C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x33EC JUMPI PUSH2 0x33EB PUSH2 0x751E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x339B JUMP JUMPDEST POP PUSH1 0x9 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x0 DUP1 PUSH4 0x1FE543E3 PUSH1 0xE0 SHL DUP6 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x343B SWAP3 SWAP2 SWAP1 PUSH2 0x7D23 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP SWAP1 POP PUSH1 0x1 PUSH1 0xB PUSH1 0x0 ADD PUSH1 0x6 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH2 0x34D3 DUP11 PUSH1 0x40 ADD MLOAD PUSH4 0xFFFFFFFF AND DUP12 PUSH1 0x80 ADD MLOAD DUP5 PUSH2 0x4C21 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0xB PUSH1 0x0 ADD PUSH1 0x6 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP13 PUSH1 0x20 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x1 PUSH1 0x4 PUSH1 0x0 DUP14 PUSH1 0x20 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0xC DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH2 0x358C SWAP2 SWAP1 PUSH2 0x7949 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH2 0x35E3 DUP11 PUSH1 0xB PUSH1 0x0 ADD PUSH1 0xB SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH2 0x35DD DUP6 PUSH2 0x38B4 JUMP JUMPDEST GASPRICE PUSH2 0x4C6E JUMP JUMPDEST SWAP1 POP DUP1 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x4 PUSH1 0x0 DUP15 PUSH1 0x20 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND LT ISZERO PUSH2 0x3681 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF4D678B800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x4 PUSH1 0x0 DUP15 PUSH1 0x20 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x36D6 SWAP2 SWAP1 PUSH2 0x7A39 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x8 PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP14 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x379D SWAP2 SWAP1 PUSH2 0x7BC8 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP8 PUSH32 0x7DFFC5AE5EE4E2E4DF1651CF6AD329A73CEBDB728F37EA0187B9B17E036756E4 DUP9 DUP4 DUP7 PUSH1 0x40 MLOAD PUSH2 0x37FF SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x7D53 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP1 SWAP11 POP POP POP POP POP POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xB PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND PUSH1 0xB PUSH1 0x0 ADD PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH1 0xB PUSH1 0x0 ADD PUSH1 0x7 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH1 0xB PUSH1 0x0 ADD PUSH1 0xB SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP SWAP1 SWAP2 SWAP3 SWAP4 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x3897 SWAP2 SWAP1 PUSH2 0x7E0E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xC PUSH1 0x40 MLOAD DUP1 PUSH2 0x120 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x4 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x10 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH3 0xFFFFFF AND PUSH3 0xFFFFFF AND PUSH3 0xFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x17 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH3 0xFFFFFF AND PUSH3 0xFFFFFF AND PUSH3 0xFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x1A SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH3 0xFFFFFF AND PUSH3 0xFFFFFF AND PUSH3 0xFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x1D SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH3 0xFFFFFF AND PUSH3 0xFFFFFF AND PUSH3 0xFFFFFF AND DUP2 MSTORE POP POP SWAP1 POP DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x0 GT ISZERO DUP1 ISZERO PUSH2 0x3A3F JUMPI POP DUP1 PUSH1 0xA0 ADD MLOAD PUSH3 0xFFFFFF AND DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND GT ISZERO JUMPDEST ISZERO PUSH2 0x3A51 JUMPI DUP1 PUSH1 0x0 ADD MLOAD SWAP2 POP POP PUSH2 0x3B30 JUMP JUMPDEST DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0xA0 ADD MLOAD PUSH3 0xFFFFFF AND LT DUP1 ISZERO PUSH2 0x3A86 JUMPI POP DUP1 PUSH1 0xC0 ADD MLOAD PUSH3 0xFFFFFF AND DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND GT ISZERO JUMPDEST ISZERO PUSH2 0x3A98 JUMPI DUP1 PUSH1 0x20 ADD MLOAD SWAP2 POP POP PUSH2 0x3B30 JUMP JUMPDEST DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0xC0 ADD MLOAD PUSH3 0xFFFFFF AND LT DUP1 ISZERO PUSH2 0x3ACD JUMPI POP DUP1 PUSH1 0xE0 ADD MLOAD PUSH3 0xFFFFFF AND DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND GT ISZERO JUMPDEST ISZERO PUSH2 0x3ADF JUMPI DUP1 PUSH1 0x40 ADD MLOAD SWAP2 POP POP PUSH2 0x3B30 JUMP JUMPDEST DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0xE0 ADD MLOAD PUSH3 0xFFFFFF AND LT DUP1 ISZERO PUSH2 0x3B15 JUMPI POP DUP1 PUSH2 0x100 ADD MLOAD PUSH3 0xFFFFFF AND DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND GT ISZERO JUMPDEST ISZERO PUSH2 0x3B27 JUMPI DUP1 PUSH1 0x60 ADD MLOAD SWAP2 POP POP PUSH2 0x3B30 JUMP JUMPDEST DUP1 PUSH1 0x80 ADD MLOAD SWAP2 POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x3BEB JUMPI PUSH1 0x40 MLOAD PUSH32 0x1F6A65B600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x3C5B JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xD8A3FB5200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3C52 SWAP2 SWAP1 PUSH2 0x6F60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xB PUSH1 0x0 ADD PUSH1 0x6 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x3CA5 JUMPI PUSH1 0x40 MLOAD PUSH32 0xED3BA6A600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3CAE DUP5 PUSH2 0x3F06 JUMP JUMPDEST ISZERO PUSH2 0x3CE5 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB42F66E800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3CEF DUP5 DUP5 PUSH2 0x4270 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x3CFD PUSH2 0x41E0 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3D58 SWAP2 SWAP1 PUSH2 0x6F60 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3D75 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3D99 SWAP2 SWAP1 PUSH2 0x7E3E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x5 PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x3E0F JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xA99DA30200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3E06 SWAP3 SWAP2 SWAP1 PUSH2 0x7C3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3F01 JUMPI PUSH1 0x0 DUP2 DUP4 PUSH2 0x3E25 SWAP2 SWAP1 PUSH2 0x757C JUMP JUMPDEST SWAP1 POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3E82 SWAP3 SWAP2 SWAP1 PUSH2 0x7E6B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3EA1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3EC5 SWAP2 SWAP1 PUSH2 0x7AFF JUMP JUMPDEST POP PUSH32 0x59BFC682B673F8CBF945F1E454DF9334834ABF7DFE7F92237CA29ECB9B436600 DUP5 DUP3 PUSH1 0x40 MLOAD PUSH2 0x3EF7 SWAP3 SWAP2 SWAP1 PUSH2 0x7E6B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x406C JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x4022 JUMPI JUMPDEST POP POP POP POP POP DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 PUSH1 0x40 ADD MLOAD MLOAD DUP2 LT ISZERO PUSH2 0x41C0 JUMPI PUSH1 0x0 JUMPDEST PUSH1 0x7 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x41B2 JUMPI PUSH1 0x0 PUSH2 0x4177 PUSH1 0x7 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x40B0 JUMPI PUSH2 0x40AF PUSH2 0x751E JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD DUP6 PUSH1 0x40 ADD MLOAD DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x40D2 JUMPI PUSH2 0x40D1 PUSH2 0x751E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP9 PUSH1 0x2 PUSH1 0x0 DUP10 PUSH1 0x40 ADD MLOAD DUP10 DUP2 MLOAD DUP2 LT PUSH2 0x40F6 JUMPI PUSH2 0x40F5 PUSH2 0x751E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP12 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH2 0x4800 JUMP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 SHL PUSH1 0x9 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ PUSH2 0x41A4 JUMPI PUSH1 0x1 SWAP5 POP POP POP POP POP PUSH2 0x41C7 JUMP JUMPDEST POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x408A JUMP JUMPDEST POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x407A JUMP JUMPDEST POP PUSH1 0x0 SWAP2 POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x41D4 PUSH2 0x41E0 JUMP JUMPDEST PUSH2 0x41DD DUP2 PUSH2 0x4DA1 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x426E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4265 SWAP1 PUSH2 0x7EE0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0xB PUSH1 0x0 ADD PUSH1 0x6 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x42BA JUMPI PUSH1 0x40 MLOAD PUSH32 0xED3BA6A600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x441F JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x43D5 JUMPI JUMPDEST POP POP POP POP POP DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP6 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD MLOAD SWAP1 POP PUSH1 0x0 JUMPDEST DUP4 PUSH1 0x40 ADD MLOAD MLOAD DUP2 LT ISZERO PUSH2 0x458F JUMPI PUSH1 0x2 PUSH1 0x0 DUP6 PUSH1 0x40 ADD MLOAD DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x4504 JUMPI PUSH2 0x4503 PUSH2 0x751E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP8 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x44DC JUMP JUMPDEST POP PUSH1 0x3 PUSH1 0x0 DUP7 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH1 0x0 PUSH2 0x4616 SWAP2 SWAP1 PUSH2 0x6491 JUMP JUMPDEST POP POP PUSH1 0x4 PUSH1 0x0 DUP7 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x0 DUP3 ADD PUSH1 0xC PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE POP POP DUP1 PUSH1 0x5 PUSH1 0x8 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x46A5 SWAP2 SWAP1 PUSH2 0x7A39 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x473C SWAP3 SWAP2 SWAP1 PUSH2 0x7E6B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x475B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x477F SWAP2 SWAP1 PUSH2 0x7AFF JUMP JUMPDEST PUSH2 0x47B5 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF4D678B800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH32 0xE8ED5B475A5B5987AA9165E8731BB78043F39EEE32EC5A1169A89E27FCD49815 DUP6 DUP4 PUSH1 0x40 MLOAD PUSH2 0x47F1 SWAP3 SWAP2 SWAP1 PUSH2 0x7AAA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP7 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x481C SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x7F00 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR SWAP1 POP DUP7 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x484A SWAP3 SWAP2 SWAP1 PUSH2 0x7F45 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR DUP2 SWAP3 POP SWAP3 POP POP SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 CHAINID SWAP1 POP PUSH2 0xA4B1 DUP2 EQ DUP1 PUSH2 0x488A JUMPI POP PUSH3 0x66EED DUP2 EQ JUMPDEST ISZERO PUSH2 0x4907 JUMPI PUSH1 0x64 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA3B1B31D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x48DB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x48FF SWAP2 SWAP1 PUSH2 0x7E3E JUMP JUMPDEST SWAP2 POP POP PUSH2 0x490C JUMP JUMPDEST NUMBER SWAP2 POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x4921 DUP6 PUSH1 0x0 ADD MLOAD PUSH2 0x3884 JUMP JUMPDEST SWAP3 POP PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x49CC JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x77F5B84C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x49C3 SWAP2 SWAP1 PUSH2 0x6EF6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 DUP7 PUSH1 0x80 ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x49E3 SWAP3 SWAP2 SWAP1 PUSH2 0x7F45 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR SWAP3 POP PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP1 SHL DUP2 SUB PUSH2 0x4A52 JUMPI PUSH1 0x40 MLOAD PUSH32 0x3688124A00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 DUP7 PUSH1 0x0 ADD MLOAD DUP8 PUSH1 0x20 ADD MLOAD DUP9 PUSH1 0x40 ADD MLOAD DUP10 PUSH1 0x60 ADD MLOAD DUP11 PUSH1 0x80 ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x4A81 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x7F6E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 EQ PUSH2 0x4ACF JUMPI PUSH1 0x40 MLOAD PUSH32 0xD529142C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x4ADE DUP8 PUSH1 0x0 ADD MLOAD PUSH2 0x4ECD JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 SHL DUP2 SUB PUSH2 0x4BD6 JUMPI PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xE9413D38 DUP9 PUSH1 0x0 ADD MLOAD PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B47 SWAP2 SWAP1 PUSH2 0x8000 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4B64 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4B88 SWAP2 SWAP1 PUSH2 0x8030 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 SHL DUP2 SUB PUSH2 0x4BD5 JUMPI DUP7 PUSH1 0x0 ADD MLOAD PUSH1 0x40 MLOAD PUSH32 0x175DADAD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4BCC SWAP2 SWAP1 PUSH2 0x8000 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH1 0x0 DUP9 PUSH1 0x80 ADD MLOAD DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x4BEF SWAP3 SWAP2 SWAP1 PUSH2 0x809F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR SWAP1 POP PUSH2 0x4C14 DUP10 DUP3 PUSH2 0x4FDB JUMP JUMPDEST SWAP5 POP POP POP POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 GAS PUSH2 0x1388 DUP2 LT ISZERO PUSH2 0x4C33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1388 DUP2 SUB SWAP1 POP DUP5 PUSH1 0x40 DUP3 DIV DUP3 SUB GT PUSH2 0x4C4B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 EXTCODESIZE PUSH2 0x4C56 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH1 0x0 DUP9 DUP11 CALL SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x4C79 PUSH2 0x5048 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 SGT PUSH2 0x4CC0 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x43D4CF6600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4CB7 SWAP2 SWAP1 PUSH2 0x69A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x4CCA PUSH2 0x5145 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 DUP3 GAS DUP11 DUP11 PUSH2 0x4CDD SWAP2 SWAP1 PUSH2 0x7C08 JUMP JUMPDEST PUSH2 0x4CE7 SWAP2 SWAP1 PUSH2 0x757C JUMP JUMPDEST DUP8 PUSH2 0x4CF2 SWAP2 SWAP1 PUSH2 0x80CB JUMP JUMPDEST PUSH2 0x4CFC SWAP2 SWAP1 PUSH2 0x7C08 JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 PUSH2 0x4D0F SWAP2 SWAP1 PUSH2 0x80CB JUMP JUMPDEST PUSH2 0x4D19 SWAP2 SWAP1 PUSH2 0x813C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP7 PUSH4 0xFFFFFFFF AND PUSH5 0xE8D4A51000 PUSH2 0x4D34 SWAP2 SWAP1 PUSH2 0x80CB JUMP JUMPDEST SWAP1 POP DUP1 PUSH12 0x33B2E3C9FD0803CE8000000 PUSH2 0x4D4E SWAP2 SWAP1 PUSH2 0x757C JUMP JUMPDEST DUP3 GT ISZERO PUSH2 0x4D87 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE80FA38100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 DUP3 PUSH2 0x4D93 SWAP2 SWAP1 PUSH2 0x7C08 JUMP JUMPDEST SWAP5 POP POP POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x4E0F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4E06 SWAP1 PUSH2 0x81B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 CHAINID SWAP1 POP PUSH2 0xA4B1 DUP2 EQ DUP1 PUSH2 0x4EE5 JUMPI POP PUSH3 0x66EED DUP2 EQ JUMPDEST DUP1 PUSH2 0x4EF2 JUMPI POP PUSH3 0x66EEE DUP2 EQ JUMPDEST ISZERO PUSH2 0x4FC6 JUMPI PUSH2 0x100 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH2 0x4F0D PUSH2 0x4872 JUMP JUMPDEST PUSH2 0x4F17 SWAP2 SWAP1 PUSH2 0x757C JUMP JUMPDEST GT DUP1 PUSH2 0x4F34 JUMPI POP PUSH2 0x4F26 PUSH2 0x4872 JUMP JUMPDEST DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND LT ISZERO JUMPDEST ISZERO PUSH2 0x4F43 JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x4FD6 JUMP JUMPDEST PUSH1 0x64 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x2B407A82 DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4F7D SWAP2 SWAP1 PUSH2 0x8000 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4F9A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4FBE SWAP2 SWAP1 PUSH2 0x8030 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x4FD6 JUMP JUMPDEST DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND BLOCKHASH SWAP2 POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x500F DUP4 PUSH1 0x0 ADD MLOAD DUP5 PUSH1 0x20 ADD MLOAD DUP6 PUSH1 0x40 ADD MLOAD DUP7 PUSH1 0x60 ADD MLOAD DUP7 DUP9 PUSH1 0xA0 ADD MLOAD DUP10 PUSH1 0xC0 ADD MLOAD DUP11 PUSH1 0xE0 ADD MLOAD DUP12 PUSH2 0x100 ADD MLOAD PUSH2 0x51E3 JUMP JUMPDEST PUSH1 0x3 DUP4 PUSH1 0x20 ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x5027 SWAP3 SWAP2 SWAP1 PUSH2 0x81D9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xB PUSH1 0x0 ADD PUSH1 0x7 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP1 DUP3 PUSH4 0xFFFFFFFF AND GT SWAP1 POP PUSH1 0x0 DUP1 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x50DE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5102 SWAP2 SWAP1 PUSH2 0x8259 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 POP SWAP1 SWAP2 POP POP DUP1 SWAP4 POP DUP2 SWAP3 POP POP POP DUP3 DUP1 ISZERO PUSH2 0x5130 JUMPI POP DUP2 TIMESTAMP PUSH2 0x5127 SWAP2 SWAP1 PUSH2 0x757C JUMP JUMPDEST DUP5 PUSH4 0xFFFFFFFF AND LT JUMPDEST ISZERO PUSH2 0x513B JUMPI PUSH1 0xA SLOAD SWAP1 POP JUMPDEST DUP1 SWAP5 POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 CHAINID SWAP1 POP PUSH2 0xA4B1 DUP2 EQ DUP1 PUSH2 0x515D JUMPI POP PUSH3 0x66EED DUP2 EQ JUMPDEST ISZERO PUSH2 0x51DA JUMPI PUSH1 0x6C PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xC6F7DE0E PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x51AE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x51D2 SWAP2 SWAP1 PUSH2 0x7E3E JUMP JUMPDEST SWAP2 POP POP PUSH2 0x51E0 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x51EC DUP10 PUSH2 0x53D0 JUMP JUMPDEST PUSH2 0x522B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5222 SWAP1 PUSH2 0x8320 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5234 DUP9 PUSH2 0x53D0 JUMP JUMPDEST PUSH2 0x5273 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x526A SWAP1 PUSH2 0x838C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x527C DUP4 PUSH2 0x53D0 JUMP JUMPDEST PUSH2 0x52BB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x52B2 SWAP1 PUSH2 0x83F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x52C4 DUP3 PUSH2 0x53D0 JUMP JUMPDEST PUSH2 0x5303 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x52FA SWAP1 PUSH2 0x8464 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x530F DUP8 DUP11 DUP9 DUP8 PUSH2 0x5551 JUMP JUMPDEST PUSH2 0x534E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5345 SWAP1 PUSH2 0x84D0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x535A DUP11 DUP8 PUSH2 0x576E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x536D DUP10 DUP12 DUP8 DUP12 DUP7 DUP10 DUP10 PUSH2 0x5800 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x537E DUP4 DUP14 DUP14 DUP11 DUP7 PUSH2 0x5986 JUMP JUMPDEST SWAP1 POP DUP1 DUP11 EQ PUSH2 0x53C2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x53B9 SWAP1 PUSH2 0x853C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP3 PUSH1 0x0 PUSH1 0x2 DUP2 LT PUSH2 0x5407 JUMPI PUSH2 0x5406 PUSH2 0x751E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD LT PUSH2 0x544C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5443 SWAP1 PUSH2 0x85A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP3 PUSH1 0x1 PUSH1 0x2 DUP2 LT PUSH2 0x5481 JUMPI PUSH2 0x5480 PUSH2 0x751E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD LT PUSH2 0x54C6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x54BD SWAP1 PUSH2 0x8614 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 PUSH2 0x54F5 JUMPI PUSH2 0x54F4 PUSH2 0x810D JUMP JUMPDEST JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x2 DUP2 LT PUSH2 0x5509 JUMPI PUSH2 0x5508 PUSH2 0x751E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP4 PUSH1 0x1 PUSH1 0x2 DUP2 LT PUSH2 0x5522 JUMPI PUSH2 0x5521 PUSH2 0x751E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD MULMOD PUSH2 0x5549 DUP4 PUSH1 0x0 PUSH1 0x2 DUP2 LT PUSH2 0x553F JUMPI PUSH2 0x553E PUSH2 0x751E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH2 0x59C8 JUMP JUMPDEST EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x55C1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x55B8 SWAP1 PUSH2 0x8680 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 DUP7 PUSH1 0x1 PUSH1 0x2 DUP2 LT PUSH2 0x55DA JUMPI PUSH2 0x55D9 PUSH2 0x751E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP2 PUSH2 0x55ED JUMPI PUSH2 0x55EC PUSH2 0x810D JUMP JUMPDEST JUMPDEST MOD EQ PUSH2 0x55FA JUMPI PUSH1 0x1C PUSH2 0x55FD JUMP JUMPDEST PUSH1 0x1B JUMPDEST SWAP1 POP PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 DUP1 PUSH2 0x5630 JUMPI PUSH2 0x562F PUSH2 0x810D JUMP JUMPDEST JUMPDEST DUP6 DUP8 PUSH1 0x0 PUSH1 0x2 DUP2 LT PUSH2 0x5645 JUMPI PUSH2 0x5644 PUSH2 0x751E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD MULMOD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 SUB PUSH1 0x0 SHL SWAP1 POP PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 DUP1 PUSH2 0x56A3 JUMPI PUSH2 0x56A2 PUSH2 0x810D JUMP JUMPDEST JUMPDEST DUP8 PUSH1 0x0 PUSH1 0x2 DUP2 LT PUSH2 0x56B7 JUMPI PUSH2 0x56B6 PUSH2 0x751E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP10 MULMOD PUSH1 0x0 SHL SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP4 DUP6 DUP11 PUSH1 0x0 PUSH1 0x2 DUP2 LT PUSH2 0x56DD JUMPI PUSH2 0x56DC PUSH2 0x751E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH1 0x0 SHL DUP6 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x5703 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x86BC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5725 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP5 POP POP POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x5776 PUSH2 0x64B2 JUMP JUMPDEST PUSH2 0x57A3 PUSH1 0x1 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x578F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x878A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH2 0x5A6B JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH2 0x57AF DUP2 PUSH2 0x53D0 JUMP JUMPDEST PUSH2 0x57FA JUMPI PUSH2 0x57F3 DUP2 PUSH1 0x0 PUSH1 0x2 DUP2 LT PUSH2 0x57CA JUMPI PUSH2 0x57C9 PUSH2 0x751E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x57DF SWAP2 SWAP1 PUSH2 0x87C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH2 0x5A6B JUMP JUMPDEST SWAP1 POP PUSH2 0x57A6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x5808 PUSH2 0x64B2 JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP4 PUSH1 0x0 PUSH1 0x2 DUP2 LT PUSH2 0x583D JUMPI PUSH2 0x583C PUSH2 0x751E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP2 PUSH2 0x5850 JUMPI PUSH2 0x584F PUSH2 0x810D JUMP JUMPDEST JUMPDEST MOD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP8 PUSH1 0x0 PUSH1 0x2 DUP2 LT PUSH2 0x5886 JUMPI PUSH2 0x5885 PUSH2 0x751E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP2 PUSH2 0x5899 JUMPI PUSH2 0x5898 PUSH2 0x810D JUMP JUMPDEST JUMPDEST MOD SUB PUSH2 0x58DA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x58D1 SWAP1 PUSH2 0x882E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x58E5 DUP8 DUP10 DUP9 PUSH2 0x5B6E JUMP JUMPDEST PUSH2 0x5924 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x591B SWAP1 PUSH2 0x889A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x592F DUP5 DUP7 DUP6 PUSH2 0x5B6E JUMP JUMPDEST PUSH2 0x596E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5965 SWAP1 PUSH2 0x8906 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5979 DUP7 DUP5 DUP5 PUSH2 0x5D05 JUMP JUMPDEST SWAP1 POP SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP7 DUP7 DUP7 DUP6 DUP8 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x59A4 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x896E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 PUSH2 0x59FA JUMPI PUSH2 0x59F9 PUSH2 0x810D JUMP JUMPDEST JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 PUSH2 0x5A29 JUMPI PUSH2 0x5A28 PUSH2 0x810D JUMP JUMPDEST JUMPDEST DUP5 DUP6 MULMOD DUP5 MULMOD SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 PUSH2 0x5A5F JUMPI PUSH2 0x5A5E PUSH2 0x810D JUMP JUMPDEST JUMPDEST PUSH1 0x7 DUP3 ADDMOD SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5A73 PUSH2 0x64B2 JUMP JUMPDEST PUSH2 0x5A7C DUP3 PUSH2 0x5E81 JUMP JUMPDEST DUP2 PUSH1 0x0 PUSH1 0x2 DUP2 LT PUSH2 0x5A90 JUMPI PUSH2 0x5A8F PUSH2 0x751E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x5AC2 PUSH2 0x5ABD DUP3 PUSH1 0x0 PUSH1 0x2 DUP2 LT PUSH2 0x5AB3 JUMPI PUSH2 0x5AB2 PUSH2 0x751E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH2 0x59C8 JUMP JUMPDEST PUSH2 0x5EEE JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x2 DUP2 LT PUSH2 0x5AD6 JUMPI PUSH2 0x5AD5 PUSH2 0x751E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x1 PUSH1 0x2 DUP3 PUSH1 0x1 PUSH1 0x2 DUP2 LT PUSH2 0x5AF7 JUMPI PUSH2 0x5AF6 PUSH2 0x751E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP2 PUSH2 0x5B0A JUMPI PUSH2 0x5B09 PUSH2 0x810D JUMP JUMPDEST JUMPDEST MOD SUB PUSH2 0x5B69 JUMPI DUP1 PUSH1 0x1 PUSH1 0x2 DUP2 LT PUSH2 0x5B24 JUMPI PUSH2 0x5B23 PUSH2 0x751E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F SUB DUP2 PUSH1 0x1 PUSH1 0x2 DUP2 LT PUSH2 0x5B5F JUMPI PUSH2 0x5B5E PUSH2 0x751E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD DUP2 DUP2 MSTORE POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 SUB PUSH2 0x5BB2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5BA9 SWAP1 PUSH2 0x8A2A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP5 PUSH1 0x0 PUSH1 0x2 DUP2 LT PUSH2 0x5BC8 JUMPI PUSH2 0x5BC7 PUSH2 0x751E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x2 DUP8 PUSH1 0x1 PUSH1 0x2 DUP2 LT PUSH2 0x5BE8 JUMPI PUSH2 0x5BE7 PUSH2 0x751E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH2 0x5BF7 SWAP2 SWAP1 PUSH2 0x8A4A JUMP JUMPDEST EQ PUSH2 0x5C03 JUMPI PUSH1 0x1C PUSH2 0x5C06 JUMP JUMPDEST PUSH1 0x1B JUMPDEST SWAP1 POP PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 DUP1 PUSH2 0x5C39 JUMPI PUSH2 0x5C38 PUSH2 0x810D JUMP JUMPDEST JUMPDEST DUP4 DUP8 MULMOD PUSH1 0x0 SHL SWAP1 POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP1 SHL DUP5 DUP7 PUSH1 0x0 SHL DUP6 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x5C6C SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x86BC JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5C8E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP1 POP PUSH1 0x0 DUP7 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x5CAD SWAP2 SWAP1 PUSH2 0x8A7B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP6 POP POP POP POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x5D0D PUSH2 0x64B2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x5D7E DUP8 PUSH1 0x0 PUSH1 0x2 DUP2 LT PUSH2 0x5D29 JUMPI PUSH2 0x5D28 PUSH2 0x751E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP9 PUSH1 0x1 PUSH1 0x2 DUP2 LT PUSH2 0x5D42 JUMPI PUSH2 0x5D41 PUSH2 0x751E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP9 PUSH1 0x0 PUSH1 0x2 DUP2 LT PUSH2 0x5D5B JUMPI PUSH2 0x5D5A PUSH2 0x751E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP10 PUSH1 0x1 PUSH1 0x2 DUP2 LT PUSH2 0x5D74 JUMPI PUSH2 0x5D73 PUSH2 0x751E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH2 0x5F31 JUMP JUMPDEST DUP1 SWAP4 POP DUP2 SWAP5 POP DUP3 SWAP6 POP POP POP POP PUSH1 0x1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 PUSH2 0x5DBB JUMPI PUSH2 0x5DBA PUSH2 0x810D JUMP JUMPDEST JUMPDEST DUP7 DUP4 MULMOD EQ PUSH2 0x5DFE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5DF5 SWAP1 PUSH2 0x8AE2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 PUSH2 0x5E38 JUMPI PUSH2 0x5E37 PUSH2 0x810D JUMP JUMPDEST JUMPDEST DUP8 DUP7 MULMOD DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 PUSH2 0x5E6F JUMPI PUSH2 0x5E6E PUSH2 0x810D JUMP JUMPDEST JUMPDEST DUP8 DUP6 MULMOD DUP2 MSTORE POP SWAP4 POP POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR SWAP1 POP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP2 LT PUSH2 0x5EE9 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x5EC9 SWAP2 SWAP1 PUSH2 0x87C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR SWAP1 POP PUSH2 0x5E91 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5F2A DUP3 PUSH1 0x2 PUSH1 0x1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F PUSH2 0x5F23 SWAP2 SWAP1 PUSH2 0x7C08 JUMP JUMPDEST SWAP1 SHR PUSH2 0x6128 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x1 DUP1 SWAP2 POP SWAP2 POP PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 PUSH2 0x5F71 JUMPI PUSH2 0x5F70 PUSH2 0x810D JUMP JUMPDEST JUMPDEST DUP10 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F SUB DUP9 ADDMOD SWAP1 POP PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 PUSH2 0x5FC9 JUMPI PUSH2 0x5FC8 PUSH2 0x810D JUMP JUMPDEST JUMPDEST DUP12 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F SUB DUP11 ADDMOD SWAP1 POP PUSH1 0x0 PUSH2 0x5FFE DUP4 DUP4 DUP6 DUP6 PUSH2 0x6287 JUMP JUMPDEST DUP1 SWAP3 POP DUP2 SWAP10 POP POP POP PUSH2 0x6012 DUP9 DUP3 DUP15 DUP9 PUSH2 0x62FF JUMP JUMPDEST DUP1 SWAP3 POP DUP2 SWAP10 POP POP POP PUSH2 0x6026 DUP9 DUP3 DUP13 DUP8 PUSH2 0x62FF JUMP JUMPDEST DUP1 SWAP3 POP DUP2 SWAP10 POP POP POP PUSH1 0x0 PUSH2 0x603C DUP14 DUP8 DUP12 DUP6 PUSH2 0x62FF JUMP JUMPDEST DUP1 SWAP3 POP DUP2 SWAP10 POP POP POP PUSH2 0x6050 DUP9 DUP3 DUP7 DUP7 PUSH2 0x6287 JUMP JUMPDEST DUP1 SWAP3 POP DUP2 SWAP10 POP POP POP PUSH2 0x6064 DUP9 DUP3 DUP15 DUP10 PUSH2 0x62FF JUMP JUMPDEST DUP1 SWAP3 POP DUP2 SWAP10 POP POP POP DUP1 DUP3 EQ PUSH2 0x6114 JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 PUSH2 0x60A2 JUMPI PUSH2 0x60A1 PUSH2 0x810D JUMP JUMPDEST JUMPDEST DUP2 DUP11 MULMOD SWAP9 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 PUSH2 0x60D6 JUMPI PUSH2 0x60D5 PUSH2 0x810D JUMP JUMPDEST JUMPDEST DUP3 DUP10 MULMOD SWAP8 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 PUSH2 0x610A JUMPI PUSH2 0x6109 PUSH2 0x810D JUMP JUMPDEST JUMPDEST DUP2 DUP4 MULMOD SWAP7 POP PUSH2 0x6118 JUMP JUMPDEST DUP2 SWAP7 POP JUMPDEST POP POP POP POP POP POP SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x6133 PUSH2 0x64D4 JUMP JUMPDEST PUSH1 0x20 DUP2 PUSH1 0x0 PUSH1 0x6 DUP2 LT PUSH2 0x6149 JUMPI PUSH2 0x6148 PUSH2 0x751E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x20 DUP2 PUSH1 0x1 PUSH1 0x6 DUP2 LT PUSH2 0x6168 JUMPI PUSH2 0x6167 PUSH2 0x751E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x20 DUP2 PUSH1 0x2 PUSH1 0x6 DUP2 LT PUSH2 0x6187 JUMPI PUSH2 0x6186 PUSH2 0x751E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD DUP2 DUP2 MSTORE POP POP DUP5 DUP2 PUSH1 0x3 PUSH1 0x6 DUP2 LT PUSH2 0x61A5 JUMPI PUSH2 0x61A4 PUSH2 0x751E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD DUP2 DUP2 MSTORE POP POP DUP4 DUP2 PUSH1 0x4 PUSH1 0x6 DUP2 LT PUSH2 0x61C3 JUMPI PUSH2 0x61C2 PUSH2 0x751E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD DUP2 DUP2 MSTORE POP POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP2 PUSH1 0x5 PUSH1 0x6 DUP2 LT PUSH2 0x6201 JUMPI PUSH2 0x6200 PUSH2 0x751E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD DUP2 DUP2 MSTORE POP POP PUSH2 0x6212 PUSH2 0x64F6 JUMP JUMPDEST PUSH1 0x20 DUP2 PUSH1 0xC0 DUP5 PUSH1 0x5 PUSH1 0x0 NOT STATICCALL SWAP3 POP PUSH1 0x0 DUP4 SUB PUSH2 0x6263 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x625A SWAP1 PUSH2 0x8B4E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x0 PUSH1 0x1 DUP2 LT PUSH2 0x6277 JUMPI PUSH2 0x6276 PUSH2 0x751E JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 PUSH2 0x62B9 JUMPI PUSH2 0x62B8 PUSH2 0x810D JUMP JUMPDEST JUMPDEST DUP5 DUP8 MULMOD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 PUSH2 0x62EB JUMPI PUSH2 0x62EA PUSH2 0x810D JUMP JUMPDEST JUMPDEST DUP5 DUP8 MULMOD DUP1 SWAP3 POP DUP2 SWAP4 POP POP POP SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 PUSH2 0x6333 JUMPI PUSH2 0x6332 PUSH2 0x810D JUMP JUMPDEST JUMPDEST DUP8 DUP6 MULMOD SWAP1 POP PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 PUSH2 0x6369 JUMPI PUSH2 0x6368 PUSH2 0x810D JUMP JUMPDEST JUMPDEST DUP8 DUP8 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F SUB MULMOD SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 PUSH2 0x63BF JUMPI PUSH2 0x63BE PUSH2 0x810D JUMP JUMPDEST JUMPDEST DUP2 DUP4 ADDMOD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F DUP1 PUSH2 0x63F1 JUMPI PUSH2 0x63F0 PUSH2 0x810D JUMP JUMPDEST JUMPDEST DUP7 DUP10 MULMOD DUP1 SWAP5 POP DUP2 SWAP6 POP POP POP POP POP SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x6480 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x647F JUMPI DUP3 MLOAD DUP3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x6427 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x648D SWAP2 SWAP1 PUSH2 0x6518 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST POP DUP1 SLOAD PUSH1 0x0 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x64AF SWAP2 SWAP1 PUSH2 0x6518 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 SWAP1 PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 SWAP1 PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 SWAP1 PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x6531 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x6519 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x654C DUP2 PUSH2 0x6535 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x656B DUP2 PUSH2 0x6552 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x65B0 DUP2 PUSH2 0x659D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x65C2 DUP4 DUP4 PUSH2 0x65A7 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x65E6 DUP3 PUSH2 0x6571 JUMP JUMPDEST PUSH2 0x65F0 DUP2 DUP6 PUSH2 0x657C JUMP JUMPDEST SWAP4 POP PUSH2 0x65FB DUP4 PUSH2 0x658D JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x662C JUMPI DUP2 MLOAD PUSH2 0x6613 DUP9 DUP3 PUSH2 0x65B6 JUMP JUMPDEST SWAP8 POP PUSH2 0x661E DUP4 PUSH2 0x65CE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x65FF JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x664E PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x6543 JUMP JUMPDEST PUSH2 0x665B PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x6562 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x666D DUP2 DUP5 PUSH2 0x65DB JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x66A8 DUP2 PUSH2 0x668B JUMP JUMPDEST DUP2 EQ PUSH2 0x66B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x66C5 DUP2 PUSH2 0x669F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x66E1 JUMPI PUSH2 0x66E0 PUSH2 0x6681 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x66EF DUP5 DUP3 DUP6 ADD PUSH2 0x66B6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6723 DUP3 PUSH2 0x66F8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6733 DUP2 PUSH2 0x6718 JUMP JUMPDEST DUP2 EQ PUSH2 0x673E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x6750 DUP2 PUSH2 0x672A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x676D JUMPI PUSH2 0x676C PUSH2 0x6681 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x677B DUP6 DUP3 DUP7 ADD PUSH2 0x66B6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x678C DUP6 DUP3 DUP7 ADD PUSH2 0x6741 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x679F DUP2 PUSH2 0x668B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x67BA PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x6796 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP3 PUSH1 0x20 PUSH1 0x2 MUL DUP3 ADD GT ISZERO PUSH2 0x67E1 JUMPI PUSH2 0x67E0 PUSH2 0x67C0 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x67FD JUMPI PUSH2 0x67FC PUSH2 0x6681 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x680B DUP5 DUP3 DUP6 ADD PUSH2 0x67C5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6827 DUP2 PUSH2 0x6814 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x6842 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x681E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x685D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x6543 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x689D JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x6882 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x68C5 DUP3 PUSH2 0x6863 JUMP JUMPDEST PUSH2 0x68CF DUP2 DUP6 PUSH2 0x686E JUMP JUMPDEST SWAP4 POP PUSH2 0x68DF DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x687F JUMP JUMPDEST PUSH2 0x68E8 DUP2 PUSH2 0x68A9 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x690D DUP2 DUP5 PUSH2 0x68BA JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x693A PUSH2 0x6935 PUSH2 0x6930 DUP5 PUSH2 0x66F8 JUMP JUMPDEST PUSH2 0x6915 JUMP JUMPDEST PUSH2 0x66F8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x694C DUP3 PUSH2 0x691F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x695E DUP3 PUSH2 0x6941 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x696E DUP2 PUSH2 0x6953 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x6989 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x6965 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x69A2 DUP2 PUSH2 0x698F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x69BD PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x6999 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x69D8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x6562 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x69E7 DUP2 PUSH2 0x6535 JUMP JUMPDEST DUP2 EQ PUSH2 0x69F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x6A04 DUP2 PUSH2 0x69DE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x6A13 DUP2 PUSH2 0x6552 JUMP JUMPDEST DUP2 EQ PUSH2 0x6A1E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x6A30 DUP2 PUSH2 0x6A0A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x6A3F DUP2 PUSH2 0x698F JUMP JUMPDEST DUP2 EQ PUSH2 0x6A4A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x6A5C DUP2 PUSH2 0x6A36 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x6A9F DUP3 PUSH2 0x68A9 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x6ABE JUMPI PUSH2 0x6ABD PUSH2 0x6A67 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6AD1 PUSH2 0x6677 JUMP JUMPDEST SWAP1 POP PUSH2 0x6ADD DUP3 DUP3 PUSH2 0x6A96 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6AFA DUP2 PUSH2 0x6AE2 JUMP JUMPDEST DUP2 EQ PUSH2 0x6B05 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x6B17 DUP2 PUSH2 0x6AF1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x120 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6B34 JUMPI PUSH2 0x6B33 PUSH2 0x6A62 JUMP JUMPDEST JUMPDEST PUSH2 0x6B3F PUSH2 0x120 PUSH2 0x6AC7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x6B4F DUP5 DUP3 DUP6 ADD PUSH2 0x6A21 JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP PUSH1 0x20 PUSH2 0x6B63 DUP5 DUP3 DUP6 ADD PUSH2 0x6A21 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 PUSH2 0x6B77 DUP5 DUP3 DUP6 ADD PUSH2 0x6A21 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE POP PUSH1 0x60 PUSH2 0x6B8B DUP5 DUP3 DUP6 ADD PUSH2 0x6A21 JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE POP PUSH1 0x80 PUSH2 0x6B9F DUP5 DUP3 DUP6 ADD PUSH2 0x6A21 JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MSTORE POP PUSH1 0xA0 PUSH2 0x6BB3 DUP5 DUP3 DUP6 ADD PUSH2 0x6B08 JUMP JUMPDEST PUSH1 0xA0 DUP4 ADD MSTORE POP PUSH1 0xC0 PUSH2 0x6BC7 DUP5 DUP3 DUP6 ADD PUSH2 0x6B08 JUMP JUMPDEST PUSH1 0xC0 DUP4 ADD MSTORE POP PUSH1 0xE0 PUSH2 0x6BDB DUP5 DUP3 DUP6 ADD PUSH2 0x6B08 JUMP JUMPDEST PUSH1 0xE0 DUP4 ADD MSTORE POP PUSH2 0x100 PUSH2 0x6BF0 DUP5 DUP3 DUP6 ADD PUSH2 0x6B08 JUMP JUMPDEST PUSH2 0x100 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x1C0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x6C1B JUMPI PUSH2 0x6C1A PUSH2 0x6681 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x6C29 DUP10 DUP3 DUP11 ADD PUSH2 0x69F5 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 PUSH2 0x6C3A DUP10 DUP3 DUP11 ADD PUSH2 0x6A21 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 PUSH2 0x6C4B DUP10 DUP3 DUP11 ADD PUSH2 0x6A21 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 PUSH2 0x6C5C DUP10 DUP3 DUP11 ADD PUSH2 0x6A21 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 PUSH2 0x6C6D DUP10 DUP3 DUP11 ADD PUSH2 0x6A4D JUMP JUMPDEST SWAP3 POP POP PUSH1 0xA0 PUSH2 0x6C7E DUP10 DUP3 DUP11 ADD PUSH2 0x6B1D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH2 0x6C94 DUP2 PUSH2 0x659D JUMP JUMPDEST DUP2 EQ PUSH2 0x6C9F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x6CB1 DUP2 PUSH2 0x6C8B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x6CD3 JUMPI PUSH2 0x6CD2 PUSH2 0x6681 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x6CE1 DUP9 DUP3 DUP10 ADD PUSH2 0x6CA2 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x6CF2 DUP9 DUP3 DUP10 ADD PUSH2 0x66B6 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x6D03 DUP9 DUP3 DUP10 ADD PUSH2 0x69F5 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x6D14 DUP9 DUP3 DUP10 ADD PUSH2 0x6A21 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x6D25 DUP9 DUP3 DUP10 ADD PUSH2 0x6A21 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH2 0x6D3B DUP2 PUSH2 0x6AE2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x120 DUP3 ADD SWAP1 POP PUSH2 0x6D57 PUSH1 0x0 DUP4 ADD DUP13 PUSH2 0x6562 JUMP JUMPDEST PUSH2 0x6D64 PUSH1 0x20 DUP4 ADD DUP12 PUSH2 0x6562 JUMP JUMPDEST PUSH2 0x6D71 PUSH1 0x40 DUP4 ADD DUP11 PUSH2 0x6562 JUMP JUMPDEST PUSH2 0x6D7E PUSH1 0x60 DUP4 ADD DUP10 PUSH2 0x6562 JUMP JUMPDEST PUSH2 0x6D8B PUSH1 0x80 DUP4 ADD DUP9 PUSH2 0x6562 JUMP JUMPDEST PUSH2 0x6D98 PUSH1 0xA0 DUP4 ADD DUP8 PUSH2 0x6D32 JUMP JUMPDEST PUSH2 0x6DA5 PUSH1 0xC0 DUP4 ADD DUP7 PUSH2 0x6D32 JUMP JUMPDEST PUSH2 0x6DB2 PUSH1 0xE0 DUP4 ADD DUP6 PUSH2 0x6D32 JUMP JUMPDEST PUSH2 0x6DC0 PUSH2 0x100 DUP4 ADD DUP5 PUSH2 0x6D32 JUMP JUMPDEST SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6DEF DUP2 PUSH2 0x6DCE JUMP JUMPDEST DUP2 EQ PUSH2 0x6DFA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x6E0C DUP2 PUSH2 0x6DE6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x6E29 JUMPI PUSH2 0x6E28 PUSH2 0x6681 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x6E37 DUP6 DUP3 DUP7 ADD PUSH2 0x6741 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x6E48 DUP6 DUP3 DUP7 ADD PUSH2 0x6DFD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6E5D DUP3 PUSH2 0x6941 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6E6D DUP2 PUSH2 0x6E52 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x6E88 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x6E64 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x6E97 DUP2 PUSH2 0x6814 JUMP JUMPDEST DUP2 EQ PUSH2 0x6EA2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x6EB4 DUP2 PUSH2 0x6E8E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6ED0 JUMPI PUSH2 0x6ECF PUSH2 0x6681 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x6EDE DUP5 DUP3 DUP6 ADD PUSH2 0x6EA5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x6EF0 DUP2 PUSH2 0x659D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x6F0B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x6EE7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x60 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x6F28 JUMPI PUSH2 0x6F27 PUSH2 0x6681 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x6F36 DUP6 DUP3 DUP7 ADD PUSH2 0x6741 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x6F47 DUP6 DUP3 DUP7 ADD PUSH2 0x67C5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x6F5A DUP2 PUSH2 0x6718 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x6F75 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x6F51 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x6F84 DUP2 PUSH2 0x6DCE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6FBF DUP2 PUSH2 0x6718 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6FD1 DUP4 DUP4 PUSH2 0x6FB6 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6FF5 DUP3 PUSH2 0x6F8A JUMP JUMPDEST PUSH2 0x6FFF DUP2 DUP6 PUSH2 0x6F95 JUMP JUMPDEST SWAP4 POP PUSH2 0x700A DUP4 PUSH2 0x6FA6 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x703B JUMPI DUP2 MLOAD PUSH2 0x7022 DUP9 DUP3 PUSH2 0x6FC5 JUMP JUMPDEST SWAP8 POP PUSH2 0x702D DUP4 PUSH2 0x6FDD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x700E JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x705D PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x6F7B JUMP JUMPDEST PUSH2 0x706A PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x6796 JUMP JUMPDEST PUSH2 0x7077 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x6F51 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x7089 DUP2 DUP5 PUSH2 0x6FEA JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x70B4 JUMPI PUSH2 0x70B3 PUSH2 0x7094 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x70D1 JUMPI PUSH2 0x70D0 PUSH2 0x7099 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x70ED JUMPI PUSH2 0x70EC PUSH2 0x67C0 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x710E JUMPI PUSH2 0x710D PUSH2 0x6681 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x711C DUP8 DUP3 DUP9 ADD PUSH2 0x6741 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x712D DUP8 DUP3 DUP9 ADD PUSH2 0x6EA5 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x714E JUMPI PUSH2 0x714D PUSH2 0x6686 JUMP JUMPDEST JUMPDEST PUSH2 0x715A DUP8 DUP3 DUP9 ADD PUSH2 0x709E JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7173 DUP3 PUSH2 0x6941 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7183 DUP2 PUSH2 0x7168 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x719E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x717A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x71BF JUMPI PUSH2 0x71BE PUSH2 0x6A67 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x71DD PUSH2 0x71D8 DUP5 PUSH2 0x71A4 JUMP JUMPDEST PUSH2 0x6AC7 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x71F7 JUMPI PUSH2 0x71F6 PUSH2 0x67C0 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x7220 JUMPI DUP1 PUSH2 0x720C DUP9 DUP3 PUSH2 0x6EA5 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x71F9 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x723F JUMPI PUSH2 0x723E PUSH2 0x7094 JUMP JUMPDEST JUMPDEST PUSH1 0x2 PUSH2 0x724C DUP5 DUP3 DUP6 PUSH2 0x71CA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A0 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x726C JUMPI PUSH2 0x726B PUSH2 0x6A62 JUMP JUMPDEST JUMPDEST PUSH2 0x7277 PUSH2 0x120 PUSH2 0x6AC7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x7287 DUP5 DUP3 DUP6 ADD PUSH2 0x722A JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP PUSH1 0x40 PUSH2 0x729B DUP5 DUP3 DUP6 ADD PUSH2 0x722A JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x80 PUSH2 0x72AF DUP5 DUP3 DUP6 ADD PUSH2 0x6EA5 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE POP PUSH1 0xA0 PUSH2 0x72C3 DUP5 DUP3 DUP6 ADD PUSH2 0x6EA5 JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE POP PUSH1 0xC0 PUSH2 0x72D7 DUP5 DUP3 DUP6 ADD PUSH2 0x6EA5 JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MSTORE POP PUSH1 0xE0 PUSH2 0x72EB DUP5 DUP3 DUP6 ADD PUSH2 0x6741 JUMP JUMPDEST PUSH1 0xA0 DUP4 ADD MSTORE POP PUSH2 0x100 PUSH2 0x7300 DUP5 DUP3 DUP6 ADD PUSH2 0x722A JUMP JUMPDEST PUSH1 0xC0 DUP4 ADD MSTORE POP PUSH2 0x140 PUSH2 0x7315 DUP5 DUP3 DUP6 ADD PUSH2 0x722A JUMP JUMPDEST PUSH1 0xE0 DUP4 ADD MSTORE POP PUSH2 0x180 PUSH2 0x732A DUP5 DUP3 DUP6 ADD PUSH2 0x6EA5 JUMP JUMPDEST PUSH2 0x100 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x734D JUMPI PUSH2 0x734C PUSH2 0x6A62 JUMP JUMPDEST JUMPDEST PUSH2 0x7357 PUSH1 0xA0 PUSH2 0x6AC7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x7367 DUP5 DUP3 DUP6 ADD PUSH2 0x66B6 JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP PUSH1 0x20 PUSH2 0x737B DUP5 DUP3 DUP6 ADD PUSH2 0x66B6 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 PUSH2 0x738F DUP5 DUP3 DUP6 ADD PUSH2 0x6A21 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE POP PUSH1 0x60 PUSH2 0x73A3 DUP5 DUP3 DUP6 ADD PUSH2 0x6A21 JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE POP PUSH1 0x80 PUSH2 0x73B7 DUP5 DUP3 DUP6 ADD PUSH2 0x6741 JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x240 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x73DB JUMPI PUSH2 0x73DA PUSH2 0x6681 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x73E9 DUP6 DUP3 DUP7 ADD PUSH2 0x7255 JUMP JUMPDEST SWAP3 POP POP PUSH2 0x1A0 PUSH2 0x73FB DUP6 DUP3 DUP7 ADD PUSH2 0x7337 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x741A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x6F7B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x7435 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x6543 JUMP JUMPDEST PUSH2 0x7442 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x6562 JUMP JUMPDEST PUSH2 0x744F PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x6562 JUMP JUMPDEST PUSH2 0x745C PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x6562 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x747B JUMPI PUSH2 0x747A PUSH2 0x6681 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x7489 DUP5 DUP3 DUP6 ADD PUSH2 0x722A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x74A8 JUMPI PUSH2 0x74A7 PUSH2 0x6681 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x74B6 DUP5 DUP3 DUP6 ADD PUSH2 0x6741 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x74D4 DUP2 PUSH2 0x74BF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x74EF PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x74CB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x750A PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x6F51 JUMP JUMPDEST PUSH2 0x7517 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x6F51 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x7587 DUP3 PUSH2 0x6814 JUMP JUMPDEST SWAP2 POP PUSH2 0x7592 DUP4 PUSH2 0x6814 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x75AA JUMPI PUSH2 0x75A9 PUSH2 0x754D JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x75F4 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x6543 JUMP JUMPDEST PUSH2 0x7601 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x6543 JUMP JUMPDEST PUSH2 0x760E PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x6543 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7646 PUSH2 0x7641 DUP4 PUSH2 0x7616 JUMP JUMPDEST PUSH2 0x7623 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7656 DUP2 PUSH2 0x6552 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x20 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x767C PUSH2 0x7677 DUP4 PUSH2 0x765C JUMP JUMPDEST PUSH2 0x7623 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x40 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x76A3 PUSH2 0x769E DUP4 PUSH2 0x7683 JUMP JUMPDEST PUSH2 0x7623 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x60 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x76CA PUSH2 0x76C5 DUP4 PUSH2 0x76AA JUMP JUMPDEST PUSH2 0x7623 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x80 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x76F1 PUSH2 0x76EC DUP4 PUSH2 0x76D1 JUMP JUMPDEST PUSH2 0x7623 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0xA0 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7727 PUSH2 0x7722 DUP4 PUSH2 0x76F8 JUMP JUMPDEST PUSH2 0x7705 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7737 DUP2 PUSH2 0x6AE2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0xB8 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x775D PUSH2 0x7758 DUP4 PUSH2 0x773D JUMP JUMPDEST PUSH2 0x7705 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0xD0 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7784 PUSH2 0x777F DUP4 PUSH2 0x7764 JUMP JUMPDEST PUSH2 0x7705 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0xE8 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x77AB PUSH2 0x77A6 DUP4 PUSH2 0x778B JUMP JUMPDEST PUSH2 0x7705 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x120 DUP3 ADD PUSH1 0x0 DUP1 DUP4 ADD SLOAD SWAP1 POP PUSH2 0x77C8 DUP2 PUSH2 0x7633 JUMP JUMPDEST PUSH2 0x77D5 PUSH1 0x0 DUP7 ADD DUP3 PUSH2 0x764D JUMP JUMPDEST POP PUSH2 0x77DF DUP2 PUSH2 0x7669 JUMP JUMPDEST PUSH2 0x77EC PUSH1 0x20 DUP7 ADD DUP3 PUSH2 0x764D JUMP JUMPDEST POP PUSH2 0x77F6 DUP2 PUSH2 0x7690 JUMP JUMPDEST PUSH2 0x7803 PUSH1 0x40 DUP7 ADD DUP3 PUSH2 0x764D JUMP JUMPDEST POP PUSH2 0x780D DUP2 PUSH2 0x76B7 JUMP JUMPDEST PUSH2 0x781A PUSH1 0x60 DUP7 ADD DUP3 PUSH2 0x764D JUMP JUMPDEST POP PUSH2 0x7824 DUP2 PUSH2 0x76DE JUMP JUMPDEST PUSH2 0x7831 PUSH1 0x80 DUP7 ADD DUP3 PUSH2 0x764D JUMP JUMPDEST POP PUSH2 0x783B DUP2 PUSH2 0x7714 JUMP JUMPDEST PUSH2 0x7848 PUSH1 0xA0 DUP7 ADD DUP3 PUSH2 0x772E JUMP JUMPDEST POP PUSH2 0x7852 DUP2 PUSH2 0x774A JUMP JUMPDEST PUSH2 0x785F PUSH1 0xC0 DUP7 ADD DUP3 PUSH2 0x772E JUMP JUMPDEST POP PUSH2 0x7869 DUP2 PUSH2 0x7771 JUMP JUMPDEST PUSH2 0x7876 PUSH1 0xE0 DUP7 ADD DUP3 PUSH2 0x772E JUMP JUMPDEST POP PUSH2 0x7880 DUP2 PUSH2 0x7798 JUMP JUMPDEST PUSH2 0x788E PUSH2 0x100 DUP7 ADD DUP3 PUSH2 0x772E JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C0 DUP3 ADD SWAP1 POP PUSH2 0x78AB PUSH1 0x0 DUP4 ADD DUP10 PUSH2 0x6543 JUMP JUMPDEST PUSH2 0x78B8 PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x6562 JUMP JUMPDEST PUSH2 0x78C5 PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x6562 JUMP JUMPDEST PUSH2 0x78D2 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x6562 JUMP JUMPDEST PUSH2 0x78DF PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x6999 JUMP JUMPDEST PUSH2 0x78EC PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x77B2 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x790C PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x6796 JUMP JUMPDEST PUSH2 0x7919 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x6F51 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x7935 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x6562 JUMP JUMPDEST PUSH2 0x7942 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x6562 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7954 DUP3 PUSH2 0x668B JUMP JUMPDEST SWAP2 POP PUSH2 0x795F DUP4 PUSH2 0x668B JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x797F JUMPI PUSH2 0x797E PUSH2 0x754D JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x799A PUSH1 0x0 DUP4 ADD DUP10 PUSH2 0x681E JUMP JUMPDEST PUSH2 0x79A7 PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x681E JUMP JUMPDEST PUSH2 0x79B4 PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x6796 JUMP JUMPDEST PUSH2 0x79C1 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x6562 JUMP JUMPDEST PUSH2 0x79CE PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x6562 JUMP JUMPDEST PUSH2 0x79DB PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x6F51 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x79FB PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x681E JUMP JUMPDEST PUSH2 0x7A08 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x681E JUMP JUMPDEST PUSH2 0x7A15 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x6543 JUMP JUMPDEST PUSH2 0x7A22 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x6562 JUMP JUMPDEST PUSH2 0x7A2F PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x6562 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7A44 DUP3 PUSH2 0x6DCE JUMP JUMPDEST SWAP2 POP PUSH2 0x7A4F DUP4 PUSH2 0x6DCE JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x7A73 JUMPI PUSH2 0x7A72 PUSH2 0x754D JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7A94 PUSH2 0x7A8F PUSH2 0x7A8A DUP5 PUSH2 0x6DCE JUMP JUMPDEST PUSH2 0x6915 JUMP JUMPDEST PUSH2 0x6814 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7AA4 DUP2 PUSH2 0x7A79 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x7ABF PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x6F51 JUMP JUMPDEST PUSH2 0x7ACC PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x7A9B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x7ADC DUP2 PUSH2 0x74BF JUMP JUMPDEST DUP2 EQ PUSH2 0x7AE7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x7AF9 DUP2 PUSH2 0x7AD3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7B15 JUMPI PUSH2 0x7B14 PUSH2 0x6681 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x7B23 DUP5 DUP3 DUP6 ADD PUSH2 0x7AEA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4D7573742062652070726F706F736564206F776E657200000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7B62 PUSH1 0x16 DUP4 PUSH2 0x686E JUMP JUMPDEST SWAP2 POP PUSH2 0x7B6D DUP3 PUSH2 0x7B2C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x7B91 DUP2 PUSH2 0x7B55 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7BA3 DUP3 PUSH2 0x668B JUMP JUMPDEST SWAP2 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x7BBD JUMPI PUSH2 0x7BBC PUSH2 0x754D JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7BD3 DUP3 PUSH2 0x6DCE JUMP JUMPDEST SWAP2 POP PUSH2 0x7BDE DUP4 PUSH2 0x6DCE JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x7C02 JUMPI PUSH2 0x7C01 PUSH2 0x754D JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7C13 DUP3 PUSH2 0x6814 JUMP JUMPDEST SWAP2 POP PUSH2 0x7C1E DUP4 PUSH2 0x6814 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x7C36 JUMPI PUSH2 0x7C35 PUSH2 0x754D JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x7C51 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x681E JUMP JUMPDEST PUSH2 0x7C5E PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x681E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7C9A DUP2 PUSH2 0x6814 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7CAC DUP4 DUP4 PUSH2 0x7C91 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7CD0 DUP3 PUSH2 0x7C65 JUMP JUMPDEST PUSH2 0x7CDA DUP2 DUP6 PUSH2 0x7C70 JUMP JUMPDEST SWAP4 POP PUSH2 0x7CE5 DUP4 PUSH2 0x7C81 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x7D16 JUMPI DUP2 MLOAD PUSH2 0x7CFD DUP9 DUP3 PUSH2 0x7CA0 JUMP JUMPDEST SWAP8 POP PUSH2 0x7D08 DUP4 PUSH2 0x7CB8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x7CE9 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x7D38 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x681E JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x7D4A DUP2 DUP5 PUSH2 0x7CC5 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x7D68 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x681E JUMP JUMPDEST PUSH2 0x7D75 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x6F7B JUMP JUMPDEST PUSH2 0x7D82 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x74CB JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7DC0 DUP2 PUSH2 0x7D8A JUMP JUMPDEST PUSH2 0x7DCA DUP2 DUP5 PUSH2 0x7D95 JUMP JUMPDEST SWAP3 POP PUSH2 0x7DD5 DUP3 PUSH2 0x7DA0 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x7E06 JUMPI DUP2 MLOAD PUSH2 0x7DED DUP8 DUP3 PUSH2 0x7CA0 JUMP JUMPDEST SWAP7 POP PUSH2 0x7DF8 DUP4 PUSH2 0x7DAA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x7DD9 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x7E23 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x7DB7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x7E38 DUP2 PUSH2 0x6E8E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7E54 JUMPI PUSH2 0x7E53 PUSH2 0x6681 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x7E62 DUP5 DUP3 DUP6 ADD PUSH2 0x7E29 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x7E80 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x6F51 JUMP JUMPDEST PUSH2 0x7E8D PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x681E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4F6E6C792063616C6C61626C65206279206F776E657200000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7ECA PUSH1 0x16 DUP4 PUSH2 0x686E JUMP JUMPDEST SWAP2 POP PUSH2 0x7ED5 DUP3 PUSH2 0x7E94 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x7EF9 DUP2 PUSH2 0x7EBD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x7F15 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x6EE7 JUMP JUMPDEST PUSH2 0x7F22 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x6F51 JUMP JUMPDEST PUSH2 0x7F2F PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x6796 JUMP JUMPDEST PUSH2 0x7F3C PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x6796 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x7F5A PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x6EE7 JUMP JUMPDEST PUSH2 0x7F67 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x681E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x7F83 PUSH1 0x0 DUP4 ADD DUP10 PUSH2 0x681E JUMP JUMPDEST PUSH2 0x7F90 PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x6796 JUMP JUMPDEST PUSH2 0x7F9D PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x6796 JUMP JUMPDEST PUSH2 0x7FAA PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x6562 JUMP JUMPDEST PUSH2 0x7FB7 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x6562 JUMP JUMPDEST PUSH2 0x7FC4 PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x6F51 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7FEA PUSH2 0x7FE5 PUSH2 0x7FE0 DUP5 PUSH2 0x668B JUMP JUMPDEST PUSH2 0x6915 JUMP JUMPDEST PUSH2 0x6814 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7FFA DUP2 PUSH2 0x7FCF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x8015 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x7FF1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x802A DUP2 PUSH2 0x6C8B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8046 JUMPI PUSH2 0x8045 PUSH2 0x6681 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x8054 DUP5 DUP3 DUP6 ADD PUSH2 0x801B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8078 PUSH2 0x8073 DUP3 PUSH2 0x6814 JUMP JUMPDEST PUSH2 0x805D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8099 PUSH2 0x8094 DUP3 PUSH2 0x659D JUMP JUMPDEST PUSH2 0x807E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x80AB DUP3 DUP6 PUSH2 0x8067 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0x80BB DUP3 DUP5 PUSH2 0x8088 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x80D6 DUP3 PUSH2 0x6814 JUMP JUMPDEST SWAP2 POP PUSH2 0x80E1 DUP4 PUSH2 0x6814 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x80EF DUP2 PUSH2 0x6814 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x8106 JUMPI PUSH2 0x8105 PUSH2 0x754D JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x8147 DUP3 PUSH2 0x6814 JUMP JUMPDEST SWAP2 POP PUSH2 0x8152 DUP4 PUSH2 0x6814 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x8162 JUMPI PUSH2 0x8161 PUSH2 0x810D JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x43616E6E6F74207472616E7366657220746F2073656C66000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x81A3 PUSH1 0x17 DUP4 PUSH2 0x686E JUMP JUMPDEST SWAP2 POP PUSH2 0x81AE DUP3 PUSH2 0x816D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x81D2 DUP2 PUSH2 0x8196 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x81EE PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x681E JUMP JUMPDEST PUSH2 0x81FB PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x7DB7 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8221 DUP2 PUSH2 0x8202 JUMP JUMPDEST DUP2 EQ PUSH2 0x822C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x823E DUP2 PUSH2 0x8218 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x8253 DUP2 PUSH2 0x6A36 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x8275 JUMPI PUSH2 0x8274 PUSH2 0x6681 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x8283 DUP9 DUP3 DUP10 ADD PUSH2 0x822F JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x8294 DUP9 DUP3 DUP10 ADD PUSH2 0x8244 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x82A5 DUP9 DUP3 DUP10 ADD PUSH2 0x7E29 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x82B6 DUP9 DUP3 DUP10 ADD PUSH2 0x7E29 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x82C7 DUP9 DUP3 DUP10 ADD PUSH2 0x822F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH32 0x7075626C6963206B6579206973206E6F74206F6E206375727665000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x830A PUSH1 0x1A DUP4 PUSH2 0x686E JUMP JUMPDEST SWAP2 POP PUSH2 0x8315 DUP3 PUSH2 0x82D4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x8339 DUP2 PUSH2 0x82FD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x67616D6D61206973206E6F74206F6E2063757276650000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8376 PUSH1 0x15 DUP4 PUSH2 0x686E JUMP JUMPDEST SWAP2 POP PUSH2 0x8381 DUP3 PUSH2 0x8340 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x83A5 DUP2 PUSH2 0x8369 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x6347616D6D615769746E657373206973206E6F74206F6E206375727665000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x83E2 PUSH1 0x1D DUP4 PUSH2 0x686E JUMP JUMPDEST SWAP2 POP PUSH2 0x83ED DUP3 PUSH2 0x83AC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x8411 DUP2 PUSH2 0x83D5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x73486173685769746E657373206973206E6F74206F6E20637572766500000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x844E PUSH1 0x1C DUP4 PUSH2 0x686E JUMP JUMPDEST SWAP2 POP PUSH2 0x8459 DUP3 PUSH2 0x8418 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x847D DUP2 PUSH2 0x8441 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x6164647228632A706B2B732A6729213D5F755769746E65737300000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x84BA PUSH1 0x19 DUP4 PUSH2 0x686E JUMP JUMPDEST SWAP2 POP PUSH2 0x84C5 DUP3 PUSH2 0x8484 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x84E9 DUP2 PUSH2 0x84AD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x696E76616C69642070726F6F6600000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8526 PUSH1 0xD DUP4 PUSH2 0x686E JUMP JUMPDEST SWAP2 POP PUSH2 0x8531 DUP3 PUSH2 0x84F0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x8555 DUP2 PUSH2 0x8519 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x696E76616C696420782D6F7264696E6174650000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8592 PUSH1 0x12 DUP4 PUSH2 0x686E JUMP JUMPDEST SWAP2 POP PUSH2 0x859D DUP3 PUSH2 0x855C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x85C1 DUP2 PUSH2 0x8585 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x696E76616C696420792D6F7264696E6174650000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x85FE PUSH1 0x12 DUP4 PUSH2 0x686E JUMP JUMPDEST SWAP2 POP PUSH2 0x8609 DUP3 PUSH2 0x85C8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x862D DUP2 PUSH2 0x85F1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x626164207769746E657373000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x866A PUSH1 0xB DUP4 PUSH2 0x686E JUMP JUMPDEST SWAP2 POP PUSH2 0x8675 DUP3 PUSH2 0x8634 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x8699 DUP2 PUSH2 0x865D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x86B6 DUP2 PUSH2 0x86A0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x86D1 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x6EE7 JUMP JUMPDEST PUSH2 0x86DE PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x86AD JUMP JUMPDEST PUSH2 0x86EB PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x6EE7 JUMP JUMPDEST PUSH2 0x86F8 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x6EE7 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x8715 DUP2 PUSH2 0x6814 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8727 DUP4 DUP4 PUSH2 0x870C JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x873C DUP2 PUSH2 0x7D8A JUMP JUMPDEST PUSH2 0x8746 DUP2 DUP5 PUSH2 0x8701 JUMP JUMPDEST SWAP3 POP PUSH2 0x8751 DUP3 PUSH2 0x7DA0 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x8782 JUMPI DUP2 MLOAD PUSH2 0x8769 DUP8 DUP3 PUSH2 0x871B JUMP JUMPDEST SWAP7 POP PUSH2 0x8774 DUP4 PUSH2 0x7DAA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x8755 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8796 DUP3 DUP7 PUSH2 0x8067 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0x87A6 DUP3 DUP6 PUSH2 0x8733 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP2 POP PUSH2 0x87B6 DUP3 DUP5 PUSH2 0x8067 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x87D3 DUP3 DUP5 PUSH2 0x8067 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x706F696E747320696E2073756D206D7573742062652064697374696E63740000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8818 PUSH1 0x1E DUP4 PUSH2 0x686E JUMP JUMPDEST SWAP2 POP PUSH2 0x8823 DUP3 PUSH2 0x87E2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x8847 DUP2 PUSH2 0x880B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4669727374206D756C20636865636B206661696C656400000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8884 PUSH1 0x16 DUP4 PUSH2 0x686E JUMP JUMPDEST SWAP2 POP PUSH2 0x888F DUP3 PUSH2 0x884E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x88B3 DUP2 PUSH2 0x8877 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5365636F6E64206D756C20636865636B206661696C6564000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x88F0 PUSH1 0x17 DUP4 PUSH2 0x686E JUMP JUMPDEST SWAP2 POP PUSH2 0x88FB DUP3 PUSH2 0x88BA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x891F DUP2 PUSH2 0x88E3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x60 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x893E DUP3 PUSH2 0x8926 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8950 DUP3 PUSH2 0x8933 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8968 PUSH2 0x8963 DUP3 PUSH2 0x6718 JUMP JUMPDEST PUSH2 0x8945 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x897A DUP3 DUP10 PUSH2 0x8067 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0x898A DUP3 DUP9 PUSH2 0x8733 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP2 POP PUSH2 0x899A DUP3 DUP8 PUSH2 0x8733 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP2 POP PUSH2 0x89AA DUP3 DUP7 PUSH2 0x8733 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP2 POP PUSH2 0x89BA DUP3 DUP6 PUSH2 0x8733 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP2 POP PUSH2 0x89CA DUP3 DUP5 PUSH2 0x8957 JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x7A65726F207363616C6172000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8A14 PUSH1 0xB DUP4 PUSH2 0x686E JUMP JUMPDEST SWAP2 POP PUSH2 0x8A1F DUP3 PUSH2 0x89DE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x8A43 DUP2 PUSH2 0x8A07 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8A55 DUP3 PUSH2 0x6814 JUMP JUMPDEST SWAP2 POP PUSH2 0x8A60 DUP4 PUSH2 0x6814 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x8A70 JUMPI PUSH2 0x8A6F PUSH2 0x810D JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8A87 DUP3 DUP5 PUSH2 0x8733 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x696E765A206D75737420626520696E7665727365206F66207A00000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8ACC PUSH1 0x19 DUP4 PUSH2 0x686E JUMP JUMPDEST SWAP2 POP PUSH2 0x8AD7 DUP3 PUSH2 0x8A96 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x8AFB DUP2 PUSH2 0x8ABF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x6269674D6F64457870206661696C757265210000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8B38 PUSH1 0x12 DUP4 PUSH2 0x686E JUMP JUMPDEST SWAP2 POP PUSH2 0x8B43 DUP3 PUSH2 0x8B02 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x8B67 DUP2 PUSH2 0x8B2B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAE 0xB2 0xEB RETURN 0x4D PUSH25 0x56A1C2F760874E79174948D8C6C099509959247D8C45D121B5 INVALID PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"506:35771:18:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14612:280;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;13554:266;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;30246:531;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;28753:96;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8715:793;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;13074:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4355:54;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;36102:173;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;650:40;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;13177:116;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4415:42;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;10378:1288;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;14959:2710;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;12130:938;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;1024:42;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;27489:405;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;754:56;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;17830:129;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8147:409;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;32724:764;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1001:265:10;;;:::i;:::-;;30844:680:18;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1317:81:10;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;31591:1066:18;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;29577:602;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;28916:594;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;27900:847;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;696:52;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;23038:2611;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;11672:452;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;9664:148;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;21985:701;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;33555:275;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;13958:587;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;34848:717;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;811:98:10;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;14612:280:18;14704:6;14712;14720:16;14773:8;:36;;;;;;;;;;;;14823:8;:20;;;;;;;;;;;;14857:18;14752:133;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14612:280;;;:::o;13554:266::-;1941:20:10;:18;:20::i;:::-;13680:1:18::1;13634:48;;:21;:28;13656:5;13634:28;;;;;;;;;;;;;;;:34;;;;;;;;;;;;:48;;::::0;13630:107:::1;;13705:21;;;;;;;;;;;;;;13630:107;13746:67;13771:5;13778:21;:28;13800:5;13778:28;;;;;;;;;;;;;;;:34;;;;;;;;;;;;13746:24;:67::i;:::-;13554:266:::0;:::o;30246:531::-;30373:5;35617:13;35633:21;:28;35655:5;35633:28;;;;;;;;;;;;;;;:34;;;;;;;;;;;;35617:50;;35698:1;35681:19;;:5;:19;;;35677:78;;35723:21;;;;;;;;;;;;;;35677:78;35782:5;35768:19;;:10;:19;;;35764:78;;35825:5;35810:21;;;;;;;;;;;:::i;:::-;;;;;;;;35764:78;35903:8:::1;:23;;;;;;;;;;;;35899:72;;;35949:11;;;;;;;;;;;;;;35899:72;30538:8:::2;30491:55;;:21;:28;30513:5;30491:28;;;;;;;;;;;;;;;:43;;;;;;;;;;;;:55;;;30487:284;;30608:8;30562:21;:28;30584:5;30562:28;;;;;;;;;;;;;;;:43;;;:54;;;;;;;;;;;;;;;;;;30687:5;30635:125;;;30710:10;30738:8;30635:125;;;;;;;:::i;:::-;;;;;;;;30487:284;35607:252:::0;30246:531;;;:::o;28753:96::-;28803:6;28828:14;;;;;;;;;;;28821:21;;28753:96;:::o;8715:793::-;1941:20:10;:18;:20::i;:::-;8826:10:18::1;8839:27;8849:16;8839:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:9;:27::i;:::-;8826:40;;8876:14;8893:13;:17;8907:2;8893:17;;;;;;;;;;;;;;;;;;;;;8876:34;;8942:1;8924:20;;:6;:20;;::::0;8920:78:::1;;8984:2;8967:20;;;;;;;;;;;:::i;:::-;;;;;;;;8920:78;9014:13;:17;9028:2;9014:17;;;;;;;;;;;;9007:24;;;;;;;;;;;9046:9;9041:412;9065:18;:25;;;;9061:1;:29;9041:412;;;9140:2;9115:18;9134:1;9115:21;;;;;;;;:::i;:::-;;;;;;;;;;:27:::0;9111:332:::1;;9162:12;9177:18;9245:1;9217:18;:25;;;;:29;;;;:::i;:::-;9177:87;;;;;;;;:::i;:::-;;;;;;;;;;9162:102;;9382:4;9358:18;9377:1;9358:21;;;;;;;;:::i;:::-;;;;;;;;;:28;;;;9404:18;:24;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;9144:299;9111:332;9092:3;;;;;;;9041:412;;;;9494:6;9467:34;;;9490:2;9467:34;;;;;;:::i;:::-;;;;;;;;8816:692;;8715:793:::0;:::o;13074:97::-;13124:7;13150:14;;;;;;;;;;;13143:21;;;;13074:97;:::o;4355:54::-;4406:3;4355:54;:::o;36102:173::-;36208:13;36237:31;;;;;;;;;;;;;;;;;;;36102:173;:::o;650:40::-;;;:::o;13177:116::-;13237:6;13262:24;;13255:31;;13177:116;:::o;4415:42::-;4454:3;4415:42;:::o;10378:1288::-;1941:20:10;:18;:20::i;:::-;4406:3:18::1;10659:55;;:27;:55;;;10655:267;;;10782:27;10827;4406:3;10737:174;;;;;;;;;;;;;:::i;:::-;;;;;;;;10655:267;10961:1;10935:22;:27;10931:108;;11005:22;10985:43;;;;;;;;;;;:::i;:::-;;;;;;;;10931:108;11059:277;;;;;;;;11109:27;11059:277;;;;;;11163:11;11059:277;;;;;;11320:5;11059:277;;;;;;11206:16;11059:277;;;;;;11264:26;11059:277;;;;::::0;11048:8:::1;:288;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11360:9;11346:11;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11406:22;11379:24;:49;;;;11443:216;11466:27;11507:11;11532:16;11562:26;11602:22;11638:11;11443:216;;;;;;;;;;;:::i;:::-;;;;;;;;10378:1288:::0;;;;;;:::o;14959:2710::-;15175:7;35903:8;:23;;;;;;;;;;;;35899:72;;;35949:11;;;;;;;;;;;;;;35899:72;15304:1:::1;15258:48;;:21;:28;15280:5;15258:28;;;;;;;;;;;;;;;:34;;;;;;;;;;;;:48;;::::0;15254:107:::1;;15329:21;;;;;;;;;;;;;;15254:107;15602:19;15624:11;:23;15636:10;15624:23;;;;;;;;;;;;;;;:30;15648:5;15624:30;;;;;;;;;;;;;;;;;;;;;;;;;15602:52;;15684:1;15668:12;:17;;::::0;15664:89:::1;;15724:5;15731:10;15708:34;;;;;;;;;;;;:::i;:::-;;;;;;;;15664:89;15861:8;:36;;;;;;;;;;;;15838:59;;:20;:59;;;:123;;;;4406:3;15913:48;;:20;:48;;;15838:123;15821:359;;;16038:20;16076:8;:36;;;;;;;;;;;;4406:3;15993:176;;;;;;;;;;;;;:::i;:::-;;;;;;;;15821:359;16429:8;:20;;;;;;;;;;;;16410:39;;:16;:39;;;16406:131;;;16487:16;16505:8;:20;;;;;;;;;;;;16472:54;;;;;;;;;;;;:::i;:::-;;;;;;;;16406:131;4454:3;16550:24;;:8;:24;;;16546:101;;;16612:8;4454:3;16597:39;;;;;;;;;;;;:::i;:::-;;;;;;;;16546:101;16867:12;16897:1;16882:12;:16;;;;:::i;:::-;16867:31;;16909:17;16928:15:::0;16947:109:::1;16977:7;16998:10;17022:5;17041;16947:16;:109::i;:::-;16908:148;;;;17152:9;17179:34;:32;:34::i;:::-;17231:5;17254:16;17288:8;17314:10;17124:214;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;17101:247;;;;;;17067:20;:31;17088:9;17067:31;;;;;;;;;;;:281;;;;17567:10;17363:224;;17462:5;17363:224;;17397:7;17363:224;17418:9;17441:7;17481:20;17515:16;17545:8;17363:224;;;;;;;;;;:::i;:::-;;;;;;;;17630:5;17597:11;:23;17609:10;17597:23;;;;;;;;;;;;;;;:30;17621:5;17597:30;;;;;;;;;;;;;;;;:38;;;;;;;;;;;;;;;;;;17653:9;17646:16;;;;;;14959:2710:::0;;;;;;;:::o;12130:938::-;12214:37;12265;12316;12367;12418;12469:19;12502;12535;12568;12633:11;:42;;;;;;;;;;;;12689:11;:42;;;;;;;;;;;;12745:11;:42;;;;;;;;;;;;12801:11;:42;;;;;;;;;;;;12857:11;:42;;;;;;;;;;;;12913:11;:24;;;;;;;;;;;;12951:11;:24;;;;;;;;;;;;12989:11;:24;;;;;;;;;;;;13027:11;:24;;;;;;;;;;;;12612:449;;;;;;;;;;;;;;;;;;12130:938;;;;;;;;;:::o;1024:42::-;1063:3;1024:42;:::o;27489:405::-;35903:8;:23;;;;;;;;;;;;35899:72;;;35949:11;;;;;;;;;;;;;;35899:72;27640:6:::1;27605:41;;:20;:32;27626:10;27605:32;;;;;;;;;;;;;;;;;;;;;;;;;:41;;;27601:100;;;27669:21;;;;;;;;;;;;;;27601:100;27746:6;27710:20;:32;27731:10;27710:32;;;;;;;;;;;;;;;;:42;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;27780:6;27762:14;;:24;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;27801:4;:13;;;27815:9;27826:6;27801:32;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;27796:92;;27856:21;;;;;;;;;;;;;;27796:92;27489:405:::0;;:::o;754:56::-;;;:::o;17830:129::-;17895:7;17921:20;:31;17942:9;17921:31;;;;;;;;;;;;17914:38;;17830:129;;;:::o;8147:409::-;1941:20:10;:18;:20::i;:::-;8280:10:18::1;8293:27;8303:16;8293:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:9;:27::i;:::-;8280:40;;8363:1;8334:31;;:13;:17;8348:2;8334:17;;;;;;;;;;;;;;;;;;;;;:31;;;8330:100;;8416:2;8388:31;;;;;;;;;;;:::i;:::-;;;;;;;;8330:100;8459:6;8439:13;:17;8453:2;8439:17;;;;;;;;;;;;:26;;;;;;;;;;;;;;;;;;8475:18;8499:2;8475:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8542:6;8517:32;;;8538:2;8517:32;;;;;;:::i;:::-;;;;;;;;8270:286;8147:409:::0;;:::o;32724:764::-;32830:5;35617:13;35633:21;:28;35655:5;35633:28;;;;;;;;;;;;;;;:34;;;;;;;;;;;;35617:50;;35698:1;35681:19;;:5;:19;;;35677:78;;35723:21;;;;;;;;;;;;;;35677:78;35782:5;35768:19;;:10;:19;;;35764:78;;35825:5;35810:21;;;;;;;;;;;:::i;:::-;;;;;;;;35764:78;35903:8:::1;:23;;;;;;;;;;;;35899:72;;;35949:11;;;;;;;;;;;;;;35899:72;1063:3:::2;32921:62;;:21;:28;32943:5;32921:28;;;;;;;;;;;;;;;:38;;:45;;;;:62:::0;32917:118:::2;;33006:18;;;;;;;;;;;;;;32917:118;33080:1;33048:11;:21;33060:8;33048:21;;;;;;;;;;;;;;;:28;33070:5;33048:28;;;;;;;;;;;;;;;;;;;;;;;;;:33;;::::0;33226:7:::2;33044:199;33359:1;33328:11;:21;33340:8;33328:21;;;;;;;;;;;;;;;:28;33350:5;33328:28;;;;;;;;;;;;;;;;:32;;;;;;;;;;;;;;;;;;33370:21;:28;33392:5;33370:28;;;;;;;;;;;;;;;:38;;33414:8;33370:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;33465:5;33439:42;;;33472:8;33439:42;;;;;;:::i;:::-;;;;;;;;35980:1;35607:252:::0;32724:764;;;:::o;1001:265:10:-;1074:14;;;;;;;;;;;1060:28;;:10;:28;;;1052:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1122:16;1141:7;;;;;;;;;;;1122:26;;1164:10;1154:7;;:20;;;;;;;;;;;;;;;;;;1205:1;1180:14;;:27;;;;;;;;;;;;;;;;;;1250:10;1219:42;;1240:8;1219:42;;;;;;;;;;;;1046:220;1001:265::o;30844:680:18:-;35903:8;:23;;;;;;;;;;;;35899:72;;;35949:11;;;;;;;;;;;;;;35899:72;31004:1:::1;30958:48;;:21;:28;30980:5;30958:28;;;;;;;;;;;;;;;:34;;;;;;;;;;;;:48;;::::0;30954:107:::1;;31029:21;;;;;;;;;;;;;;30954:107;31121:10;31074:57;;:21;:28;31096:5;31074:28;;;;;;;;;;;;;;;:43;;;;;;;;;;;;:57;;;31070:190;;31192:21;:28;31214:5;31192:28;;;;;;;;;;;;;;;:43;;;;;;;;;;;;31154:95;;;;;;;;;;;:::i;:::-;;;;;;;;31070:190;31269:16;31288:21;:28;31310:5;31288:28;;;;;;;;;;;;;;;:34;;;;;;;;;;;;31269:53;;31369:10;31332:21;:28;31354:5;31332:28;;;;;;;;;;;;;;;:34;;;:47;;;;;;;;;;;;;;;;;;31443:1;31389:21;:28;31411:5;31389:28;;;;;;;;;;;;;;;:43;;;:56;;;;;;;;;;;;;;;;;;31489:5;31460:57;;;31496:8;31506:10;31460:57;;;;;;;:::i;:::-;;;;;;;;30944:580;30844:680:::0;:::o;1317:81:10:-;1364:7;1386;;;;;;;;;;;1379:14;;1317:81;:::o;31591:1066:18:-;31700:5;35617:13;35633:21;:28;35655:5;35633:28;;;;;;;;;;;;;;;:34;;;;;;;;;;;;35617:50;;35698:1;35681:19;;:5;:19;;;35677:78;;35723:21;;;;;;;;;;;;;;35677:78;35782:5;35768:19;;:10;:19;;;35764:78;;35825:5;35810:21;;;;;;;;;;;:::i;:::-;;;;;;;;35764:78;35903:8:::1;:23;;;;;;;;;;;;35899:72;;;35949:11;;;;;;;;;;;;;;35899:72;31734:27:::2;31755:5;31734:20;:27::i;:::-;31730:87;;;31784:22;;;;;;;;;;;;;;31730:87;31862:1;31830:11;:21;31842:8;31830:21;;;;;;;;;;;;;;;:28;31852:5;31830:28;;;;;;;;;;;;;;;;;;;;;;;;;:33;;::::0;31826:103:::2;;31902:5;31909:8;31886:32;;;;;;;;;;;;:::i;:::-;;;;;;;;31826:103;31979:26;32008:21;:28;32030:5;32008:28;;;;;;;;;;;;;;;:38;;31979:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;32056:25;32103:1;32084:9;:16;:20;;;;:::i;:::-;32056:48;;32119:9;32114:433;32138:9;:16;32134:1;:20;32114:433;;;32195:8;32179:24;;:9;32189:1;32179:12;;;;;;;;:::i;:::-;;;;;;;;:24;;::::0;32175:362:::2;;32223:12;32238:9;32248:17;32238:28;;;;;;;;:::i;:::-;;;;;;;;32223:43;;32386:4;32342:21;:28;32364:5;32342:28;;;;;;;;;;;;;;;:38;;32381:1;32342:41;;;;;;;;:::i;:::-;;;;;;;;;;:48;;;;;;;;;;;;;;;;;;32455:21;:28;32477:5;32455:28;;;;;;;;;;;;;;;:38;;:44;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;32517:5;;;32175:362;32156:3;;;;;;;32114:433;;;;32563:11;:21;32575:8;32563:21;;;;;;;;;;;;;;;:28;32585:5;32563:28;;;;;;;;;;;;;;;;32556:35;;;;;;;;;;;32634:5;32606:44;;;32641:8;32606:44;;;;;;:::i;:::-;;;;;;;;31720:937;;35607:252:::0;31591:1066;;;:::o;29577:602::-;29679:6;35903:8;:23;;;;;;;;;;;;35899:72;;;35949:11;;;;;;;;;;;;;;35899:72;29701:14:::1;;:16;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;29727:19;29749:14;;;;;;;;;;;29727:36;;29773:26;29816:1:::0;29802:16:::1;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;29773:45;;29860:39;;;;;;;;29883:1;29860:39;;;;;;29896:1;29860:39;;;;::::0;29828:15:::1;:29;29844:12;29828:29;;;;;;;;;;;;;;;:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;29947:135;;;;;;;;29987:10;29947:135;;;;;;30035:1;29947:135;;;;;;30062:9;29947:135;;::::0;29909:21:::1;:35;29931:12;29909:35;;;;;;;;;;;;;;;:173;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;30118:12;30098:45;;;30132:10;30098:45;;;;;;:::i;:::-;;;;;;;;30160:12;30153:19;;;;29577:602:::0;:::o;28916:594::-;29046:14;29074:15;29103:13;29130:26;29231:1;29185:48;;:21;:28;29207:5;29185:28;;;;;;;;;;;;;;;:34;;;;;;;;;;;;:48;;;29181:107;;29256:21;;;;;;;;;;;;;;29181:107;29318:15;:22;29334:5;29318:22;;;;;;;;;;;;;;;:30;;;;;;;;;;;;29362:15;:22;29378:5;29362:22;;;;;;;;;;;;;;;:31;;;;;;;;;;;;29407:21;:28;29429:5;29407:28;;;;;;;;;;;;;;;:34;;;;;;;;;;;;29455:21;:28;29477:5;29455:28;;;;;;;;;;;;;;;:38;;29297:206;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;28916:594;;;;;:::o;27900:847::-;35903:8;:23;;;;;;;;;;;;35899:72;;;35949:11;;;;;;;;;;;;;;35899:72;28081:4:::1;28059:27;;:10;:27;;;28055:87;;28109:22;;;;;;;;;;;;;;28055:87;28170:2;28155:4;;:11;;:17;28151:72;;28195:17;;;;;;;;;;;;;;28151:72;28232:12;28258:4;;28247:26;;;;;;;:::i;:::-;28232:41;;28333:1;28287:48;;:21;:28;28309:5;28287:28;;;;;;;;;;;;;;;:34;;;;;;;;;;;;:48;;::::0;28283:107:::1;;28358:21;;;;;;;;;;;;;;28283:107;28516:18;28537:15;:22;28553:5;28537:22;;;;;;;;;;;;;;;:30;;;;;;;;;;;;28516:51;;;;28618:6;28577:15;:22;28593:5;28577:22;;;;;;;;;;;;;;;:30;;;:48;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;28660:6;28635:14;;:32;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;28701:5;28682:58;;;28708:10;28733:6;28720:10;:19;;;;:::i;:::-;28682:58;;;;;;;:::i;:::-;;;;;;;;28045:702;;27900:847:::0;;;;:::o;696:52::-;;;:::o;23038:2611::-;23168:6;35903:8;:23;;;;;;;;;;;;35899:72;;;35949:11;;;;;;;;;;;;;;35899:72;23186:16:::1;23205:9;23186:28;;23238:15;23267:17:::0;23298:18:::1;23329:33;23352:5;23359:2;23329:22;:33::i;:::-;23224:138;;;;;;23373:28;23418:2;:11;;;23404:26;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23373:57;;23445:9;23440:129;23464:2;:11;;;23460:15;;:1;:15;23440:129;;;23542:10;23554:1;23531:25;;;;;;;;;:::i;:::-;;;;;;;;;;;;;23521:36;;;;;;23513:45;;23496:11;23508:1;23496:14;;;;;;;;:::i;:::-;;;;;;;:62;;;::::0;::::1;23477:3;;;;;;;23440:129;;;;23586:20;:31;23607:9;23586:31;;;;;;;;;;;23579:38;;;23627:19;23656:17:::0;23712:32:::1;;;23758:9;23781:11;23676:126;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23656:146;;24277:4;24251:8;:23;;;:30;;;;;;;;;;;;;;;;;;24291:12;24306:54;24323:2;:19;;;24306:54;;24344:2;:9;;;24355:4;24306:16;:54::i;:::-;24291:69;;24396:5;24370:8;:23;;;:31;;;;;;;;;;;;;;;;;;24471:15;24489;:25;24505:2;:8;;;24489:25;;;;;;;;;;;;;;;:34;;;;;;;;;;;;24471:52;;24571:1;24533:15;:25;24549:2;:8;;;24533:25;;;;;;;;;;;;;;;:34;;;:39;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;25073:14;25090:162;25126:8;25148;:35;;;;;;;;;;;;25090:162;;25197:20;25208:8;25197:10;:20::i;:::-;25231:11;25090:22;:162::i;:::-;25073:179;;25302:7;25266:43;;:15;:25;25282:2;:8;;;25266:25;;;;;;;;;;;;;;;:33;;;;;;;;;;;;:43;;;25262:102;;;25332:21;;;;;;;;;;;;;;25262:102;25410:7;25373:15;:25;25389:2;:8;;;25373:25;;;;;;;;;;;;;;;:33;;;:44;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;25475:7;25427:20;:44;25448:13;:22;25462:7;25448:22;;;;;;;;;;;;;;;;;;;;;25427:44;;;;;;;;;;;;;;;;:55;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;25578:9;25557:61;25589:10;25601:7;25610;25557:61;;;;;;;;:::i;:::-;;;;;;;;25635:7;25628:14;;;;;;;;;;;;23038:2611:::0;;;;:::o;11672:452::-;11753:34;11801:18;11833:23;11870:33;11949:8;:36;;;;;;;;;;;;11999:8;:20;;;;;;;;;;;;12033:8;:25;;;;;;;;;;;;12072:8;:35;;;;;;;;;;;;11928:189;;;;;;;;11672:452;;;;:::o;9664:148::-;9747:7;9794:9;9783:21;;;;;;;;:::i;:::-;;;;;;;;;;;;;9773:32;;;;;;9766:39;;9664:148;;;:::o;21985:701::-;22043:6;22061:19;22083:11;22061:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22113:8;22108:13;;:1;:13;;:44;;;;;22137:2;:15;;;22125:27;;:8;:27;;;;22108:44;22104:115;;;22175:2;:33;;;22168:40;;;;;22104:115;22250:8;22232:26;;:2;:15;;;:26;;;:57;;;;;22274:2;:15;;;22262:27;;:8;:27;;;;22232:57;22228:128;;;22312:2;:33;;;22305:40;;;;;22228:128;22387:8;22369:26;;:2;:15;;;:26;;;:57;;;;;22411:2;:15;;;22399:27;;:8;:27;;;;22369:57;22365:128;;;22449:2;:33;;;22442:40;;;;;22365:128;22524:8;22506:26;;:2;:15;;;:26;;;:57;;;;;22548:2;:15;;;22536:27;;:8;:27;;;;22506:57;22502:128;;;22586:2;:33;;;22579:40;;;;;22502:128;22646:2;:33;;;22639:40;;;21985:701;;;;:::o;33555:275::-;33662:5;35617:13;35633:21;:28;35655:5;35633:28;;;;;;;;;;;;;;;:34;;;;;;;;;;;;35617:50;;35698:1;35681:19;;:5;:19;;;35677:78;;35723:21;;;;;;;;;;;;;;35677:78;35782:5;35768:19;;:10;:19;;;35764:78;;35825:5;35810:21;;;;;;;;;;;:::i;:::-;;;;;;;;35764:78;35903:8:::1;:23;;;;;;;;;;;;35899:72;;;35949:11;;;;;;;;;;;;;;35899:72;33696:27:::2;33717:5;33696:20;:27::i;:::-;33692:87;;;33746:22;;;;;;;;;;;;;;33692:87;33788:35;33813:5;33820:2;33788:24;:35::i;:::-;35607:252:::0;33555:275;;;:::o;13958:587::-;1941:20:10;:18;:20::i;:::-;14021:23:18::1;14047:4;:14;;;14070:4;14047:29;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14021:55;;14086:23;14120:14;;;;;;;;;;;14112:23;;14086:49;;14167:15;14149;:33;14145:129;;;14230:15;14247;14205:58;;;;;;;;;;;;:::i;:::-;;;;;;;;14145:129;14305:15;14287;:33;14283:198;;;14336:14;14371:15;14353;:33;;;;:::i;:::-;14336:50;;14400:4;:13;;;14414:2;14418:6;14400:25;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;14444:26;14459:2;14463:6;14444:26;;;;;;;:::i;:::-;;;;;;;;14322:159;14283:198;14011:534;;13958:587:::0;:::o;34848:717::-;34936:4;34952:35;34990:21;:28;35012:5;34990:28;;;;;;;;;;;;;;;34952:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;35033:9;35028:509;35052:9;:19;;;:26;35048:1;:30;35028:509;;;35104:9;35099:428;35123:18;:25;;;;35119:1;:29;35099:428;;;35174:13;35193:212;35231:18;35250:1;35231:21;;;;;;;;:::i;:::-;;;;;;;;;;35274:9;:19;;;35294:1;35274:22;;;;;;;;:::i;:::-;;;;;;;;35318:5;35345:11;:35;35357:9;:19;;;35377:1;35357:22;;;;;;;;:::i;:::-;;;;;;;;35345:35;;;;;;;;;;;;;;;:42;35381:5;35345:42;;;;;;;;;;;;;;;;;;;;;;;;;35193:16;:212::i;:::-;35173:232;;;35458:1;35427:32;;:20;:27;35448:5;35427:27;;;;;;;;;;;;:32;35423:90;;35490:4;35483:11;;;;;;;;35423:90;35155:372;35150:3;;;;;;;35099:428;;;;35080:3;;;;;;;35028:509;;;;35553:5;35546:12;;;34848:717;;;;:::o;811:98:10:-;1941:20;:18;:20::i;:::-;882:22:::1;901:2;882:18;:22::i;:::-;811:98:::0;:::o;1715:111::-;1787:7;;;;;;;;;;1773:21;;:10;:21;;;1765:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;1715:111::o;33836:784:18:-;35903:8;:23;;;;;;;;;;;;35899:72;;;35949:11;;;;;;;;;;;;;;35899:72;33949:35:::1;33987:21;:28;34009:5;33987:28;;;;;;;;;;;;;;;33949:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;34025:23;34051:15;:22;34067:5;34051:22;;;;;;;;;;;;;;;34025:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;34083:14;34100:3;:11;;;34083:28;;34210:9;34205:131;34229:9;:19;;;:26;34225:1;:30;34205:131;;;34283:11;:35;34295:9;:19;;;34315:1;34295:22;;;;;;;;:::i;:::-;;;;;;;;34283:35;;;;;;;;;;;;;;;:42;34319:5;34283:42;;;;;;;;;;;;;;;;34276:49;;;;;;;;;;;34257:3;;;;;;;34205:131;;;;34352:21;:28;34374:5;34352:28;;;;;;;;;;;;;;;;34345:35:::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;34397:15;:22;34413:5;34397:22;;;;;;;;;;;;;;;;34390:29:::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;34447:7;34429:14;;:25;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;34469:4;:13;;;34483:2;34495:7;34487:16;;34469:35;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;34464:95;;34527:21;;;;;;;;;;;;;;34464:95;34594:5;34573:40;;;34601:2;34605:7;34573:40;;;;;;;:::i;:::-;;;;;;;;33939:681;;;33836:784:::0;;:::o;17965:359::-;18112:7;18121;18140:15;18200:7;18209:6;18217:5;18224;18189:41;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;18179:52;;;;;;18158:83;;18140:101;;18288:7;18297;18277:28;;;;;;;;;:::i;:::-;;;;;;;;;;;;;18267:39;;;;;;18259:48;;18309:7;18251:66;;;;;17965:359;;;;;;;:::o;1493:254:0:-;1542:7;1557:15;1575:13;1557:31;;878:5;1598:7;:31;:73;;;;942:6;1633:7;:38;1598:73;1594:124;;;569:42;1688:21;;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1681:30;;;;;1594:124;1730:12;1723:19;;;1493:254;;:::o;20186:1644:18:-;20335:15;20352:17;20371:18;20415:19;20425:5;:8;;;20415:9;:19::i;:::-;20405:29;;20499:14;20516:13;:22;20530:7;20516:22;;;;;;;;;;;;;;;;;;;;;20499:39;;20570:1;20552:20;;:6;:20;;;20548:83;;20612:7;20595:25;;;;;;;;;;;:::i;:::-;;;;;;;;20548:83;20681:7;20690:5;:10;;;20670:31;;;;;;;;;:::i;:::-;;;;;;;;;;;;;20660:42;;;;;;20652:51;;20640:63;;20713:18;20734:20;:31;20755:9;20734:31;;;;;;;;;;;;20713:52;;20793:1;20779:15;;:10;:15;20775:77;;20817:24;;;;;;;;;;;;;;20775:77;20963:9;20994:2;:11;;;21027:2;:8;;;21057:2;:19;;;21098:2;:11;;;21131:2;:9;;;20931:227;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;20904:268;;;;;;20878:10;:294;20861:375;;21204:21;;;;;;;;;;;;;;20861:375;21246:17;21266:43;21297:2;:11;;;21266:30;:43::i;:::-;21246:63;;21344:1;21336:10;;21323:9;:23;21319:221;;21374:15;:28;;;21403:2;:11;;;21374:41;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;21362:53;;21454:1;21446:10;;21433:9;:23;21429:101;;21503:2;:11;;;21483:32;;;;;;;;;;;:::i;:::-;;;;;;;;21429:101;21319:221;21630:18;21699:5;:10;;;21711:9;21682:39;;;;;;;;;:::i;:::-;;;;;;;;;;;;;21672:50;;;;;;21651:81;;21630:102;;21755:46;21783:5;21790:10;21755:27;:46::i;:::-;21742:59;;20395:1435;;;;20186:1644;;;;;:::o;18489:1691::-;18616:12;18728:5;19259:24;19256:1;19253:31;19250:79;;;19313:1;19310;19303:12;19250:79;19354:24;19351:1;19347:32;19342:37;;19528:9;19522:2;19519:1;19515:10;19512:1;19508:18;19505:33;19495:89;;19568:1;19565;19558:12;19495:89;19725:6;19713:19;19703:75;;19762:1;19759;19752:12;19703:75;20125:1;20106;20083:4;20077:11;20054:4;20048;20044:15;20025:1;20001:6;19974:9;19952:188;19941:199;;18705:1445;18489:1691;;;;;:::o;25705:1062::-;25909:6;25927:21;25975:13;:11;:13::i;:::-;25958:30;;26020:1;26002:14;:19;25998:92;;26064:14;26044:35;;;;;;;;;;;:::i;:::-;;;;;;;;25998:92;26164:17;26184:41;:39;:41::i;:::-;26164:61;;26311:20;26479:14;26457:9;26428;26417:8;26388:26;:37;;;;:::i;:::-;:49;;;;:::i;:::-;26355:13;:83;;;;:::i;:::-;:111;;;;:::i;:::-;26335:4;:132;;;;:::i;:::-;26334:160;;;;:::i;:::-;26311:183;;26504:11;26533:25;26525:34;;26518:4;:41;;;;:::i;:::-;26504:55;;26596:3;26589:4;:10;;;;:::i;:::-;26573:12;:27;26569:149;;;26623:17;;;;;;;;;;;;;;26569:149;26756:3;26741:12;:18;;;;:::i;:::-;26727:33;;;;;;25705:1062;;;;;;:::o;1482:188:10:-;1550:10;1544:16;;:2;:16;;;1536:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;1612:2;1595:14;;:19;;;;;;;;;;;;;;;;;;1662:2;1626:39;;1653:7;;;;;;;;;;1626:39;;;;;;;;;;;;1482:188;:::o;1019:470:0:-;1084:7;1099:15;1117:13;1099:31;;878:5;1147:7;:31;:79;;;;942:6;1188:7;:38;1147:79;:128;;;;1008:6;1236:7;:39;1147:128;1136:314;;;1329:3;1314:11;1295:30;;:16;:14;:16::i;:::-;:30;;;;:::i;:::-;1294:38;:73;;;;1351:16;:14;:16::i;:::-;1336:11;:31;;;;1294:73;1290:107;;;1379:9;;;;;;1290:107;569:42;1411:19;;;1431:11;1411:32;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1404:39;;;;;1136:314;1472:11;1462:22;;;1455:29;;;1019:470;;;;:::o;25920:396:16:-;26010:14;26032:190;26054:5;:8;;;26070:5;:11;;;26089:5;:7;;;26104:5;:7;;;26119:4;26131:5;:14;;;26153:5;:19;;;26180:5;:18;;;26206:5;:10;;;26032:14;:190::i;:::-;25237:1;26297:5;:11;;;26255:54;;;;;;;;;:::i;:::-;;;;;;;;;;;;;26245:65;;;;;;26237:74;;26228:83;;25920:396;;;;:::o;26773:536:18:-;26818:6;26836:23;26862:8;:25;;;;;;;;;;;;26836:51;;26897:18;26937:1;26918:16;:20;;;26897:41;;26948:17;26975:21;27042:13;:29;;;:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;27006:67;;;;;;;;;;;;;;;;;27141:13;:63;;;;;27195:9;27177:15;:27;;;;:::i;:::-;27158:16;:46;;;27141:63;27137:135;;;27237:24;;27220:41;;27137:135;27288:14;27281:21;;;;;;26773:536;:::o;1751:257:0:-;1807:7;1822:15;1840:13;1822:31;;878:5;1863:7;:31;:73;;;;942:6;1898:7;:38;1863:73;1859:131;;;719:42;1953:28;;;:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1946:37;;;;;1859:131;2002:1;1995:8;;;1751:257;;:::o;23518:1531:16:-;23808:13;23818:2;23808:9;:13::i;:::-;23800:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;23868:16;23878:5;23868:9;:16::i;:::-;23860:50;;;;;;;;;;;;:::i;:::-;;;;;;;;;23926:24;23936:13;23926:9;:24::i;:::-;23918:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;24000:23;24010:12;24000:9;:23::i;:::-;23992:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;24450:56;24487:1;24490:2;24494:1;24497:8;24450:36;:56::i;:::-;24442:94;;;;;;;;;;;;:::i;:::-;;;;;;;;;24631:22;24656:21;24668:2;24672:4;24656:11;:21::i;:::-;24631:46;;24769:19;24791:71;24809:1;24812:5;24819:13;24834:1;24837:4;24843:12;24857:4;24791:17;:71::i;:::-;24769:93;;24921:16;24940:51;24962:4;24968:2;24972:5;24979:8;24989:1;24940:21;:51::i;:::-;24921:70;;25012:8;25007:1;:13;24999:39;;;;;;;;;;;;:::i;:::-;;;;;;;;;23782:1263;;;23518:1531;;;;;;;;;:::o;9548:363::-;9611:4;7574:66;9751:1;9753;9751:4;;;;;;;:::i;:::-;;;;;;:17;9743:48;;;;;;;;;;;;:::i;:::-;;;;;;;;;7574:66;9805:1;9807;9805:4;;;;;;;:::i;:::-;;;;;;:17;9797:48;;;;;;;;;;;;:::i;:::-;;;;;;;;;7574:66;9876:30;;;;;:::i;:::-;;9889:1;9891;9889:4;;;;;;;:::i;:::-;;;;;;9883:1;9885;9883:4;;;;;;;:::i;:::-;;;;;;9876:30;9858:14;9867:1;9869;9867:4;;;;;;;:::i;:::-;;;;;;9858:8;:14::i;:::-;:48;9851:55;;9548:363;;;:::o;19420:1160::-;19571:4;19694:1;19673:23;;:9;:23;;;19665:47;;;;;;;;;;;;:::i;:::-;;;;;;;;;19720:7;19743:1;19738;19731;19733;19731:4;;;;;;;:::i;:::-;;;;;;:8;;;;;:::i;:::-;;;:13;19730:25;;19753:2;19730:25;;;19748:2;19730:25;19720:35;;19879:18;7340:66;19922:28;;;;;:::i;:::-;;19935:1;19929;19931;19929:4;;;;;;;:::i;:::-;;;;;;19922:28;7340:66;19908:42;19900:51;;19879:72;;19970:23;7340:66;20004:28;;;;;:::i;:::-;;20014:1;20016;20014:4;;;;;;;:::i;:::-;;;;;;20011:1;20004:28;19996:37;;19970:63;;20458:16;20477:56;20487:10;20499:1;20510;20512;20510:4;;;;;;;:::i;:::-;;;;;;20502:13;;20517:15;20477:56;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20458:75;;20560:9;20548:21;;:8;:21;;;20541:28;;;;;;19420:1160;;;;;;:::o;12081:300::-;12162:20;;:::i;:::-;12195:82;11307:1;12266:2;12270:5;12222:54;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;12195:26;:82::i;:::-;12190:87;;12283:94;12291:13;12301:2;12291:9;:13::i;:::-;12283:94;;12319:51;12363:2;12366:1;12363:5;;;;;;;:::i;:::-;;;;;;12346:23;;;;;;;;:::i;:::-;;;;;;;;;;;;;12319:26;:51::i;:::-;12314:56;;12283:94;;;12081:300;;;;:::o;21063:635::-;21285:17;;:::i;:::-;7574:66;21422:10;21433:1;21422:13;;;;;;;:::i;:::-;;;;;;:26;;;;;:::i;:::-;;;7574:66;21390:10;21401:1;21390:13;;;;;;;:::i;:::-;;;;;;:26;;;;;:::i;:::-;;;21389:60;21381:103;;;;;;;;;;;;:::i;:::-;;;;;;;;;21500:30;21512:2;21516:1;21519:10;21500:11;:30::i;:::-;21492:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;21573:30;21585:2;21589:1;21592:10;21573:11;:30::i;:::-;21565:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;21646:41;21658:10;21670;21682:4;21646:11;:41::i;:::-;21639:48;;21063:635;;;;;;;;;:::o;22614:321::-;22802:9;21895:1;22899:4;22905:2;22909:5;22916:1;22919:8;22844:84;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;22834:95;;;;;;22826:104;;22819:111;;22614:321;;;;;;;:::o;9253:259::-;9305:7;9401:14;7574:66;9418:47;;;;;:::i;:::-;;7574:66;9428:24;;;;;:::i;:::-;;9438:1;9435;9428:24;9425:1;9418:47;9401:64;;7574:66;9478:29;;;;;:::i;:::-;;9493:1;9485:6;9478:29;9471:36;;;9253:259;;;:::o;10774:366::-;10849:19;;:::i;:::-;10901:12;10911:1;10901:9;:12::i;:::-;10894:1;10896;10894:4;;;;;;;:::i;:::-;;;;;:19;;;;;10928:26;10939:14;10948:1;10950;10948:4;;;;;;;:::i;:::-;;;;;;10939:8;:14::i;:::-;10928:10;:26::i;:::-;10921:1;10923;10921:4;;;;;;;:::i;:::-;;;;;:33;;;;;10978:1;10973;10966;10968;10966:4;;;;;;;:::i;:::-;;;;;;:8;;;;;:::i;:::-;;;:13;10962:168;;11117:1;11119;11117:4;;;;;;;:::i;:::-;;;;;;7574:66;11104:17;11097:1;11099;11097:4;;;;;;;:::i;:::-;;;;;:24;;;;;10962:168;10774:366;;;:::o;12873:1013::-;13008:13;13047:1;13037:6;:11;13029:35;;;;;;;;;;;;:::i;:::-;;;;;;;;;13109:9;13121:12;13134:1;13121:15;;;;;;;:::i;:::-;;;;;;13109:27;;13172:7;13205:1;13200;13182:12;13195:1;13182:15;;;;;;;:::i;:::-;;;;;;:19;;;;:::i;:::-;:24;:34;;13214:2;13182:34;;;13209:2;13182:34;13172:44;;13565:20;7340:66;13596:30;;;;;:::i;:::-;;13611:1;13603:6;13596:30;13588:39;;13565:62;;13633:14;13650:50;13668:1;13660:10;;13672:1;13683;13675:10;;13687:12;13650:50;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13633:67;;13766:16;13836:7;13819:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;13809:36;;;;;;13801:45;;13766:82;;13872:8;13862:18;;:6;:18;;;13854:27;;;;;;;12873:1013;;;;;:::o;18775:526::-;18893:17;;:::i;:::-;18918:9;18933;18948;18975:43;18991:2;18994:1;18991:5;;;;;;;:::i;:::-;;;;;;18998:2;19001:1;18998:5;;;;;;;:::i;:::-;;;;;;19005:2;19008:1;19005:5;;;;;;;:::i;:::-;;;;;;19012:2;19015:1;19012:5;;;;;;;:::i;:::-;;;;;;18975:15;:43::i;:::-;18963:55;;;;;;;;;;;;19063:1;7574:66;19032:27;;;;;:::i;:::-;;19042:4;19039:1;19032:27;:32;19024:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;19231:65;;;;;;;;7574:66;19239:27;;;;;:::i;:::-;;19249:4;19246:1;19239:27;19231:65;;;;7574:66;19268:27;;;;;:::i;:::-;;19278:4;19275:1;19268:27;19231:65;;;;;;;;18775:526;;;;;:::o;9966:394::-;10024:10;10065:1;10055:12;;;;;;10047:21;;10042:26;;10271:85;7574:66;10278:2;:16;10271:85;;10344:2;10327:20;;;;;;;;:::i;:::-;;;;;;;;;;;;;10317:31;;;;;;10309:40;;10304:45;;10271:85;;;9966:394;;;:::o;9088:105::-;9142:7;9164:24;9174:1;9022;9016;7574:66;9003:14;;;;:::i;:::-;9002:21;;9164:9;:24::i;:::-;9157:31;;9088:105;;;:::o;16396:2110::-;16512:10;16524;16536;17242;17254;17269:1;17272;17241:33;;;;17413:10;7574:66;17426:39;;;;;:::i;:::-;;17450:2;7574:66;17437:15;17433:2;17426:39;17413:52;;17473:10;7574:66;17486:39;;;;;:::i;:::-;;17510:2;7574:66;17497:15;17493:2;17486:39;17473:52;;17534:10;17648:29;17662:2;17666;17670;17674;17648:13;:29::i;:::-;17637:40;;;;;;;;17719:29;17733:2;17737;17741;17745;17719:13;:29::i;:::-;17708:40;;;;;;;;17793:29;17807:2;17811;17815;17819;17793:13;:29::i;:::-;17782:40;;;;;;;;17860:10;17976:29;17990:2;17994;17998;18002;17976:13;:29::i;:::-;17965:40;;;;;;;;18033:29;18047:2;18051;18055;18059;18033:13;:29::i;:::-;18022:40;;;;;;;;18109:29;18123:2;18127;18131;18135;18109:13;:29::i;:::-;18098:40;;;;;;;;18188:2;18182;:8;18178:318;;7574:66;18277:26;;;;;:::i;:::-;;18288:2;18284;18277:26;18272:31;;7574:66;18318:26;;;;;:::i;:::-;;18329:2;18325;18318:26;18313:31;;7574:66;18359:26;;;;;:::i;:::-;;18370:2;18366;18359:26;18354:31;;18178:318;;;18485:2;18480:7;;18178:318;16554:1948;;;;;;16396:2110;;;;;;;;:::o;7813:976::-;7887:22;7917:18;7941:41;;:::i;:::-;7689:4;7988:23;8012:1;7988:26;;;;;;;:::i;:::-;;;;;:46;;;;;7689:4;8058:23;8082:1;8058:26;;;;;;;:::i;:::-;;;;;:46;;;;;7689:4;8132:23;8156:1;8132:26;;;;;;;:::i;:::-;;;;;:46;;;;;8234:4;8205:23;8229:1;8205:26;;;;;;;:::i;:::-;;;;;:33;;;;;8273:8;8244:23;8268:1;8244:26;;;;;;;:::i;:::-;;;;;:37;;;;;7574:66;8287:23;8311:1;8287:26;;;;;;;:::i;:::-;;;;;:39;;;;;8332:24;;:::i;:::-;8648:4;8632:6;8577:4;8544:23;8500:4;8466:1;8462:6;8442:246;8428:260;;8717:1;8703:10;:15;8699:64;;8728:28;;;;;;;;;;:::i;:::-;;;;;;;;8699:64;8775:6;8782:1;8775:9;;;;;;;:::i;:::-;;;;;;8768:16;;;;;7813:976;;;;:::o;14528:216::-;14642:10;14654;7574:66;14684:26;;;;;:::i;:::-;;14695:2;14691;14684:26;7574:66;14712:26;;;;;:::i;:::-;;14723:2;14719;14712:26;14672:67;;;;;;;;14528:216;;;;;;;:::o;13976:466::-;14090:10;14102;14138:12;7574:66;14153:26;;;;;:::i;:::-;;14164:2;14160;14153:26;14138:41;;14298:12;7574:66;14313:39;;;;;:::i;:::-;;14337:2;14333;7574:66;14320:15;14313:39;14298:54;;7574:66;14372:30;;;;;:::i;:::-;;14385:4;14379;14372:30;7574:66;14404:26;;;;;:::i;:::-;;14415:2;14411;14404:26;14360:71;;;;;;;;14120:318;;13976:466;;;;;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:89:20:-;43:7;83:6;76:5;72:18;61:29;;7:89;;;:::o;102:115::-;187:23;204:5;187:23;:::i;:::-;182:3;175:36;102:115;;:::o;223:93::-;259:7;299:10;292:5;288:22;277:33;;223:93;;;:::o;322:115::-;407:23;424:5;407:23;:::i;:::-;402:3;395:36;322:115;;:::o;443:114::-;510:6;544:5;538:12;528:22;;443:114;;;:::o;563:184::-;662:11;696:6;691:3;684:19;736:4;731:3;727:14;712:29;;563:184;;;;:::o;753:132::-;820:4;843:3;835:11;;873:4;868:3;864:14;856:22;;753:132;;;:::o;891:77::-;928:7;957:5;946:16;;891:77;;;:::o;974:108::-;1051:24;1069:5;1051:24;:::i;:::-;1046:3;1039:37;974:108;;:::o;1088:179::-;1157:10;1178:46;1220:3;1212:6;1178:46;:::i;:::-;1256:4;1251:3;1247:14;1233:28;;1088:179;;;;:::o;1273:113::-;1343:4;1375;1370:3;1366:14;1358:22;;1273:113;;;:::o;1422:732::-;1541:3;1570:54;1618:5;1570:54;:::i;:::-;1640:86;1719:6;1714:3;1640:86;:::i;:::-;1633:93;;1750:56;1800:5;1750:56;:::i;:::-;1829:7;1860:1;1845:284;1870:6;1867:1;1864:13;1845:284;;;1946:6;1940:13;1973:63;2032:3;2017:13;1973:63;:::i;:::-;1966:70;;2059:60;2112:6;2059:60;:::i;:::-;2049:70;;1905:224;1892:1;1889;1885:9;1880:14;;1845:284;;;1849:14;2145:3;2138:10;;1546:608;;;1422:732;;;;:::o;2160:585::-;2355:4;2393:2;2382:9;2378:18;2370:26;;2406:69;2472:1;2461:9;2457:17;2448:6;2406:69;:::i;:::-;2485:70;2551:2;2540:9;2536:18;2527:6;2485:70;:::i;:::-;2602:9;2596:4;2592:20;2587:2;2576:9;2572:18;2565:48;2630:108;2733:4;2724:6;2630:108;:::i;:::-;2622:116;;2160:585;;;;;;:::o;2751:75::-;2784:6;2817:2;2811:9;2801:19;;2751:75;:::o;2832:117::-;2941:1;2938;2931:12;2955:117;3064:1;3061;3054:12;3078:101;3114:7;3154:18;3147:5;3143:30;3132:41;;3078:101;;;:::o;3185:120::-;3257:23;3274:5;3257:23;:::i;:::-;3250:5;3247:34;3237:62;;3295:1;3292;3285:12;3237:62;3185:120;:::o;3311:137::-;3356:5;3394:6;3381:20;3372:29;;3410:32;3436:5;3410:32;:::i;:::-;3311:137;;;;:::o;3454:327::-;3512:6;3561:2;3549:9;3540:7;3536:23;3532:32;3529:119;;;3567:79;;:::i;:::-;3529:119;3687:1;3712:52;3756:7;3747:6;3736:9;3732:22;3712:52;:::i;:::-;3702:62;;3658:116;3454:327;;;;:::o;3787:126::-;3824:7;3864:42;3857:5;3853:54;3842:65;;3787:126;;;:::o;3919:96::-;3956:7;3985:24;4003:5;3985:24;:::i;:::-;3974:35;;3919:96;;;:::o;4021:122::-;4094:24;4112:5;4094:24;:::i;:::-;4087:5;4084:35;4074:63;;4133:1;4130;4123:12;4074:63;4021:122;:::o;4149:139::-;4195:5;4233:6;4220:20;4211:29;;4249:33;4276:5;4249:33;:::i;:::-;4149:139;;;;:::o;4294:472::-;4361:6;4369;4418:2;4406:9;4397:7;4393:23;4389:32;4386:119;;;4424:79;;:::i;:::-;4386:119;4544:1;4569:52;4613:7;4604:6;4593:9;4589:22;4569:52;:::i;:::-;4559:62;;4515:116;4670:2;4696:53;4741:7;4732:6;4721:9;4717:22;4696:53;:::i;:::-;4686:63;;4641:118;4294:472;;;;;:::o;4772:115::-;4857:23;4874:5;4857:23;:::i;:::-;4852:3;4845:36;4772:115;;:::o;4893:218::-;4984:4;5022:2;5011:9;5007:18;4999:26;;5035:69;5101:1;5090:9;5086:17;5077:6;5035:69;:::i;:::-;4893:218;;;;:::o;5117:117::-;5226:1;5223;5216:12;5258:249;5329:8;5360:6;5348:18;;5413:3;5405:4;5399;5395:15;5385:8;5381:30;5378:39;5375:126;;;5420:79;;:::i;:::-;5375:126;5258:249;;;;:::o;5513:379::-;5597:6;5646:2;5634:9;5625:7;5621:23;5617:32;5614:119;;;5652:79;;:::i;:::-;5614:119;5772:1;5797:78;5867:7;5858:6;5847:9;5843:22;5797:78;:::i;:::-;5787:88;;5743:142;5513:379;;;;:::o;5898:77::-;5935:7;5964:5;5953:16;;5898:77;;;:::o;5981:118::-;6068:24;6086:5;6068:24;:::i;:::-;6063:3;6056:37;5981:118;;:::o;6105:222::-;6198:4;6236:2;6225:9;6221:18;6213:26;;6249:71;6317:1;6306:9;6302:17;6293:6;6249:71;:::i;:::-;6105:222;;;;:::o;6333:218::-;6424:4;6462:2;6451:9;6447:18;6439:26;;6475:69;6541:1;6530:9;6526:17;6517:6;6475:69;:::i;:::-;6333:218;;;;:::o;6557:99::-;6609:6;6643:5;6637:12;6627:22;;6557:99;;;:::o;6662:169::-;6746:11;6780:6;6775:3;6768:19;6820:4;6815:3;6811:14;6796:29;;6662:169;;;;:::o;6837:246::-;6918:1;6928:113;6942:6;6939:1;6936:13;6928:113;;;7027:1;7022:3;7018:11;7012:18;7008:1;7003:3;6999:11;6992:39;6964:2;6961:1;6957:10;6952:15;;6928:113;;;7075:1;7066:6;7061:3;7057:16;7050:27;6899:184;6837:246;;;:::o;7089:102::-;7130:6;7181:2;7177:7;7172:2;7165:5;7161:14;7157:28;7147:38;;7089:102;;;:::o;7197:377::-;7285:3;7313:39;7346:5;7313:39;:::i;:::-;7368:71;7432:6;7427:3;7368:71;:::i;:::-;7361:78;;7448:65;7506:6;7501:3;7494:4;7487:5;7483:16;7448:65;:::i;:::-;7538:29;7560:6;7538:29;:::i;:::-;7533:3;7529:39;7522:46;;7289:285;7197:377;;;;:::o;7580:313::-;7693:4;7731:2;7720:9;7716:18;7708:26;;7780:9;7774:4;7770:20;7766:1;7755:9;7751:17;7744:47;7808:78;7881:4;7872:6;7808:78;:::i;:::-;7800:86;;7580:313;;;;:::o;7899:60::-;7927:3;7948:5;7941:12;;7899:60;;;:::o;7965:142::-;8015:9;8048:53;8066:34;8075:24;8093:5;8075:24;:::i;:::-;8066:34;:::i;:::-;8048:53;:::i;:::-;8035:66;;7965:142;;;:::o;8113:126::-;8163:9;8196:37;8227:5;8196:37;:::i;:::-;8183:50;;8113:126;;;:::o;8245:152::-;8321:9;8354:37;8385:5;8354:37;:::i;:::-;8341:50;;8245:152;;;:::o;8403:183::-;8516:63;8573:5;8516:63;:::i;:::-;8511:3;8504:76;8403:183;;:::o;8592:274::-;8711:4;8749:2;8738:9;8734:18;8726:26;;8762:97;8856:1;8845:9;8841:17;8832:6;8762:97;:::i;:::-;8592:274;;;;:::o;8872:76::-;8908:7;8937:5;8926:16;;8872:76;;;:::o;8954:115::-;9039:23;9056:5;9039:23;:::i;:::-;9034:3;9027:36;8954:115;;:::o;9075:218::-;9166:4;9204:2;9193:9;9189:18;9181:26;;9217:69;9283:1;9272:9;9268:17;9259:6;9217:69;:::i;:::-;9075:218;;;;:::o;9299:::-;9390:4;9428:2;9417:9;9413:18;9405:26;;9441:69;9507:1;9496:9;9492:17;9483:6;9441:69;:::i;:::-;9299:218;;;;:::o;9523:120::-;9595:23;9612:5;9595:23;:::i;:::-;9588:5;9585:34;9575:62;;9633:1;9630;9623:12;9575:62;9523:120;:::o;9649:137::-;9694:5;9732:6;9719:20;9710:29;;9748:32;9774:5;9748:32;:::i;:::-;9649:137;;;;:::o;9792:120::-;9864:23;9881:5;9864:23;:::i;:::-;9857:5;9854:34;9844:62;;9902:1;9899;9892:12;9844:62;9792:120;:::o;9918:137::-;9963:5;10001:6;9988:20;9979:29;;10017:32;10043:5;10017:32;:::i;:::-;9918:137;;;;:::o;10061:120::-;10133:23;10150:5;10133:23;:::i;:::-;10126:5;10123:34;10113:62;;10171:1;10168;10161:12;10113:62;10061:120;:::o;10187:137::-;10232:5;10270:6;10257:20;10248:29;;10286:32;10312:5;10286:32;:::i;:::-;10187:137;;;;:::o;10330:117::-;10439:1;10436;10429:12;10453:180;10501:77;10498:1;10491:88;10598:4;10595:1;10588:15;10622:4;10619:1;10612:15;10639:281;10722:27;10744:4;10722:27;:::i;:::-;10714:6;10710:40;10852:6;10840:10;10837:22;10816:18;10804:10;10801:34;10798:62;10795:88;;;10863:18;;:::i;:::-;10795:88;10903:10;10899:2;10892:22;10682:238;10639:281;;:::o;10926:129::-;10960:6;10987:20;;:::i;:::-;10977:30;;11016:33;11044:4;11036:6;11016:33;:::i;:::-;10926:129;;;:::o;11184:91::-;11220:7;11260:8;11253:5;11249:20;11238:31;;11184:91;;;:::o;11281:120::-;11353:23;11370:5;11353:23;:::i;:::-;11346:5;11343:34;11333:62;;11391:1;11388;11381:12;11333:62;11281:120;:::o;11407:137::-;11452:5;11490:6;11477:20;11468:29;;11506:32;11532:5;11506:32;:::i;:::-;11407:137;;;;:::o;11591:1867::-;11667:5;11711:6;11699:9;11694:3;11690:19;11686:32;11683:119;;;11721:79;;:::i;:::-;11683:119;11820:23;11836:6;11820:23;:::i;:::-;11811:32;;11928:1;11968:48;12012:3;12003:6;11992:9;11988:22;11968:48;:::i;:::-;11961:4;11954:5;11950:16;11943:74;11853:175;12113:2;12154:48;12198:3;12189:6;12178:9;12174:22;12154:48;:::i;:::-;12147:4;12140:5;12136:16;12129:74;12038:176;12299:2;12340:48;12384:3;12375:6;12364:9;12360:22;12340:48;:::i;:::-;12333:4;12326:5;12322:16;12315:74;12224:176;12485:2;12526:48;12570:3;12561:6;12550:9;12546:22;12526:48;:::i;:::-;12519:4;12512:5;12508:16;12501:74;12410:176;12671:3;12713:48;12757:3;12748:6;12737:9;12733:22;12713:48;:::i;:::-;12706:4;12699:5;12695:16;12688:74;12596:177;12840:3;12882:48;12926:3;12917:6;12906:9;12902:22;12882:48;:::i;:::-;12875:4;12868:5;12864:16;12857:74;12783:159;13009:3;13051:48;13095:3;13086:6;13075:9;13071:22;13051:48;:::i;:::-;13044:4;13037:5;13033:16;13026:74;12952:159;13178:3;13220:48;13264:3;13255:6;13244:9;13240:22;13220:48;:::i;:::-;13213:4;13206:5;13202:16;13195:74;13121:159;13347:3;13391:48;13435:3;13426:6;13415:9;13411:22;13391:48;:::i;:::-;13382:6;13375:5;13371:18;13364:76;13290:161;11591:1867;;;;:::o;13464:1101::-;13590:6;13598;13606;13614;13622;13630;13679:3;13667:9;13658:7;13654:23;13650:33;13647:120;;;13686:79;;:::i;:::-;13647:120;13806:1;13831:52;13875:7;13866:6;13855:9;13851:22;13831:52;:::i;:::-;13821:62;;13777:116;13932:2;13958:52;14002:7;13993:6;13982:9;13978:22;13958:52;:::i;:::-;13948:62;;13903:117;14059:2;14085:52;14129:7;14120:6;14109:9;14105:22;14085:52;:::i;:::-;14075:62;;14030:117;14186:2;14212:52;14256:7;14247:6;14236:9;14232:22;14212:52;:::i;:::-;14202:62;;14157:117;14313:3;14340:52;14384:7;14375:6;14364:9;14360:22;14340:52;:::i;:::-;14330:62;;14284:118;14441:3;14468:80;14540:7;14531:6;14520:9;14516:22;14468:80;:::i;:::-;14458:90;;14412:146;13464:1101;;;;;;;;:::o;14571:122::-;14644:24;14662:5;14644:24;:::i;:::-;14637:5;14634:35;14624:63;;14683:1;14680;14673:12;14624:63;14571:122;:::o;14699:139::-;14745:5;14783:6;14770:20;14761:29;;14799:33;14826:5;14799:33;:::i;:::-;14699:139;;;;:::o;14844:903::-;14935:6;14943;14951;14959;14967;15016:3;15004:9;14995:7;14991:23;14987:33;14984:120;;;15023:79;;:::i;:::-;14984:120;15143:1;15168:53;15213:7;15204:6;15193:9;15189:22;15168:53;:::i;:::-;15158:63;;15114:117;15270:2;15296:52;15340:7;15331:6;15320:9;15316:22;15296:52;:::i;:::-;15286:62;;15241:117;15397:2;15423:52;15467:7;15458:6;15447:9;15443:22;15423:52;:::i;:::-;15413:62;;15368:117;15524:2;15550:52;15594:7;15585:6;15574:9;15570:22;15550:52;:::i;:::-;15540:62;;15495:117;15651:3;15678:52;15722:7;15713:6;15702:9;15698:22;15678:52;:::i;:::-;15668:62;;15622:118;14844:903;;;;;;;;:::o;15753:115::-;15838:23;15855:5;15838:23;:::i;:::-;15833:3;15826:36;15753:115;;:::o;15874:1072::-;16173:4;16211:3;16200:9;16196:19;16188:27;;16225:69;16291:1;16280:9;16276:17;16267:6;16225:69;:::i;:::-;16304:70;16370:2;16359:9;16355:18;16346:6;16304:70;:::i;:::-;16384;16450:2;16439:9;16435:18;16426:6;16384:70;:::i;:::-;16464;16530:2;16519:9;16515:18;16506:6;16464:70;:::i;:::-;16544:71;16610:3;16599:9;16595:19;16586:6;16544:71;:::i;:::-;16625;16691:3;16680:9;16676:19;16667:6;16625:71;:::i;:::-;16706;16772:3;16761:9;16757:19;16748:6;16706:71;:::i;:::-;16787;16853:3;16842:9;16838:19;16829:6;16787:71;:::i;:::-;16868;16934:3;16923:9;16919:19;16910:6;16868:71;:::i;:::-;15874:1072;;;;;;;;;;;;:::o;16952:109::-;16988:7;17028:26;17021:5;17017:38;17006:49;;16952:109;;;:::o;17067:120::-;17139:23;17156:5;17139:23;:::i;:::-;17132:5;17129:34;17119:62;;17177:1;17174;17167:12;17119:62;17067:120;:::o;17193:137::-;17238:5;17276:6;17263:20;17254:29;;17292:32;17318:5;17292:32;:::i;:::-;17193:137;;;;:::o;17336:472::-;17403:6;17411;17460:2;17448:9;17439:7;17435:23;17431:32;17428:119;;;17466:79;;:::i;:::-;17428:119;17586:1;17611:53;17656:7;17647:6;17636:9;17632:22;17611:53;:::i;:::-;17601:63;;17557:117;17713:2;17739:52;17783:7;17774:6;17763:9;17759:22;17739:52;:::i;:::-;17729:62;;17684:117;17336:472;;;;;:::o;17814:157::-;17895:9;17928:37;17959:5;17928:37;:::i;:::-;17915:50;;17814:157;;;:::o;17977:193::-;18095:68;18157:5;18095:68;:::i;:::-;18090:3;18083:81;17977:193;;:::o;18176:284::-;18300:4;18338:2;18327:9;18323:18;18315:26;;18351:102;18450:1;18439:9;18435:17;18426:6;18351:102;:::i;:::-;18176:284;;;;:::o;18466:122::-;18539:24;18557:5;18539:24;:::i;:::-;18532:5;18529:35;18519:63;;18578:1;18575;18568:12;18519:63;18466:122;:::o;18594:139::-;18640:5;18678:6;18665:20;18656:29;;18694:33;18721:5;18694:33;:::i;:::-;18594:139;;;;:::o;18739:329::-;18798:6;18847:2;18835:9;18826:7;18822:23;18818:32;18815:119;;;18853:79;;:::i;:::-;18815:119;18973:1;18998:53;19043:7;19034:6;19023:9;19019:22;18998:53;:::i;:::-;18988:63;;18944:117;18739:329;;;;:::o;19074:118::-;19161:24;19179:5;19161:24;:::i;:::-;19156:3;19149:37;19074:118;;:::o;19198:222::-;19291:4;19329:2;19318:9;19314:18;19306:26;;19342:71;19410:1;19399:9;19395:17;19386:6;19342:71;:::i;:::-;19198:222;;;;:::o;19426:524::-;19519:6;19527;19576:2;19564:9;19555:7;19551:23;19547:32;19544:119;;;19582:79;;:::i;:::-;19544:119;19702:1;19727:53;19772:7;19763:6;19752:9;19748:22;19727:53;:::i;:::-;19717:63;;19673:117;19829:2;19855:78;19925:7;19916:6;19905:9;19901:22;19855:78;:::i;:::-;19845:88;;19800:143;19426:524;;;;;:::o;19956:118::-;20043:24;20061:5;20043:24;:::i;:::-;20038:3;20031:37;19956:118;;:::o;20080:222::-;20173:4;20211:2;20200:9;20196:18;20188:26;;20224:71;20292:1;20281:9;20277:17;20268:6;20224:71;:::i;:::-;20080:222;;;;:::o;20308:115::-;20393:23;20410:5;20393:23;:::i;:::-;20388:3;20381:36;20308:115;;:::o;20429:114::-;20496:6;20530:5;20524:12;20514:22;;20429:114;;;:::o;20549:184::-;20648:11;20682:6;20677:3;20670:19;20722:4;20717:3;20713:14;20698:29;;20549:184;;;;:::o;20739:132::-;20806:4;20829:3;20821:11;;20859:4;20854:3;20850:14;20842:22;;20739:132;;;:::o;20877:108::-;20954:24;20972:5;20954:24;:::i;:::-;20949:3;20942:37;20877:108;;:::o;20991:179::-;21060:10;21081:46;21123:3;21115:6;21081:46;:::i;:::-;21159:4;21154:3;21150:14;21136:28;;20991:179;;;;:::o;21176:113::-;21246:4;21278;21273:3;21269:14;21261:22;;21176:113;;;:::o;21325:732::-;21444:3;21473:54;21521:5;21473:54;:::i;:::-;21543:86;21622:6;21617:3;21543:86;:::i;:::-;21536:93;;21653:56;21703:5;21653:56;:::i;:::-;21732:7;21763:1;21748:284;21773:6;21770:1;21767:13;21748:284;;;21849:6;21843:13;21876:63;21935:3;21920:13;21876:63;:::i;:::-;21869:70;;21962:60;22015:6;21962:60;:::i;:::-;21952:70;;21808:224;21795:1;21792;21788:9;21783:14;;21748:284;;;21752:14;22048:3;22041:10;;21449:608;;;21325:732;;;;:::o;22063:696::-;22286:4;22324:3;22313:9;22309:19;22301:27;;22338:69;22404:1;22393:9;22389:17;22380:6;22338:69;:::i;:::-;22417:70;22483:2;22472:9;22468:18;22459:6;22417:70;:::i;:::-;22497:72;22565:2;22554:9;22550:18;22541:6;22497:72;:::i;:::-;22616:9;22610:4;22606:20;22601:2;22590:9;22586:18;22579:48;22644:108;22747:4;22738:6;22644:108;:::i;:::-;22636:116;;22063:696;;;;;;;:::o;22765:117::-;22874:1;22871;22864:12;22888:117;22997:1;22994;22987:12;23024:552;23081:8;23091:6;23141:3;23134:4;23126:6;23122:17;23118:27;23108:122;;23149:79;;:::i;:::-;23108:122;23262:6;23249:20;23239:30;;23292:18;23284:6;23281:30;23278:117;;;23314:79;;:::i;:::-;23278:117;23428:4;23420:6;23416:17;23404:29;;23482:3;23474:4;23466:6;23462:17;23452:8;23448:32;23445:41;23442:128;;;23489:79;;:::i;:::-;23442:128;23024:552;;;;;:::o;23582:817::-;23670:6;23678;23686;23694;23743:2;23731:9;23722:7;23718:23;23714:32;23711:119;;;23749:79;;:::i;:::-;23711:119;23869:1;23894:53;23939:7;23930:6;23919:9;23915:22;23894:53;:::i;:::-;23884:63;;23840:117;23996:2;24022:53;24067:7;24058:6;24047:9;24043:22;24022:53;:::i;:::-;24012:63;;23967:118;24152:2;24141:9;24137:18;24124:32;24183:18;24175:6;24172:30;24169:117;;;24205:79;;:::i;:::-;24169:117;24318:64;24374:7;24365:6;24354:9;24350:22;24318:64;:::i;:::-;24300:82;;;;24095:297;23582:817;;;;;;;:::o;24405:155::-;24484:9;24517:37;24548:5;24517:37;:::i;:::-;24504:50;;24405:155;;;:::o;24566:189::-;24682:66;24742:5;24682:66;:::i;:::-;24677:3;24670:79;24566:189;;:::o;24761:280::-;24883:4;24921:2;24910:9;24906:18;24898:26;;24934:100;25031:1;25020:9;25016:17;25007:6;24934:100;:::i;:::-;24761:280;;;;:::o;25047:249::-;25122:4;25212:18;25204:6;25201:30;25198:56;;;25234:18;;:::i;:::-;25198:56;25284:4;25276:6;25272:17;25264:25;;25047:249;;;:::o;25320:643::-;25414:5;25439:79;25455:62;25510:6;25455:62;:::i;:::-;25439:79;:::i;:::-;25430:88;;25538:5;25591:4;25583:6;25579:17;25571:6;25567:30;25620:3;25612:6;25609:15;25606:122;;;25639:79;;:::i;:::-;25606:122;25754:6;25737:220;25771:6;25766:3;25763:15;25737:220;;;25846:3;25875:37;25908:3;25896:10;25875:37;:::i;:::-;25870:3;25863:50;25942:4;25937:3;25933:14;25926:21;;25813:144;25797:4;25792:3;25788:14;25781:21;;25737:220;;;25741:21;25420:543;;25320:643;;;;;:::o;25987:339::-;26056:5;26105:3;26098:4;26090:6;26086:17;26082:27;26072:122;;26113:79;;:::i;:::-;26072:122;26217:4;26239:81;26316:3;26308:6;26300;26239:81;:::i;:::-;26230:90;;26062:264;25987:339;;;;:::o;26356:1818::-;26428:5;26472:6;26460:9;26455:3;26451:19;26447:32;26444:119;;;26482:79;;:::i;:::-;26444:119;26581:23;26597:6;26581:23;:::i;:::-;26572:32;;26661:1;26701:72;26769:3;26760:6;26749:9;26745:22;26701:72;:::i;:::-;26694:4;26687:5;26683:16;26676:98;26614:171;26845:2;26886:72;26954:3;26945:6;26934:9;26930:22;26886:72;:::i;:::-;26879:4;26872:5;26868:16;26861:98;26795:175;27026:3;27068:49;27113:3;27104:6;27093:9;27089:22;27068:49;:::i;:::-;27061:4;27054:5;27050:16;27043:75;26980:149;27185:3;27227:49;27272:3;27263:6;27252:9;27248:22;27227:49;:::i;:::-;27220:4;27213:5;27209:16;27202:75;27139:149;27347:3;27389:49;27434:3;27425:6;27414:9;27410:22;27389:49;:::i;:::-;27382:4;27375:5;27371:16;27364:75;27298:152;27513:3;27555:49;27600:3;27591:6;27580:9;27576:22;27555:49;:::i;:::-;27548:4;27541:5;27537:16;27530:75;27460:156;27684:3;27726:72;27794:3;27785:6;27774:9;27770:22;27726:72;:::i;:::-;27719:4;27712:5;27708:16;27701:98;27626:184;27877:3;27919:72;27987:3;27978:6;27967:9;27963:22;27919:72;:::i;:::-;27912:4;27905:5;27901:16;27894:98;27820:183;28062:3;28106:49;28151:3;28142:6;28131:9;28127:22;28106:49;:::i;:::-;28097:6;28090:5;28086:18;28079:77;28013:154;26356:1818;;;;:::o;28229:1087::-;28313:5;28357:4;28345:9;28340:3;28336:19;28332:30;28329:117;;;28365:79;;:::i;:::-;28329:117;28464:21;28480:4;28464:21;:::i;:::-;28455:30;;28548:1;28588:48;28632:3;28623:6;28612:9;28608:22;28588:48;:::i;:::-;28581:4;28574:5;28570:16;28563:74;28495:153;28708:2;28749:48;28793:3;28784:6;28773:9;28769:22;28749:48;:::i;:::-;28742:4;28735:5;28731:16;28724:74;28658:151;28880:2;28921:48;28965:3;28956:6;28945:9;28941:22;28921:48;:::i;:::-;28914:4;28907:5;28903:16;28896:74;28819:162;29044:2;29085:48;29129:3;29120:6;29109:9;29105:22;29085:48;:::i;:::-;29078:4;29071:5;29067:16;29060:74;28991:154;29206:3;29248:49;29293:3;29284:6;29273:9;29269:22;29248:49;:::i;:::-;29241:4;29234:5;29230:16;29223:75;29155:154;28229:1087;;;;:::o;29322:592::-;29448:6;29456;29505:3;29493:9;29484:7;29480:23;29476:33;29473:120;;;29512:79;;:::i;:::-;29473:120;29632:1;29657:76;29725:7;29716:6;29705:9;29701:22;29657:76;:::i;:::-;29647:86;;29603:140;29782:3;29809:88;29889:7;29880:6;29869:9;29865:22;29809:88;:::i;:::-;29799:98;;29753:154;29322:592;;;;;:::o;29920:218::-;30011:4;30049:2;30038:9;30034:18;30026:26;;30062:69;30128:1;30117:9;30113:17;30104:6;30062:69;:::i;:::-;29920:218;;;;:::o;30144:537::-;30313:4;30351:3;30340:9;30336:19;30328:27;;30365:69;30431:1;30420:9;30416:17;30407:6;30365:69;:::i;:::-;30444:70;30510:2;30499:9;30495:18;30486:6;30444:70;:::i;:::-;30524;30590:2;30579:9;30575:18;30566:6;30524:70;:::i;:::-;30604;30670:2;30659:9;30655:18;30646:6;30604:70;:::i;:::-;30144:537;;;;;;;:::o;30687:375::-;30769:6;30818:2;30806:9;30797:7;30793:23;30789:32;30786:119;;;30824:79;;:::i;:::-;30786:119;30944:1;30969:76;31037:7;31028:6;31017:9;31013:22;30969:76;:::i;:::-;30959:86;;30915:140;30687:375;;;;:::o;31068:329::-;31127:6;31176:2;31164:9;31155:7;31151:23;31147:32;31144:119;;;31182:79;;:::i;:::-;31144:119;31302:1;31327:53;31372:7;31363:6;31352:9;31348:22;31327:53;:::i;:::-;31317:63;;31273:117;31068:329;;;;:::o;31403:90::-;31437:7;31480:5;31473:13;31466:21;31455:32;;31403:90;;;:::o;31499:109::-;31580:21;31595:5;31580:21;:::i;:::-;31575:3;31568:34;31499:109;;:::o;31614:210::-;31701:4;31739:2;31728:9;31724:18;31716:26;;31752:65;31814:1;31803:9;31799:17;31790:6;31752:65;:::i;:::-;31614:210;;;;:::o;31830:332::-;31951:4;31989:2;31978:9;31974:18;31966:26;;32002:71;32070:1;32059:9;32055:17;32046:6;32002:71;:::i;:::-;32083:72;32151:2;32140:9;32136:18;32127:6;32083:72;:::i;:::-;31830:332;;;;;:::o;32168:180::-;32216:77;32213:1;32206:88;32313:4;32310:1;32303:15;32337:4;32334:1;32327:15;32354:180;32402:77;32399:1;32392:88;32499:4;32496:1;32489:15;32523:4;32520:1;32513:15;32540:194;32580:4;32600:20;32618:1;32600:20;:::i;:::-;32595:25;;32634:20;32652:1;32634:20;:::i;:::-;32629:25;;32678:1;32675;32671:9;32663:17;;32702:1;32696:4;32693:11;32690:37;;;32707:18;;:::i;:::-;32690:37;32540:194;;;;:::o;32740:180::-;32788:77;32785:1;32778:88;32885:4;32882:1;32875:15;32909:4;32906:1;32899:15;32926:430;33069:4;33107:2;33096:9;33092:18;33084:26;;33120:69;33186:1;33175:9;33171:17;33162:6;33120:69;:::i;:::-;33199:70;33265:2;33254:9;33250:18;33241:6;33199:70;:::i;:::-;33279;33345:2;33334:9;33330:18;33321:6;33279:70;:::i;:::-;32926:430;;;;;;:::o;33362:102::-;33404:8;33451:5;33448:1;33444:13;33423:34;;33362:102;;;:::o;33470:106::-;33519:7;33559:10;33552:5;33548:22;33537:33;;33470:106;;;:::o;33582:164::-;33650:5;33675:65;33705:34;33728:10;33705:34;:::i;:::-;33675:65;:::i;:::-;33666:74;;33582:164;;;:::o;33752:105::-;33827:23;33844:5;33827:23;:::i;:::-;33822:3;33815:36;33752:105;;:::o;33863:104::-;33906:8;33954:5;33950:2;33946:14;33925:35;;33863:104;;;:::o;33973:165::-;34041:5;34066:66;34096:35;34120:10;34096:35;:::i;:::-;34066:66;:::i;:::-;34057:75;;33973:165;;;:::o;34144:104::-;34187:8;34235:5;34231:2;34227:14;34206:35;;34144:104;;;:::o;34254:165::-;34322:5;34347:66;34377:35;34401:10;34377:35;:::i;:::-;34347:66;:::i;:::-;34338:75;;34254:165;;;:::o;34425:104::-;34468:8;34516:5;34512:2;34508:14;34487:35;;34425:104;;;:::o;34535:166::-;34604:5;34629:66;34659:35;34683:10;34659:35;:::i;:::-;34629:66;:::i;:::-;34620:75;;34535:166;;;:::o;34707:106::-;34751:8;34800:5;34795:3;34791:15;34770:36;;34707:106;;;:::o;34819:167::-;34888:5;34913:67;34943:36;34968:10;34943:36;:::i;:::-;34913:67;:::i;:::-;34904:76;;34819:167;;;:::o;34992:106::-;35036:8;35085:5;35080:3;35076:15;35055:36;;34992:106;;;:::o;35104:104::-;35153:7;35193:8;35186:5;35182:20;35171:31;;35104:104;;;:::o;35214:167::-;35283:5;35308:67;35338:36;35363:10;35338:36;:::i;:::-;35308:67;:::i;:::-;35299:76;;35214:167;;;:::o;35387:105::-;35462:23;35479:5;35462:23;:::i;:::-;35457:3;35450:36;35387:105;;:::o;35498:106::-;35542:8;35591:5;35586:3;35582:15;35561:36;;35498:106;;;:::o;35610:167::-;35679:5;35704:67;35734:36;35759:10;35734:36;:::i;:::-;35704:67;:::i;:::-;35695:76;;35610:167;;;:::o;35783:106::-;35827:8;35876:5;35871:3;35867:15;35846:36;;35783:106;;;:::o;35895:167::-;35964:5;35989:67;36019:36;36044:10;36019:36;:::i;:::-;35989:67;:::i;:::-;35980:76;;35895:167;;;:::o;36068:106::-;36112:8;36161:5;36156:3;36152:15;36131:36;;36068:106;;;:::o;36180:167::-;36249:5;36274:67;36304:36;36329:10;36304:36;:::i;:::-;36274:67;:::i;:::-;36265:76;;36180:167;;;:::o;36431:2234::-;36579:6;36574:3;36570:16;36612:1;36713:4;36706:5;36702:16;36696:23;36683:36;;36752:54;36796:9;36752:54;:::i;:::-;36819:61;36874:4;36869:3;36865:14;36851:12;36819:61;:::i;:::-;36623:267;36981:54;37025:9;36981:54;:::i;:::-;37048:61;37103:4;37098:3;37094:14;37080:12;37048:61;:::i;:::-;36900:219;37210:54;37254:9;37210:54;:::i;:::-;37277:61;37332:4;37327:3;37323:14;37309:12;37277:61;:::i;:::-;37129:219;37439:55;37484:9;37439:55;:::i;:::-;37507:61;37562:4;37557:3;37553:14;37539:12;37507:61;:::i;:::-;37358:220;37669:55;37714:9;37669:55;:::i;:::-;37737:61;37792:4;37787:3;37783:14;37769:12;37737:61;:::i;:::-;37588:220;37881:55;37926:9;37881:55;:::i;:::-;37949:61;38004:4;37999:3;37995:14;37981:12;37949:61;:::i;:::-;37818:202;38093:55;38138:9;38093:55;:::i;:::-;38161:61;38216:4;38211:3;38207:14;38193:12;38161:61;:::i;:::-;38030:202;38305:55;38350:9;38305:55;:::i;:::-;38373:61;38428:4;38423:3;38419:14;38405:12;38373:61;:::i;:::-;38242:202;38517:55;38562:9;38517:55;:::i;:::-;38585:63;38640:6;38635:3;38631:16;38617:12;38585:63;:::i;:::-;38454:204;36548:2117;;36431:2234;;:::o;38671:857::-;38945:4;38983:3;38972:9;38968:19;38960:27;;38997:69;39063:1;39052:9;39048:17;39039:6;38997:69;:::i;:::-;39076:70;39142:2;39131:9;39127:18;39118:6;39076:70;:::i;:::-;39156;39222:2;39211:9;39207:18;39198:6;39156:70;:::i;:::-;39236;39302:2;39291:9;39287:18;39278:6;39236:70;:::i;:::-;39316:71;39382:3;39371:9;39367:19;39358:6;39316:71;:::i;:::-;39397:124;39516:3;39505:9;39501:19;39492:6;39397:124;:::i;:::-;38671:857;;;;;;;;;:::o;39534:328::-;39653:4;39691:2;39680:9;39676:18;39668:26;;39704:69;39770:1;39759:9;39755:17;39746:6;39704:69;:::i;:::-;39783:72;39851:2;39840:9;39836:18;39827:6;39783:72;:::i;:::-;39534:328;;;;;:::o;39868:324::-;39985:4;40023:2;40012:9;40008:18;40000:26;;40036:69;40102:1;40091:9;40087:17;40078:6;40036:69;:::i;:::-;40115:70;40181:2;40170:9;40166:18;40157:6;40115:70;:::i;:::-;39868:324;;;;;:::o;40198:205::-;40237:3;40256:19;40273:1;40256:19;:::i;:::-;40251:24;;40289:19;40306:1;40289:19;:::i;:::-;40284:24;;40331:1;40328;40324:9;40317:16;;40354:18;40349:3;40346:27;40343:53;;;40376:18;;:::i;:::-;40343:53;40198:205;;;;:::o;40409:763::-;40636:4;40674:3;40663:9;40659:19;40651:27;;40688:71;40756:1;40745:9;40741:17;40732:6;40688:71;:::i;:::-;40769:72;40837:2;40826:9;40822:18;40813:6;40769:72;:::i;:::-;40851:70;40917:2;40906:9;40902:18;40893:6;40851:70;:::i;:::-;40931;40997:2;40986:9;40982:18;40973:6;40931:70;:::i;:::-;41011:71;41077:3;41066:9;41062:19;41053:6;41011:71;:::i;:::-;41092:73;41160:3;41149:9;41145:19;41136:6;41092:73;:::i;:::-;40409:763;;;;;;;;;:::o;41178:652::-;41377:4;41415:3;41404:9;41400:19;41392:27;;41429:71;41497:1;41486:9;41482:17;41473:6;41429:71;:::i;:::-;41510:72;41578:2;41567:9;41563:18;41554:6;41510:72;:::i;:::-;41592:70;41658:2;41647:9;41643:18;41634:6;41592:70;:::i;:::-;41672;41738:2;41727:9;41723:18;41714:6;41672:70;:::i;:::-;41752:71;41818:3;41807:9;41803:19;41794:6;41752:71;:::i;:::-;41178:652;;;;;;;;:::o;41836:216::-;41875:4;41895:19;41912:1;41895:19;:::i;:::-;41890:24;;41928:19;41945:1;41928:19;:::i;:::-;41923:24;;41971:1;41968;41964:9;41956:17;;41995:26;41989:4;41986:36;41983:62;;;42025:18;;:::i;:::-;41983:62;41836:216;;;;:::o;42058:140::-;42107:9;42140:52;42158:33;42167:23;42184:5;42167:23;:::i;:::-;42158:33;:::i;:::-;42140:52;:::i;:::-;42127:65;;42058:140;;;:::o;42204:129::-;42290:36;42320:5;42290:36;:::i;:::-;42285:3;42278:49;42204:129;;:::o;42339:330::-;42459:4;42497:2;42486:9;42482:18;42474:26;;42510:71;42578:1;42567:9;42563:17;42554:6;42510:71;:::i;:::-;42591;42658:2;42647:9;42643:18;42634:6;42591:71;:::i;:::-;42339:330;;;;;:::o;42675:116::-;42745:21;42760:5;42745:21;:::i;:::-;42738:5;42735:32;42725:60;;42781:1;42778;42771:12;42725:60;42675:116;:::o;42797:137::-;42851:5;42882:6;42876:13;42867:22;;42898:30;42922:5;42898:30;:::i;:::-;42797:137;;;;:::o;42940:345::-;43007:6;43056:2;43044:9;43035:7;43031:23;43027:32;43024:119;;;43062:79;;:::i;:::-;43024:119;43182:1;43207:61;43260:7;43251:6;43240:9;43236:22;43207:61;:::i;:::-;43197:71;;43153:125;42940:345;;;;:::o;43291:172::-;43431:24;43427:1;43419:6;43415:14;43408:48;43291:172;:::o;43469:366::-;43611:3;43632:67;43696:2;43691:3;43632:67;:::i;:::-;43625:74;;43708:93;43797:3;43708:93;:::i;:::-;43826:2;43821:3;43817:12;43810:19;;43469:366;;;:::o;43841:419::-;44007:4;44045:2;44034:9;44030:18;44022:26;;44094:9;44088:4;44084:20;44080:1;44069:9;44065:17;44058:47;44122:131;44248:4;44122:131;:::i;:::-;44114:139;;43841:419;;;:::o;44266:183::-;44304:3;44327:23;44344:5;44327:23;:::i;:::-;44318:32;;44372:18;44365:5;44362:29;44359:55;;44394:18;;:::i;:::-;44359:55;44441:1;44434:5;44430:13;44423:20;;44266:183;;;:::o;44455:213::-;44494:3;44513:19;44530:1;44513:19;:::i;:::-;44508:24;;44546:19;44563:1;44546:19;:::i;:::-;44541:24;;44588:1;44585;44581:9;44574:16;;44611:26;44606:3;44603:35;44600:61;;;44641:18;;:::i;:::-;44600:61;44455:213;;;;:::o;44674:191::-;44714:3;44733:20;44751:1;44733:20;:::i;:::-;44728:25;;44767:20;44785:1;44767:20;:::i;:::-;44762:25;;44810:1;44807;44803:9;44796:16;;44831:3;44828:1;44825:10;44822:36;;;44838:18;;:::i;:::-;44822:36;44674:191;;;;:::o;44871:332::-;44992:4;45030:2;45019:9;45015:18;45007:26;;45043:71;45111:1;45100:9;45096:17;45087:6;45043:71;:::i;:::-;45124:72;45192:2;45181:9;45177:18;45168:6;45124:72;:::i;:::-;44871:332;;;;;:::o;45209:114::-;45276:6;45310:5;45304:12;45294:22;;45209:114;;;:::o;45329:184::-;45428:11;45462:6;45457:3;45450:19;45502:4;45497:3;45493:14;45478:29;;45329:184;;;;:::o;45519:132::-;45586:4;45609:3;45601:11;;45639:4;45634:3;45630:14;45622:22;;45519:132;;;:::o;45657:108::-;45734:24;45752:5;45734:24;:::i;:::-;45729:3;45722:37;45657:108;;:::o;45771:179::-;45840:10;45861:46;45903:3;45895:6;45861:46;:::i;:::-;45939:4;45934:3;45930:14;45916:28;;45771:179;;;;:::o;45956:113::-;46026:4;46058;46053:3;46049:14;46041:22;;45956:113;;;:::o;46105:732::-;46224:3;46253:54;46301:5;46253:54;:::i;:::-;46323:86;46402:6;46397:3;46323:86;:::i;:::-;46316:93;;46433:56;46483:5;46433:56;:::i;:::-;46512:7;46543:1;46528:284;46553:6;46550:1;46547:13;46528:284;;;46629:6;46623:13;46656:63;46715:3;46700:13;46656:63;:::i;:::-;46649:70;;46742:60;46795:6;46742:60;:::i;:::-;46732:70;;46588:224;46575:1;46572;46568:9;46563:14;;46528:284;;;46532:14;46828:3;46821:10;;46229:608;;;46105:732;;;;:::o;46843:483::-;47014:4;47052:2;47041:9;47037:18;47029:26;;47065:71;47133:1;47122:9;47118:17;47109:6;47065:71;:::i;:::-;47183:9;47177:4;47173:20;47168:2;47157:9;47153:18;47146:48;47211:108;47314:4;47305:6;47211:108;:::i;:::-;47203:116;;46843:483;;;;;:::o;47332:426::-;47473:4;47511:2;47500:9;47496:18;47488:26;;47524:71;47592:1;47581:9;47577:17;47568:6;47524:71;:::i;:::-;47605:70;47671:2;47660:9;47656:18;47647:6;47605:70;:::i;:::-;47685:66;47747:2;47736:9;47732:18;47723:6;47685:66;:::i;:::-;47332:426;;;;;;:::o;47764:104::-;47829:6;47857:4;47847:14;;47764:104;;;:::o;47874:143::-;47971:11;48008:3;47993:18;;47874:143;;;;:::o;48023:98::-;48088:4;48111:3;48103:11;;48023:98;;;:::o;48127:111::-;48195:4;48227;48222:3;48218:14;48210:22;;48127:111;;;:::o;48276:694::-;48412:52;48458:5;48412:52;:::i;:::-;48480:84;48557:6;48552:3;48480:84;:::i;:::-;48473:91;;48588:54;48636:5;48588:54;:::i;:::-;48665:7;48696:1;48681:282;48706:6;48703:1;48700:13;48681:282;;;48782:6;48776:13;48809:63;48868:3;48853:13;48809:63;:::i;:::-;48802:70;;48895:58;48946:6;48895:58;:::i;:::-;48885:68;;48741:222;48728:1;48725;48721:9;48716:14;;48681:282;;;48685:14;48388:582;;;48276:694;;:::o;48976:314::-;49115:4;49153:2;49142:9;49138:18;49130:26;;49166:117;49280:1;49269:9;49265:17;49256:6;49166:117;:::i;:::-;48976:314;;;;:::o;49296:143::-;49353:5;49384:6;49378:13;49369:22;;49400:33;49427:5;49400:33;:::i;:::-;49296:143;;;;:::o;49445:351::-;49515:6;49564:2;49552:9;49543:7;49539:23;49535:32;49532:119;;;49570:79;;:::i;:::-;49532:119;49690:1;49715:64;49771:7;49762:6;49751:9;49747:22;49715:64;:::i;:::-;49705:74;;49661:128;49445:351;;;;:::o;49802:332::-;49923:4;49961:2;49950:9;49946:18;49938:26;;49974:71;50042:1;50031:9;50027:17;50018:6;49974:71;:::i;:::-;50055:72;50123:2;50112:9;50108:18;50099:6;50055:72;:::i;:::-;49802:332;;;;;:::o;50140:172::-;50280:24;50276:1;50268:6;50264:14;50257:48;50140:172;:::o;50318:366::-;50460:3;50481:67;50545:2;50540:3;50481:67;:::i;:::-;50474:74;;50557:93;50646:3;50557:93;:::i;:::-;50675:2;50670:3;50666:12;50659:19;;50318:366;;;:::o;50690:419::-;50856:4;50894:2;50883:9;50879:18;50871:26;;50943:9;50937:4;50933:20;50929:1;50918:9;50914:17;50907:47;50971:131;51097:4;50971:131;:::i;:::-;50963:139;;50690:419;;;:::o;51115:545::-;51288:4;51326:3;51315:9;51311:19;51303:27;;51340:71;51408:1;51397:9;51393:17;51384:6;51340:71;:::i;:::-;51421:72;51489:2;51478:9;51474:18;51465:6;51421:72;:::i;:::-;51503:70;51569:2;51558:9;51554:18;51545:6;51503:70;:::i;:::-;51583;51649:2;51638:9;51634:18;51625:6;51583:70;:::i;:::-;51115:545;;;;;;;:::o;51666:332::-;51787:4;51825:2;51814:9;51810:18;51802:26;;51838:71;51906:1;51895:9;51891:17;51882:6;51838:71;:::i;:::-;51919:72;51987:2;51976:9;51972:18;51963:6;51919:72;:::i;:::-;51666:332;;;;;:::o;52004:759::-;52229:4;52267:3;52256:9;52252:19;52244:27;;52281:71;52349:1;52338:9;52334:17;52325:6;52281:71;:::i;:::-;52362:70;52428:2;52417:9;52413:18;52404:6;52362:70;:::i;:::-;52442;52508:2;52497:9;52493:18;52484:6;52442:70;:::i;:::-;52522;52588:2;52577:9;52573:18;52564:6;52522:70;:::i;:::-;52602:71;52668:3;52657:9;52653:19;52644:6;52602:71;:::i;:::-;52683:73;52751:3;52740:9;52736:19;52727:6;52683:73;:::i;:::-;52004:759;;;;;;;;;:::o;52769:140::-;52818:9;52851:52;52869:33;52878:23;52895:5;52878:23;:::i;:::-;52869:33;:::i;:::-;52851:52;:::i;:::-;52838:65;;52769:140;;;:::o;52915:129::-;53001:36;53031:5;53001:36;:::i;:::-;52996:3;52989:49;52915:129;;:::o;53050:220::-;53142:4;53180:2;53169:9;53165:18;53157:26;;53193:70;53260:1;53249:9;53245:17;53236:6;53193:70;:::i;:::-;53050:220;;;;:::o;53276:143::-;53333:5;53364:6;53358:13;53349:22;;53380:33;53407:5;53380:33;:::i;:::-;53276:143;;;;:::o;53425:351::-;53495:6;53544:2;53532:9;53523:7;53519:23;53515:32;53512:119;;;53550:79;;:::i;:::-;53512:119;53670:1;53695:64;53751:7;53742:6;53731:9;53727:22;53695:64;:::i;:::-;53685:74;;53641:128;53425:351;;;;:::o;53782:79::-;53821:7;53850:5;53839:16;;53782:79;;;:::o;53867:157::-;53972:45;53992:24;54010:5;53992:24;:::i;:::-;53972:45;:::i;:::-;53967:3;53960:58;53867:157;;:::o;54030:79::-;54069:7;54098:5;54087:16;;54030:79;;;:::o;54115:157::-;54220:45;54240:24;54258:5;54240:24;:::i;:::-;54220:45;:::i;:::-;54215:3;54208:58;54115:157;;:::o;54278:397::-;54418:3;54433:75;54504:3;54495:6;54433:75;:::i;:::-;54533:2;54528:3;54524:12;54517:19;;54546:75;54617:3;54608:6;54546:75;:::i;:::-;54646:2;54641:3;54637:12;54630:19;;54666:3;54659:10;;54278:397;;;;;:::o;54681:410::-;54721:7;54744:20;54762:1;54744:20;:::i;:::-;54739:25;;54778:20;54796:1;54778:20;:::i;:::-;54773:25;;54833:1;54830;54826:9;54855:30;54873:11;54855:30;:::i;:::-;54844:41;;55034:1;55025:7;55021:15;55018:1;55015:22;54995:1;54988:9;54968:83;54945:139;;55064:18;;:::i;:::-;54945:139;54729:362;54681:410;;;;:::o;55097:180::-;55145:77;55142:1;55135:88;55242:4;55239:1;55232:15;55266:4;55263:1;55256:15;55283:185;55323:1;55340:20;55358:1;55340:20;:::i;:::-;55335:25;;55374:20;55392:1;55374:20;:::i;:::-;55369:25;;55413:1;55403:35;;55418:18;;:::i;:::-;55403:35;55460:1;55457;55453:9;55448:14;;55283:185;;;;:::o;55474:173::-;55614:25;55610:1;55602:6;55598:14;55591:49;55474:173;:::o;55653:366::-;55795:3;55816:67;55880:2;55875:3;55816:67;:::i;:::-;55809:74;;55892:93;55981:3;55892:93;:::i;:::-;56010:2;56005:3;56001:12;55994:19;;55653:366;;;:::o;56025:419::-;56191:4;56229:2;56218:9;56214:18;56206:26;;56278:9;56272:4;56268:20;56264:1;56253:9;56249:17;56242:47;56306:131;56432:4;56306:131;:::i;:::-;56298:139;;56025:419;;;:::o;56450:424::-;56617:4;56655:2;56644:9;56640:18;56632:26;;56668:71;56736:1;56725:9;56721:17;56712:6;56668:71;:::i;:::-;56749:118;56863:2;56852:9;56848:18;56839:6;56749:118;:::i;:::-;56450:424;;;;;:::o;56880:105::-;56916:7;56956:22;56949:5;56945:34;56934:45;;56880:105;;;:::o;56991:120::-;57063:23;57080:5;57063:23;:::i;:::-;57056:5;57053:34;57043:62;;57101:1;57098;57091:12;57043:62;56991:120;:::o;57117:141::-;57173:5;57204:6;57198:13;57189:22;;57220:32;57246:5;57220:32;:::i;:::-;57117:141;;;;:::o;57264:::-;57320:5;57351:6;57345:13;57336:22;;57367:32;57393:5;57367:32;:::i;:::-;57264:141;;;;:::o;57411:971::-;57514:6;57522;57530;57538;57546;57595:3;57583:9;57574:7;57570:23;57566:33;57563:120;;;57602:79;;:::i;:::-;57563:120;57722:1;57747:63;57802:7;57793:6;57782:9;57778:22;57747:63;:::i;:::-;57737:73;;57693:127;57859:2;57885:63;57940:7;57931:6;57920:9;57916:22;57885:63;:::i;:::-;57875:73;;57830:128;57997:2;58023:64;58079:7;58070:6;58059:9;58055:22;58023:64;:::i;:::-;58013:74;;57968:129;58136:2;58162:64;58218:7;58209:6;58198:9;58194:22;58162:64;:::i;:::-;58152:74;;58107:129;58275:3;58302:63;58357:7;58348:6;58337:9;58333:22;58302:63;:::i;:::-;58292:73;;58246:129;57411:971;;;;;;;;:::o;58388:176::-;58528:28;58524:1;58516:6;58512:14;58505:52;58388:176;:::o;58570:366::-;58712:3;58733:67;58797:2;58792:3;58733:67;:::i;:::-;58726:74;;58809:93;58898:3;58809:93;:::i;:::-;58927:2;58922:3;58918:12;58911:19;;58570:366;;;:::o;58942:419::-;59108:4;59146:2;59135:9;59131:18;59123:26;;59195:9;59189:4;59185:20;59181:1;59170:9;59166:17;59159:47;59223:131;59349:4;59223:131;:::i;:::-;59215:139;;58942:419;;;:::o;59367:171::-;59507:23;59503:1;59495:6;59491:14;59484:47;59367:171;:::o;59544:366::-;59686:3;59707:67;59771:2;59766:3;59707:67;:::i;:::-;59700:74;;59783:93;59872:3;59783:93;:::i;:::-;59901:2;59896:3;59892:12;59885:19;;59544:366;;;:::o;59916:419::-;60082:4;60120:2;60109:9;60105:18;60097:26;;60169:9;60163:4;60159:20;60155:1;60144:9;60140:17;60133:47;60197:131;60323:4;60197:131;:::i;:::-;60189:139;;59916:419;;;:::o;60341:179::-;60481:31;60477:1;60469:6;60465:14;60458:55;60341:179;:::o;60526:366::-;60668:3;60689:67;60753:2;60748:3;60689:67;:::i;:::-;60682:74;;60765:93;60854:3;60765:93;:::i;:::-;60883:2;60878:3;60874:12;60867:19;;60526:366;;;:::o;60898:419::-;61064:4;61102:2;61091:9;61087:18;61079:26;;61151:9;61145:4;61141:20;61137:1;61126:9;61122:17;61115:47;61179:131;61305:4;61179:131;:::i;:::-;61171:139;;60898:419;;;:::o;61323:178::-;61463:30;61459:1;61451:6;61447:14;61440:54;61323:178;:::o;61507:366::-;61649:3;61670:67;61734:2;61729:3;61670:67;:::i;:::-;61663:74;;61746:93;61835:3;61746:93;:::i;:::-;61864:2;61859:3;61855:12;61848:19;;61507:366;;;:::o;61879:419::-;62045:4;62083:2;62072:9;62068:18;62060:26;;62132:9;62126:4;62122:20;62118:1;62107:9;62103:17;62096:47;62160:131;62286:4;62160:131;:::i;:::-;62152:139;;61879:419;;;:::o;62304:175::-;62444:27;62440:1;62432:6;62428:14;62421:51;62304:175;:::o;62485:366::-;62627:3;62648:67;62712:2;62707:3;62648:67;:::i;:::-;62641:74;;62724:93;62813:3;62724:93;:::i;:::-;62842:2;62837:3;62833:12;62826:19;;62485:366;;;:::o;62857:419::-;63023:4;63061:2;63050:9;63046:18;63038:26;;63110:9;63104:4;63100:20;63096:1;63085:9;63081:17;63074:47;63138:131;63264:4;63138:131;:::i;:::-;63130:139;;62857:419;;;:::o;63282:163::-;63422:15;63418:1;63410:6;63406:14;63399:39;63282:163;:::o;63451:366::-;63593:3;63614:67;63678:2;63673:3;63614:67;:::i;:::-;63607:74;;63690:93;63779:3;63690:93;:::i;:::-;63808:2;63803:3;63799:12;63792:19;;63451:366;;;:::o;63823:419::-;63989:4;64027:2;64016:9;64012:18;64004:26;;64076:9;64070:4;64066:20;64062:1;64051:9;64047:17;64040:47;64104:131;64230:4;64104:131;:::i;:::-;64096:139;;63823:419;;;:::o;64248:168::-;64388:20;64384:1;64376:6;64372:14;64365:44;64248:168;:::o;64422:366::-;64564:3;64585:67;64649:2;64644:3;64585:67;:::i;:::-;64578:74;;64661:93;64750:3;64661:93;:::i;:::-;64779:2;64774:3;64770:12;64763:19;;64422:366;;;:::o;64794:419::-;64960:4;64998:2;64987:9;64983:18;64975:26;;65047:9;65041:4;65037:20;65033:1;65022:9;65018:17;65011:47;65075:131;65201:4;65075:131;:::i;:::-;65067:139;;64794:419;;;:::o;65219:168::-;65359:20;65355:1;65347:6;65343:14;65336:44;65219:168;:::o;65393:366::-;65535:3;65556:67;65620:2;65615:3;65556:67;:::i;:::-;65549:74;;65632:93;65721:3;65632:93;:::i;:::-;65750:2;65745:3;65741:12;65734:19;;65393:366;;;:::o;65765:419::-;65931:4;65969:2;65958:9;65954:18;65946:26;;66018:9;66012:4;66008:20;66004:1;65993:9;65989:17;65982:47;66046:131;66172:4;66046:131;:::i;:::-;66038:139;;65765:419;;;:::o;66190:161::-;66330:13;66326:1;66318:6;66314:14;66307:37;66190:161;:::o;66357:366::-;66499:3;66520:67;66584:2;66579:3;66520:67;:::i;:::-;66513:74;;66596:93;66685:3;66596:93;:::i;:::-;66714:2;66709:3;66705:12;66698:19;;66357:366;;;:::o;66729:419::-;66895:4;66933:2;66922:9;66918:18;66910:26;;66982:9;66976:4;66972:20;66968:1;66957:9;66953:17;66946:47;67010:131;67136:4;67010:131;:::i;:::-;67002:139;;66729:419;;;:::o;67154:86::-;67189:7;67229:4;67222:5;67218:16;67207:27;;67154:86;;;:::o;67246:112::-;67329:22;67345:5;67329:22;:::i;:::-;67324:3;67317:35;67246:112;;:::o;67364:545::-;67537:4;67575:3;67564:9;67560:19;67552:27;;67589:71;67657:1;67646:9;67642:17;67633:6;67589:71;:::i;:::-;67670:68;67734:2;67723:9;67719:18;67710:6;67670:68;:::i;:::-;67748:72;67816:2;67805:9;67801:18;67792:6;67748:72;:::i;:::-;67830;67898:2;67887:9;67883:18;67874:6;67830:72;:::i;:::-;67364:545;;;;;;;:::o;67915:161::-;68030:11;68067:3;68052:18;;67915:161;;;;:::o;68082:116::-;68167:24;68185:5;68167:24;:::i;:::-;68162:3;68155:37;68082:116;;:::o;68204:195::-;68281:10;68302:54;68352:3;68344:6;68302:54;:::i;:::-;68388:4;68383:3;68379:14;68365:28;;68204:195;;;;:::o;68437:738::-;68591:52;68637:5;68591:52;:::i;:::-;68659:102;68754:6;68749:3;68659:102;:::i;:::-;68652:109;;68785:54;68833:5;68785:54;:::i;:::-;68862:7;68893:1;68878:290;68903:6;68900:1;68897:13;68878:290;;;68979:6;68973:13;69006:71;69073:3;69058:13;69006:71;:::i;:::-;68999:78;;69100:58;69151:6;69100:58;:::i;:::-;69090:68;;68938:230;68925:1;68922;68918:9;68913:14;;68878:290;;;68882:14;68567:608;;;68437:738;;:::o;69181:630::-;69395:3;69410:75;69481:3;69472:6;69410:75;:::i;:::-;69510:2;69505:3;69501:12;69494:19;;69523:121;69640:3;69631:6;69523:121;:::i;:::-;69669:2;69664:3;69660:12;69653:19;;69682:75;69753:3;69744:6;69682:75;:::i;:::-;69782:2;69777:3;69773:12;69766:19;;69802:3;69795:10;;69181:630;;;;;;:::o;69817:256::-;69929:3;69944:75;70015:3;70006:6;69944:75;:::i;:::-;70044:2;70039:3;70035:12;70028:19;;70064:3;70057:10;;69817:256;;;;:::o;70079:180::-;70219:32;70215:1;70207:6;70203:14;70196:56;70079:180;:::o;70265:366::-;70407:3;70428:67;70492:2;70487:3;70428:67;:::i;:::-;70421:74;;70504:93;70593:3;70504:93;:::i;:::-;70622:2;70617:3;70613:12;70606:19;;70265:366;;;:::o;70637:419::-;70803:4;70841:2;70830:9;70826:18;70818:26;;70890:9;70884:4;70880:20;70876:1;70865:9;70861:17;70854:47;70918:131;71044:4;70918:131;:::i;:::-;70910:139;;70637:419;;;:::o;71062:172::-;71202:24;71198:1;71190:6;71186:14;71179:48;71062:172;:::o;71240:366::-;71382:3;71403:67;71467:2;71462:3;71403:67;:::i;:::-;71396:74;;71479:93;71568:3;71479:93;:::i;:::-;71597:2;71592:3;71588:12;71581:19;;71240:366;;;:::o;71612:419::-;71778:4;71816:2;71805:9;71801:18;71793:26;;71865:9;71859:4;71855:20;71851:1;71840:9;71836:17;71829:47;71893:131;72019:4;71893:131;:::i;:::-;71885:139;;71612:419;;;:::o;72037:173::-;72177:25;72173:1;72165:6;72161:14;72154:49;72037:173;:::o;72216:366::-;72358:3;72379:67;72443:2;72438:3;72379:67;:::i;:::-;72372:74;;72455:93;72544:3;72455:93;:::i;:::-;72573:2;72568:3;72564:12;72557:19;;72216:366;;;:::o;72588:419::-;72754:4;72792:2;72781:9;72777:18;72769:26;;72841:9;72835:4;72831:20;72827:1;72816:9;72812:17;72805:47;72869:131;72995:4;72869:131;:::i;:::-;72861:139;;72588:419;;;:::o;73013:94::-;73046:8;73094:5;73090:2;73086:14;73065:35;;73013:94;;;:::o;73113:::-;73152:7;73181:20;73195:5;73181:20;:::i;:::-;73170:31;;73113:94;;;:::o;73213:100::-;73252:7;73281:26;73301:5;73281:26;:::i;:::-;73270:37;;73213:100;;;:::o;73319:157::-;73424:45;73444:24;73462:5;73444:24;:::i;:::-;73424:45;:::i;:::-;73419:3;73412:58;73319:157;;:::o;73482:1329::-;73918:3;73933:75;74004:3;73995:6;73933:75;:::i;:::-;74033:2;74028:3;74024:12;74017:19;;74046:121;74163:3;74154:6;74046:121;:::i;:::-;74192:2;74187:3;74183:12;74176:19;;74205:121;74322:3;74313:6;74205:121;:::i;:::-;74351:2;74346:3;74342:12;74335:19;;74364:121;74481:3;74472:6;74364:121;:::i;:::-;74510:2;74505:3;74501:12;74494:19;;74523:121;74640:3;74631:6;74523:121;:::i;:::-;74669:2;74664:3;74660:12;74653:19;;74682:75;74753:3;74744:6;74682:75;:::i;:::-;74782:2;74777:3;74773:12;74766:19;;74802:3;74795:10;;73482:1329;;;;;;;;;:::o;74817:161::-;74957:13;74953:1;74945:6;74941:14;74934:37;74817:161;:::o;74984:366::-;75126:3;75147:67;75211:2;75206:3;75147:67;:::i;:::-;75140:74;;75223:93;75312:3;75223:93;:::i;:::-;75341:2;75336:3;75332:12;75325:19;;74984:366;;;:::o;75356:419::-;75522:4;75560:2;75549:9;75545:18;75537:26;;75609:9;75603:4;75599:20;75595:1;75584:9;75580:17;75573:47;75637:131;75763:4;75637:131;:::i;:::-;75629:139;;75356:419;;;:::o;75781:176::-;75813:1;75830:20;75848:1;75830:20;:::i;:::-;75825:25;;75864:20;75882:1;75864:20;:::i;:::-;75859:25;;75903:1;75893:35;;75908:18;;:::i;:::-;75893:35;75949:1;75946;75942:9;75937:14;;75781:176;;;;:::o;75963:348::-;76121:3;76136:121;76253:3;76244:6;76136:121;:::i;:::-;76282:2;76277:3;76273:12;76266:19;;76302:3;76295:10;;75963:348;;;;:::o;76317:175::-;76457:27;76453:1;76445:6;76441:14;76434:51;76317:175;:::o;76498:366::-;76640:3;76661:67;76725:2;76720:3;76661:67;:::i;:::-;76654:74;;76737:93;76826:3;76737:93;:::i;:::-;76855:2;76850:3;76846:12;76839:19;;76498:366;;;:::o;76870:419::-;77036:4;77074:2;77063:9;77059:18;77051:26;;77123:9;77117:4;77113:20;77109:1;77098:9;77094:17;77087:47;77151:131;77277:4;77151:131;:::i;:::-;77143:139;;76870:419;;;:::o;77295:168::-;77435:20;77431:1;77423:6;77419:14;77412:44;77295:168;:::o;77469:366::-;77611:3;77632:67;77696:2;77691:3;77632:67;:::i;:::-;77625:74;;77708:93;77797:3;77708:93;:::i;:::-;77826:2;77821:3;77817:12;77810:19;;77469:366;;;:::o;77841:419::-;78007:4;78045:2;78034:9;78030:18;78022:26;;78094:9;78088:4;78084:20;78080:1;78069:9;78065:17;78058:47;78122:131;78248:4;78122:131;:::i;:::-;78114:139;;77841:419;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"7149600","executionCost":"infinite","totalCost":"infinite"},"external":{"BLOCKHASH_STORE()":"infinite","LINK()":"infinite","LINK_ETH_FEED()":"infinite","MAX_CONSUMERS()":"402","MAX_NUM_WORDS()":"403","MAX_REQUEST_CONFIRMATIONS()":"425","acceptOwnership()":"54630","acceptSubscriptionOwnerTransfer(uint64)":"infinite","addConsumer(uint64,address)":"infinite","cancelSubscription(uint64,address)":"infinite","createSubscription()":"infinite","deregisterProvingKey(uint256[2])":"infinite","fulfillRandomWords((uint256[2],uint256[2],uint256,uint256,uint256,address,uint256[2],uint256[2],uint256),(uint64,uint64,uint32,uint32,address))":"infinite","getCommitment(uint256)":"2913","getConfig()":"infinite","getCurrentSubId()":"2592","getFallbackWeiPerUnitLink()":"2483","getFeeConfig()":"infinite","getFeeTier(uint64)":"21060","getRequestConfig()":"infinite","getSubscription(uint64)":"infinite","getTotalBalance()":"2597","hashOfKey(uint256[2])":"infinite","onTokenTransfer(address,uint256,bytes)":"infinite","oracleWithdraw(address,uint96)":"infinite","owner()":"2567","ownerCancelSubscription(uint64)":"infinite","pendingRequestExists(uint64)":"infinite","recoverFunds(address)":"infinite","registerProvingKey(address,uint256[2])":"infinite","removeConsumer(uint64,address)":"infinite","requestRandomWords(bytes32,uint64,uint16,uint32,uint32)":"infinite","requestSubscriptionOwnerTransfer(uint64,address)":"infinite","setConfig(uint16,uint32,uint32,uint32,int256,(uint32,uint32,uint32,uint32,uint32,uint24,uint24,uint24,uint24))":"infinite","transferOwnership(address)":"30786","typeAndVersion()":"infinite"},"internal":{"calculatePaymentAmount(uint256,uint256,uint32,uint256)":"infinite","callWithExactGas(uint256,address,bytes memory)":"infinite","cancelSubscriptionHelper(uint64,address)":"infinite","computeRequestId(bytes32,address,uint64,uint64)":"infinite","getFeedData()":"infinite","getRandomnessFromProof(struct VRF.Proof memory,struct VRFCoordinatorV2.RequestCommitment memory)":"infinite"}},"methodIdentifiers":{"BLOCKHASH_STORE()":"689c4517","LINK()":"1b6b6d23","LINK_ETH_FEED()":"ad178361","MAX_CONSUMERS()":"64d51a2a","MAX_NUM_WORDS()":"40d6bb82","MAX_REQUEST_CONFIRMATIONS()":"15c48b84","acceptOwnership()":"79ba5097","acceptSubscriptionOwnerTransfer(uint64)":"82359740","addConsumer(uint64,address)":"7341c10c","cancelSubscription(uint64,address)":"d7ae1d30","createSubscription()":"a21a23e4","deregisterProvingKey(uint256[2])":"08821d58","fulfillRandomWords((uint256[2],uint256[2],uint256,uint256,uint256,address,uint256[2],uint256[2],uint256),(uint64,uint64,uint32,uint32,address))":"af198b97","getCommitment(uint256)":"69bcdb7d","getConfig()":"c3f909d4","getCurrentSubId()":"06bfa637","getFallbackWeiPerUnitLink()":"356dac71","getFeeConfig()":"5fbbc0d2","getFeeTier(uint64)":"d2f9f9a7","getRequestConfig()":"00012291","getSubscription(uint64)":"a47c7696","getTotalBalance()":"12b58349","hashOfKey(uint256[2])":"caf70c4a","onTokenTransfer(address,uint256,bytes)":"a4c0ed36","oracleWithdraw(address,uint96)":"66316d8d","owner()":"8da5cb5b","ownerCancelSubscription(uint64)":"02bcc5b6","pendingRequestExists(uint64)":"e82ad7d4","recoverFunds(address)":"e72f6e30","registerProvingKey(address,uint256[2])":"6f64f03f","removeConsumer(uint64,address)":"9f87fad7","requestRandomWords(bytes32,uint64,uint16,uint32,uint32)":"5d3b1d30","requestSubscriptionOwnerTransfer(uint64,address)":"04c357cb","setConfig(uint16,uint32,uint32,uint32,int256,(uint32,uint32,uint32,uint32,uint32,uint24,uint24,uint24,uint24))":"4cb48a54","transferOwnership(address)":"f2fde38b","typeAndVersion()":"181f5a77"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"link\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"blockhashStore\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"linkEthFeed\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"internalBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"externalBalance\",\"type\":\"uint256\"}],\"name\":\"BalanceInvariantViolated\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNum\",\"type\":\"uint256\"}],\"name\":\"BlockhashNotInStore\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"have\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"want\",\"type\":\"uint32\"}],\"name\":\"GasLimitTooBig\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"IncorrectCommitment\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"have\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"want\",\"type\":\"uint256\"}],\"name\":\"InsufficientGasForConsumer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidCalldata\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"consumer\",\"type\":\"address\"}],\"name\":\"InvalidConsumer\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"linkWei\",\"type\":\"int256\"}],\"name\":\"InvalidLinkWeiPrice\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"have\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"min\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"max\",\"type\":\"uint16\"}],\"name\":\"InvalidRequestConfirmations\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSubscription\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"proposedOwner\",\"type\":\"address\"}],\"name\":\"MustBeRequestedOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"MustBeSubOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoCorrespondingRequest\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"keyHash\",\"type\":\"bytes32\"}],\"name\":\"NoSuchProvingKey\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"have\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"want\",\"type\":\"uint32\"}],\"name\":\"NumWordsTooBig\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OnlyCallableFromLink\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PaymentTooLarge\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PendingRequestExists\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"keyHash\",\"type\":\"bytes32\"}],\"name\":\"ProvingKeyAlreadyRegistered\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Reentrant\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TooManyConsumers\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"minimumRequestConfirmations\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"maxGasLimit\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"stalenessSeconds\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"gasAfterPaymentCalculation\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"fallbackWeiPerUnitLink\",\"type\":\"int256\"},{\"components\":[{\"internalType\":\"uint32\",\"name\":\"fulfillmentFlatFeeLinkPPMTier1\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"fulfillmentFlatFeeLinkPPMTier2\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"fulfillmentFlatFeeLinkPPMTier3\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"fulfillmentFlatFeeLinkPPMTier4\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"fulfillmentFlatFeeLinkPPMTier5\",\"type\":\"uint32\"},{\"internalType\":\"uint24\",\"name\":\"reqsForTier2\",\"type\":\"uint24\"},{\"internalType\":\"uint24\",\"name\":\"reqsForTier3\",\"type\":\"uint24\"},{\"internalType\":\"uint24\",\"name\":\"reqsForTier4\",\"type\":\"uint24\"},{\"internalType\":\"uint24\",\"name\":\"reqsForTier5\",\"type\":\"uint24\"}],\"indexed\":false,\"internalType\":\"struct VRFCoordinatorV2.FeeConfig\",\"name\":\"feeConfig\",\"type\":\"tuple\"}],\"name\":\"ConfigSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"FundsRecovered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"keyHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oracle\",\"type\":\"address\"}],\"name\":\"ProvingKeyDeregistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"keyHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oracle\",\"type\":\"address\"}],\"name\":\"ProvingKeyRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"outputSeed\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint96\",\"name\":\"payment\",\"type\":\"uint96\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"name\":\"RandomWordsFulfilled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"keyHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"preSeed\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"minimumRequestConfirmations\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"callbackGasLimit\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"numWords\",\"type\":\"uint32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RandomWordsRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"SubscriptionCanceled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"consumer\",\"type\":\"address\"}],\"name\":\"SubscriptionConsumerAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"consumer\",\"type\":\"address\"}],\"name\":\"SubscriptionConsumerRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"SubscriptionCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldBalance\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"}],\"name\":\"SubscriptionFunded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"SubscriptionOwnerTransferRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"SubscriptionOwnerTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BLOCKHASH_STORE\",\"outputs\":[{\"internalType\":\"contract BlockhashStoreInterface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LINK\",\"outputs\":[{\"internalType\":\"contract LinkTokenInterface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LINK_ETH_FEED\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_CONSUMERS\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_NUM_WORDS\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_REQUEST_CONFIRMATIONS\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"}],\"name\":\"acceptSubscriptionOwnerTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"consumer\",\"type\":\"address\"}],\"name\":\"addConsumer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"cancelSubscription\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"createSubscription\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[2]\",\"name\":\"publicProvingKey\",\"type\":\"uint256[2]\"}],\"name\":\"deregisterProvingKey\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256[2]\",\"name\":\"pk\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"gamma\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256\",\"name\":\"c\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"s\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"seed\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"uWitness\",\"type\":\"address\"},{\"internalType\":\"uint256[2]\",\"name\":\"cGammaWitness\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"sHashWitness\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256\",\"name\":\"zInv\",\"type\":\"uint256\"}],\"internalType\":\"struct VRF.Proof\",\"name\":\"proof\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint64\",\"name\":\"blockNum\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"uint32\",\"name\":\"callbackGasLimit\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"numWords\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"internalType\":\"struct VRFCoordinatorV2.RequestCommitment\",\"name\":\"rc\",\"type\":\"tuple\"}],\"name\":\"fulfillRandomWords\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"}],\"name\":\"getCommitment\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getConfig\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"minimumRequestConfirmations\",\"type\":\"uint16\"},{\"internalType\":\"uint32\",\"name\":\"maxGasLimit\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"stalenessSeconds\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"gasAfterPaymentCalculation\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentSubId\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFallbackWeiPerUnitLink\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFeeConfig\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"fulfillmentFlatFeeLinkPPMTier1\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"fulfillmentFlatFeeLinkPPMTier2\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"fulfillmentFlatFeeLinkPPMTier3\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"fulfillmentFlatFeeLinkPPMTier4\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"fulfillmentFlatFeeLinkPPMTier5\",\"type\":\"uint32\"},{\"internalType\":\"uint24\",\"name\":\"reqsForTier2\",\"type\":\"uint24\"},{\"internalType\":\"uint24\",\"name\":\"reqsForTier3\",\"type\":\"uint24\"},{\"internalType\":\"uint24\",\"name\":\"reqsForTier4\",\"type\":\"uint24\"},{\"internalType\":\"uint24\",\"name\":\"reqsForTier5\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"reqCount\",\"type\":\"uint64\"}],\"name\":\"getFeeTier\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRequestConfig\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"},{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"},{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"}],\"name\":\"getSubscription\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"balance\",\"type\":\"uint96\"},{\"internalType\":\"uint64\",\"name\":\"reqCount\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"consumers\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[2]\",\"name\":\"publicKey\",\"type\":\"uint256[2]\"}],\"name\":\"hashOfKey\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onTokenTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"amount\",\"type\":\"uint96\"}],\"name\":\"oracleWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"}],\"name\":\"ownerCancelSubscription\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"}],\"name\":\"pendingRequestExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"recoverFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oracle\",\"type\":\"address\"},{\"internalType\":\"uint256[2]\",\"name\":\"publicProvingKey\",\"type\":\"uint256[2]\"}],\"name\":\"registerProvingKey\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"consumer\",\"type\":\"address\"}],\"name\":\"removeConsumer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"keyHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"uint16\",\"name\":\"requestConfirmations\",\"type\":\"uint16\"},{\"internalType\":\"uint32\",\"name\":\"callbackGasLimit\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"numWords\",\"type\":\"uint32\"}],\"name\":\"requestRandomWords\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"requestSubscriptionOwnerTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"minimumRequestConfirmations\",\"type\":\"uint16\"},{\"internalType\":\"uint32\",\"name\":\"maxGasLimit\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"stalenessSeconds\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"gasAfterPaymentCalculation\",\"type\":\"uint32\"},{\"internalType\":\"int256\",\"name\":\"fallbackWeiPerUnitLink\",\"type\":\"int256\"},{\"components\":[{\"internalType\":\"uint32\",\"name\":\"fulfillmentFlatFeeLinkPPMTier1\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"fulfillmentFlatFeeLinkPPMTier2\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"fulfillmentFlatFeeLinkPPMTier3\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"fulfillmentFlatFeeLinkPPMTier4\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"fulfillmentFlatFeeLinkPPMTier5\",\"type\":\"uint32\"},{\"internalType\":\"uint24\",\"name\":\"reqsForTier2\",\"type\":\"uint24\"},{\"internalType\":\"uint24\",\"name\":\"reqsForTier3\",\"type\":\"uint24\"},{\"internalType\":\"uint24\",\"name\":\"reqsForTier4\",\"type\":\"uint24\"},{\"internalType\":\"uint24\",\"name\":\"reqsForTier5\",\"type\":\"uint24\"}],\"internalType\":\"struct VRFCoordinatorV2.FeeConfig\",\"name\":\"feeConfig\",\"type\":\"tuple\"}],\"name\":\"setConfig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"typeAndVersion\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"acceptSubscriptionOwnerTransfer(uint64)\":{\"details\":\"will revert if original owner of subId has not requested that msg.sender become the new owner.\",\"params\":{\"subId\":\"- ID of the subscription\"}},\"addConsumer(uint64,address)\":{\"params\":{\"consumer\":\"- New consumer which can use the subscription\",\"subId\":\"- ID of the subscription\"}},\"cancelSubscription(uint64,address)\":{\"params\":{\"subId\":\"- ID of the subscription\",\"to\":\"- Where to send the remaining LINK to\"}},\"createSubscription()\":{\"details\":\"You can manage the consumer set dynamically with addConsumer/removeConsumer.Note to fund the subscription, use transferAndCall. For exampleLINKTOKEN.transferAndCall(address(COORDINATOR),amount,abi.encode(subId));\",\"returns\":{\"_0\":\"- A unique subscription id.\"}},\"deregisterProvingKey(uint256[2])\":{\"params\":{\"publicProvingKey\":\"key that oracle can use to submit vrf fulfillments\"}},\"getCommitment(uint256)\":{\"details\":\"used to determine if a request is fulfilled or not\",\"params\":{\"requestId\":\"id of request\"}},\"getRequestConfig()\":{\"returns\":{\"_0\":\"minimumRequestConfirmations global min for request confirmations\",\"_1\":\"maxGasLimit global max for request gas limit\",\"_2\":\"s_provingKeyHashes list of registered key hashes\"}},\"getSubscription(uint64)\":{\"params\":{\"subId\":\"- ID of the subscription\"},\"returns\":{\"balance\":\"- LINK balance of the subscription in juels.\",\"consumers\":\"- list of consumer address which are able to use this subscription.\",\"owner\":\"- owner of the subscription.\",\"reqCount\":\"- number of requests for this subscription, determines fee tier.\"}},\"hashOfKey(uint256[2])\":{\"params\":{\"publicKey\":\"the key to return the hash of\"}},\"ownerCancelSubscription(uint64)\":{\"details\":\"notably can be called even if there are pending requests, outstanding ones may fail onchain\",\"params\":{\"subId\":\"subscription id\"}},\"pendingRequestExists(uint64)\":{\"details\":\"Looping is bounded to MAX_CONSUMERS*(number of keyhashes).Used to disable subscription canceling while outstanding request are present.\"},\"recoverFunds(address)\":{\"params\":{\"to\":\"address to send link to\"}},\"registerProvingKey(address,uint256[2])\":{\"params\":{\"oracle\":\"address of the oracle\",\"publicProvingKey\":\"key that oracle can use to submit vrf fulfillments\"}},\"removeConsumer(uint64,address)\":{\"params\":{\"consumer\":\"- Consumer to remove from the subscription\",\"subId\":\"- ID of the subscription\"}},\"requestRandomWords(bytes32,uint64,uint16,uint32,uint32)\":{\"params\":{\"callbackGasLimit\":\"- How much gas you'd like to receive in your fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords may be slightly less than this amount because of gas used calling the function (argument decoding etc.), so you may need to request slightly more than you expect to have inside fulfillRandomWords. The acceptable range is [0, maxGasLimit]\",\"keyHash\":\"- Corresponds to a particular oracle job which uses that key for generating the VRF proof. Different keyHash's have different gas price ceilings, so you can select a specific one to bound your maximum per request cost.\",\"minimumRequestConfirmations\":\"- How many blocks you'd like the oracle to wait before responding to the request. See SECURITY CONSIDERATIONS for why you may want to request more. The acceptable range is [minimumRequestBlockConfirmations, 200].\",\"numWords\":\"- The number of uint256 random values you'd like to receive in your fulfillRandomWords callback. Note these numbers are expanded in a secure way by the VRFCoordinator from a single random value supplied by the oracle.\",\"subId\":\"- The ID of the VRF subscription. Must be funded with the minimum subscription balance required for the selected keyHash.\"},\"returns\":{\"_0\":\"- A unique identifier of the request. Can be used to match a request to a response in fulfillRandomWords.\"}},\"requestSubscriptionOwnerTransfer(uint64,address)\":{\"params\":{\"newOwner\":\"- proposed new owner of the subscription\",\"subId\":\"- ID of the subscription\"}},\"setConfig(uint16,uint32,uint32,uint32,int256,(uint32,uint32,uint32,uint32,uint32,uint24,uint24,uint24,uint24))\":{\"params\":{\"fallbackWeiPerUnitLink\":\"fallback eth/link price in the case of a stale feed\",\"feeConfig\":\"fee tier configuration\",\"gasAfterPaymentCalculation\":\"gas used in doing accounting after completing the gas measurement\",\"maxGasLimit\":\"global max for request gas limit\",\"minimumRequestConfirmations\":\"global min for request confirmations\",\"stalenessSeconds\":\"if the eth/link feed is more stale then this, use the fallback price\"}},\"typeAndVersion()\":{\"returns\":{\"_0\":\"Type and version string\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptOwnership()\":{\"notice\":\"Allows an ownership transfer to be completed by the recipient.\"},\"acceptSubscriptionOwnerTransfer(uint64)\":{\"notice\":\"Request subscription owner transfer.\"},\"addConsumer(uint64,address)\":{\"notice\":\"Add a consumer to a VRF subscription.\"},\"cancelSubscription(uint64,address)\":{\"notice\":\"Cancel a subscription\"},\"createSubscription()\":{\"notice\":\"Create a VRF subscription.\"},\"deregisterProvingKey(uint256[2])\":{\"notice\":\"Deregisters a proving key to an oracle.\"},\"getCommitment(uint256)\":{\"notice\":\"Get request commitment\"},\"getRequestConfig()\":{\"notice\":\"Get configuration relevant for making requests\"},\"getSubscription(uint64)\":{\"notice\":\"Get a VRF subscription.\"},\"hashOfKey(uint256[2])\":{\"notice\":\"Returns the proving key hash key associated with this public key\"},\"owner()\":{\"notice\":\"Get the current owner\"},\"ownerCancelSubscription(uint64)\":{\"notice\":\"Owner cancel subscription, sends remaining link directly to the subscription owner.\"},\"recoverFunds(address)\":{\"notice\":\"Recover link sent with transfer instead of transferAndCall.\"},\"registerProvingKey(address,uint256[2])\":{\"notice\":\"Registers a proving key to an oracle.\"},\"removeConsumer(uint64,address)\":{\"notice\":\"Remove a consumer from a VRF subscription.\"},\"requestRandomWords(bytes32,uint64,uint16,uint32,uint32)\":{\"notice\":\"Request a set of random words.\"},\"requestSubscriptionOwnerTransfer(uint64,address)\":{\"notice\":\"Request subscription owner transfer.\"},\"setConfig(uint16,uint32,uint32,uint32,int256,(uint32,uint32,uint32,uint32,uint32,uint24,uint24,uint24,uint24))\":{\"notice\":\"Sets the configuration of the vrfv2 coordinator\"},\"transferOwnership(address)\":{\"notice\":\"Allows an owner to begin transferring ownership to a new address, pending.\"},\"typeAndVersion()\":{\"notice\":\"The type and version of this contract\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/vrf/VRFCoordinatorV2.sol\":\"VRFCoordinatorV2\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/ChainSpecificUtil.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\n\\nimport {ArbSys} from \\\"./vendor/@arbitrum/nitro-contracts/src/precompiles/ArbSys.sol\\\";\\nimport {ArbGasInfo} from \\\"./vendor/@arbitrum/nitro-contracts/src/precompiles/ArbGasInfo.sol\\\";\\n\\n//@dev A library that abstracts out opcodes that behave differently across chains.\\n//@dev The methods below return values that are pertinent to the given chain.\\n//@dev For instance, ChainSpecificUtil.getBlockNumber() returns L2 block number in L2 chains\\nlibrary ChainSpecificUtil {\\n  address private constant ARBSYS_ADDR = address(0x0000000000000000000000000000000000000064);\\n  ArbSys private constant ARBSYS = ArbSys(ARBSYS_ADDR);\\n  address private constant ARBGAS_ADDR = address(0x000000000000000000000000000000000000006C);\\n  ArbGasInfo private constant ARBGAS = ArbGasInfo(ARBGAS_ADDR);\\n  uint256 private constant ARB_MAINNET_CHAIN_ID = 42161;\\n  uint256 private constant ARB_GOERLI_TESTNET_CHAIN_ID = 421613;\\n  uint256 private constant ARB_SEPOLIA_TESTNET_CHAIN_ID = 421614;\\n\\n  function getBlockhash(uint64 blockNumber) internal view returns (bytes32) {\\n    uint256 chainid = block.chainid;\\n    if (\\n      chainid == ARB_MAINNET_CHAIN_ID ||\\n      chainid == ARB_GOERLI_TESTNET_CHAIN_ID ||\\n      chainid == ARB_SEPOLIA_TESTNET_CHAIN_ID\\n    ) {\\n      if ((getBlockNumber() - blockNumber) > 256 || blockNumber >= getBlockNumber()) {\\n        return \\\"\\\";\\n      }\\n      return ARBSYS.arbBlockHash(blockNumber);\\n    }\\n    return blockhash(blockNumber);\\n  }\\n\\n  function getBlockNumber() internal view returns (uint256) {\\n    uint256 chainid = block.chainid;\\n    if (chainid == ARB_MAINNET_CHAIN_ID || chainid == ARB_GOERLI_TESTNET_CHAIN_ID) {\\n      return ARBSYS.arbBlockNumber();\\n    }\\n    return block.number;\\n  }\\n\\n  function getCurrentTxL1GasFees() internal view returns (uint256) {\\n    uint256 chainid = block.chainid;\\n    if (chainid == ARB_MAINNET_CHAIN_ID || chainid == ARB_GOERLI_TESTNET_CHAIN_ID) {\\n      return ARBGAS.getCurrentTxL1GasFees();\\n    }\\n    return 0;\\n  }\\n\\n  /**\\n   * @notice Returns the gas cost in wei of calldataSizeBytes of calldata being posted\\n   * @notice to L1.\\n   */\\n  function getL1CalldataGasCost(uint256 calldataSizeBytes) internal view returns (uint256) {\\n    uint256 chainid = block.chainid;\\n    if (chainid == ARB_MAINNET_CHAIN_ID || chainid == ARB_GOERLI_TESTNET_CHAIN_ID) {\\n      (, uint256 l1PricePerByte, , , , ) = ARBGAS.getPricesInWei();\\n      // see https://developer.arbitrum.io/devs-how-tos/how-to-estimate-gas#where-do-we-get-all-this-information-from\\n      // for the justification behind the 140 number.\\n      return l1PricePerByte * (calldataSizeBytes + 140);\\n    }\\n    return 0;\\n  }\\n}\\n\",\"keccak256\":\"0x5a544649bb97cde531acc7bdb25a6c4b5f4f6bcbd592b57c4e2de201c251bcd7\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(\\n    uint80 _roundId\\n  ) external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n}\\n\",\"keccak256\":\"0xfe4e8bb4861bb3860ba890ab91a3b818ec66e5a8f544fb608cfcb73f433472cd\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/interfaces/BlockhashStoreInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface BlockhashStoreInterface {\\n  function getBlockhash(uint256 number) external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x0d39e3be84000b35faa198e8c4fcc1cfd65a876275c776f45b4e0d48c852b4cc\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/interfaces/TypeAndVersionInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nabstract contract TypeAndVersionInterface {\\n  function typeAndVersion() external pure virtual returns (string memory);\\n}\\n\",\"keccak256\":\"0x805cc9a91d54db1bea60cb19f38364f1eac2735bddb3476294fb803c2f6b7097\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface VRFCoordinatorV2Interface {\\n  /**\\n   * @notice Get configuration relevant for making requests\\n   * @return minimumRequestConfirmations global min for request confirmations\\n   * @return maxGasLimit global max for request gas limit\\n   * @return s_provingKeyHashes list of registered key hashes\\n   */\\n  function getRequestConfig() external view returns (uint16, uint32, bytes32[] memory);\\n\\n  /**\\n   * @notice Request a set of random words.\\n   * @param keyHash - Corresponds to a particular oracle job which uses\\n   * that key for generating the VRF proof. Different keyHash's have different gas price\\n   * ceilings, so you can select a specific one to bound your maximum per request cost.\\n   * @param subId  - The ID of the VRF subscription. Must be funded\\n   * with the minimum subscription balance required for the selected keyHash.\\n   * @param minimumRequestConfirmations - How many blocks you'd like the\\n   * oracle to wait before responding to the request. See SECURITY CONSIDERATIONS\\n   * for why you may want to request more. The acceptable range is\\n   * [minimumRequestBlockConfirmations, 200].\\n   * @param callbackGasLimit - How much gas you'd like to receive in your\\n   * fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords\\n   * may be slightly less than this amount because of gas used calling the function\\n   * (argument decoding etc.), so you may need to request slightly more than you expect\\n   * to have inside fulfillRandomWords. The acceptable range is\\n   * [0, maxGasLimit]\\n   * @param numWords - The number of uint256 random values you'd like to receive\\n   * in your fulfillRandomWords callback. Note these numbers are expanded in a\\n   * secure way by the VRFCoordinator from a single random value supplied by the oracle.\\n   * @return requestId - A unique identifier of the request. Can be used to match\\n   * a request to a response in fulfillRandomWords.\\n   */\\n  function requestRandomWords(\\n    bytes32 keyHash,\\n    uint64 subId,\\n    uint16 minimumRequestConfirmations,\\n    uint32 callbackGasLimit,\\n    uint32 numWords\\n  ) external returns (uint256 requestId);\\n\\n  /**\\n   * @notice Create a VRF subscription.\\n   * @return subId - A unique subscription id.\\n   * @dev You can manage the consumer set dynamically with addConsumer/removeConsumer.\\n   * @dev Note to fund the subscription, use transferAndCall. For example\\n   * @dev  LINKTOKEN.transferAndCall(\\n   * @dev    address(COORDINATOR),\\n   * @dev    amount,\\n   * @dev    abi.encode(subId));\\n   */\\n  function createSubscription() external returns (uint64 subId);\\n\\n  /**\\n   * @notice Get a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @return balance - LINK balance of the subscription in juels.\\n   * @return reqCount - number of requests for this subscription, determines fee tier.\\n   * @return owner - owner of the subscription.\\n   * @return consumers - list of consumer address which are able to use this subscription.\\n   */\\n  function getSubscription(\\n    uint64 subId\\n  ) external view returns (uint96 balance, uint64 reqCount, address owner, address[] memory consumers);\\n\\n  /**\\n   * @notice Request subscription owner transfer.\\n   * @param subId - ID of the subscription\\n   * @param newOwner - proposed new owner of the subscription\\n   */\\n  function requestSubscriptionOwnerTransfer(uint64 subId, address newOwner) external;\\n\\n  /**\\n   * @notice Request subscription owner transfer.\\n   * @param subId - ID of the subscription\\n   * @dev will revert if original owner of subId has\\n   * not requested that msg.sender become the new owner.\\n   */\\n  function acceptSubscriptionOwnerTransfer(uint64 subId) external;\\n\\n  /**\\n   * @notice Add a consumer to a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @param consumer - New consumer which can use the subscription\\n   */\\n  function addConsumer(uint64 subId, address consumer) external;\\n\\n  /**\\n   * @notice Remove a consumer from a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @param consumer - Consumer to remove from the subscription\\n   */\\n  function removeConsumer(uint64 subId, address consumer) external;\\n\\n  /**\\n   * @notice Cancel a subscription\\n   * @param subId - ID of the subscription\\n   * @param to - Where to send the remaining LINK to\\n   */\\n  function cancelSubscription(uint64 subId, address to) external;\\n\\n  /*\\n   * @notice Check to see if there exists a request commitment consumers\\n   * for all consumers and keyhashes for a given sub.\\n   * @param subId - ID of the subscription\\n   * @return true if there exists at least one unfulfilled request for the subscription, false\\n   * otherwise.\\n   */\\n  function pendingRequestExists(uint64 subId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xa9f8b7e09811f4ac9f421116b5d6bcf50b5748025c0cb012aaf5ff7c39a6b46a\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"./ConfirmedOwnerWithProposal.sol\\\";\\n\\n/**\\n * @title The ConfirmedOwner contract\\n * @notice A contract with helpers for basic contract ownership.\\n */\\ncontract ConfirmedOwner is ConfirmedOwnerWithProposal {\\n  constructor(address newOwner) ConfirmedOwnerWithProposal(newOwner, address(0)) {}\\n}\\n\",\"keccak256\":\"0x99d0b0786fe368970009c703f2249bfbc56340ddf1a28b60d2915bb58c34cd72\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"../interfaces/IOwnable.sol\\\";\\n\\n/**\\n * @title The ConfirmedOwner contract\\n * @notice A contract with helpers for basic contract ownership.\\n */\\ncontract ConfirmedOwnerWithProposal is IOwnable {\\n  address private s_owner;\\n  address private s_pendingOwner;\\n\\n  event OwnershipTransferRequested(address indexed from, address indexed to);\\n  event OwnershipTransferred(address indexed from, address indexed to);\\n\\n  constructor(address newOwner, address pendingOwner) {\\n    require(newOwner != address(0), \\\"Cannot set owner to zero\\\");\\n\\n    s_owner = newOwner;\\n    if (pendingOwner != address(0)) {\\n      _transferOwnership(pendingOwner);\\n    }\\n  }\\n\\n  /**\\n   * @notice Allows an owner to begin transferring ownership to a new address,\\n   * pending.\\n   */\\n  function transferOwnership(address to) public override onlyOwner {\\n    _transferOwnership(to);\\n  }\\n\\n  /**\\n   * @notice Allows an ownership transfer to be completed by the recipient.\\n   */\\n  function acceptOwnership() external override {\\n    require(msg.sender == s_pendingOwner, \\\"Must be proposed owner\\\");\\n\\n    address oldOwner = s_owner;\\n    s_owner = msg.sender;\\n    s_pendingOwner = address(0);\\n\\n    emit OwnershipTransferred(oldOwner, msg.sender);\\n  }\\n\\n  /**\\n   * @notice Get the current owner\\n   */\\n  function owner() public view override returns (address) {\\n    return s_owner;\\n  }\\n\\n  /**\\n   * @notice validate, transfer ownership, and emit relevant events\\n   */\\n  function _transferOwnership(address to) private {\\n    require(to != msg.sender, \\\"Cannot transfer to self\\\");\\n\\n    s_pendingOwner = to;\\n\\n    emit OwnershipTransferRequested(s_owner, to);\\n  }\\n\\n  /**\\n   * @notice validate access\\n   */\\n  function _validateOwnership() internal view {\\n    require(msg.sender == s_owner, \\\"Only callable by owner\\\");\\n  }\\n\\n  /**\\n   * @notice Reverts if called by anyone other than the contract owner.\\n   */\\n  modifier onlyOwner() {\\n    _validateOwnership();\\n    _;\\n  }\\n}\\n\",\"keccak256\":\"0x215529a99534a40e6257ef2282a91ea4a95b66debc3997866406907622efb405\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/shared/interfaces/IERC677Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.6;\\n\\ninterface IERC677Receiver {\\n  function onTokenTransfer(address sender, uint256 amount, bytes calldata data) external;\\n}\\n\",\"keccak256\":\"0x5f9ee31598e2250815033c2f4e1e7e747f917815378938505063df1d4ae603ec\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/shared/interfaces/IOwnable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface IOwnable {\\n  function owner() external returns (address);\\n\\n  function transferOwnership(address recipient) external;\\n\\n  function acceptOwnership() external;\\n}\\n\",\"keccak256\":\"0x885de72b7b4e4f1bf8ba817a3f2bcc37fd9022d342c4ce76782151c30122d767\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/shared/interfaces/LinkTokenInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface LinkTokenInterface {\\n  function allowance(address owner, address spender) external view returns (uint256 remaining);\\n\\n  function approve(address spender, uint256 value) external returns (bool success);\\n\\n  function balanceOf(address owner) external view returns (uint256 balance);\\n\\n  function decimals() external view returns (uint8 decimalPlaces);\\n\\n  function decreaseApproval(address spender, uint256 addedValue) external returns (bool success);\\n\\n  function increaseApproval(address spender, uint256 subtractedValue) external;\\n\\n  function name() external view returns (string memory tokenName);\\n\\n  function symbol() external view returns (string memory tokenSymbol);\\n\\n  function totalSupply() external view returns (uint256 totalTokensIssued);\\n\\n  function transfer(address to, uint256 value) external returns (bool success);\\n\\n  function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool success);\\n\\n  function transferFrom(address from, address to, uint256 value) external returns (bool success);\\n}\\n\",\"keccak256\":\"0xac02fbc0c7d194e525a71f524d1f7c472df73e19c2b527d7b529badaeaf0ec51\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/vendor/@arbitrum/nitro-contracts/src/precompiles/ArbGasInfo.sol\":{\"content\":\"// Copyright 2021-2022, Offchain Labs, Inc.\\n// For license information, see https://github.com/nitro/blob/master/LICENSE\\n// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity >=0.4.21 <0.9.0;\\n\\ninterface ArbGasInfo {\\n    // return gas prices in wei, assuming the specified aggregator is used\\n    //        (\\n    //            per L2 tx,\\n    //            per L1 calldata unit, (zero byte = 4 units, nonzero byte = 16 units)\\n    //            per storage allocation,\\n    //            per ArbGas base,\\n    //            per ArbGas congestion,\\n    //            per ArbGas total\\n    //        )\\n    function getPricesInWeiWithAggregator(address aggregator) external view returns (uint, uint, uint, uint, uint, uint);\\n\\n    // return gas prices in wei, as described above, assuming the caller's preferred aggregator is used\\n    //     if the caller hasn't specified a preferred aggregator, the default aggregator is assumed\\n    function getPricesInWei() external view returns (uint, uint, uint, uint, uint, uint);\\n\\n    // return prices in ArbGas (per L2 tx, per L1 calldata unit, per storage allocation),\\n    //       assuming the specified aggregator is used\\n    function getPricesInArbGasWithAggregator(address aggregator) external view returns (uint, uint, uint);\\n\\n    // return gas prices in ArbGas, as described above, assuming the caller's preferred aggregator is used\\n    //     if the caller hasn't specified a preferred aggregator, the default aggregator is assumed\\n    function getPricesInArbGas() external view returns (uint, uint, uint);\\n\\n    // return gas accounting parameters (speedLimitPerSecond, gasPoolMax, maxTxGasLimit)\\n    function getGasAccountingParams() external view returns (uint, uint, uint);\\n\\n    // get ArbOS's estimate of the L1 gas price in wei\\n    function getL1GasPriceEstimate() external view returns(uint);\\n\\n    // set ArbOS's estimate of the L1 gas price in wei\\n    // reverts unless called by chain owner or designated gas oracle (if any)\\n    function setL1GasPriceEstimate(uint priceInWei) external;\\n\\n    // get L1 gas fees paid by the current transaction (txBaseFeeWei, calldataFeeWei)\\n    function getCurrentTxL1GasFees() external view returns(uint);\\n}\\n\",\"keccak256\":\"0x70607287132cc13f599a31a2eb679f4259f86429ea2fdf4f8f02be3044f6db5a\",\"license\":\"BUSL-1.1\"},\"@chainlink/contracts/src/v0.8/vendor/@arbitrum/nitro-contracts/src/precompiles/ArbSys.sol\":{\"content\":\"// Copyright 2021-2022, Offchain Labs, Inc.\\n// For license information, see https://github.com/nitro/blob/master/LICENSE\\n// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity >=0.4.21 <0.9.0;\\n\\n/**\\n * @title System level functionality\\n * @notice For use by contracts to interact with core L2-specific functionality.\\n * Precompiled contract that exists in every Arbitrum chain at address(100), 0x0000000000000000000000000000000000000064.\\n */\\ninterface ArbSys {\\n    /**\\n     * @notice Get Arbitrum block number (distinct from L1 block number; Arbitrum genesis block has block number 0)\\n     * @return block number as int\\n     */\\n    function arbBlockNumber() external view returns (uint256);\\n\\n    /**\\n     * @notice Get Arbitrum block hash (reverts unless currentBlockNum-256 <= arbBlockNum < currentBlockNum)\\n     * @return block hash\\n     */\\n    function arbBlockHash(uint256 arbBlockNum) external view returns (bytes32);\\n\\n    /**\\n     * @notice Gets the rollup's unique chain identifier\\n     * @return Chain identifier as int\\n     */\\n    function arbChainID() external view returns (uint256);\\n\\n    /**\\n     * @notice Get internal version number identifying an ArbOS build\\n     * @return version number as int\\n     */\\n    function arbOSVersion() external view returns (uint256);\\n\\n    /**\\n     * @notice Returns 0 since Nitro has no concept of storage gas\\n     * @return uint 0\\n     */\\n    function getStorageGasAvailable() external view returns (uint256);\\n\\n    /**\\n     * @notice (deprecated) check if current call is top level (meaning it was triggered by an EoA or a L1 contract)\\n     * @dev this call has been deprecated and may be removed in a future release\\n     * @return true if current execution frame is not a call by another L2 contract\\n     */\\n    function isTopLevelCall() external view returns (bool);\\n\\n    /**\\n     * @notice map L1 sender contract address to its L2 alias\\n     * @param sender sender address\\n     * @param unused argument no longer used\\n     * @return aliased sender address\\n     */\\n    function mapL1SenderContractAddressToL2Alias(address sender, address unused)\\n        external\\n        pure\\n        returns (address);\\n\\n    /**\\n     * @notice check if the caller (of this caller of this) is an aliased L1 contract address\\n     * @return true iff the caller's address is an alias for an L1 contract address\\n     */\\n    function wasMyCallersAddressAliased() external view returns (bool);\\n\\n    /**\\n     * @notice return the address of the caller (of this caller of this), without applying L1 contract address aliasing\\n     * @return address of the caller's caller, without applying L1 contract address aliasing\\n     */\\n    function myCallersAddressWithoutAliasing() external view returns (address);\\n\\n    /**\\n     * @notice Send given amount of Eth to dest from sender.\\n     * This is a convenience function, which is equivalent to calling sendTxToL1 with empty data.\\n     * @param destination recipient address on L1\\n     * @return unique identifier for this L2-to-L1 transaction.\\n     */\\n    function withdrawEth(address destination)\\n        external\\n        payable\\n        returns (uint256);\\n\\n    /**\\n     * @notice Send a transaction to L1\\n     * @dev it is not possible to execute on the L1 any L2-to-L1 transaction which contains data\\n     * to a contract address without any code (as enforced by the Bridge contract).\\n     * @param destination recipient address on L1\\n     * @param data (optional) calldata for L1 contract call\\n     * @return a unique identifier for this L2-to-L1 transaction.\\n     */\\n    function sendTxToL1(address destination, bytes calldata data)\\n        external\\n        payable\\n        returns (uint256);\\n\\n    /**\\n     * @notice Get send Merkle tree state\\n     * @return size number of sends in the history\\n     * @return root root hash of the send history\\n     * @return partials hashes of partial subtrees in the send history tree\\n     */\\n    function sendMerkleTreeState()\\n        external\\n        view\\n        returns (\\n            uint256 size,\\n            bytes32 root,\\n            bytes32[] memory partials\\n        );\\n\\n    /**\\n     * @notice creates a send txn from L2 to L1\\n     * @param position = (level << 192) + leaf = (0 << 192) + leaf = leaf\\n     */\\n    event L2ToL1Tx(\\n        address caller,\\n        address indexed destination,\\n        uint256 indexed hash,\\n        uint256 indexed position,\\n        uint256 arbBlockNum,\\n        uint256 ethBlockNum,\\n        uint256 timestamp,\\n        uint256 callvalue,\\n        bytes data\\n    );\\n\\n    /// @dev DEPRECATED in favour of the new L2ToL1Tx event above after the nitro upgrade\\n    event L2ToL1Transaction(\\n        address caller,\\n        address indexed destination,\\n        uint256 indexed uniqueId,\\n        uint256 indexed batchNumber,\\n        uint256 indexInBatch,\\n        uint256 arbBlockNum,\\n        uint256 ethBlockNum,\\n        uint256 timestamp,\\n        uint256 callvalue,\\n        bytes data\\n    );\\n\\n    /**\\n     * @notice logs a merkle branch for proof synthesis\\n     * @param reserved an index meant only to align the 4th index with L2ToL1Transaction's 4th event\\n     * @param hash the merkle hash\\n     * @param position = (level << 192) + leaf\\n     */\\n    event SendMerkleUpdate(\\n        uint256 indexed reserved,\\n        bytes32 indexed hash,\\n        uint256 indexed position\\n    );\\n}\\n\",\"keccak256\":\"0xa8461b373712cb0f4950ef9cad1d12fb38442da76cd57ff916baa7920f7b5077\",\"license\":\"BUSL-1.1\"},\"@chainlink/contracts/src/v0.8/vrf/VRF.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n/** ****************************************************************************\\n  * @notice Verification of verifiable-random-function (VRF) proofs, following\\n  * @notice https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-5.3\\n  * @notice See https://eprint.iacr.org/2017/099.pdf for security proofs.\\n\\n  * @dev Bibliographic references:\\n\\n  * @dev Goldberg, et al., \\\"Verifiable Random Functions (VRFs)\\\", Internet Draft\\n  * @dev draft-irtf-cfrg-vrf-05, IETF, Aug 11 2019,\\n  * @dev https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05\\n\\n  * @dev Papadopoulos, et al., \\\"Making NSEC5 Practical for DNSSEC\\\", Cryptology\\n  * @dev ePrint Archive, Report 2017/099, https://eprint.iacr.org/2017/099.pdf\\n  * ****************************************************************************\\n  * @dev USAGE\\n\\n  * @dev The main entry point is randomValueFromVRFProof. See its docstring.\\n  * ****************************************************************************\\n  * @dev PURPOSE\\n\\n  * @dev Reggie the Random Oracle (not his real job) wants to provide randomness\\n  * @dev to Vera the verifier in such a way that Vera can be sure he's not\\n  * @dev making his output up to suit himself. Reggie provides Vera a public key\\n  * @dev to which he knows the secret key. Each time Vera provides a seed to\\n  * @dev Reggie, he gives back a value which is computed completely\\n  * @dev deterministically from the seed and the secret key.\\n\\n  * @dev Reggie provides a proof by which Vera can verify that the output was\\n  * @dev correctly computed once Reggie tells it to her, but without that proof,\\n  * @dev the output is computationally indistinguishable to her from a uniform\\n  * @dev random sample from the output space.\\n\\n  * @dev The purpose of this contract is to perform that verification.\\n  * ****************************************************************************\\n  * @dev DESIGN NOTES\\n\\n  * @dev The VRF algorithm verified here satisfies the full uniqueness, full\\n  * @dev collision resistance, and full pseudo-randomness security properties.\\n  * @dev See \\\"SECURITY PROPERTIES\\\" below, and\\n  * @dev https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-3\\n\\n  * @dev An elliptic curve point is generally represented in the solidity code\\n  * @dev as a uint256[2], corresponding to its affine coordinates in\\n  * @dev GF(FIELD_SIZE).\\n\\n  * @dev For the sake of efficiency, this implementation deviates from the spec\\n  * @dev in some minor ways:\\n\\n  * @dev - Keccak hash rather than the SHA256 hash recommended in\\n  * @dev   https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-5.5\\n  * @dev   Keccak costs much less gas on the EVM, and provides similar security.\\n\\n  * @dev - Secp256k1 curve instead of the P-256 or ED25519 curves recommended in\\n  * @dev   https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-5.5\\n  * @dev   For curve-point multiplication, it's much cheaper to abuse ECRECOVER\\n\\n  * @dev - hashToCurve recursively hashes until it finds a curve x-ordinate. On\\n  * @dev   the EVM, this is slightly more efficient than the recommendation in\\n  * @dev   https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-5.4.1.1\\n  * @dev   step 5, to concatenate with a nonce then hash, and rehash with the\\n  * @dev   nonce updated until a valid x-ordinate is found.\\n\\n  * @dev - hashToCurve does not include a cipher version string or the byte 0x1\\n  * @dev   in the hash message, as recommended in step 5.B of the draft\\n  * @dev   standard. They are unnecessary here because no variation in the\\n  * @dev   cipher suite is allowed.\\n\\n  * @dev - Similarly, the hash input in scalarFromCurvePoints does not include a\\n  * @dev   commitment to the cipher suite, either, which differs from step 2 of\\n  * @dev   https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-5.4.3\\n  * @dev   . Also, the hash input is the concatenation of the uncompressed\\n  * @dev   points, not the compressed points as recommended in step 3.\\n\\n  * @dev - In the calculation of the challenge value \\\"c\\\", the \\\"u\\\" value (i.e.\\n  * @dev   the value computed by Reggie as the nonce times the secp256k1\\n  * @dev   generator point, see steps 5 and 7 of\\n  * @dev   https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-5.3\\n  * @dev   ) is replaced by its ethereum address, i.e. the lower 160 bits of the\\n  * @dev   keccak hash of the original u. This is because we only verify the\\n  * @dev   calculation of u up to its address, by abusing ECRECOVER.\\n  * ****************************************************************************\\n  * @dev   SECURITY PROPERTIES\\n\\n  * @dev Here are the security properties for this VRF:\\n\\n  * @dev Full uniqueness: For any seed and valid VRF public key, there is\\n  * @dev   exactly one VRF output which can be proved to come from that seed, in\\n  * @dev   the sense that the proof will pass verifyVRFProof.\\n\\n  * @dev Full collision resistance: It's cryptographically infeasible to find\\n  * @dev   two seeds with same VRF output from a fixed, valid VRF key\\n\\n  * @dev Full pseudorandomness: Absent the proofs that the VRF outputs are\\n  * @dev   derived from a given seed, the outputs are computationally\\n  * @dev   indistinguishable from randomness.\\n\\n  * @dev https://eprint.iacr.org/2017/099.pdf, Appendix B contains the proofs\\n  * @dev for these properties.\\n\\n  * @dev For secp256k1, the key validation described in section\\n  * @dev https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-5.6\\n  * @dev is unnecessary, because secp256k1 has cofactor 1, and the\\n  * @dev representation of the public key used here (affine x- and y-ordinates\\n  * @dev of the secp256k1 point on the standard y^2=x^3+7 curve) cannot refer to\\n  * @dev the point at infinity.\\n  * ****************************************************************************\\n  * @dev OTHER SECURITY CONSIDERATIONS\\n  *\\n  * @dev The seed input to the VRF could in principle force an arbitrary amount\\n  * @dev of work in hashToCurve, by requiring extra rounds of hashing and\\n  * @dev checking whether that's yielded the x ordinate of a secp256k1 point.\\n  * @dev However, under the Random Oracle Model the probability of choosing a\\n  * @dev point which forces n extra rounds in hashToCurve is 2\\u207b\\u207f. The base cost\\n  * @dev for calling hashToCurve is about 25,000 gas, and each round of checking\\n  * @dev for a valid x ordinate costs about 15,555 gas, so to find a seed for\\n  * @dev which hashToCurve would cost more than 2,017,000 gas, one would have to\\n  * @dev try, in expectation, about 2\\u00b9\\u00b2\\u2078 seeds, which is infeasible for any\\n  * @dev foreseeable computational resources. (25,000 + 128 * 15,555 < 2,017,000.)\\n\\n  * @dev Since the gas block limit for the Ethereum main net is 10,000,000 gas,\\n  * @dev this means it is infeasible for an adversary to prevent correct\\n  * @dev operation of this contract by choosing an adverse seed.\\n\\n  * @dev (See TestMeasureHashToCurveGasCost for verification of the gas cost for\\n  * @dev hashToCurve.)\\n\\n  * @dev It may be possible to make a secure constant-time hashToCurve function.\\n  * @dev See notes in hashToCurve docstring.\\n*/\\ncontract VRF {\\n  // See https://www.secg.org/sec2-v2.pdf, section 2.4.1, for these constants.\\n  // Number of points in Secp256k1\\n  uint256 private constant GROUP_ORDER = 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141;\\n  // Prime characteristic of the galois field over which Secp256k1 is defined\\n  uint256 private constant FIELD_SIZE =\\n    // solium-disable-next-line indentation\\n    0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F;\\n  uint256 private constant WORD_LENGTH_BYTES = 0x20;\\n\\n  // (base^exponent) % FIELD_SIZE\\n  // Cribbed from https://medium.com/@rbkhmrcr/precompiles-solidity-e5d29bd428c4\\n  function bigModExp(uint256 base, uint256 exponent) internal view returns (uint256 exponentiation) {\\n    uint256 callResult;\\n    uint256[6] memory bigModExpContractInputs;\\n    bigModExpContractInputs[0] = WORD_LENGTH_BYTES; // Length of base\\n    bigModExpContractInputs[1] = WORD_LENGTH_BYTES; // Length of exponent\\n    bigModExpContractInputs[2] = WORD_LENGTH_BYTES; // Length of modulus\\n    bigModExpContractInputs[3] = base;\\n    bigModExpContractInputs[4] = exponent;\\n    bigModExpContractInputs[5] = FIELD_SIZE;\\n    uint256[1] memory output;\\n    assembly {\\n      // solhint-disable-line no-inline-assembly\\n      callResult := staticcall(\\n        not(0), // Gas cost: no limit\\n        0x05, // Bigmodexp contract address\\n        bigModExpContractInputs,\\n        0xc0, // Length of input segment: 6*0x20-bytes\\n        output,\\n        0x20 // Length of output segment\\n      )\\n    }\\n    if (callResult == 0) {\\n      revert(\\\"bigModExp failure!\\\");\\n    }\\n    return output[0];\\n  }\\n\\n  // Let q=FIELD_SIZE. q % 4 = 3, \\u2234 x\\u2261r^2 mod q \\u21d2 x^SQRT_POWER\\u2261\\u00b1r mod q.  See\\n  // https://en.wikipedia.org/wiki/Modular_square_root#Prime_or_prime_power_modulus\\n  uint256 private constant SQRT_POWER = (FIELD_SIZE + 1) >> 2;\\n\\n  // Computes a s.t. a^2 = x in the field. Assumes a exists\\n  function squareRoot(uint256 x) internal view returns (uint256) {\\n    return bigModExp(x, SQRT_POWER);\\n  }\\n\\n  // The value of y^2 given that (x,y) is on secp256k1.\\n  function ySquared(uint256 x) internal pure returns (uint256) {\\n    // Curve is y^2=x^3+7. See section 2.4.1 of https://www.secg.org/sec2-v2.pdf\\n    uint256 xCubed = mulmod(x, mulmod(x, x, FIELD_SIZE), FIELD_SIZE);\\n    return addmod(xCubed, 7, FIELD_SIZE);\\n  }\\n\\n  // True iff p is on secp256k1\\n  function isOnCurve(uint256[2] memory p) internal pure returns (bool) {\\n    // Section 2.3.6. in https://www.secg.org/sec1-v2.pdf\\n    // requires each ordinate to be in [0, ..., FIELD_SIZE-1]\\n    require(p[0] < FIELD_SIZE, \\\"invalid x-ordinate\\\");\\n    require(p[1] < FIELD_SIZE, \\\"invalid y-ordinate\\\");\\n    return ySquared(p[0]) == mulmod(p[1], p[1], FIELD_SIZE);\\n  }\\n\\n  // Hash x uniformly into {0, ..., FIELD_SIZE-1}.\\n  function fieldHash(bytes memory b) internal pure returns (uint256 x_) {\\n    x_ = uint256(keccak256(b));\\n    // Rejecting if x >= FIELD_SIZE corresponds to step 2.1 in section 2.3.4 of\\n    // http://www.secg.org/sec1-v2.pdf , which is part of the definition of\\n    // string_to_point in the IETF draft\\n    while (x_ >= FIELD_SIZE) {\\n      x_ = uint256(keccak256(abi.encodePacked(x_)));\\n    }\\n  }\\n\\n  // Hash b to a random point which hopefully lies on secp256k1. The y ordinate\\n  // is always even, due to\\n  // https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-5.4.1.1\\n  // step 5.C, which references arbitrary_string_to_point, defined in\\n  // https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-5.5 as\\n  // returning the point with given x ordinate, and even y ordinate.\\n  function newCandidateSecp256k1Point(bytes memory b) internal view returns (uint256[2] memory p) {\\n    unchecked {\\n      p[0] = fieldHash(b);\\n      p[1] = squareRoot(ySquared(p[0]));\\n      if (p[1] % 2 == 1) {\\n        // Note that 0 <= p[1] < FIELD_SIZE\\n        // so this cannot wrap, we use unchecked to save gas.\\n        p[1] = FIELD_SIZE - p[1];\\n      }\\n    }\\n  }\\n\\n  // Domain-separation tag for initial hash in hashToCurve. Corresponds to\\n  // vrf.go/hashToCurveHashPrefix\\n  uint256 internal constant HASH_TO_CURVE_HASH_PREFIX = 1;\\n\\n  // Cryptographic hash function onto the curve.\\n  //\\n  // Corresponds to algorithm in section 5.4.1.1 of the draft standard. (But see\\n  // DESIGN NOTES above for slight differences.)\\n  //\\n  // TODO(alx): Implement a bounded-computation hash-to-curve, as described in\\n  // \\\"Construction of Rational Points on Elliptic Curves over Finite Fields\\\"\\n  // http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.831.5299&rep=rep1&type=pdf\\n  // and suggested by\\n  // https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-hash-to-curve-01#section-5.2.2\\n  // (Though we can't used exactly that because secp256k1's j-invariant is 0.)\\n  //\\n  // This would greatly simplify the analysis in \\\"OTHER SECURITY CONSIDERATIONS\\\"\\n  // https://www.pivotaltracker.com/story/show/171120900\\n  function hashToCurve(uint256[2] memory pk, uint256 input) internal view returns (uint256[2] memory rv) {\\n    rv = newCandidateSecp256k1Point(abi.encodePacked(HASH_TO_CURVE_HASH_PREFIX, pk, input));\\n    while (!isOnCurve(rv)) {\\n      rv = newCandidateSecp256k1Point(abi.encodePacked(rv[0]));\\n    }\\n  }\\n\\n  /** *********************************************************************\\n   * @notice Check that product==scalar*multiplicand\\n   *\\n   * @dev Based on Vitalik Buterin's idea in ethresear.ch post cited below.\\n   *\\n   * @param multiplicand: secp256k1 point\\n   * @param scalar: non-zero GF(GROUP_ORDER) scalar\\n   * @param product: secp256k1 expected to be multiplier * multiplicand\\n   * @return verifies true iff product==scalar*multiplicand, with cryptographically high probability\\n   */\\n  function ecmulVerify(\\n    uint256[2] memory multiplicand,\\n    uint256 scalar,\\n    uint256[2] memory product\\n  ) internal pure returns (bool verifies) {\\n    require(scalar != 0, \\\"zero scalar\\\"); // Rules out an ecrecover failure case\\n    uint256 x = multiplicand[0]; // x ordinate of multiplicand\\n    uint8 v = multiplicand[1] % 2 == 0 ? 27 : 28; // parity of y ordinate\\n    // https://ethresear.ch/t/you-can-kinda-abuse-ecrecover-to-do-ecmul-in-secp256k1-today/2384/9\\n    // Point corresponding to address ecrecover(0, v, x, s=scalar*x) is\\n    // (x\\u207b\\u00b9 mod GROUP_ORDER) * (scalar * x * multiplicand - 0 * g), i.e.\\n    // scalar*multiplicand. See https://crypto.stackexchange.com/a/18106\\n    bytes32 scalarTimesX = bytes32(mulmod(scalar, x, GROUP_ORDER));\\n    address actual = ecrecover(bytes32(0), v, bytes32(x), scalarTimesX);\\n    // Explicit conversion to address takes bottom 160 bits\\n    address expected = address(uint160(uint256(keccak256(abi.encodePacked(product)))));\\n    return (actual == expected);\\n  }\\n\\n  // Returns x1/z1-x2/z2=(x1z2-x2z1)/(z1z2) in projective coordinates on P\\u00b9(\\ud835\\udd3d\\u2099)\\n  function projectiveSub(\\n    uint256 x1,\\n    uint256 z1,\\n    uint256 x2,\\n    uint256 z2\\n  ) internal pure returns (uint256 x3, uint256 z3) {\\n    unchecked {\\n      uint256 num1 = mulmod(z2, x1, FIELD_SIZE);\\n      // Note this cannot wrap since x2 is a point in [0, FIELD_SIZE-1]\\n      // we use unchecked to save gas.\\n      uint256 num2 = mulmod(FIELD_SIZE - x2, z1, FIELD_SIZE);\\n      (x3, z3) = (addmod(num1, num2, FIELD_SIZE), mulmod(z1, z2, FIELD_SIZE));\\n    }\\n  }\\n\\n  // Returns x1/z1*x2/z2=(x1x2)/(z1z2), in projective coordinates on P\\u00b9(\\ud835\\udd3d\\u2099)\\n  function projectiveMul(\\n    uint256 x1,\\n    uint256 z1,\\n    uint256 x2,\\n    uint256 z2\\n  ) internal pure returns (uint256 x3, uint256 z3) {\\n    (x3, z3) = (mulmod(x1, x2, FIELD_SIZE), mulmod(z1, z2, FIELD_SIZE));\\n  }\\n\\n  /** **************************************************************************\\n        @notice Computes elliptic-curve sum, in projective co-ordinates\\n\\n        @dev Using projective coordinates avoids costly divisions\\n\\n        @dev To use this with p and q in affine coordinates, call\\n        @dev projectiveECAdd(px, py, qx, qy). This will return\\n        @dev the addition of (px, py, 1) and (qx, qy, 1), in the\\n        @dev secp256k1 group.\\n\\n        @dev This can be used to calculate the z which is the inverse to zInv\\n        @dev in isValidVRFOutput. But consider using a faster\\n        @dev re-implementation such as ProjectiveECAdd in the golang vrf package.\\n\\n        @dev This function assumes [px,py,1],[qx,qy,1] are valid projective\\n             coordinates of secp256k1 points. That is safe in this contract,\\n             because this method is only used by linearCombination, which checks\\n             points are on the curve via ecrecover.\\n        **************************************************************************\\n        @param px The first affine coordinate of the first summand\\n        @param py The second affine coordinate of the first summand\\n        @param qx The first affine coordinate of the second summand\\n        @param qy The second affine coordinate of the second summand\\n\\n        (px,py) and (qx,qy) must be distinct, valid secp256k1 points.\\n        **************************************************************************\\n        Return values are projective coordinates of [px,py,1]+[qx,qy,1] as points\\n        on secp256k1, in P\\u00b2(\\ud835\\udd3d\\u2099)\\n        @return sx\\n        @return sy\\n        @return sz\\n    */\\n  function projectiveECAdd(\\n    uint256 px,\\n    uint256 py,\\n    uint256 qx,\\n    uint256 qy\\n  ) internal pure returns (uint256 sx, uint256 sy, uint256 sz) {\\n    unchecked {\\n      // See \\\"Group law for E/K : y^2 = x^3 + ax + b\\\", in section 3.1.2, p. 80,\\n      // \\\"Guide to Elliptic Curve Cryptography\\\" by Hankerson, Menezes and Vanstone\\n      // We take the equations there for (sx,sy), and homogenize them to\\n      // projective coordinates. That way, no inverses are required, here, and we\\n      // only need the one inverse in affineECAdd.\\n\\n      // We only need the \\\"point addition\\\" equations from Hankerson et al. Can\\n      // skip the \\\"point doubling\\\" equations because p1 == p2 is cryptographically\\n      // impossible, and required not to be the case in linearCombination.\\n\\n      // Add extra \\\"projective coordinate\\\" to the two points\\n      (uint256 z1, uint256 z2) = (1, 1);\\n\\n      // (lx, lz) = (qy-py)/(qx-px), i.e., gradient of secant line.\\n      // Cannot wrap since px and py are in [0, FIELD_SIZE-1]\\n      uint256 lx = addmod(qy, FIELD_SIZE - py, FIELD_SIZE);\\n      uint256 lz = addmod(qx, FIELD_SIZE - px, FIELD_SIZE);\\n\\n      uint256 dx; // Accumulates denominator from sx calculation\\n      // sx=((qy-py)/(qx-px))^2-px-qx\\n      (sx, dx) = projectiveMul(lx, lz, lx, lz); // ((qy-py)/(qx-px))^2\\n      (sx, dx) = projectiveSub(sx, dx, px, z1); // ((qy-py)/(qx-px))^2-px\\n      (sx, dx) = projectiveSub(sx, dx, qx, z2); // ((qy-py)/(qx-px))^2-px-qx\\n\\n      uint256 dy; // Accumulates denominator from sy calculation\\n      // sy=((qy-py)/(qx-px))(px-sx)-py\\n      (sy, dy) = projectiveSub(px, z1, sx, dx); // px-sx\\n      (sy, dy) = projectiveMul(sy, dy, lx, lz); // ((qy-py)/(qx-px))(px-sx)\\n      (sy, dy) = projectiveSub(sy, dy, py, z1); // ((qy-py)/(qx-px))(px-sx)-py\\n\\n      if (dx != dy) {\\n        // Cross-multiply to put everything over a common denominator\\n        sx = mulmod(sx, dy, FIELD_SIZE);\\n        sy = mulmod(sy, dx, FIELD_SIZE);\\n        sz = mulmod(dx, dy, FIELD_SIZE);\\n      } else {\\n        // Already over a common denominator, use that for z ordinate\\n        sz = dx;\\n      }\\n    }\\n  }\\n\\n  // p1+p2, as affine points on secp256k1.\\n  //\\n  // invZ must be the inverse of the z returned by projectiveECAdd(p1, p2).\\n  // It is computed off-chain to save gas.\\n  //\\n  // p1 and p2 must be distinct, because projectiveECAdd doesn't handle\\n  // point doubling.\\n  function affineECAdd(\\n    uint256[2] memory p1,\\n    uint256[2] memory p2,\\n    uint256 invZ\\n  ) internal pure returns (uint256[2] memory) {\\n    uint256 x;\\n    uint256 y;\\n    uint256 z;\\n    (x, y, z) = projectiveECAdd(p1[0], p1[1], p2[0], p2[1]);\\n    require(mulmod(z, invZ, FIELD_SIZE) == 1, \\\"invZ must be inverse of z\\\");\\n    // Clear the z ordinate of the projective representation by dividing through\\n    // by it, to obtain the affine representation\\n    return [mulmod(x, invZ, FIELD_SIZE), mulmod(y, invZ, FIELD_SIZE)];\\n  }\\n\\n  // True iff address(c*p+s*g) == lcWitness, where g is generator. (With\\n  // cryptographically high probability.)\\n  function verifyLinearCombinationWithGenerator(\\n    uint256 c,\\n    uint256[2] memory p,\\n    uint256 s,\\n    address lcWitness\\n  ) internal pure returns (bool) {\\n    // Rule out ecrecover failure modes which return address 0.\\n    unchecked {\\n      require(lcWitness != address(0), \\\"bad witness\\\");\\n      uint8 v = (p[1] % 2 == 0) ? 27 : 28; // parity of y-ordinate of p\\n      // Note this cannot wrap (X - Y % X), but we use unchecked to save\\n      // gas.\\n      bytes32 pseudoHash = bytes32(GROUP_ORDER - mulmod(p[0], s, GROUP_ORDER)); // -s*p[0]\\n      bytes32 pseudoSignature = bytes32(mulmod(c, p[0], GROUP_ORDER)); // c*p[0]\\n      // https://ethresear.ch/t/you-can-kinda-abuse-ecrecover-to-do-ecmul-in-secp256k1-today/2384/9\\n      // The point corresponding to the address returned by\\n      // ecrecover(-s*p[0],v,p[0],c*p[0]) is\\n      // (p[0]\\u207b\\u00b9 mod GROUP_ORDER)*(c*p[0]-(-s)*p[0]*g)=c*p+s*g.\\n      // See https://crypto.stackexchange.com/a/18106\\n      // https://bitcoin.stackexchange.com/questions/38351/ecdsa-v-r-s-what-is-v\\n      address computed = ecrecover(pseudoHash, v, bytes32(p[0]), pseudoSignature);\\n      return computed == lcWitness;\\n    }\\n  }\\n\\n  // c*p1 + s*p2. Requires cp1Witness=c*p1 and sp2Witness=s*p2. Also\\n  // requires cp1Witness != sp2Witness (which is fine for this application,\\n  // since it is cryptographically impossible for them to be equal. In the\\n  // (cryptographically impossible) case that a prover accidentally derives\\n  // a proof with equal c*p1 and s*p2, they should retry with a different\\n  // proof nonce.) Assumes that all points are on secp256k1\\n  // (which is checked in verifyVRFProof below.)\\n  function linearCombination(\\n    uint256 c,\\n    uint256[2] memory p1,\\n    uint256[2] memory cp1Witness,\\n    uint256 s,\\n    uint256[2] memory p2,\\n    uint256[2] memory sp2Witness,\\n    uint256 zInv\\n  ) internal pure returns (uint256[2] memory) {\\n    unchecked {\\n      // Note we are relying on the wrap around here\\n      require((cp1Witness[0] % FIELD_SIZE) != (sp2Witness[0] % FIELD_SIZE), \\\"points in sum must be distinct\\\");\\n      require(ecmulVerify(p1, c, cp1Witness), \\\"First mul check failed\\\");\\n      require(ecmulVerify(p2, s, sp2Witness), \\\"Second mul check failed\\\");\\n      return affineECAdd(cp1Witness, sp2Witness, zInv);\\n    }\\n  }\\n\\n  // Domain-separation tag for the hash taken in scalarFromCurvePoints.\\n  // Corresponds to scalarFromCurveHashPrefix in vrf.go\\n  uint256 internal constant SCALAR_FROM_CURVE_POINTS_HASH_PREFIX = 2;\\n\\n  // Pseudo-random number from inputs. Matches vrf.go/scalarFromCurvePoints, and\\n  // https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-5.4.3\\n  // The draft calls (in step 7, via the definition of string_to_int, in\\n  // https://datatracker.ietf.org/doc/html/rfc8017#section-4.2 ) for taking the\\n  // first hash without checking that it corresponds to a number less than the\\n  // group order, which will lead to a slight bias in the sample.\\n  //\\n  // TODO(alx): We could save a bit of gas by following the standard here and\\n  // using the compressed representation of the points, if we collated the y\\n  // parities into a single bytes32.\\n  // https://www.pivotaltracker.com/story/show/171120588\\n  function scalarFromCurvePoints(\\n    uint256[2] memory hash,\\n    uint256[2] memory pk,\\n    uint256[2] memory gamma,\\n    address uWitness,\\n    uint256[2] memory v\\n  ) internal pure returns (uint256 s) {\\n    return uint256(keccak256(abi.encodePacked(SCALAR_FROM_CURVE_POINTS_HASH_PREFIX, hash, pk, gamma, v, uWitness)));\\n  }\\n\\n  // True if (gamma, c, s) is a correctly constructed randomness proof from pk\\n  // and seed. zInv must be the inverse of the third ordinate from\\n  // projectiveECAdd applied to cGammaWitness and sHashWitness. Corresponds to\\n  // section 5.3 of the IETF draft.\\n  //\\n  // TODO(alx): Since I'm only using pk in the ecrecover call, I could only pass\\n  // the x ordinate, and the parity of the y ordinate in the top bit of uWitness\\n  // (which I could make a uint256 without using any extra space.) Would save\\n  // about 2000 gas. https://www.pivotaltracker.com/story/show/170828567\\n  function verifyVRFProof(\\n    uint256[2] memory pk,\\n    uint256[2] memory gamma,\\n    uint256 c,\\n    uint256 s,\\n    uint256 seed,\\n    address uWitness,\\n    uint256[2] memory cGammaWitness,\\n    uint256[2] memory sHashWitness,\\n    uint256 zInv\\n  ) internal view {\\n    unchecked {\\n      require(isOnCurve(pk), \\\"public key is not on curve\\\");\\n      require(isOnCurve(gamma), \\\"gamma is not on curve\\\");\\n      require(isOnCurve(cGammaWitness), \\\"cGammaWitness is not on curve\\\");\\n      require(isOnCurve(sHashWitness), \\\"sHashWitness is not on curve\\\");\\n      // Step 5. of IETF draft section 5.3 (pk corresponds to 5.3's Y, and here\\n      // we use the address of u instead of u itself. Also, here we add the\\n      // terms instead of taking the difference, and in the proof construction in\\n      // vrf.GenerateProof, we correspondingly take the difference instead of\\n      // taking the sum as they do in step 7 of section 5.1.)\\n      require(verifyLinearCombinationWithGenerator(c, pk, s, uWitness), \\\"addr(c*pk+s*g)!=_uWitness\\\");\\n      // Step 4. of IETF draft section 5.3 (pk corresponds to Y, seed to alpha_string)\\n      uint256[2] memory hash = hashToCurve(pk, seed);\\n      // Step 6. of IETF draft section 5.3, but see note for step 5 about +/- terms\\n      uint256[2] memory v = linearCombination(c, gamma, cGammaWitness, s, hash, sHashWitness, zInv);\\n      // Steps 7. and 8. of IETF draft section 5.3\\n      uint256 derivedC = scalarFromCurvePoints(hash, pk, gamma, uWitness, v);\\n      require(c == derivedC, \\\"invalid proof\\\");\\n    }\\n  }\\n\\n  // Domain-separation tag for the hash used as the final VRF output.\\n  // Corresponds to vrfRandomOutputHashPrefix in vrf.go\\n  uint256 internal constant VRF_RANDOM_OUTPUT_HASH_PREFIX = 3;\\n\\n  struct Proof {\\n    uint256[2] pk;\\n    uint256[2] gamma;\\n    uint256 c;\\n    uint256 s;\\n    uint256 seed;\\n    address uWitness;\\n    uint256[2] cGammaWitness;\\n    uint256[2] sHashWitness;\\n    uint256 zInv;\\n  }\\n\\n  /* ***************************************************************************\\n     * @notice Returns proof's output, if proof is valid. Otherwise reverts\\n\\n     * @param proof vrf proof components\\n     * @param seed  seed used to generate the vrf output\\n     *\\n     * Throws if proof is invalid, otherwise:\\n     * @return output i.e., the random output implied by the proof\\n     * ***************************************************************************\\n     */\\n  function randomValueFromVRFProof(Proof memory proof, uint256 seed) internal view returns (uint256 output) {\\n    verifyVRFProof(\\n      proof.pk,\\n      proof.gamma,\\n      proof.c,\\n      proof.s,\\n      seed,\\n      proof.uWitness,\\n      proof.cGammaWitness,\\n      proof.sHashWitness,\\n      proof.zInv\\n    );\\n    output = uint256(keccak256(abi.encode(VRF_RANDOM_OUTPUT_HASH_PREFIX, proof.gamma)));\\n  }\\n}\\n\",\"keccak256\":\"0x5efe574be3a5b871ef7bcc7704355d21c1244f1a39a1266422a1b904d7b41944\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\n\\n/** ****************************************************************************\\n * @notice Interface for contracts using VRF randomness\\n * *****************************************************************************\\n * @dev PURPOSE\\n *\\n * @dev Reggie the Random Oracle (not his real job) wants to provide randomness\\n * @dev to Vera the verifier in such a way that Vera can be sure he's not\\n * @dev making his output up to suit himself. Reggie provides Vera a public key\\n * @dev to which he knows the secret key. Each time Vera provides a seed to\\n * @dev Reggie, he gives back a value which is computed completely\\n * @dev deterministically from the seed and the secret key.\\n *\\n * @dev Reggie provides a proof by which Vera can verify that the output was\\n * @dev correctly computed once Reggie tells it to her, but without that proof,\\n * @dev the output is indistinguishable to her from a uniform random sample\\n * @dev from the output space.\\n *\\n * @dev The purpose of this contract is to make it easy for unrelated contracts\\n * @dev to talk to Vera the verifier about the work Reggie is doing, to provide\\n * @dev simple access to a verifiable source of randomness. It ensures 2 things:\\n * @dev 1. The fulfillment came from the VRFCoordinator\\n * @dev 2. The consumer contract implements fulfillRandomWords.\\n * *****************************************************************************\\n * @dev USAGE\\n *\\n * @dev Calling contracts must inherit from VRFConsumerBase, and can\\n * @dev initialize VRFConsumerBase's attributes in their constructor as\\n * @dev shown:\\n *\\n * @dev   contract VRFConsumer {\\n * @dev     constructor(<other arguments>, address _vrfCoordinator, address _link)\\n * @dev       VRFConsumerBase(_vrfCoordinator) public {\\n * @dev         <initialization with other arguments goes here>\\n * @dev       }\\n * @dev   }\\n *\\n * @dev The oracle will have given you an ID for the VRF keypair they have\\n * @dev committed to (let's call it keyHash). Create subscription, fund it\\n * @dev and your consumer contract as a consumer of it (see VRFCoordinatorInterface\\n * @dev subscription management functions).\\n * @dev Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,\\n * @dev callbackGasLimit, numWords),\\n * @dev see (VRFCoordinatorInterface for a description of the arguments).\\n *\\n * @dev Once the VRFCoordinator has received and validated the oracle's response\\n * @dev to your request, it will call your contract's fulfillRandomWords method.\\n *\\n * @dev The randomness argument to fulfillRandomWords is a set of random words\\n * @dev generated from your requestId and the blockHash of the request.\\n *\\n * @dev If your contract could have concurrent requests open, you can use the\\n * @dev requestId returned from requestRandomWords to track which response is associated\\n * @dev with which randomness request.\\n * @dev See \\\"SECURITY CONSIDERATIONS\\\" for principles to keep in mind,\\n * @dev if your contract could have multiple requests in flight simultaneously.\\n *\\n * @dev Colliding `requestId`s are cryptographically impossible as long as seeds\\n * @dev differ.\\n *\\n * *****************************************************************************\\n * @dev SECURITY CONSIDERATIONS\\n *\\n * @dev A method with the ability to call your fulfillRandomness method directly\\n * @dev could spoof a VRF response with any random value, so it's critical that\\n * @dev it cannot be directly called by anything other than this base contract\\n * @dev (specifically, by the VRFConsumerBase.rawFulfillRandomness method).\\n *\\n * @dev For your users to trust that your contract's random behavior is free\\n * @dev from malicious interference, it's best if you can write it so that all\\n * @dev behaviors implied by a VRF response are executed *during* your\\n * @dev fulfillRandomness method. If your contract must store the response (or\\n * @dev anything derived from it) and use it later, you must ensure that any\\n * @dev user-significant behavior which depends on that stored value cannot be\\n * @dev manipulated by a subsequent VRF request.\\n *\\n * @dev Similarly, both miners and the VRF oracle itself have some influence\\n * @dev over the order in which VRF responses appear on the blockchain, so if\\n * @dev your contract could have multiple VRF requests in flight simultaneously,\\n * @dev you must ensure that the order in which the VRF responses arrive cannot\\n * @dev be used to manipulate your contract's user-significant behavior.\\n *\\n * @dev Since the block hash of the block which contains the requestRandomness\\n * @dev call is mixed into the input to the VRF *last*, a sufficiently powerful\\n * @dev miner could, in principle, fork the blockchain to evict the block\\n * @dev containing the request, forcing the request to be included in a\\n * @dev different block with a different hash, and therefore a different input\\n * @dev to the VRF. However, such an attack would incur a substantial economic\\n * @dev cost. This cost scales with the number of blocks the VRF oracle waits\\n * @dev until it calls responds to a request. It is for this reason that\\n * @dev that you can signal to an oracle you'd like them to wait longer before\\n * @dev responding to the request (however this is not enforced in the contract\\n * @dev and so remains effective only in the case of unmodified oracle software).\\n */\\nabstract contract VRFConsumerBaseV2 {\\n  error OnlyCoordinatorCanFulfill(address have, address want);\\n  address private immutable vrfCoordinator;\\n\\n  /**\\n   * @param _vrfCoordinator address of VRFCoordinator contract\\n   */\\n  constructor(address _vrfCoordinator) {\\n    vrfCoordinator = _vrfCoordinator;\\n  }\\n\\n  /**\\n   * @notice fulfillRandomness handles the VRF response. Your contract must\\n   * @notice implement it. See \\\"SECURITY CONSIDERATIONS\\\" above for important\\n   * @notice principles to keep in mind when implementing your fulfillRandomness\\n   * @notice method.\\n   *\\n   * @dev VRFConsumerBaseV2 expects its subcontracts to have a method with this\\n   * @dev signature, and will call it once it has verified the proof\\n   * @dev associated with the randomness. (It is triggered via a call to\\n   * @dev rawFulfillRandomness, below.)\\n   *\\n   * @param requestId The Id initially returned by requestRandomness\\n   * @param randomWords the VRF output expanded to the requested number of words\\n   */\\n  function fulfillRandomWords(uint256 requestId, uint256[] memory randomWords) internal virtual;\\n\\n  // rawFulfillRandomness is called by VRFCoordinator when it receives a valid VRF\\n  // proof. rawFulfillRandomness then calls fulfillRandomness, after validating\\n  // the origin of the call\\n  function rawFulfillRandomWords(uint256 requestId, uint256[] memory randomWords) external {\\n    if (msg.sender != vrfCoordinator) {\\n      revert OnlyCoordinatorCanFulfill(msg.sender, vrfCoordinator);\\n    }\\n    fulfillRandomWords(requestId, randomWords);\\n  }\\n}\\n\",\"keccak256\":\"0x3d709a5e0f1f9b8841172b10ba8af785dd51a13eda9fc395723a706e51329904\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/vrf/VRFCoordinatorV2.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\n\\nimport \\\"../shared/interfaces/LinkTokenInterface.sol\\\";\\nimport \\\"../interfaces/BlockhashStoreInterface.sol\\\";\\nimport \\\"../interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"../interfaces/VRFCoordinatorV2Interface.sol\\\";\\nimport \\\"../interfaces/TypeAndVersionInterface.sol\\\";\\nimport \\\"../shared/interfaces/IERC677Receiver.sol\\\";\\nimport \\\"./VRF.sol\\\";\\nimport \\\"../shared/access/ConfirmedOwner.sol\\\";\\nimport \\\"./VRFConsumerBaseV2.sol\\\";\\nimport \\\"../ChainSpecificUtil.sol\\\";\\n\\ncontract VRFCoordinatorV2 is\\n    VRF,\\n    ConfirmedOwner,\\n    TypeAndVersionInterface,\\n    VRFCoordinatorV2Interface,\\n    IERC677Receiver\\n{\\n    LinkTokenInterface public immutable LINK;\\n    AggregatorV3Interface public immutable LINK_ETH_FEED;\\n    BlockhashStoreInterface public immutable BLOCKHASH_STORE;\\n\\n    // We need to maintain a list of consuming addresses.\\n    // This bound ensures we are able to loop over them as needed.\\n    // Should a user require more consumers, they can use multiple subscriptions.\\n    uint16 public constant MAX_CONSUMERS = 100;\\n    error TooManyConsumers();\\n    error InsufficientBalance();\\n    error InvalidConsumer(uint64 subId, address consumer);\\n    error InvalidSubscription();\\n    error OnlyCallableFromLink();\\n    error InvalidCalldata();\\n    error MustBeSubOwner(address owner);\\n    error PendingRequestExists();\\n    error MustBeRequestedOwner(address proposedOwner);\\n    error BalanceInvariantViolated(\\n        uint256 internalBalance,\\n        uint256 externalBalance\\n    ); // Should never happen\\n    event FundsRecovered(address to, uint256 amount);\\n    // We use the subscription struct (1 word)\\n    // at fulfillment time.\\n    struct Subscription {\\n        // There are only 1e9*1e18 = 1e27 juels in existence, so the balance can fit in uint96 (2^96 ~ 7e28)\\n        uint96 balance; // Common link balance used for all consumer requests.\\n        uint64 reqCount; // For fee tiers\\n    }\\n    // We use the config for the mgmt APIs\\n    struct SubscriptionConfig {\\n        address owner; // Owner can fund/withdraw/cancel the sub.\\n        address requestedOwner; // For safely transferring sub ownership.\\n        // Maintains the list of keys in s_consumers.\\n        // We do this for 2 reasons:\\n        // 1. To be able to clean up all keys from s_consumers when canceling a subscription.\\n        // 2. To be able to return the list of all consumers in getSubscription.\\n        // Note that we need the s_consumers map to be able to directly check if a\\n        // consumer is valid without reading all the consumers from storage.\\n        address[] consumers;\\n    }\\n    // Note a nonce of 0 indicates an the consumer is not assigned to that subscription.\\n    mapping(address => mapping(uint64 => uint64)) /* consumer */ /* subId */ /* nonce */\\n        private s_consumers;\\n    mapping(uint64 => SubscriptionConfig) /* subId */ /* subscriptionConfig */\\n        private s_subscriptionConfigs;\\n    mapping(uint64 => Subscription) /* subId */ /* subscription */\\n        private s_subscriptions;\\n    // We make the sub count public so that its possible to\\n    // get all the current subscriptions via getSubscription.\\n    uint64 private s_currentSubId;\\n    // s_totalBalance tracks the total link sent to/from\\n    // this contract through onTokenTransfer, cancelSubscription and oracleWithdraw.\\n    // A discrepancy with this contract's link balance indicates someone\\n    // sent tokens using transfer and so we may need to use recoverFunds.\\n    uint96 private s_totalBalance;\\n    event SubscriptionCreated(uint64 indexed subId, address owner);\\n    event SubscriptionFunded(\\n        uint64 indexed subId,\\n        uint256 oldBalance,\\n        uint256 newBalance\\n    );\\n    event SubscriptionConsumerAdded(uint64 indexed subId, address consumer);\\n    event SubscriptionConsumerRemoved(uint64 indexed subId, address consumer);\\n    event SubscriptionCanceled(\\n        uint64 indexed subId,\\n        address to,\\n        uint256 amount\\n    );\\n    event SubscriptionOwnerTransferRequested(\\n        uint64 indexed subId,\\n        address from,\\n        address to\\n    );\\n    event SubscriptionOwnerTransferred(\\n        uint64 indexed subId,\\n        address from,\\n        address to\\n    );\\n\\n    // Set this maximum to 200 to give us a 56 block window to fulfill\\n    // the request before requiring the block hash feeder.\\n    uint16 public constant MAX_REQUEST_CONFIRMATIONS = 200;\\n    uint32 public constant MAX_NUM_WORDS = 500;\\n    // 5k is plenty for an EXTCODESIZE call (2600) + warm CALL (100)\\n    // and some arithmetic operations.\\n    uint256 private constant GAS_FOR_CALL_EXACT_CHECK = 5_000;\\n    error InvalidRequestConfirmations(uint16 have, uint16 min, uint16 max);\\n    error GasLimitTooBig(uint32 have, uint32 want);\\n    error NumWordsTooBig(uint32 have, uint32 want);\\n    error ProvingKeyAlreadyRegistered(bytes32 keyHash);\\n    error NoSuchProvingKey(bytes32 keyHash);\\n    error InvalidLinkWeiPrice(int256 linkWei);\\n    error InsufficientGasForConsumer(uint256 have, uint256 want);\\n    error NoCorrespondingRequest();\\n    error IncorrectCommitment();\\n    error BlockhashNotInStore(uint256 blockNum);\\n    error PaymentTooLarge();\\n    error Reentrant();\\n    struct RequestCommitment {\\n        uint64 blockNum;\\n        uint64 subId;\\n        uint32 callbackGasLimit;\\n        uint32 numWords;\\n        address sender;\\n    }\\n    mapping(bytes32 => address) /* keyHash */ /* oracle */\\n        private s_provingKeys;\\n    bytes32[] private s_provingKeyHashes;\\n    mapping(address => uint96) /* oracle */ /* LINK balance */\\n        private s_withdrawableTokens;\\n    mapping(uint256 => bytes32) /* requestID */ /* commitment */\\n        private s_requestCommitments;\\n    event ProvingKeyRegistered(bytes32 keyHash, address indexed oracle);\\n    event ProvingKeyDeregistered(bytes32 keyHash, address indexed oracle);\\n    event RandomWordsRequested(\\n        bytes32 indexed keyHash,\\n        uint256 requestId,\\n        uint256 preSeed,\\n        uint64 indexed subId,\\n        uint16 minimumRequestConfirmations,\\n        uint32 callbackGasLimit,\\n        uint32 numWords,\\n        address indexed sender\\n    );\\n    event RandomWordsFulfilled(\\n        uint256 indexed requestId,\\n        uint256 outputSeed,\\n        uint96 payment,\\n        bool success\\n    );\\n\\n    struct Config {\\n        uint16 minimumRequestConfirmations;\\n        uint32 maxGasLimit;\\n        // Reentrancy protection.\\n        bool reentrancyLock;\\n        // stalenessSeconds is how long before we consider the feed price to be stale\\n        // and fallback to fallbackWeiPerUnitLink.\\n        uint32 stalenessSeconds;\\n        // Gas to cover oracle payment after we calculate the payment.\\n        // We make it configurable in case those operations are repriced.\\n        uint32 gasAfterPaymentCalculation;\\n    }\\n    int256 private s_fallbackWeiPerUnitLink;\\n    Config private s_config;\\n    FeeConfig private s_feeConfig;\\n    struct FeeConfig {\\n        // Flat fee charged per fulfillment in millionths of link\\n        // So fee range is [0, 2^32/10^6].\\n        uint32 fulfillmentFlatFeeLinkPPMTier1;\\n        uint32 fulfillmentFlatFeeLinkPPMTier2;\\n        uint32 fulfillmentFlatFeeLinkPPMTier3;\\n        uint32 fulfillmentFlatFeeLinkPPMTier4;\\n        uint32 fulfillmentFlatFeeLinkPPMTier5;\\n        uint24 reqsForTier2;\\n        uint24 reqsForTier3;\\n        uint24 reqsForTier4;\\n        uint24 reqsForTier5;\\n    }\\n    event ConfigSet(\\n        uint16 minimumRequestConfirmations,\\n        uint32 maxGasLimit,\\n        uint32 stalenessSeconds,\\n        uint32 gasAfterPaymentCalculation,\\n        int256 fallbackWeiPerUnitLink,\\n        FeeConfig feeConfig\\n    );\\n\\n    constructor(\\n        address link,\\n        address blockhashStore,\\n        address linkEthFeed\\n    ) ConfirmedOwner(msg.sender) {\\n        LINK = LinkTokenInterface(link);\\n        LINK_ETH_FEED = AggregatorV3Interface(linkEthFeed);\\n        BLOCKHASH_STORE = BlockhashStoreInterface(blockhashStore);\\n    }\\n\\n    /**\\n     * @notice Registers a proving key to an oracle.\\n     * @param oracle address of the oracle\\n     * @param publicProvingKey key that oracle can use to submit vrf fulfillments\\n     */\\n    function registerProvingKey(\\n        address oracle,\\n        uint256[2] calldata publicProvingKey\\n    ) external onlyOwner {\\n        bytes32 kh = hashOfKey(publicProvingKey);\\n        if (s_provingKeys[kh] != address(0)) {\\n            revert ProvingKeyAlreadyRegistered(kh);\\n        }\\n        s_provingKeys[kh] = oracle;\\n        s_provingKeyHashes.push(kh);\\n        emit ProvingKeyRegistered(kh, oracle);\\n    }\\n\\n    /**\\n     * @notice Deregisters a proving key to an oracle.\\n     * @param publicProvingKey key that oracle can use to submit vrf fulfillments\\n     */\\n    function deregisterProvingKey(\\n        uint256[2] calldata publicProvingKey\\n    ) external onlyOwner {\\n        bytes32 kh = hashOfKey(publicProvingKey);\\n        address oracle = s_provingKeys[kh];\\n        if (oracle == address(0)) {\\n            revert NoSuchProvingKey(kh);\\n        }\\n        delete s_provingKeys[kh];\\n        for (uint256 i = 0; i < s_provingKeyHashes.length; i++) {\\n            if (s_provingKeyHashes[i] == kh) {\\n                bytes32 last = s_provingKeyHashes[\\n                    s_provingKeyHashes.length - 1\\n                ];\\n                // Copy last element and overwrite kh to be deleted with it\\n                s_provingKeyHashes[i] = last;\\n                s_provingKeyHashes.pop();\\n            }\\n        }\\n        emit ProvingKeyDeregistered(kh, oracle);\\n    }\\n\\n    /**\\n     * @notice Returns the proving key hash key associated with this public key\\n     * @param publicKey the key to return the hash of\\n     */\\n    function hashOfKey(\\n        uint256[2] memory publicKey\\n    ) public pure returns (bytes32) {\\n        return keccak256(abi.encode(publicKey));\\n    }\\n\\n    /**\\n     * @notice Sets the configuration of the vrfv2 coordinator\\n     * @param minimumRequestConfirmations global min for request confirmations\\n     * @param maxGasLimit global max for request gas limit\\n     * @param stalenessSeconds if the eth/link feed is more stale then this, use the fallback price\\n     * @param gasAfterPaymentCalculation gas used in doing accounting after completing the gas measurement\\n     * @param fallbackWeiPerUnitLink fallback eth/link price in the case of a stale feed\\n     * @param feeConfig fee tier configuration\\n     */\\n    function setConfig(\\n        uint16 minimumRequestConfirmations,\\n        uint32 maxGasLimit,\\n        uint32 stalenessSeconds,\\n        uint32 gasAfterPaymentCalculation,\\n        int256 fallbackWeiPerUnitLink,\\n        FeeConfig memory feeConfig\\n    ) external onlyOwner {\\n        if (minimumRequestConfirmations > MAX_REQUEST_CONFIRMATIONS) {\\n            revert InvalidRequestConfirmations(\\n                minimumRequestConfirmations,\\n                minimumRequestConfirmations,\\n                MAX_REQUEST_CONFIRMATIONS\\n            );\\n        }\\n        if (fallbackWeiPerUnitLink <= 0) {\\n            revert InvalidLinkWeiPrice(fallbackWeiPerUnitLink);\\n        }\\n        s_config = Config({\\n            minimumRequestConfirmations: minimumRequestConfirmations,\\n            maxGasLimit: maxGasLimit,\\n            stalenessSeconds: stalenessSeconds,\\n            gasAfterPaymentCalculation: gasAfterPaymentCalculation,\\n            reentrancyLock: false\\n        });\\n        s_feeConfig = feeConfig;\\n        s_fallbackWeiPerUnitLink = fallbackWeiPerUnitLink;\\n        emit ConfigSet(\\n            minimumRequestConfirmations,\\n            maxGasLimit,\\n            stalenessSeconds,\\n            gasAfterPaymentCalculation,\\n            fallbackWeiPerUnitLink,\\n            s_feeConfig\\n        );\\n    }\\n\\n    function getConfig()\\n        external\\n        view\\n        returns (\\n            uint16 minimumRequestConfirmations,\\n            uint32 maxGasLimit,\\n            uint32 stalenessSeconds,\\n            uint32 gasAfterPaymentCalculation\\n        )\\n    {\\n        return (\\n            s_config.minimumRequestConfirmations,\\n            s_config.maxGasLimit,\\n            s_config.stalenessSeconds,\\n            s_config.gasAfterPaymentCalculation\\n        );\\n    }\\n\\n    function getFeeConfig()\\n        external\\n        view\\n        returns (\\n            uint32 fulfillmentFlatFeeLinkPPMTier1,\\n            uint32 fulfillmentFlatFeeLinkPPMTier2,\\n            uint32 fulfillmentFlatFeeLinkPPMTier3,\\n            uint32 fulfillmentFlatFeeLinkPPMTier4,\\n            uint32 fulfillmentFlatFeeLinkPPMTier5,\\n            uint24 reqsForTier2,\\n            uint24 reqsForTier3,\\n            uint24 reqsForTier4,\\n            uint24 reqsForTier5\\n        )\\n    {\\n        return (\\n            s_feeConfig.fulfillmentFlatFeeLinkPPMTier1,\\n            s_feeConfig.fulfillmentFlatFeeLinkPPMTier2,\\n            s_feeConfig.fulfillmentFlatFeeLinkPPMTier3,\\n            s_feeConfig.fulfillmentFlatFeeLinkPPMTier4,\\n            s_feeConfig.fulfillmentFlatFeeLinkPPMTier5,\\n            s_feeConfig.reqsForTier2,\\n            s_feeConfig.reqsForTier3,\\n            s_feeConfig.reqsForTier4,\\n            s_feeConfig.reqsForTier5\\n        );\\n    }\\n\\n    function getTotalBalance() external view returns (uint256) {\\n        return s_totalBalance;\\n    }\\n\\n    function getFallbackWeiPerUnitLink() external view returns (int256) {\\n        return s_fallbackWeiPerUnitLink;\\n    }\\n\\n    /**\\n     * @notice Owner cancel subscription, sends remaining link directly to the subscription owner.\\n     * @param subId subscription id\\n     * @dev notably can be called even if there are pending requests, outstanding ones may fail onchain\\n     */\\n    function ownerCancelSubscription(uint64 subId) external onlyOwner {\\n        if (s_subscriptionConfigs[subId].owner == address(0)) {\\n            revert InvalidSubscription();\\n        }\\n        cancelSubscriptionHelper(subId, s_subscriptionConfigs[subId].owner);\\n    }\\n\\n    /**\\n     * @notice Recover link sent with transfer instead of transferAndCall.\\n     * @param to address to send link to\\n     */\\n    function recoverFunds(address to) external onlyOwner {\\n        uint256 externalBalance = LINK.balanceOf(address(this));\\n        uint256 internalBalance = uint256(s_totalBalance);\\n        if (internalBalance > externalBalance) {\\n            revert BalanceInvariantViolated(internalBalance, externalBalance);\\n        }\\n        if (internalBalance < externalBalance) {\\n            uint256 amount = externalBalance - internalBalance;\\n            LINK.transfer(to, amount);\\n            emit FundsRecovered(to, amount);\\n        }\\n        // If the balances are equal, nothing to be done.\\n    }\\n\\n    /**\\n     * @inheritdoc VRFCoordinatorV2Interface\\n     */\\n    function getRequestConfig()\\n        external\\n        view\\n        override\\n        returns (uint16, uint32, bytes32[] memory)\\n    {\\n        return (\\n            s_config.minimumRequestConfirmations,\\n            s_config.maxGasLimit,\\n            s_provingKeyHashes\\n        );\\n    }\\n\\n    /**\\n     * @inheritdoc VRFCoordinatorV2Interface\\n     */\\n    function requestRandomWords(\\n        bytes32 keyHash,\\n        uint64 subId,\\n        uint16 requestConfirmations,\\n        uint32 callbackGasLimit,\\n        uint32 numWords\\n    ) external override nonReentrant returns (uint256) {\\n        // Input validation using the subscription storage.\\n        if (s_subscriptionConfigs[subId].owner == address(0)) {\\n            revert InvalidSubscription();\\n        }\\n        // Its important to ensure that the consumer is in fact who they say they\\n        // are, otherwise they could use someone else's subscription balance.\\n        // A nonce of 0 indicates consumer is not allocated to the sub.\\n        uint64 currentNonce = s_consumers[msg.sender][subId];\\n        if (currentNonce == 0) {\\n            revert InvalidConsumer(subId, msg.sender);\\n        }\\n        // Input validation using the config storage word.\\n        if (\\n            requestConfirmations < s_config.minimumRequestConfirmations ||\\n            requestConfirmations > MAX_REQUEST_CONFIRMATIONS\\n        ) {\\n            revert InvalidRequestConfirmations(\\n                requestConfirmations,\\n                s_config.minimumRequestConfirmations,\\n                MAX_REQUEST_CONFIRMATIONS\\n            );\\n        }\\n        // No lower bound on the requested gas limit. A user could request 0\\n        // and they would simply be billed for the proof verification and wouldn't be\\n        // able to do anything with the random value.\\n        if (callbackGasLimit > s_config.maxGasLimit) {\\n            revert GasLimitTooBig(callbackGasLimit, s_config.maxGasLimit);\\n        }\\n        if (numWords > MAX_NUM_WORDS) {\\n            revert NumWordsTooBig(numWords, MAX_NUM_WORDS);\\n        }\\n        // Note we do not check whether the keyHash is valid to save gas.\\n        // The consequence for users is that they can send requests\\n        // for invalid keyHashes which will simply not be fulfilled.\\n        uint64 nonce = currentNonce + 1;\\n        (uint256 requestId, uint256 preSeed) = computeRequestId(\\n            keyHash,\\n            msg.sender,\\n            subId,\\n            nonce\\n        );\\n\\n        s_requestCommitments[requestId] = keccak256(\\n            abi.encode(\\n                requestId,\\n                ChainSpecificUtil.getBlockNumber(),\\n                subId,\\n                callbackGasLimit,\\n                numWords,\\n                msg.sender\\n            )\\n        );\\n        emit RandomWordsRequested(\\n            keyHash,\\n            requestId,\\n            preSeed,\\n            subId,\\n            requestConfirmations,\\n            callbackGasLimit,\\n            numWords,\\n            msg.sender\\n        );\\n        s_consumers[msg.sender][subId] = nonce;\\n\\n        return requestId;\\n    }\\n\\n    /**\\n     * @notice Get request commitment\\n     * @param requestId id of request\\n     * @dev used to determine if a request is fulfilled or not\\n     */\\n    function getCommitment(uint256 requestId) external view returns (bytes32) {\\n        return s_requestCommitments[requestId];\\n    }\\n\\n    function computeRequestId(\\n        bytes32 keyHash,\\n        address sender,\\n        uint64 subId,\\n        uint64 nonce\\n    ) private pure returns (uint256, uint256) {\\n        uint256 preSeed = uint256(\\n            keccak256(abi.encode(keyHash, sender, subId, nonce))\\n        );\\n        return (uint256(keccak256(abi.encode(keyHash, preSeed))), preSeed);\\n    }\\n\\n    /**\\n     * @dev calls target address with exactly gasAmount gas and data as calldata\\n     * or reverts if at least gasAmount gas is not available.\\n     */\\n    function callWithExactGas(\\n        uint256 gasAmount,\\n        address target,\\n        bytes memory data\\n    ) private returns (bool success) {\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n            let g := gas()\\n            // Compute g -= GAS_FOR_CALL_EXACT_CHECK and check for underflow\\n            // The gas actually passed to the callee is min(gasAmount, 63//64*gas available).\\n            // We want to ensure that we revert if gasAmount >  63//64*gas available\\n            // as we do not want to provide them with less, however that check itself costs\\n            // gas.  GAS_FOR_CALL_EXACT_CHECK ensures we have at least enough gas to be able\\n            // to revert if gasAmount >  63//64*gas available.\\n            if lt(g, GAS_FOR_CALL_EXACT_CHECK) {\\n                revert(0, 0)\\n            }\\n            g := sub(g, GAS_FOR_CALL_EXACT_CHECK)\\n            // if g - g//64 <= gasAmount, revert\\n            // (we subtract g//64 because of EIP-150)\\n            if iszero(gt(sub(g, div(g, 64)), gasAmount)) {\\n                revert(0, 0)\\n            }\\n            // solidity calls check that a contract actually exists at the destination, so we do the same\\n            if iszero(extcodesize(target)) {\\n                revert(0, 0)\\n            }\\n            // call and return whether we succeeded. ignore return data\\n            // call(gas,addr,value,argsOffset,argsLength,retOffset,retLength)\\n            success := call(\\n                gasAmount,\\n                target,\\n                0,\\n                add(data, 0x20),\\n                mload(data),\\n                0,\\n                0\\n            )\\n        }\\n        return success;\\n    }\\n\\n    function getRandomnessFromProof(\\n        Proof memory proof,\\n        RequestCommitment memory rc\\n    )\\n        private\\n        view\\n        returns (bytes32 keyHash, uint256 requestId, uint256 randomness)\\n    {\\n        keyHash = hashOfKey(proof.pk);\\n        // Only registered proving keys are permitted.\\n        address oracle = s_provingKeys[keyHash];\\n        if (oracle == address(0)) {\\n            revert NoSuchProvingKey(keyHash);\\n        }\\n        requestId = uint256(keccak256(abi.encode(keyHash, proof.seed)));\\n        bytes32 commitment = s_requestCommitments[requestId];\\n        if (commitment == 0) {\\n            revert NoCorrespondingRequest();\\n        }\\n        if (\\n            commitment !=\\n            keccak256(\\n                abi.encode(\\n                    requestId,\\n                    rc.blockNum,\\n                    rc.subId,\\n                    rc.callbackGasLimit,\\n                    rc.numWords,\\n                    rc.sender\\n                )\\n            )\\n        ) {\\n            revert IncorrectCommitment();\\n        }\\n\\n        bytes32 blockHash = ChainSpecificUtil.getBlockhash(rc.blockNum);\\n        if (blockHash == bytes32(0)) {\\n            blockHash = BLOCKHASH_STORE.getBlockhash(rc.blockNum);\\n            if (blockHash == bytes32(0)) {\\n                revert BlockhashNotInStore(rc.blockNum);\\n            }\\n        }\\n\\n        // The seed actually used by the VRF machinery, mixing in the blockhash\\n        uint256 actualSeed = uint256(\\n            keccak256(abi.encodePacked(proof.seed, blockHash))\\n        );\\n        randomness = VRF.randomValueFromVRFProof(proof, actualSeed); // Reverts on failure\\n    }\\n\\n    /*\\n     * @notice Compute fee based on the request count\\n     * @param reqCount number of requests\\n     * @return feePPM fee in LINK PPM\\n     */\\n    function getFeeTier(uint64 reqCount) public view returns (uint32) {\\n        FeeConfig memory fc = s_feeConfig;\\n        if (0 <= reqCount && reqCount <= fc.reqsForTier2) {\\n            return fc.fulfillmentFlatFeeLinkPPMTier1;\\n        }\\n        if (fc.reqsForTier2 < reqCount && reqCount <= fc.reqsForTier3) {\\n            return fc.fulfillmentFlatFeeLinkPPMTier2;\\n        }\\n        if (fc.reqsForTier3 < reqCount && reqCount <= fc.reqsForTier4) {\\n            return fc.fulfillmentFlatFeeLinkPPMTier3;\\n        }\\n        if (fc.reqsForTier4 < reqCount && reqCount <= fc.reqsForTier5) {\\n            return fc.fulfillmentFlatFeeLinkPPMTier4;\\n        }\\n        return fc.fulfillmentFlatFeeLinkPPMTier5;\\n    }\\n\\n    /*\\n     * @notice Fulfill a randomness request\\n     * @param proof contains the proof and randomness\\n     * @param rc request commitment pre-image, committed to at request time\\n     * @return payment amount billed to the subscription\\n     * @dev simulated offchain to determine if sufficient balance is present to fulfill the request\\n     */\\n    function fulfillRandomWords(\\n        Proof memory proof,\\n        RequestCommitment memory rc\\n    ) external nonReentrant returns (uint96) {\\n        uint256 startGas = gasleft();\\n        (\\n            bytes32 keyHash,\\n            uint256 requestId,\\n            uint256 randomness\\n        ) = getRandomnessFromProof(proof, rc);\\n\\n        uint256[] memory randomWords = new uint256[](rc.numWords);\\n        for (uint256 i = 0; i < rc.numWords; i++) {\\n            randomWords[i] = uint256(keccak256(abi.encode(randomness, i)));\\n        }\\n\\n        delete s_requestCommitments[requestId];\\n        VRFConsumerBaseV2 v;\\n        bytes memory resp = abi.encodeWithSelector(\\n            v.rawFulfillRandomWords.selector,\\n            requestId,\\n            randomWords\\n        );\\n        // Call with explicitly the amount of callback gas requested\\n        // Important to not let them exhaust the gas budget and avoid oracle payment.\\n        // Do not allow any non-view/non-pure coordinator functions to be called\\n        // during the consumers callback code via reentrancyLock.\\n        // Note that callWithExactGas will revert if we do not have sufficient gas\\n        // to give the callee their requested amount.\\n        s_config.reentrancyLock = true;\\n        bool success = callWithExactGas(rc.callbackGasLimit, rc.sender, resp);\\n        s_config.reentrancyLock = false;\\n\\n        // Increment the req count for fee tier selection.\\n        uint64 reqCount = s_subscriptions[rc.subId].reqCount;\\n        s_subscriptions[rc.subId].reqCount += 1;\\n\\n        // We want to charge users exactly for how much gas they use in their callback.\\n        // The gasAfterPaymentCalculation is meant to cover these additional operations where we\\n        // decrement the subscription balance and increment the oracles withdrawable balance.\\n        // We also add the flat link fee to the payment amount.\\n        // Its specified in millionths of link, if s_config.fulfillmentFlatFeeLinkPPM = 1\\n        // 1 link / 1e6 = 1e18 juels / 1e6 = 1e12 juels.\\n        uint96 payment = calculatePaymentAmount(\\n            startGas,\\n            s_config.gasAfterPaymentCalculation,\\n            getFeeTier(reqCount),\\n            tx.gasprice\\n        );\\n        if (s_subscriptions[rc.subId].balance < payment) {\\n            revert InsufficientBalance();\\n        }\\n        s_subscriptions[rc.subId].balance -= payment;\\n        s_withdrawableTokens[s_provingKeys[keyHash]] += payment;\\n        // Include payment in the event for tracking costs.\\n        emit RandomWordsFulfilled(requestId, randomness, payment, success);\\n        return payment;\\n    }\\n\\n    // Get the amount of gas used for fulfillment\\n    function calculatePaymentAmount(\\n        uint256 startGas,\\n        uint256 gasAfterPaymentCalculation,\\n        uint32 fulfillmentFlatFeeLinkPPM,\\n        uint256 weiPerUnitGas\\n    ) internal view returns (uint96) {\\n        int256 weiPerUnitLink;\\n        weiPerUnitLink = getFeedData();\\n        if (weiPerUnitLink <= 0) {\\n            revert InvalidLinkWeiPrice(weiPerUnitLink);\\n        }\\n        // Will return non-zero on chains that have this enabled\\n        uint256 l1CostWei = ChainSpecificUtil.getCurrentTxL1GasFees();\\n        // (1e18 juels/link) ((wei/gas * gas) + l1wei) / (wei/link) = juels\\n        uint256 paymentNoFee = (1e18 *\\n            (weiPerUnitGas *\\n                (gasAfterPaymentCalculation + startGas - gasleft()) +\\n                l1CostWei)) / uint256(weiPerUnitLink);\\n        uint256 fee = 1e12 * uint256(fulfillmentFlatFeeLinkPPM);\\n        if (paymentNoFee > (1e27 - fee)) {\\n            revert PaymentTooLarge(); // Payment + fee cannot be more than all of the link in existence.\\n        }\\n        return uint96(paymentNoFee + fee);\\n    }\\n\\n    function getFeedData() private view returns (int256) {\\n        uint32 stalenessSeconds = s_config.stalenessSeconds;\\n        bool staleFallback = stalenessSeconds > 0;\\n        uint256 timestamp;\\n        int256 weiPerUnitLink;\\n        (, weiPerUnitLink, , timestamp, ) = LINK_ETH_FEED.latestRoundData();\\n        // solhint-disable-next-line not-rely-on-time\\n        if (staleFallback && stalenessSeconds < block.timestamp - timestamp) {\\n            weiPerUnitLink = s_fallbackWeiPerUnitLink;\\n        }\\n        return weiPerUnitLink;\\n    }\\n\\n    /*\\n     * @notice Oracle withdraw LINK earned through fulfilling requests\\n     * @param recipient where to send the funds\\n     * @param amount amount to withdraw\\n     */\\n    function oracleWithdraw(\\n        address recipient,\\n        uint96 amount\\n    ) external nonReentrant {\\n        if (s_withdrawableTokens[msg.sender] < amount) {\\n            revert InsufficientBalance();\\n        }\\n        s_withdrawableTokens[msg.sender] -= amount;\\n        s_totalBalance -= amount;\\n        if (!LINK.transfer(recipient, amount)) {\\n            revert InsufficientBalance();\\n        }\\n    }\\n\\n    function onTokenTransfer(\\n        address /* sender */,\\n        uint256 amount,\\n        bytes calldata data\\n    ) external override nonReentrant {\\n        if (msg.sender != address(LINK)) {\\n            revert OnlyCallableFromLink();\\n        }\\n        if (data.length != 32) {\\n            revert InvalidCalldata();\\n        }\\n        uint64 subId = abi.decode(data, (uint64));\\n        if (s_subscriptionConfigs[subId].owner == address(0)) {\\n            revert InvalidSubscription();\\n        }\\n        // We do not check that the msg.sender is the subscription owner,\\n        // anyone can fund a subscription.\\n        uint256 oldBalance = s_subscriptions[subId].balance;\\n        s_subscriptions[subId].balance += uint96(amount);\\n        s_totalBalance += uint96(amount);\\n        emit SubscriptionFunded(subId, oldBalance, oldBalance + amount);\\n    }\\n\\n    function getCurrentSubId() external view returns (uint64) {\\n        return s_currentSubId;\\n    }\\n\\n    /**\\n     * @inheritdoc VRFCoordinatorV2Interface\\n     */\\n    function getSubscription(\\n        uint64 subId\\n    )\\n        external\\n        view\\n        override\\n        returns (\\n            uint96 balance,\\n            uint64 reqCount,\\n            address owner,\\n            address[] memory consumers\\n        )\\n    {\\n        if (s_subscriptionConfigs[subId].owner == address(0)) {\\n            revert InvalidSubscription();\\n        }\\n        return (\\n            s_subscriptions[subId].balance,\\n            s_subscriptions[subId].reqCount,\\n            s_subscriptionConfigs[subId].owner,\\n            s_subscriptionConfigs[subId].consumers\\n        );\\n    }\\n\\n    /**\\n     * @inheritdoc VRFCoordinatorV2Interface\\n     */\\n    function createSubscription()\\n        external\\n        override\\n        nonReentrant\\n        returns (uint64)\\n    {\\n        s_currentSubId++;\\n        uint64 currentSubId = s_currentSubId;\\n        address[] memory consumers = new address[](0);\\n        s_subscriptions[currentSubId] = Subscription({balance: 0, reqCount: 0});\\n        s_subscriptionConfigs[currentSubId] = SubscriptionConfig({\\n            owner: msg.sender,\\n            requestedOwner: address(0),\\n            consumers: consumers\\n        });\\n\\n        emit SubscriptionCreated(currentSubId, msg.sender);\\n        return currentSubId;\\n    }\\n\\n    /**\\n     * @inheritdoc VRFCoordinatorV2Interface\\n     */\\n    function requestSubscriptionOwnerTransfer(\\n        uint64 subId,\\n        address newOwner\\n    ) external override onlySubOwner(subId) nonReentrant {\\n        // Proposing to address(0) would never be claimable so don't need to check.\\n        if (s_subscriptionConfigs[subId].requestedOwner != newOwner) {\\n            s_subscriptionConfigs[subId].requestedOwner = newOwner;\\n            emit SubscriptionOwnerTransferRequested(\\n                subId,\\n                msg.sender,\\n                newOwner\\n            );\\n        }\\n    }\\n\\n    /**\\n     * @inheritdoc VRFCoordinatorV2Interface\\n     */\\n    function acceptSubscriptionOwnerTransfer(\\n        uint64 subId\\n    ) external override nonReentrant {\\n        if (s_subscriptionConfigs[subId].owner == address(0)) {\\n            revert InvalidSubscription();\\n        }\\n        if (s_subscriptionConfigs[subId].requestedOwner != msg.sender) {\\n            revert MustBeRequestedOwner(\\n                s_subscriptionConfigs[subId].requestedOwner\\n            );\\n        }\\n        address oldOwner = s_subscriptionConfigs[subId].owner;\\n        s_subscriptionConfigs[subId].owner = msg.sender;\\n        s_subscriptionConfigs[subId].requestedOwner = address(0);\\n        emit SubscriptionOwnerTransferred(subId, oldOwner, msg.sender);\\n    }\\n\\n    /**\\n     * @inheritdoc VRFCoordinatorV2Interface\\n     */\\n    function removeConsumer(\\n        uint64 subId,\\n        address consumer\\n    ) external override onlySubOwner(subId) nonReentrant {\\n        if (pendingRequestExists(subId)) {\\n            revert PendingRequestExists();\\n        }\\n        if (s_consumers[consumer][subId] == 0) {\\n            revert InvalidConsumer(subId, consumer);\\n        }\\n        // Note bounded by MAX_CONSUMERS\\n        address[] memory consumers = s_subscriptionConfigs[subId].consumers;\\n        uint256 lastConsumerIndex = consumers.length - 1;\\n        for (uint256 i = 0; i < consumers.length; i++) {\\n            if (consumers[i] == consumer) {\\n                address last = consumers[lastConsumerIndex];\\n                // Storage write to preserve last element\\n                s_subscriptionConfigs[subId].consumers[i] = last;\\n                // Storage remove last element\\n                s_subscriptionConfigs[subId].consumers.pop();\\n                break;\\n            }\\n        }\\n        delete s_consumers[consumer][subId];\\n        emit SubscriptionConsumerRemoved(subId, consumer);\\n    }\\n\\n    /**\\n     * @inheritdoc VRFCoordinatorV2Interface\\n     */\\n    function addConsumer(\\n        uint64 subId,\\n        address consumer\\n    ) external override onlySubOwner(subId) nonReentrant {\\n        // Already maxed, cannot add any more consumers.\\n        if (s_subscriptionConfigs[subId].consumers.length == MAX_CONSUMERS) {\\n            revert TooManyConsumers();\\n        }\\n        if (s_consumers[consumer][subId] != 0) {\\n            // Idempotence - do nothing if already added.\\n            // Ensures uniqueness in s_subscriptions[subId].consumers.\\n            return;\\n        }\\n        // Initialize the nonce to 1, indicating the consumer is allocated.\\n        s_consumers[consumer][subId] = 1;\\n        s_subscriptionConfigs[subId].consumers.push(consumer);\\n\\n        emit SubscriptionConsumerAdded(subId, consumer);\\n    }\\n\\n    /**\\n     * @inheritdoc VRFCoordinatorV2Interface\\n     */\\n    function cancelSubscription(\\n        uint64 subId,\\n        address to\\n    ) external override onlySubOwner(subId) nonReentrant {\\n        if (pendingRequestExists(subId)) {\\n            revert PendingRequestExists();\\n        }\\n        cancelSubscriptionHelper(subId, to);\\n    }\\n\\n    function cancelSubscriptionHelper(\\n        uint64 subId,\\n        address to\\n    ) private nonReentrant {\\n        SubscriptionConfig memory subConfig = s_subscriptionConfigs[subId];\\n        Subscription memory sub = s_subscriptions[subId];\\n        uint96 balance = sub.balance;\\n        // Note bounded by MAX_CONSUMERS;\\n        // If no consumers, does nothing.\\n        for (uint256 i = 0; i < subConfig.consumers.length; i++) {\\n            delete s_consumers[subConfig.consumers[i]][subId];\\n        }\\n        delete s_subscriptionConfigs[subId];\\n        delete s_subscriptions[subId];\\n        s_totalBalance -= balance;\\n        if (!LINK.transfer(to, uint256(balance))) {\\n            revert InsufficientBalance();\\n        }\\n        emit SubscriptionCanceled(subId, to, balance);\\n    }\\n\\n    /**\\n     * @inheritdoc VRFCoordinatorV2Interface\\n     * @dev Looping is bounded to MAX_CONSUMERS*(number of keyhashes).\\n     * @dev Used to disable subscription canceling while outstanding request are present.\\n     */\\n    function pendingRequestExists(\\n        uint64 subId\\n    ) public view override returns (bool) {\\n        SubscriptionConfig memory subConfig = s_subscriptionConfigs[subId];\\n        for (uint256 i = 0; i < subConfig.consumers.length; i++) {\\n            for (uint256 j = 0; j < s_provingKeyHashes.length; j++) {\\n                (uint256 reqId, ) = computeRequestId(\\n                    s_provingKeyHashes[j],\\n                    subConfig.consumers[i],\\n                    subId,\\n                    s_consumers[subConfig.consumers[i]][subId]\\n                );\\n                if (s_requestCommitments[reqId] != 0) {\\n                    return true;\\n                }\\n            }\\n        }\\n        return false;\\n    }\\n\\n    modifier onlySubOwner(uint64 subId) {\\n        address owner = s_subscriptionConfigs[subId].owner;\\n        if (owner == address(0)) {\\n            revert InvalidSubscription();\\n        }\\n        if (msg.sender != owner) {\\n            revert MustBeSubOwner(owner);\\n        }\\n        _;\\n    }\\n\\n    modifier nonReentrant() {\\n        if (s_config.reentrancyLock) {\\n            revert Reentrant();\\n        }\\n        _;\\n    }\\n\\n    /**\\n     * @notice The type and version of this contract\\n     * @return Type and version string\\n     */\\n    function typeAndVersion()\\n        external\\n        pure\\n        virtual\\n        override\\n        returns (string memory)\\n    {\\n        return \\\"VRFCoordinatorV2 1.0.0\\\";\\n    }\\n}\\n\",\"keccak256\":\"0xaaa3ae138eef964f56db5c7f3e489699312132bacbf422074c85621b156f773f\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":435,"contract":"@chainlink/contracts/src/v0.8/vrf/VRFCoordinatorV2.sol:VRFCoordinatorV2","label":"s_owner","offset":0,"slot":"0","type":"t_address"},{"astId":437,"contract":"@chainlink/contracts/src/v0.8/vrf/VRFCoordinatorV2.sol:VRFCoordinatorV2","label":"s_pendingOwner","offset":0,"slot":"1","type":"t_address"},{"astId":2184,"contract":"@chainlink/contracts/src/v0.8/vrf/VRFCoordinatorV2.sol:VRFCoordinatorV2","label":"s_consumers","offset":0,"slot":"2","type":"t_mapping(t_address,t_mapping(t_uint64,t_uint64))"},{"astId":2189,"contract":"@chainlink/contracts/src/v0.8/vrf/VRFCoordinatorV2.sol:VRFCoordinatorV2","label":"s_subscriptionConfigs","offset":0,"slot":"3","type":"t_mapping(t_uint64,t_struct(SubscriptionConfig)2178_storage)"},{"astId":2194,"contract":"@chainlink/contracts/src/v0.8/vrf/VRFCoordinatorV2.sol:VRFCoordinatorV2","label":"s_subscriptions","offset":0,"slot":"4","type":"t_mapping(t_uint64,t_struct(Subscription)2170_storage)"},{"astId":2196,"contract":"@chainlink/contracts/src/v0.8/vrf/VRFCoordinatorV2.sol:VRFCoordinatorV2","label":"s_currentSubId","offset":0,"slot":"5","type":"t_uint64"},{"astId":2198,"contract":"@chainlink/contracts/src/v0.8/vrf/VRFCoordinatorV2.sol:VRFCoordinatorV2","label":"s_totalBalance","offset":8,"slot":"5","type":"t_uint96"},{"astId":2322,"contract":"@chainlink/contracts/src/v0.8/vrf/VRFCoordinatorV2.sol:VRFCoordinatorV2","label":"s_provingKeys","offset":0,"slot":"6","type":"t_mapping(t_bytes32,t_address)"},{"astId":2325,"contract":"@chainlink/contracts/src/v0.8/vrf/VRFCoordinatorV2.sol:VRFCoordinatorV2","label":"s_provingKeyHashes","offset":0,"slot":"7","type":"t_array(t_bytes32)dyn_storage"},{"astId":2329,"contract":"@chainlink/contracts/src/v0.8/vrf/VRFCoordinatorV2.sol:VRFCoordinatorV2","label":"s_withdrawableTokens","offset":0,"slot":"8","type":"t_mapping(t_address,t_uint96)"},{"astId":2333,"contract":"@chainlink/contracts/src/v0.8/vrf/VRFCoordinatorV2.sol:VRFCoordinatorV2","label":"s_requestCommitments","offset":0,"slot":"9","type":"t_mapping(t_uint256,t_bytes32)"},{"astId":2386,"contract":"@chainlink/contracts/src/v0.8/vrf/VRFCoordinatorV2.sol:VRFCoordinatorV2","label":"s_fallbackWeiPerUnitLink","offset":0,"slot":"10","type":"t_int256"},{"astId":2389,"contract":"@chainlink/contracts/src/v0.8/vrf/VRFCoordinatorV2.sol:VRFCoordinatorV2","label":"s_config","offset":0,"slot":"11","type":"t_struct(Config)2384_storage"},{"astId":2392,"contract":"@chainlink/contracts/src/v0.8/vrf/VRFCoordinatorV2.sol:VRFCoordinatorV2","label":"s_feeConfig","offset":0,"slot":"12","type":"t_struct(FeeConfig)2411_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_address)dyn_storage":{"base":"t_address","encoding":"dynamic_array","label":"address[]","numberOfBytes":"32"},"t_array(t_bytes32)dyn_storage":{"base":"t_bytes32","encoding":"dynamic_array","label":"bytes32[]","numberOfBytes":"32"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_int256":{"encoding":"inplace","label":"int256","numberOfBytes":"32"},"t_mapping(t_address,t_mapping(t_uint64,t_uint64))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(uint64 => uint64))","numberOfBytes":"32","value":"t_mapping(t_uint64,t_uint64)"},"t_mapping(t_address,t_uint96)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint96)","numberOfBytes":"32","value":"t_uint96"},"t_mapping(t_bytes32,t_address)":{"encoding":"mapping","key":"t_bytes32","label":"mapping(bytes32 => address)","numberOfBytes":"32","value":"t_address"},"t_mapping(t_uint256,t_bytes32)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => bytes32)","numberOfBytes":"32","value":"t_bytes32"},"t_mapping(t_uint64,t_struct(Subscription)2170_storage)":{"encoding":"mapping","key":"t_uint64","label":"mapping(uint64 => struct VRFCoordinatorV2.Subscription)","numberOfBytes":"32","value":"t_struct(Subscription)2170_storage"},"t_mapping(t_uint64,t_struct(SubscriptionConfig)2178_storage)":{"encoding":"mapping","key":"t_uint64","label":"mapping(uint64 => struct VRFCoordinatorV2.SubscriptionConfig)","numberOfBytes":"32","value":"t_struct(SubscriptionConfig)2178_storage"},"t_mapping(t_uint64,t_uint64)":{"encoding":"mapping","key":"t_uint64","label":"mapping(uint64 => uint64)","numberOfBytes":"32","value":"t_uint64"},"t_struct(Config)2384_storage":{"encoding":"inplace","label":"struct VRFCoordinatorV2.Config","members":[{"astId":2375,"contract":"@chainlink/contracts/src/v0.8/vrf/VRFCoordinatorV2.sol:VRFCoordinatorV2","label":"minimumRequestConfirmations","offset":0,"slot":"0","type":"t_uint16"},{"astId":2377,"contract":"@chainlink/contracts/src/v0.8/vrf/VRFCoordinatorV2.sol:VRFCoordinatorV2","label":"maxGasLimit","offset":2,"slot":"0","type":"t_uint32"},{"astId":2379,"contract":"@chainlink/contracts/src/v0.8/vrf/VRFCoordinatorV2.sol:VRFCoordinatorV2","label":"reentrancyLock","offset":6,"slot":"0","type":"t_bool"},{"astId":2381,"contract":"@chainlink/contracts/src/v0.8/vrf/VRFCoordinatorV2.sol:VRFCoordinatorV2","label":"stalenessSeconds","offset":7,"slot":"0","type":"t_uint32"},{"astId":2383,"contract":"@chainlink/contracts/src/v0.8/vrf/VRFCoordinatorV2.sol:VRFCoordinatorV2","label":"gasAfterPaymentCalculation","offset":11,"slot":"0","type":"t_uint32"}],"numberOfBytes":"32"},"t_struct(FeeConfig)2411_storage":{"encoding":"inplace","label":"struct VRFCoordinatorV2.FeeConfig","members":[{"astId":2394,"contract":"@chainlink/contracts/src/v0.8/vrf/VRFCoordinatorV2.sol:VRFCoordinatorV2","label":"fulfillmentFlatFeeLinkPPMTier1","offset":0,"slot":"0","type":"t_uint32"},{"astId":2396,"contract":"@chainlink/contracts/src/v0.8/vrf/VRFCoordinatorV2.sol:VRFCoordinatorV2","label":"fulfillmentFlatFeeLinkPPMTier2","offset":4,"slot":"0","type":"t_uint32"},{"astId":2398,"contract":"@chainlink/contracts/src/v0.8/vrf/VRFCoordinatorV2.sol:VRFCoordinatorV2","label":"fulfillmentFlatFeeLinkPPMTier3","offset":8,"slot":"0","type":"t_uint32"},{"astId":2400,"contract":"@chainlink/contracts/src/v0.8/vrf/VRFCoordinatorV2.sol:VRFCoordinatorV2","label":"fulfillmentFlatFeeLinkPPMTier4","offset":12,"slot":"0","type":"t_uint32"},{"astId":2402,"contract":"@chainlink/contracts/src/v0.8/vrf/VRFCoordinatorV2.sol:VRFCoordinatorV2","label":"fulfillmentFlatFeeLinkPPMTier5","offset":16,"slot":"0","type":"t_uint32"},{"astId":2404,"contract":"@chainlink/contracts/src/v0.8/vrf/VRFCoordinatorV2.sol:VRFCoordinatorV2","label":"reqsForTier2","offset":20,"slot":"0","type":"t_uint24"},{"astId":2406,"contract":"@chainlink/contracts/src/v0.8/vrf/VRFCoordinatorV2.sol:VRFCoordinatorV2","label":"reqsForTier3","offset":23,"slot":"0","type":"t_uint24"},{"astId":2408,"contract":"@chainlink/contracts/src/v0.8/vrf/VRFCoordinatorV2.sol:VRFCoordinatorV2","label":"reqsForTier4","offset":26,"slot":"0","type":"t_uint24"},{"astId":2410,"contract":"@chainlink/contracts/src/v0.8/vrf/VRFCoordinatorV2.sol:VRFCoordinatorV2","label":"reqsForTier5","offset":29,"slot":"0","type":"t_uint24"}],"numberOfBytes":"32"},"t_struct(Subscription)2170_storage":{"encoding":"inplace","label":"struct VRFCoordinatorV2.Subscription","members":[{"astId":2167,"contract":"@chainlink/contracts/src/v0.8/vrf/VRFCoordinatorV2.sol:VRFCoordinatorV2","label":"balance","offset":0,"slot":"0","type":"t_uint96"},{"astId":2169,"contract":"@chainlink/contracts/src/v0.8/vrf/VRFCoordinatorV2.sol:VRFCoordinatorV2","label":"reqCount","offset":12,"slot":"0","type":"t_uint64"}],"numberOfBytes":"32"},"t_struct(SubscriptionConfig)2178_storage":{"encoding":"inplace","label":"struct VRFCoordinatorV2.SubscriptionConfig","members":[{"astId":2172,"contract":"@chainlink/contracts/src/v0.8/vrf/VRFCoordinatorV2.sol:VRFCoordinatorV2","label":"owner","offset":0,"slot":"0","type":"t_address"},{"astId":2174,"contract":"@chainlink/contracts/src/v0.8/vrf/VRFCoordinatorV2.sol:VRFCoordinatorV2","label":"requestedOwner","offset":0,"slot":"1","type":"t_address"},{"astId":2177,"contract":"@chainlink/contracts/src/v0.8/vrf/VRFCoordinatorV2.sol:VRFCoordinatorV2","label":"consumers","offset":0,"slot":"2","type":"t_array(t_address)dyn_storage"}],"numberOfBytes":"96"},"t_uint16":{"encoding":"inplace","label":"uint16","numberOfBytes":"2"},"t_uint24":{"encoding":"inplace","label":"uint24","numberOfBytes":"3"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint32":{"encoding":"inplace","label":"uint32","numberOfBytes":"4"},"t_uint64":{"encoding":"inplace","label":"uint64","numberOfBytes":"8"},"t_uint96":{"encoding":"inplace","label":"uint96","numberOfBytes":"12"}}},"userdoc":{"kind":"user","methods":{"acceptOwnership()":{"notice":"Allows an ownership transfer to be completed by the recipient."},"acceptSubscriptionOwnerTransfer(uint64)":{"notice":"Request subscription owner transfer."},"addConsumer(uint64,address)":{"notice":"Add a consumer to a VRF subscription."},"cancelSubscription(uint64,address)":{"notice":"Cancel a subscription"},"createSubscription()":{"notice":"Create a VRF subscription."},"deregisterProvingKey(uint256[2])":{"notice":"Deregisters a proving key to an oracle."},"getCommitment(uint256)":{"notice":"Get request commitment"},"getRequestConfig()":{"notice":"Get configuration relevant for making requests"},"getSubscription(uint64)":{"notice":"Get a VRF subscription."},"hashOfKey(uint256[2])":{"notice":"Returns the proving key hash key associated with this public key"},"owner()":{"notice":"Get the current owner"},"ownerCancelSubscription(uint64)":{"notice":"Owner cancel subscription, sends remaining link directly to the subscription owner."},"recoverFunds(address)":{"notice":"Recover link sent with transfer instead of transferAndCall."},"registerProvingKey(address,uint256[2])":{"notice":"Registers a proving key to an oracle."},"removeConsumer(uint64,address)":{"notice":"Remove a consumer from a VRF subscription."},"requestRandomWords(bytes32,uint64,uint16,uint32,uint32)":{"notice":"Request a set of random words."},"requestSubscriptionOwnerTransfer(uint64,address)":{"notice":"Request subscription owner transfer."},"setConfig(uint16,uint32,uint32,uint32,int256,(uint32,uint32,uint32,uint32,uint32,uint24,uint24,uint24,uint24))":{"notice":"Sets the configuration of the vrfv2 coordinator"},"transferOwnership(address)":{"notice":"Allows an owner to begin transferring ownership to a new address, pending."},"typeAndVersion()":{"notice":"The type and version of this contract"}},"version":1}}},"contracts/Raffle.sol":{"Raffle":{"abi":[{"inputs":[{"internalType":"address","name":"vrfCoordinatorV2","type":"address"},{"internalType":"uint256","name":"entranceFee","type":"uint256"},{"internalType":"bytes32","name":"gasLane","type":"bytes32"},{"internalType":"uint256","name":"subscriptionId","type":"uint256"},{"internalType":"uint32","name":"callbackGasLimit","type":"uint32"},{"internalType":"uint256","name":"interval","type":"uint256"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"have","type":"address"},{"internalType":"address","name":"want","type":"address"}],"name":"OnlyCoordinatorCanFulfill","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"player","type":"address"}],"name":"RaffleEnter","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"requestId","type":"uint256"}],"name":"RequestedRaffleWinner","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"winner","type":"address"}],"name":"WinnerPicked","type":"event"},{"inputs":[{"internalType":"bytes","name":"","type":"bytes"}],"name":"checkUpkeep","outputs":[{"internalType":"bool","name":"upkeepNeeded","type":"bool"},{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"enterRaffle","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"getEntranceFee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getInterval","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getLatestTimeStamp","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getNumWords","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"getNumberOfPlayers","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"name":"getPlayer","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getRaffleState","outputs":[{"internalType":"enum Raffle.RaffleState","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getRecentWinner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getRequestConfirmation","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"bytes","name":"","type":"bytes"}],"name":"performUpkeep","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"requestId","type":"uint256"},{"internalType":"uint256[]","name":"randomWords","type":"uint256[]"}],"name":"rawFulfillRandomWords","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_2057":{"entryPoint":null,"id":2057,"parameterSlots":1,"returnSlots":0},"@_4511":{"entryPoint":null,"id":4511,"parameterSlots":6,"returnSlots":0},"abi_decode_t_address_fromMemory":{"entryPoint":365,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32_fromMemory":{"entryPoint":483,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":424,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint32_fromMemory":{"entryPoint":548,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_uint256t_bytes32t_uint256t_uint32t_uint256_fromMemory":{"entryPoint":571,"id":null,"parameterSlots":2,"returnSlots":6},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"cleanup_t_address":{"entryPoint":319,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":447,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":287,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":388,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint32":{"entryPoint":506,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x21":{"entryPoint":727,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":282,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_t_address":{"entryPoint":339,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes32":{"entryPoint":457,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":398,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint32":{"entryPoint":522,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:3258:20","nodeType":"YulBlock","src":"0:3258:20","statements":[{"body":{"nativeSrc":"47:35:20","nodeType":"YulBlock","src":"47:35:20","statements":[{"nativeSrc":"57:19:20","nodeType":"YulAssignment","src":"57:19:20","value":{"arguments":[{"kind":"number","nativeSrc":"73:2:20","nodeType":"YulLiteral","src":"73:2:20","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"67:5:20","nodeType":"YulIdentifier","src":"67:5:20"},"nativeSrc":"67:9:20","nodeType":"YulFunctionCall","src":"67:9:20"},"variableNames":[{"name":"memPtr","nativeSrc":"57:6:20","nodeType":"YulIdentifier","src":"57:6:20"}]}]},"name":"allocate_unbounded","nativeSrc":"7:75:20","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"40:6:20","nodeType":"YulTypedName","src":"40:6:20","type":""}],"src":"7:75:20"},{"body":{"nativeSrc":"177:28:20","nodeType":"YulBlock","src":"177:28:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"194:1:20","nodeType":"YulLiteral","src":"194:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"197:1:20","nodeType":"YulLiteral","src":"197:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"187:6:20","nodeType":"YulIdentifier","src":"187:6:20"},"nativeSrc":"187:12:20","nodeType":"YulFunctionCall","src":"187:12:20"},"nativeSrc":"187:12:20","nodeType":"YulExpressionStatement","src":"187:12:20"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"88:117:20","nodeType":"YulFunctionDefinition","src":"88:117:20"},{"body":{"nativeSrc":"300:28:20","nodeType":"YulBlock","src":"300:28:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"317:1:20","nodeType":"YulLiteral","src":"317:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"320:1:20","nodeType":"YulLiteral","src":"320:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"310:6:20","nodeType":"YulIdentifier","src":"310:6:20"},"nativeSrc":"310:12:20","nodeType":"YulFunctionCall","src":"310:12:20"},"nativeSrc":"310:12:20","nodeType":"YulExpressionStatement","src":"310:12:20"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"211:117:20","nodeType":"YulFunctionDefinition","src":"211:117:20"},{"body":{"nativeSrc":"379:81:20","nodeType":"YulBlock","src":"379:81:20","statements":[{"nativeSrc":"389:65:20","nodeType":"YulAssignment","src":"389:65:20","value":{"arguments":[{"name":"value","nativeSrc":"404:5:20","nodeType":"YulIdentifier","src":"404:5:20"},{"kind":"number","nativeSrc":"411:42:20","nodeType":"YulLiteral","src":"411:42:20","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"400:3:20","nodeType":"YulIdentifier","src":"400:3:20"},"nativeSrc":"400:54:20","nodeType":"YulFunctionCall","src":"400:54:20"},"variableNames":[{"name":"cleaned","nativeSrc":"389:7:20","nodeType":"YulIdentifier","src":"389:7:20"}]}]},"name":"cleanup_t_uint160","nativeSrc":"334:126:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"361:5:20","nodeType":"YulTypedName","src":"361:5:20","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"371:7:20","nodeType":"YulTypedName","src":"371:7:20","type":""}],"src":"334:126:20"},{"body":{"nativeSrc":"511:51:20","nodeType":"YulBlock","src":"511:51:20","statements":[{"nativeSrc":"521:35:20","nodeType":"YulAssignment","src":"521:35:20","value":{"arguments":[{"name":"value","nativeSrc":"550:5:20","nodeType":"YulIdentifier","src":"550:5:20"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"532:17:20","nodeType":"YulIdentifier","src":"532:17:20"},"nativeSrc":"532:24:20","nodeType":"YulFunctionCall","src":"532:24:20"},"variableNames":[{"name":"cleaned","nativeSrc":"521:7:20","nodeType":"YulIdentifier","src":"521:7:20"}]}]},"name":"cleanup_t_address","nativeSrc":"466:96:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"493:5:20","nodeType":"YulTypedName","src":"493:5:20","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"503:7:20","nodeType":"YulTypedName","src":"503:7:20","type":""}],"src":"466:96:20"},{"body":{"nativeSrc":"611:79:20","nodeType":"YulBlock","src":"611:79:20","statements":[{"body":{"nativeSrc":"668:16:20","nodeType":"YulBlock","src":"668:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"677:1:20","nodeType":"YulLiteral","src":"677:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"680:1:20","nodeType":"YulLiteral","src":"680:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"670:6:20","nodeType":"YulIdentifier","src":"670:6:20"},"nativeSrc":"670:12:20","nodeType":"YulFunctionCall","src":"670:12:20"},"nativeSrc":"670:12:20","nodeType":"YulExpressionStatement","src":"670:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"634:5:20","nodeType":"YulIdentifier","src":"634:5:20"},{"arguments":[{"name":"value","nativeSrc":"659:5:20","nodeType":"YulIdentifier","src":"659:5:20"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"641:17:20","nodeType":"YulIdentifier","src":"641:17:20"},"nativeSrc":"641:24:20","nodeType":"YulFunctionCall","src":"641:24:20"}],"functionName":{"name":"eq","nativeSrc":"631:2:20","nodeType":"YulIdentifier","src":"631:2:20"},"nativeSrc":"631:35:20","nodeType":"YulFunctionCall","src":"631:35:20"}],"functionName":{"name":"iszero","nativeSrc":"624:6:20","nodeType":"YulIdentifier","src":"624:6:20"},"nativeSrc":"624:43:20","nodeType":"YulFunctionCall","src":"624:43:20"},"nativeSrc":"621:63:20","nodeType":"YulIf","src":"621:63:20"}]},"name":"validator_revert_t_address","nativeSrc":"568:122:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"604:5:20","nodeType":"YulTypedName","src":"604:5:20","type":""}],"src":"568:122:20"},{"body":{"nativeSrc":"759:80:20","nodeType":"YulBlock","src":"759:80:20","statements":[{"nativeSrc":"769:22:20","nodeType":"YulAssignment","src":"769:22:20","value":{"arguments":[{"name":"offset","nativeSrc":"784:6:20","nodeType":"YulIdentifier","src":"784:6:20"}],"functionName":{"name":"mload","nativeSrc":"778:5:20","nodeType":"YulIdentifier","src":"778:5:20"},"nativeSrc":"778:13:20","nodeType":"YulFunctionCall","src":"778:13:20"},"variableNames":[{"name":"value","nativeSrc":"769:5:20","nodeType":"YulIdentifier","src":"769:5:20"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"827:5:20","nodeType":"YulIdentifier","src":"827:5:20"}],"functionName":{"name":"validator_revert_t_address","nativeSrc":"800:26:20","nodeType":"YulIdentifier","src":"800:26:20"},"nativeSrc":"800:33:20","nodeType":"YulFunctionCall","src":"800:33:20"},"nativeSrc":"800:33:20","nodeType":"YulExpressionStatement","src":"800:33:20"}]},"name":"abi_decode_t_address_fromMemory","nativeSrc":"696:143:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"737:6:20","nodeType":"YulTypedName","src":"737:6:20","type":""},{"name":"end","nativeSrc":"745:3:20","nodeType":"YulTypedName","src":"745:3:20","type":""}],"returnVariables":[{"name":"value","nativeSrc":"753:5:20","nodeType":"YulTypedName","src":"753:5:20","type":""}],"src":"696:143:20"},{"body":{"nativeSrc":"890:32:20","nodeType":"YulBlock","src":"890:32:20","statements":[{"nativeSrc":"900:16:20","nodeType":"YulAssignment","src":"900:16:20","value":{"name":"value","nativeSrc":"911:5:20","nodeType":"YulIdentifier","src":"911:5:20"},"variableNames":[{"name":"cleaned","nativeSrc":"900:7:20","nodeType":"YulIdentifier","src":"900:7:20"}]}]},"name":"cleanup_t_uint256","nativeSrc":"845:77:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"872:5:20","nodeType":"YulTypedName","src":"872:5:20","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"882:7:20","nodeType":"YulTypedName","src":"882:7:20","type":""}],"src":"845:77:20"},{"body":{"nativeSrc":"971:79:20","nodeType":"YulBlock","src":"971:79:20","statements":[{"body":{"nativeSrc":"1028:16:20","nodeType":"YulBlock","src":"1028:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1037:1:20","nodeType":"YulLiteral","src":"1037:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"1040:1:20","nodeType":"YulLiteral","src":"1040:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1030:6:20","nodeType":"YulIdentifier","src":"1030:6:20"},"nativeSrc":"1030:12:20","nodeType":"YulFunctionCall","src":"1030:12:20"},"nativeSrc":"1030:12:20","nodeType":"YulExpressionStatement","src":"1030:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"994:5:20","nodeType":"YulIdentifier","src":"994:5:20"},{"arguments":[{"name":"value","nativeSrc":"1019:5:20","nodeType":"YulIdentifier","src":"1019:5:20"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"1001:17:20","nodeType":"YulIdentifier","src":"1001:17:20"},"nativeSrc":"1001:24:20","nodeType":"YulFunctionCall","src":"1001:24:20"}],"functionName":{"name":"eq","nativeSrc":"991:2:20","nodeType":"YulIdentifier","src":"991:2:20"},"nativeSrc":"991:35:20","nodeType":"YulFunctionCall","src":"991:35:20"}],"functionName":{"name":"iszero","nativeSrc":"984:6:20","nodeType":"YulIdentifier","src":"984:6:20"},"nativeSrc":"984:43:20","nodeType":"YulFunctionCall","src":"984:43:20"},"nativeSrc":"981:63:20","nodeType":"YulIf","src":"981:63:20"}]},"name":"validator_revert_t_uint256","nativeSrc":"928:122:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"964:5:20","nodeType":"YulTypedName","src":"964:5:20","type":""}],"src":"928:122:20"},{"body":{"nativeSrc":"1119:80:20","nodeType":"YulBlock","src":"1119:80:20","statements":[{"nativeSrc":"1129:22:20","nodeType":"YulAssignment","src":"1129:22:20","value":{"arguments":[{"name":"offset","nativeSrc":"1144:6:20","nodeType":"YulIdentifier","src":"1144:6:20"}],"functionName":{"name":"mload","nativeSrc":"1138:5:20","nodeType":"YulIdentifier","src":"1138:5:20"},"nativeSrc":"1138:13:20","nodeType":"YulFunctionCall","src":"1138:13:20"},"variableNames":[{"name":"value","nativeSrc":"1129:5:20","nodeType":"YulIdentifier","src":"1129:5:20"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"1187:5:20","nodeType":"YulIdentifier","src":"1187:5:20"}],"functionName":{"name":"validator_revert_t_uint256","nativeSrc":"1160:26:20","nodeType":"YulIdentifier","src":"1160:26:20"},"nativeSrc":"1160:33:20","nodeType":"YulFunctionCall","src":"1160:33:20"},"nativeSrc":"1160:33:20","nodeType":"YulExpressionStatement","src":"1160:33:20"}]},"name":"abi_decode_t_uint256_fromMemory","nativeSrc":"1056:143:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"1097:6:20","nodeType":"YulTypedName","src":"1097:6:20","type":""},{"name":"end","nativeSrc":"1105:3:20","nodeType":"YulTypedName","src":"1105:3:20","type":""}],"returnVariables":[{"name":"value","nativeSrc":"1113:5:20","nodeType":"YulTypedName","src":"1113:5:20","type":""}],"src":"1056:143:20"},{"body":{"nativeSrc":"1250:32:20","nodeType":"YulBlock","src":"1250:32:20","statements":[{"nativeSrc":"1260:16:20","nodeType":"YulAssignment","src":"1260:16:20","value":{"name":"value","nativeSrc":"1271:5:20","nodeType":"YulIdentifier","src":"1271:5:20"},"variableNames":[{"name":"cleaned","nativeSrc":"1260:7:20","nodeType":"YulIdentifier","src":"1260:7:20"}]}]},"name":"cleanup_t_bytes32","nativeSrc":"1205:77:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1232:5:20","nodeType":"YulTypedName","src":"1232:5:20","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"1242:7:20","nodeType":"YulTypedName","src":"1242:7:20","type":""}],"src":"1205:77:20"},{"body":{"nativeSrc":"1331:79:20","nodeType":"YulBlock","src":"1331:79:20","statements":[{"body":{"nativeSrc":"1388:16:20","nodeType":"YulBlock","src":"1388:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1397:1:20","nodeType":"YulLiteral","src":"1397:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"1400:1:20","nodeType":"YulLiteral","src":"1400:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1390:6:20","nodeType":"YulIdentifier","src":"1390:6:20"},"nativeSrc":"1390:12:20","nodeType":"YulFunctionCall","src":"1390:12:20"},"nativeSrc":"1390:12:20","nodeType":"YulExpressionStatement","src":"1390:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1354:5:20","nodeType":"YulIdentifier","src":"1354:5:20"},{"arguments":[{"name":"value","nativeSrc":"1379:5:20","nodeType":"YulIdentifier","src":"1379:5:20"}],"functionName":{"name":"cleanup_t_bytes32","nativeSrc":"1361:17:20","nodeType":"YulIdentifier","src":"1361:17:20"},"nativeSrc":"1361:24:20","nodeType":"YulFunctionCall","src":"1361:24:20"}],"functionName":{"name":"eq","nativeSrc":"1351:2:20","nodeType":"YulIdentifier","src":"1351:2:20"},"nativeSrc":"1351:35:20","nodeType":"YulFunctionCall","src":"1351:35:20"}],"functionName":{"name":"iszero","nativeSrc":"1344:6:20","nodeType":"YulIdentifier","src":"1344:6:20"},"nativeSrc":"1344:43:20","nodeType":"YulFunctionCall","src":"1344:43:20"},"nativeSrc":"1341:63:20","nodeType":"YulIf","src":"1341:63:20"}]},"name":"validator_revert_t_bytes32","nativeSrc":"1288:122:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1324:5:20","nodeType":"YulTypedName","src":"1324:5:20","type":""}],"src":"1288:122:20"},{"body":{"nativeSrc":"1479:80:20","nodeType":"YulBlock","src":"1479:80:20","statements":[{"nativeSrc":"1489:22:20","nodeType":"YulAssignment","src":"1489:22:20","value":{"arguments":[{"name":"offset","nativeSrc":"1504:6:20","nodeType":"YulIdentifier","src":"1504:6:20"}],"functionName":{"name":"mload","nativeSrc":"1498:5:20","nodeType":"YulIdentifier","src":"1498:5:20"},"nativeSrc":"1498:13:20","nodeType":"YulFunctionCall","src":"1498:13:20"},"variableNames":[{"name":"value","nativeSrc":"1489:5:20","nodeType":"YulIdentifier","src":"1489:5:20"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"1547:5:20","nodeType":"YulIdentifier","src":"1547:5:20"}],"functionName":{"name":"validator_revert_t_bytes32","nativeSrc":"1520:26:20","nodeType":"YulIdentifier","src":"1520:26:20"},"nativeSrc":"1520:33:20","nodeType":"YulFunctionCall","src":"1520:33:20"},"nativeSrc":"1520:33:20","nodeType":"YulExpressionStatement","src":"1520:33:20"}]},"name":"abi_decode_t_bytes32_fromMemory","nativeSrc":"1416:143:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"1457:6:20","nodeType":"YulTypedName","src":"1457:6:20","type":""},{"name":"end","nativeSrc":"1465:3:20","nodeType":"YulTypedName","src":"1465:3:20","type":""}],"returnVariables":[{"name":"value","nativeSrc":"1473:5:20","nodeType":"YulTypedName","src":"1473:5:20","type":""}],"src":"1416:143:20"},{"body":{"nativeSrc":"1609:49:20","nodeType":"YulBlock","src":"1609:49:20","statements":[{"nativeSrc":"1619:33:20","nodeType":"YulAssignment","src":"1619:33:20","value":{"arguments":[{"name":"value","nativeSrc":"1634:5:20","nodeType":"YulIdentifier","src":"1634:5:20"},{"kind":"number","nativeSrc":"1641:10:20","nodeType":"YulLiteral","src":"1641:10:20","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nativeSrc":"1630:3:20","nodeType":"YulIdentifier","src":"1630:3:20"},"nativeSrc":"1630:22:20","nodeType":"YulFunctionCall","src":"1630:22:20"},"variableNames":[{"name":"cleaned","nativeSrc":"1619:7:20","nodeType":"YulIdentifier","src":"1619:7:20"}]}]},"name":"cleanup_t_uint32","nativeSrc":"1565:93:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1591:5:20","nodeType":"YulTypedName","src":"1591:5:20","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"1601:7:20","nodeType":"YulTypedName","src":"1601:7:20","type":""}],"src":"1565:93:20"},{"body":{"nativeSrc":"1706:78:20","nodeType":"YulBlock","src":"1706:78:20","statements":[{"body":{"nativeSrc":"1762:16:20","nodeType":"YulBlock","src":"1762:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1771:1:20","nodeType":"YulLiteral","src":"1771:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"1774:1:20","nodeType":"YulLiteral","src":"1774:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1764:6:20","nodeType":"YulIdentifier","src":"1764:6:20"},"nativeSrc":"1764:12:20","nodeType":"YulFunctionCall","src":"1764:12:20"},"nativeSrc":"1764:12:20","nodeType":"YulExpressionStatement","src":"1764:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1729:5:20","nodeType":"YulIdentifier","src":"1729:5:20"},{"arguments":[{"name":"value","nativeSrc":"1753:5:20","nodeType":"YulIdentifier","src":"1753:5:20"}],"functionName":{"name":"cleanup_t_uint32","nativeSrc":"1736:16:20","nodeType":"YulIdentifier","src":"1736:16:20"},"nativeSrc":"1736:23:20","nodeType":"YulFunctionCall","src":"1736:23:20"}],"functionName":{"name":"eq","nativeSrc":"1726:2:20","nodeType":"YulIdentifier","src":"1726:2:20"},"nativeSrc":"1726:34:20","nodeType":"YulFunctionCall","src":"1726:34:20"}],"functionName":{"name":"iszero","nativeSrc":"1719:6:20","nodeType":"YulIdentifier","src":"1719:6:20"},"nativeSrc":"1719:42:20","nodeType":"YulFunctionCall","src":"1719:42:20"},"nativeSrc":"1716:62:20","nodeType":"YulIf","src":"1716:62:20"}]},"name":"validator_revert_t_uint32","nativeSrc":"1664:120:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1699:5:20","nodeType":"YulTypedName","src":"1699:5:20","type":""}],"src":"1664:120:20"},{"body":{"nativeSrc":"1852:79:20","nodeType":"YulBlock","src":"1852:79:20","statements":[{"nativeSrc":"1862:22:20","nodeType":"YulAssignment","src":"1862:22:20","value":{"arguments":[{"name":"offset","nativeSrc":"1877:6:20","nodeType":"YulIdentifier","src":"1877:6:20"}],"functionName":{"name":"mload","nativeSrc":"1871:5:20","nodeType":"YulIdentifier","src":"1871:5:20"},"nativeSrc":"1871:13:20","nodeType":"YulFunctionCall","src":"1871:13:20"},"variableNames":[{"name":"value","nativeSrc":"1862:5:20","nodeType":"YulIdentifier","src":"1862:5:20"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"1919:5:20","nodeType":"YulIdentifier","src":"1919:5:20"}],"functionName":{"name":"validator_revert_t_uint32","nativeSrc":"1893:25:20","nodeType":"YulIdentifier","src":"1893:25:20"},"nativeSrc":"1893:32:20","nodeType":"YulFunctionCall","src":"1893:32:20"},"nativeSrc":"1893:32:20","nodeType":"YulExpressionStatement","src":"1893:32:20"}]},"name":"abi_decode_t_uint32_fromMemory","nativeSrc":"1790:141:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"1830:6:20","nodeType":"YulTypedName","src":"1830:6:20","type":""},{"name":"end","nativeSrc":"1838:3:20","nodeType":"YulTypedName","src":"1838:3:20","type":""}],"returnVariables":[{"name":"value","nativeSrc":"1846:5:20","nodeType":"YulTypedName","src":"1846:5:20","type":""}],"src":"1790:141:20"},{"body":{"nativeSrc":"2098:971:20","nodeType":"YulBlock","src":"2098:971:20","statements":[{"body":{"nativeSrc":"2145:83:20","nodeType":"YulBlock","src":"2145:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"2147:77:20","nodeType":"YulIdentifier","src":"2147:77:20"},"nativeSrc":"2147:79:20","nodeType":"YulFunctionCall","src":"2147:79:20"},"nativeSrc":"2147:79:20","nodeType":"YulExpressionStatement","src":"2147:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"2119:7:20","nodeType":"YulIdentifier","src":"2119:7:20"},{"name":"headStart","nativeSrc":"2128:9:20","nodeType":"YulIdentifier","src":"2128:9:20"}],"functionName":{"name":"sub","nativeSrc":"2115:3:20","nodeType":"YulIdentifier","src":"2115:3:20"},"nativeSrc":"2115:23:20","nodeType":"YulFunctionCall","src":"2115:23:20"},{"kind":"number","nativeSrc":"2140:3:20","nodeType":"YulLiteral","src":"2140:3:20","type":"","value":"192"}],"functionName":{"name":"slt","nativeSrc":"2111:3:20","nodeType":"YulIdentifier","src":"2111:3:20"},"nativeSrc":"2111:33:20","nodeType":"YulFunctionCall","src":"2111:33:20"},"nativeSrc":"2108:120:20","nodeType":"YulIf","src":"2108:120:20"},{"nativeSrc":"2238:128:20","nodeType":"YulBlock","src":"2238:128:20","statements":[{"nativeSrc":"2253:15:20","nodeType":"YulVariableDeclaration","src":"2253:15:20","value":{"kind":"number","nativeSrc":"2267:1:20","nodeType":"YulLiteral","src":"2267:1:20","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"2257:6:20","nodeType":"YulTypedName","src":"2257:6:20","type":""}]},{"nativeSrc":"2282:74:20","nodeType":"YulAssignment","src":"2282:74:20","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2328:9:20","nodeType":"YulIdentifier","src":"2328:9:20"},{"name":"offset","nativeSrc":"2339:6:20","nodeType":"YulIdentifier","src":"2339:6:20"}],"functionName":{"name":"add","nativeSrc":"2324:3:20","nodeType":"YulIdentifier","src":"2324:3:20"},"nativeSrc":"2324:22:20","nodeType":"YulFunctionCall","src":"2324:22:20"},{"name":"dataEnd","nativeSrc":"2348:7:20","nodeType":"YulIdentifier","src":"2348:7:20"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nativeSrc":"2292:31:20","nodeType":"YulIdentifier","src":"2292:31:20"},"nativeSrc":"2292:64:20","nodeType":"YulFunctionCall","src":"2292:64:20"},"variableNames":[{"name":"value0","nativeSrc":"2282:6:20","nodeType":"YulIdentifier","src":"2282:6:20"}]}]},{"nativeSrc":"2376:129:20","nodeType":"YulBlock","src":"2376:129:20","statements":[{"nativeSrc":"2391:16:20","nodeType":"YulVariableDeclaration","src":"2391:16:20","value":{"kind":"number","nativeSrc":"2405:2:20","nodeType":"YulLiteral","src":"2405:2:20","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"2395:6:20","nodeType":"YulTypedName","src":"2395:6:20","type":""}]},{"nativeSrc":"2421:74:20","nodeType":"YulAssignment","src":"2421:74:20","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2467:9:20","nodeType":"YulIdentifier","src":"2467:9:20"},{"name":"offset","nativeSrc":"2478:6:20","nodeType":"YulIdentifier","src":"2478:6:20"}],"functionName":{"name":"add","nativeSrc":"2463:3:20","nodeType":"YulIdentifier","src":"2463:3:20"},"nativeSrc":"2463:22:20","nodeType":"YulFunctionCall","src":"2463:22:20"},{"name":"dataEnd","nativeSrc":"2487:7:20","nodeType":"YulIdentifier","src":"2487:7:20"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nativeSrc":"2431:31:20","nodeType":"YulIdentifier","src":"2431:31:20"},"nativeSrc":"2431:64:20","nodeType":"YulFunctionCall","src":"2431:64:20"},"variableNames":[{"name":"value1","nativeSrc":"2421:6:20","nodeType":"YulIdentifier","src":"2421:6:20"}]}]},{"nativeSrc":"2515:129:20","nodeType":"YulBlock","src":"2515:129:20","statements":[{"nativeSrc":"2530:16:20","nodeType":"YulVariableDeclaration","src":"2530:16:20","value":{"kind":"number","nativeSrc":"2544:2:20","nodeType":"YulLiteral","src":"2544:2:20","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"2534:6:20","nodeType":"YulTypedName","src":"2534:6:20","type":""}]},{"nativeSrc":"2560:74:20","nodeType":"YulAssignment","src":"2560:74:20","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2606:9:20","nodeType":"YulIdentifier","src":"2606:9:20"},{"name":"offset","nativeSrc":"2617:6:20","nodeType":"YulIdentifier","src":"2617:6:20"}],"functionName":{"name":"add","nativeSrc":"2602:3:20","nodeType":"YulIdentifier","src":"2602:3:20"},"nativeSrc":"2602:22:20","nodeType":"YulFunctionCall","src":"2602:22:20"},{"name":"dataEnd","nativeSrc":"2626:7:20","nodeType":"YulIdentifier","src":"2626:7:20"}],"functionName":{"name":"abi_decode_t_bytes32_fromMemory","nativeSrc":"2570:31:20","nodeType":"YulIdentifier","src":"2570:31:20"},"nativeSrc":"2570:64:20","nodeType":"YulFunctionCall","src":"2570:64:20"},"variableNames":[{"name":"value2","nativeSrc":"2560:6:20","nodeType":"YulIdentifier","src":"2560:6:20"}]}]},{"nativeSrc":"2654:129:20","nodeType":"YulBlock","src":"2654:129:20","statements":[{"nativeSrc":"2669:16:20","nodeType":"YulVariableDeclaration","src":"2669:16:20","value":{"kind":"number","nativeSrc":"2683:2:20","nodeType":"YulLiteral","src":"2683:2:20","type":"","value":"96"},"variables":[{"name":"offset","nativeSrc":"2673:6:20","nodeType":"YulTypedName","src":"2673:6:20","type":""}]},{"nativeSrc":"2699:74:20","nodeType":"YulAssignment","src":"2699:74:20","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2745:9:20","nodeType":"YulIdentifier","src":"2745:9:20"},{"name":"offset","nativeSrc":"2756:6:20","nodeType":"YulIdentifier","src":"2756:6:20"}],"functionName":{"name":"add","nativeSrc":"2741:3:20","nodeType":"YulIdentifier","src":"2741:3:20"},"nativeSrc":"2741:22:20","nodeType":"YulFunctionCall","src":"2741:22:20"},{"name":"dataEnd","nativeSrc":"2765:7:20","nodeType":"YulIdentifier","src":"2765:7:20"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nativeSrc":"2709:31:20","nodeType":"YulIdentifier","src":"2709:31:20"},"nativeSrc":"2709:64:20","nodeType":"YulFunctionCall","src":"2709:64:20"},"variableNames":[{"name":"value3","nativeSrc":"2699:6:20","nodeType":"YulIdentifier","src":"2699:6:20"}]}]},{"nativeSrc":"2793:129:20","nodeType":"YulBlock","src":"2793:129:20","statements":[{"nativeSrc":"2808:17:20","nodeType":"YulVariableDeclaration","src":"2808:17:20","value":{"kind":"number","nativeSrc":"2822:3:20","nodeType":"YulLiteral","src":"2822:3:20","type":"","value":"128"},"variables":[{"name":"offset","nativeSrc":"2812:6:20","nodeType":"YulTypedName","src":"2812:6:20","type":""}]},{"nativeSrc":"2839:73:20","nodeType":"YulAssignment","src":"2839:73:20","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2884:9:20","nodeType":"YulIdentifier","src":"2884:9:20"},{"name":"offset","nativeSrc":"2895:6:20","nodeType":"YulIdentifier","src":"2895:6:20"}],"functionName":{"name":"add","nativeSrc":"2880:3:20","nodeType":"YulIdentifier","src":"2880:3:20"},"nativeSrc":"2880:22:20","nodeType":"YulFunctionCall","src":"2880:22:20"},{"name":"dataEnd","nativeSrc":"2904:7:20","nodeType":"YulIdentifier","src":"2904:7:20"}],"functionName":{"name":"abi_decode_t_uint32_fromMemory","nativeSrc":"2849:30:20","nodeType":"YulIdentifier","src":"2849:30:20"},"nativeSrc":"2849:63:20","nodeType":"YulFunctionCall","src":"2849:63:20"},"variableNames":[{"name":"value4","nativeSrc":"2839:6:20","nodeType":"YulIdentifier","src":"2839:6:20"}]}]},{"nativeSrc":"2932:130:20","nodeType":"YulBlock","src":"2932:130:20","statements":[{"nativeSrc":"2947:17:20","nodeType":"YulVariableDeclaration","src":"2947:17:20","value":{"kind":"number","nativeSrc":"2961:3:20","nodeType":"YulLiteral","src":"2961:3:20","type":"","value":"160"},"variables":[{"name":"offset","nativeSrc":"2951:6:20","nodeType":"YulTypedName","src":"2951:6:20","type":""}]},{"nativeSrc":"2978:74:20","nodeType":"YulAssignment","src":"2978:74:20","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3024:9:20","nodeType":"YulIdentifier","src":"3024:9:20"},{"name":"offset","nativeSrc":"3035:6:20","nodeType":"YulIdentifier","src":"3035:6:20"}],"functionName":{"name":"add","nativeSrc":"3020:3:20","nodeType":"YulIdentifier","src":"3020:3:20"},"nativeSrc":"3020:22:20","nodeType":"YulFunctionCall","src":"3020:22:20"},{"name":"dataEnd","nativeSrc":"3044:7:20","nodeType":"YulIdentifier","src":"3044:7:20"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nativeSrc":"2988:31:20","nodeType":"YulIdentifier","src":"2988:31:20"},"nativeSrc":"2988:64:20","nodeType":"YulFunctionCall","src":"2988:64:20"},"variableNames":[{"name":"value5","nativeSrc":"2978:6:20","nodeType":"YulIdentifier","src":"2978:6:20"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_bytes32t_uint256t_uint32t_uint256_fromMemory","nativeSrc":"1937:1132:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2028:9:20","nodeType":"YulTypedName","src":"2028:9:20","type":""},{"name":"dataEnd","nativeSrc":"2039:7:20","nodeType":"YulTypedName","src":"2039:7:20","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"2051:6:20","nodeType":"YulTypedName","src":"2051:6:20","type":""},{"name":"value1","nativeSrc":"2059:6:20","nodeType":"YulTypedName","src":"2059:6:20","type":""},{"name":"value2","nativeSrc":"2067:6:20","nodeType":"YulTypedName","src":"2067:6:20","type":""},{"name":"value3","nativeSrc":"2075:6:20","nodeType":"YulTypedName","src":"2075:6:20","type":""},{"name":"value4","nativeSrc":"2083:6:20","nodeType":"YulTypedName","src":"2083:6:20","type":""},{"name":"value5","nativeSrc":"2091:6:20","nodeType":"YulTypedName","src":"2091:6:20","type":""}],"src":"1937:1132:20"},{"body":{"nativeSrc":"3103:152:20","nodeType":"YulBlock","src":"3103:152:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3120:1:20","nodeType":"YulLiteral","src":"3120:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"3123:77:20","nodeType":"YulLiteral","src":"3123:77:20","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"3113:6:20","nodeType":"YulIdentifier","src":"3113:6:20"},"nativeSrc":"3113:88:20","nodeType":"YulFunctionCall","src":"3113:88:20"},"nativeSrc":"3113:88:20","nodeType":"YulExpressionStatement","src":"3113:88:20"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3217:1:20","nodeType":"YulLiteral","src":"3217:1:20","type":"","value":"4"},{"kind":"number","nativeSrc":"3220:4:20","nodeType":"YulLiteral","src":"3220:4:20","type":"","value":"0x21"}],"functionName":{"name":"mstore","nativeSrc":"3210:6:20","nodeType":"YulIdentifier","src":"3210:6:20"},"nativeSrc":"3210:15:20","nodeType":"YulFunctionCall","src":"3210:15:20"},"nativeSrc":"3210:15:20","nodeType":"YulExpressionStatement","src":"3210:15:20"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3241:1:20","nodeType":"YulLiteral","src":"3241:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"3244:4:20","nodeType":"YulLiteral","src":"3244:4:20","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"3234:6:20","nodeType":"YulIdentifier","src":"3234:6:20"},"nativeSrc":"3234:15:20","nodeType":"YulFunctionCall","src":"3234:15:20"},"nativeSrc":"3234:15:20","nodeType":"YulExpressionStatement","src":"3234:15:20"}]},"name":"panic_error_0x21","nativeSrc":"3075:180:20","nodeType":"YulFunctionDefinition","src":"3075:180:20"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function cleanup_t_uint32(value) -> cleaned {\n        cleaned := and(value, 0xffffffff)\n    }\n\n    function validator_revert_t_uint32(value) {\n        if iszero(eq(value, cleanup_t_uint32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint32_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint32(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_bytes32t_uint256t_uint32t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5 {\n        if slt(sub(dataEnd, headStart), 192) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_bytes32_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint32_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n}\n","id":20,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"6101606040523480156200001257600080fd5b50604051620019303803806200193083398181016040528101906200003891906200023b565b858073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1681525050508460a081815250508573ffffffffffffffffffffffffffffffffffffffff1660c08173ffffffffffffffffffffffffffffffffffffffff16815250508360e081815250508261010081815250508163ffffffff166101208163ffffffff16815250506000600160146101000a81548160ff02191690836001811115620000f957620000f8620002d7565b5b02179055504260028190555080610140818152505050505050505062000306565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200014c826200011f565b9050919050565b6200015e816200013f565b81146200016a57600080fd5b50565b6000815190506200017e8162000153565b92915050565b6000819050919050565b620001998162000184565b8114620001a557600080fd5b50565b600081519050620001b9816200018e565b92915050565b6000819050919050565b620001d481620001bf565b8114620001e057600080fd5b50565b600081519050620001f481620001c9565b92915050565b600063ffffffff82169050919050565b6200021581620001fa565b81146200022157600080fd5b50565b60008151905062000235816200020a565b92915050565b60008060008060008060c087890312156200025b576200025a6200011a565b5b60006200026b89828a016200016d565b96505060206200027e89828a01620001a8565b95505060406200029189828a01620001e3565b9450506060620002a489828a01620001a8565b9350506080620002b789828a0162000224565b92505060a0620002ca89828a01620001a8565b9150509295509295509295565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60805160a05160c05160e0516101005161012051610140516115ba62000376600039600081816107c70152610835015260006106920152600061066f0152600061064e015260006106120152600081816102fa01526103f7015260008181610337015261038b01526115ba6000f3fe6080604052600436106100c25760003560e01c8063473f1ddc1161007f57806391ad27b41161005957806391ad27b414610238578063ca6a9ef814610263578063e55ae4e81461028e578063fd6673f5146102cb576100c2565b8063473f1ddc146101a457806353a2c19a146101cf5780636e04ff0d146101fa576100c2565b806309bc33a7146100c7578063115cbaf5146100f25780631fe543e31461011d5780632cfcc53914610146578063320229eb146101505780634585e33b1461017b575b600080fd5b3480156100d357600080fd5b506100dc6102f6565b6040516100e99190610bba565b60405180910390f35b3480156100fe57600080fd5b5061010761031e565b6040516101149190610c4c565b60405180910390f35b34801561012957600080fd5b50610144600480360381019061013f9190610e00565b610335565b005b61014e6103f5565b005b34801561015c57600080fd5b50610165610576565b6040516101729190610bba565b60405180910390f35b34801561018757600080fd5b506101a2600480360381019061019d9190610eb7565b610580565b005b3480156101b057600080fd5b506101b961074b565b6040516101c69190610f45565b60405180910390f35b3480156101db57600080fd5b506101e4610775565b6040516101f19190610bba565b60405180910390f35b34801561020657600080fd5b50610221600480360381019061021c9190611015565b610784565b60405161022f9291906110f8565b60405180910390f35b34801561024457600080fd5b5061024d610831565b60405161025a9190610bba565b60405180910390f35b34801561026f57600080fd5b50610278610859565b6040516102859190610bba565b60405180910390f35b34801561029a57600080fd5b506102b560048036038101906102b09190611128565b610866565b6040516102c29190610f45565b60405180910390f35b3480156102d757600080fd5b506102e06108ad565b6040516102ed9190610bba565b60405180910390f35b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600160149054906101000a900460ff16905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103e757337f00000000000000000000000000000000000000000000000000000000000000006040517f1cf993f40000000000000000000000000000000000000000000000000000000081526004016103de929190611155565b60405180910390fd5b6103f182826108b9565b5050565b7f0000000000000000000000000000000000000000000000000000000000000000341015610458576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161044f906111db565b60405180910390fd5b6000600181111561046c5761046b610bd5565b5b600160149054906101000a900460ff16600181111561048e5761048d610bd5565b5b146104ce576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104c590611247565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff167f0805e1d667bddb8a95f0f09880cf94f403fb596ce79928d9f29b74203ba284d460405160405180910390a2565b6000600254905090565b600061059a60405180602001604052806000815250610784565b50905060011515811515146105e4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105db906112b3565b60405180910390fd5b60018060146101000a81548160ff0219169083600181111561060957610608610bd5565b5b021790555060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16635d3b1d307f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000060037f000000000000000000000000000000000000000000000000000000000000000060016040518663ffffffff1660e01b81526004016106d395949392919061134b565b6020604051808303816000875af11580156106f2573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061071691906113b3565b9050807fcd6e45c8998311cab7e9d4385596cac867e20a0587194b954fa3a731c93ce78b60405160405180910390a250505050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600163ffffffff16905090565b600060606000600160149054906101000a900460ff1660018111156107ac576107ab610bd5565b5b600060018111156107c0576107bf610bd5565b5b14905060007f0000000000000000000000000000000000000000000000000000000000000000600254426107f4919061140f565b119050600080600080549050119050600080471190508380156108145750825b801561081d5750815b80156108265750805b955050505050915091565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600361ffff16905090565b600080828154811061087b5761087a611443565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60008080549050905090565b60008080549050826000815181106108d4576108d3611443565b5b60200260200101516108e691906114a1565b905060008082815481106108fd576108fc611443565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600160146101000a81548160ff0219169083600181111561099157610990610bd5565b5b0217905550600067ffffffffffffffff8111156109b1576109b0610cbd565b5b6040519080825280602002602001820160405280156109df5781602001602082028036833780820191505090505b50600090805190602001906109f5929190610afa565b504260028190555060008173ffffffffffffffffffffffffffffffffffffffff1647604051610a2390611503565b60006040518083038185875af1925050503d8060008114610a60576040519150601f19603f3d011682016040523d82523d6000602084013e610a65565b606091505b505090506001151581151514610ab0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aa790611564565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff167f5b690ec4a06fe979403046eaeea5b3ce38524683c3001f662c8b5a829632f7df60405160405180910390a25050505050565b828054828255906000526020600020908101928215610b73579160200282015b82811115610b725782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610b1a565b5b509050610b809190610b84565b5090565b5b80821115610b9d576000816000905550600101610b85565b5090565b6000819050919050565b610bb481610ba1565b82525050565b6000602082019050610bcf6000830184610bab565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60028110610c1557610c14610bd5565b5b50565b6000819050610c2682610c04565b919050565b6000610c3682610c18565b9050919050565b610c4681610c2b565b82525050565b6000602082019050610c616000830184610c3d565b92915050565b6000604051905090565b600080fd5b600080fd5b610c8481610ba1565b8114610c8f57600080fd5b50565b600081359050610ca181610c7b565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610cf582610cac565b810181811067ffffffffffffffff82111715610d1457610d13610cbd565b5b80604052505050565b6000610d27610c67565b9050610d338282610cec565b919050565b600067ffffffffffffffff821115610d5357610d52610cbd565b5b602082029050602081019050919050565b600080fd5b6000610d7c610d7784610d38565b610d1d565b90508083825260208201905060208402830185811115610d9f57610d9e610d64565b5b835b81811015610dc85780610db48882610c92565b845260208401935050602081019050610da1565b5050509392505050565b600082601f830112610de757610de6610ca7565b5b8135610df7848260208601610d69565b91505092915050565b60008060408385031215610e1757610e16610c71565b5b6000610e2585828601610c92565b925050602083013567ffffffffffffffff811115610e4657610e45610c76565b5b610e5285828601610dd2565b9150509250929050565b600080fd5b60008083601f840112610e7757610e76610ca7565b5b8235905067ffffffffffffffff811115610e9457610e93610e5c565b5b602083019150836001820283011115610eb057610eaf610d64565b5b9250929050565b60008060208385031215610ece57610ecd610c71565b5b600083013567ffffffffffffffff811115610eec57610eeb610c76565b5b610ef885828601610e61565b92509250509250929050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610f2f82610f04565b9050919050565b610f3f81610f24565b82525050565b6000602082019050610f5a6000830184610f36565b92915050565b600080fd5b600067ffffffffffffffff821115610f8057610f7f610cbd565b5b610f8982610cac565b9050602081019050919050565b82818337600083830152505050565b6000610fb8610fb384610f65565b610d1d565b905082815260208101848484011115610fd457610fd3610f60565b5b610fdf848285610f96565b509392505050565b600082601f830112610ffc57610ffb610ca7565b5b813561100c848260208601610fa5565b91505092915050565b60006020828403121561102b5761102a610c71565b5b600082013567ffffffffffffffff81111561104957611048610c76565b5b61105584828501610fe7565b91505092915050565b60008115159050919050565b6110738161105e565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b838110156110b3578082015181840152602081019050611098565b60008484015250505050565b60006110ca82611079565b6110d48185611084565b93506110e4818560208601611095565b6110ed81610cac565b840191505092915050565b600060408201905061110d600083018561106a565b818103602083015261111f81846110bf565b90509392505050565b60006020828403121561113e5761113d610c71565b5b600061114c84828501610c92565b91505092915050565b600060408201905061116a6000830185610f36565b6111776020830184610f36565b9392505050565b600082825260208201905092915050565b7f4e6f7420656e6f75676820455448210000000000000000000000000000000000600082015250565b60006111c5600f8361117e565b91506111d08261118f565b602082019050919050565b600060208201905081810360008301526111f4816111b8565b9050919050565b7f4e6f74206f70656e000000000000000000000000000000000000000000000000600082015250565b600061123160088361117e565b915061123c826111fb565b602082019050919050565b6000602082019050818103600083015261126081611224565b9050919050565b7f55706b656570206e6f74206e6565646564000000000000000000000000000000600082015250565b600061129d60118361117e565b91506112a882611267565b602082019050919050565b600060208201905081810360008301526112cc81611290565b9050919050565b6000819050919050565b6112e6816112d3565b82525050565b600067ffffffffffffffff82169050919050565b611309816112ec565b82525050565b600061ffff82169050919050565b6113268161130f565b82525050565b600063ffffffff82169050919050565b6113458161132c565b82525050565b600060a08201905061136060008301886112dd565b61136d6020830187611300565b61137a604083018661131d565b611387606083018561133c565b611394608083018461133c565b9695505050505050565b6000815190506113ad81610c7b565b92915050565b6000602082840312156113c9576113c8610c71565b5b60006113d78482850161139e565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061141a82610ba1565b915061142583610ba1565b925082820390508181111561143d5761143c6113e0565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006114ac82610ba1565b91506114b783610ba1565b9250826114c7576114c6611472565b5b828206905092915050565b600081905092915050565b50565b60006114ed6000836114d2565b91506114f8826114dd565b600082019050919050565b600061150e826114e0565b9150819050919050565b7f5472616e73666572204661696c65642100000000000000000000000000000000600082015250565b600061154e60108361117e565b915061155982611518565b602082019050919050565b6000602082019050818103600083015261157d81611541565b905091905056fea26469706673582212205469a24b85fc232522d262f3cbfe88bdbc8754633a4bbf3657b4e8f1ae3be7a864736f6c63430008180033","opcodes":"PUSH2 0x160 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1930 CODESIZE SUB DUP1 PUSH3 0x1930 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x38 SWAP2 SWAP1 PUSH3 0x23B JUMP JUMPDEST DUP6 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP POP DUP5 PUSH1 0xA0 DUP2 DUP2 MSTORE POP POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xC0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP4 PUSH1 0xE0 DUP2 DUP2 MSTORE POP POP DUP3 PUSH2 0x100 DUP2 DUP2 MSTORE POP POP DUP2 PUSH4 0xFFFFFFFF AND PUSH2 0x120 DUP2 PUSH4 0xFFFFFFFF AND DUP2 MSTORE POP POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x1 DUP2 GT ISZERO PUSH3 0xF9 JUMPI PUSH3 0xF8 PUSH3 0x2D7 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP TIMESTAMP PUSH1 0x2 DUP2 SWAP1 SSTORE POP DUP1 PUSH2 0x140 DUP2 DUP2 MSTORE POP POP POP POP POP POP POP POP PUSH3 0x306 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x14C DUP3 PUSH3 0x11F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x15E DUP2 PUSH3 0x13F JUMP JUMPDEST DUP2 EQ PUSH3 0x16A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x17E DUP2 PUSH3 0x153 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x199 DUP2 PUSH3 0x184 JUMP JUMPDEST DUP2 EQ PUSH3 0x1A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x1B9 DUP2 PUSH3 0x18E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x1D4 DUP2 PUSH3 0x1BF JUMP JUMPDEST DUP2 EQ PUSH3 0x1E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x1F4 DUP2 PUSH3 0x1C9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x215 DUP2 PUSH3 0x1FA JUMP JUMPDEST DUP2 EQ PUSH3 0x221 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x235 DUP2 PUSH3 0x20A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH3 0x25B JUMPI PUSH3 0x25A PUSH3 0x11A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x26B DUP10 DUP3 DUP11 ADD PUSH3 0x16D JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 PUSH3 0x27E DUP10 DUP3 DUP11 ADD PUSH3 0x1A8 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 PUSH3 0x291 DUP10 DUP3 DUP11 ADD PUSH3 0x1E3 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 PUSH3 0x2A4 DUP10 DUP3 DUP11 ADD PUSH3 0x1A8 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 PUSH3 0x2B7 DUP10 DUP3 DUP11 ADD PUSH3 0x224 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xA0 PUSH3 0x2CA DUP10 DUP3 DUP11 ADD PUSH3 0x1A8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD PUSH2 0x120 MLOAD PUSH2 0x140 MLOAD PUSH2 0x15BA PUSH3 0x376 PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x7C7 ADD MSTORE PUSH2 0x835 ADD MSTORE PUSH1 0x0 PUSH2 0x692 ADD MSTORE PUSH1 0x0 PUSH2 0x66F ADD MSTORE PUSH1 0x0 PUSH2 0x64E ADD MSTORE PUSH1 0x0 PUSH2 0x612 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x2FA ADD MSTORE PUSH2 0x3F7 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x337 ADD MSTORE PUSH2 0x38B ADD MSTORE PUSH2 0x15BA PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xC2 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x473F1DDC GT PUSH2 0x7F JUMPI DUP1 PUSH4 0x91AD27B4 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0x91AD27B4 EQ PUSH2 0x238 JUMPI DUP1 PUSH4 0xCA6A9EF8 EQ PUSH2 0x263 JUMPI DUP1 PUSH4 0xE55AE4E8 EQ PUSH2 0x28E JUMPI DUP1 PUSH4 0xFD6673F5 EQ PUSH2 0x2CB JUMPI PUSH2 0xC2 JUMP JUMPDEST DUP1 PUSH4 0x473F1DDC EQ PUSH2 0x1A4 JUMPI DUP1 PUSH4 0x53A2C19A EQ PUSH2 0x1CF JUMPI DUP1 PUSH4 0x6E04FF0D EQ PUSH2 0x1FA JUMPI PUSH2 0xC2 JUMP JUMPDEST DUP1 PUSH4 0x9BC33A7 EQ PUSH2 0xC7 JUMPI DUP1 PUSH4 0x115CBAF5 EQ PUSH2 0xF2 JUMPI DUP1 PUSH4 0x1FE543E3 EQ PUSH2 0x11D JUMPI DUP1 PUSH4 0x2CFCC539 EQ PUSH2 0x146 JUMPI DUP1 PUSH4 0x320229EB EQ PUSH2 0x150 JUMPI DUP1 PUSH4 0x4585E33B EQ PUSH2 0x17B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xDC PUSH2 0x2F6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0xBBA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xFE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x107 PUSH2 0x31E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x114 SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x129 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x144 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x13F SWAP2 SWAP1 PUSH2 0xE00 JUMP JUMPDEST PUSH2 0x335 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x14E PUSH2 0x3F5 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x15C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x165 PUSH2 0x576 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x172 SWAP2 SWAP1 PUSH2 0xBBA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x187 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19D SWAP2 SWAP1 PUSH2 0xEB7 JUMP JUMPDEST PUSH2 0x580 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B9 PUSH2 0x74B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C6 SWAP2 SWAP1 PUSH2 0xF45 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E4 PUSH2 0x775 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F1 SWAP2 SWAP1 PUSH2 0xBBA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x206 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x221 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21C SWAP2 SWAP1 PUSH2 0x1015 JUMP JUMPDEST PUSH2 0x784 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22F SWAP3 SWAP2 SWAP1 PUSH2 0x10F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x244 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x24D PUSH2 0x831 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25A SWAP2 SWAP1 PUSH2 0xBBA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x26F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x278 PUSH2 0x859 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x285 SWAP2 SWAP1 PUSH2 0xBBA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x29A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B0 SWAP2 SWAP1 PUSH2 0x1128 JUMP JUMPDEST PUSH2 0x866 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C2 SWAP2 SWAP1 PUSH2 0xF45 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E0 PUSH2 0x8AD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2ED SWAP2 SWAP1 PUSH2 0xBBA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x3E7 JUMPI CALLER PUSH32 0x0 PUSH1 0x40 MLOAD PUSH32 0x1CF993F400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3DE SWAP3 SWAP2 SWAP1 PUSH2 0x1155 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3F1 DUP3 DUP3 PUSH2 0x8B9 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH32 0x0 CALLVALUE LT ISZERO PUSH2 0x458 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x44F SWAP1 PUSH2 0x11DB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x46C JUMPI PUSH2 0x46B PUSH2 0xBD5 JUMP JUMPDEST JUMPDEST PUSH1 0x1 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x48E JUMPI PUSH2 0x48D PUSH2 0xBD5 JUMP JUMPDEST JUMPDEST EQ PUSH2 0x4CE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4C5 SWAP1 PUSH2 0x1247 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 CALLER SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x805E1D667BDDB8A95F0F09880CF94F403FB596CE79928D9F29B74203BA284D4 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x59A PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x784 JUMP JUMPDEST POP SWAP1 POP PUSH1 0x1 ISZERO ISZERO DUP2 ISZERO ISZERO EQ PUSH2 0x5E4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5DB SWAP1 PUSH2 0x12B3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x609 JUMPI PUSH2 0x608 PUSH2 0xBD5 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x5D3B1D30 PUSH32 0x0 PUSH32 0x0 PUSH1 0x3 PUSH32 0x0 PUSH1 0x1 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6D3 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x134B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6F2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x716 SWAP2 SWAP1 PUSH2 0x13B3 JUMP JUMPDEST SWAP1 POP DUP1 PUSH32 0xCD6E45C8998311CAB7E9D4385596CAC867E20A0587194B954FA3A731C93CE78B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH4 0xFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x7AC JUMPI PUSH2 0x7AB PUSH2 0xBD5 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x7C0 JUMPI PUSH2 0x7BF PUSH2 0xBD5 JUMP JUMPDEST JUMPDEST EQ SWAP1 POP PUSH1 0x0 PUSH32 0x0 PUSH1 0x2 SLOAD TIMESTAMP PUSH2 0x7F4 SWAP2 SWAP1 PUSH2 0x140F JUMP JUMPDEST GT SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 SLOAD SWAP1 POP GT SWAP1 POP PUSH1 0x0 DUP1 SELFBALANCE GT SWAP1 POP DUP4 DUP1 ISZERO PUSH2 0x814 JUMPI POP DUP3 JUMPDEST DUP1 ISZERO PUSH2 0x81D JUMPI POP DUP2 JUMPDEST DUP1 ISZERO PUSH2 0x826 JUMPI POP DUP1 JUMPDEST SWAP6 POP POP POP POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH2 0xFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x87B JUMPI PUSH2 0x87A PUSH2 0x1443 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 SLOAD SWAP1 POP DUP3 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x8D4 JUMPI PUSH2 0x8D3 PUSH2 0x1443 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x8E6 SWAP2 SWAP1 PUSH2 0x14A1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x8FD JUMPI PUSH2 0x8FC PUSH2 0x1443 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x991 JUMPI PUSH2 0x990 PUSH2 0xBD5 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x9B1 JUMPI PUSH2 0x9B0 PUSH2 0xCBD JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x9DF JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH1 0x0 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x9F5 SWAP3 SWAP2 SWAP1 PUSH2 0xAFA JUMP JUMPDEST POP TIMESTAMP PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SELFBALANCE PUSH1 0x40 MLOAD PUSH2 0xA23 SWAP1 PUSH2 0x1503 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xA60 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xA65 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP PUSH1 0x1 ISZERO ISZERO DUP2 ISZERO ISZERO EQ PUSH2 0xAB0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAA7 SWAP1 PUSH2 0x1564 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x5B690EC4A06FE979403046EAEEA5B3CE38524683C3001F662C8B5A829632F7DF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0xB73 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0xB72 JUMPI DUP3 MLOAD DUP3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0xB1A JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0xB80 SWAP2 SWAP1 PUSH2 0xB84 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0xB9D JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0xB85 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBB4 DUP2 PUSH2 0xBA1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBCF PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xBAB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 DUP2 LT PUSH2 0xC15 JUMPI PUSH2 0xC14 PUSH2 0xBD5 JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0xC26 DUP3 PUSH2 0xC04 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC36 DUP3 PUSH2 0xC18 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC46 DUP2 PUSH2 0xC2B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC61 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC3D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC84 DUP2 PUSH2 0xBA1 JUMP JUMPDEST DUP2 EQ PUSH2 0xC8F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xCA1 DUP2 PUSH2 0xC7B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0xCF5 DUP3 PUSH2 0xCAC JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0xD14 JUMPI PUSH2 0xD13 PUSH2 0xCBD JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD27 PUSH2 0xC67 JUMP JUMPDEST SWAP1 POP PUSH2 0xD33 DUP3 DUP3 PUSH2 0xCEC JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xD53 JUMPI PUSH2 0xD52 PUSH2 0xCBD JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xD7C PUSH2 0xD77 DUP5 PUSH2 0xD38 JUMP JUMPDEST PUSH2 0xD1D JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0xD9F JUMPI PUSH2 0xD9E PUSH2 0xD64 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xDC8 JUMPI DUP1 PUSH2 0xDB4 DUP9 DUP3 PUSH2 0xC92 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xDA1 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xDE7 JUMPI PUSH2 0xDE6 PUSH2 0xCA7 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0xDF7 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0xD69 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE17 JUMPI PUSH2 0xE16 PUSH2 0xC71 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xE25 DUP6 DUP3 DUP7 ADD PUSH2 0xC92 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xE46 JUMPI PUSH2 0xE45 PUSH2 0xC76 JUMP JUMPDEST JUMPDEST PUSH2 0xE52 DUP6 DUP3 DUP7 ADD PUSH2 0xDD2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0xE77 JUMPI PUSH2 0xE76 PUSH2 0xCA7 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xE94 JUMPI PUSH2 0xE93 PUSH2 0xE5C JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0xEB0 JUMPI PUSH2 0xEAF PUSH2 0xD64 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xECE JUMPI PUSH2 0xECD PUSH2 0xC71 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xEEC JUMPI PUSH2 0xEEB PUSH2 0xC76 JUMP JUMPDEST JUMPDEST PUSH2 0xEF8 DUP6 DUP3 DUP7 ADD PUSH2 0xE61 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF2F DUP3 PUSH2 0xF04 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF3F DUP2 PUSH2 0xF24 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF5A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xF36 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xF80 JUMPI PUSH2 0xF7F PUSH2 0xCBD JUMP JUMPDEST JUMPDEST PUSH2 0xF89 DUP3 PUSH2 0xCAC JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFB8 PUSH2 0xFB3 DUP5 PUSH2 0xF65 JUMP JUMPDEST PUSH2 0xD1D JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0xFD4 JUMPI PUSH2 0xFD3 PUSH2 0xF60 JUMP JUMPDEST JUMPDEST PUSH2 0xFDF DUP5 DUP3 DUP6 PUSH2 0xF96 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xFFC JUMPI PUSH2 0xFFB PUSH2 0xCA7 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x100C DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0xFA5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x102B JUMPI PUSH2 0x102A PUSH2 0xC71 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1049 JUMPI PUSH2 0x1048 PUSH2 0xC76 JUMP JUMPDEST JUMPDEST PUSH2 0x1055 DUP5 DUP3 DUP6 ADD PUSH2 0xFE7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1073 DUP2 PUSH2 0x105E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x10B3 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1098 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10CA DUP3 PUSH2 0x1079 JUMP JUMPDEST PUSH2 0x10D4 DUP2 DUP6 PUSH2 0x1084 JUMP JUMPDEST SWAP4 POP PUSH2 0x10E4 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1095 JUMP JUMPDEST PUSH2 0x10ED DUP2 PUSH2 0xCAC JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x110D PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x106A JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x111F DUP2 DUP5 PUSH2 0x10BF JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x113E JUMPI PUSH2 0x113D PUSH2 0xC71 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x114C DUP5 DUP3 DUP6 ADD PUSH2 0xC92 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x116A PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xF36 JUMP JUMPDEST PUSH2 0x1177 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xF36 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F7420656E6F75676820455448210000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11C5 PUSH1 0xF DUP4 PUSH2 0x117E JUMP JUMPDEST SWAP2 POP PUSH2 0x11D0 DUP3 PUSH2 0x118F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x11F4 DUP2 PUSH2 0x11B8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F74206F70656E000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1231 PUSH1 0x8 DUP4 PUSH2 0x117E JUMP JUMPDEST SWAP2 POP PUSH2 0x123C DUP3 PUSH2 0x11FB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1260 DUP2 PUSH2 0x1224 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x55706B656570206E6F74206E6565646564000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x129D PUSH1 0x11 DUP4 PUSH2 0x117E JUMP JUMPDEST SWAP2 POP PUSH2 0x12A8 DUP3 PUSH2 0x1267 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x12CC DUP2 PUSH2 0x1290 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12E6 DUP2 PUSH2 0x12D3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1309 DUP2 PUSH2 0x12EC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1326 DUP2 PUSH2 0x130F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1345 DUP2 PUSH2 0x132C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x1360 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x12DD JUMP JUMPDEST PUSH2 0x136D PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x1300 JUMP JUMPDEST PUSH2 0x137A PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x131D JUMP JUMPDEST PUSH2 0x1387 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x133C JUMP JUMPDEST PUSH2 0x1394 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x133C JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x13AD DUP2 PUSH2 0xC7B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13C9 JUMPI PUSH2 0x13C8 PUSH2 0xC71 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x13D7 DUP5 DUP3 DUP6 ADD PUSH2 0x139E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x141A DUP3 PUSH2 0xBA1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1425 DUP4 PUSH2 0xBA1 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x143D JUMPI PUSH2 0x143C PUSH2 0x13E0 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x14AC DUP3 PUSH2 0xBA1 JUMP JUMPDEST SWAP2 POP PUSH2 0x14B7 DUP4 PUSH2 0xBA1 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x14C7 JUMPI PUSH2 0x14C6 PUSH2 0x1472 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14ED PUSH1 0x0 DUP4 PUSH2 0x14D2 JUMP JUMPDEST SWAP2 POP PUSH2 0x14F8 DUP3 PUSH2 0x14DD JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x150E DUP3 PUSH2 0x14E0 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5472616E73666572204661696C65642100000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x154E PUSH1 0x10 DUP4 PUSH2 0x117E JUMP JUMPDEST SWAP2 POP PUSH2 0x1559 DUP3 PUSH2 0x1518 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x157D DUP2 PUSH2 0x1541 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SLOAD PUSH10 0xA24B85FC232522D262F3 0xCB INVALID DUP9 0xBD 0xBC DUP8 SLOAD PUSH4 0x3A4BBF36 JUMPI 0xB4 0xE8 CALL 0xAE EXTCODESIZE 0xE7 0xA8 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"349:4300:19:-:0;;;1222:625;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1444:16;5616:15:17;5599:32;;;;;;;;;;5556:80;1489:11:19::1;1473:27;;;;::::0;::::1;1581:16;1545:53;;;;;;;;::::0;::::1;1621:7;1609:19;;;;::::0;::::1;1658:14;1639:33;;;;::::0;::::1;1704:16;1683:37;;;;;;;;::::0;::::1;1747:16;1731:13;;:32;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;1792:15;1774;:33;;;;1831:8;1818:21;;;;::::0;::::1;1222:625:::0;;;;;;349:4300;;88:117:20;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:77::-;882:7;911:5;900:16;;845:77;;;:::o;928:122::-;1001:24;1019:5;1001:24;:::i;:::-;994:5;991:35;981:63;;1040:1;1037;1030:12;981:63;928:122;:::o;1056:143::-;1113:5;1144:6;1138:13;1129:22;;1160:33;1187:5;1160:33;:::i;:::-;1056:143;;;;:::o;1205:77::-;1242:7;1271:5;1260:16;;1205:77;;;:::o;1288:122::-;1361:24;1379:5;1361:24;:::i;:::-;1354:5;1351:35;1341:63;;1400:1;1397;1390:12;1341:63;1288:122;:::o;1416:143::-;1473:5;1504:6;1498:13;1489:22;;1520:33;1547:5;1520:33;:::i;:::-;1416:143;;;;:::o;1565:93::-;1601:7;1641:10;1634:5;1630:22;1619:33;;1565:93;;;:::o;1664:120::-;1736:23;1753:5;1736:23;:::i;:::-;1729:5;1726:34;1716:62;;1774:1;1771;1764:12;1716:62;1664:120;:::o;1790:141::-;1846:5;1877:6;1871:13;1862:22;;1893:32;1919:5;1893:32;:::i;:::-;1790:141;;;;:::o;1937:1132::-;2051:6;2059;2067;2075;2083;2091;2140:3;2128:9;2119:7;2115:23;2111:33;2108:120;;;2147:79;;:::i;:::-;2108:120;2267:1;2292:64;2348:7;2339:6;2328:9;2324:22;2292:64;:::i;:::-;2282:74;;2238:128;2405:2;2431:64;2487:7;2478:6;2467:9;2463:22;2431:64;:::i;:::-;2421:74;;2376:129;2544:2;2570:64;2626:7;2617:6;2606:9;2602:22;2570:64;:::i;:::-;2560:74;;2515:129;2683:2;2709:64;2765:7;2756:6;2745:9;2741:22;2709:64;:::i;:::-;2699:74;;2654:129;2822:3;2849:63;2904:7;2895:6;2884:9;2880:22;2849:63;:::i;:::-;2839:73;;2793:129;2961:3;2988:64;3044:7;3035:6;3024:9;3020:22;2988:64;:::i;:::-;2978:74;;2932:130;1937:1132;;;;;;;;:::o;3075:180::-;3123:77;3120:1;3113:88;3220:4;3217:1;3210:15;3244:4;3241:1;3234:15;349:4300:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@checkUpkeep_4605":{"entryPoint":1924,"id":4605,"parameterSlots":1,"returnSlots":2},"@enterRaffle_4546":{"entryPoint":1013,"id":4546,"parameterSlots":0,"returnSlots":0},"@fulfillRandomWords_4719":{"entryPoint":2233,"id":4719,"parameterSlots":2,"returnSlots":0},"@getEntranceFee_4727":{"entryPoint":758,"id":4727,"parameterSlots":0,"returnSlots":1},"@getInterval_4797":{"entryPoint":2097,"id":4797,"parameterSlots":0,"returnSlots":1},"@getLatestTimeStamp_4781":{"entryPoint":1398,"id":4781,"parameterSlots":0,"returnSlots":1},"@getNumWords_4764":{"entryPoint":1909,"id":4764,"parameterSlots":0,"returnSlots":1},"@getNumberOfPlayers_4773":{"entryPoint":2221,"id":4773,"parameterSlots":0,"returnSlots":1},"@getPlayer_4739":{"entryPoint":2150,"id":4739,"parameterSlots":1,"returnSlots":1},"@getRaffleState_4756":{"entryPoint":798,"id":4756,"parameterSlots":0,"returnSlots":1},"@getRecentWinner_4747":{"entryPoint":1867,"id":4747,"parameterSlots":0,"returnSlots":1},"@getRequestConfirmation_4789":{"entryPoint":2137,"id":4789,"parameterSlots":0,"returnSlots":1},"@performUpkeep_4648":{"entryPoint":1408,"id":4648,"parameterSlots":2,"returnSlots":0},"@rawFulfillRandomWords_2092":{"entryPoint":821,"id":2092,"parameterSlots":2,"returnSlots":0},"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":3433,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_bytes_memory_ptr":{"entryPoint":4005,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":3538,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_calldata_ptr":{"entryPoint":3681,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_t_bytes_memory_ptr":{"entryPoint":4071,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":3218,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":5022,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes_calldata_ptr":{"entryPoint":3767,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes_memory_ptr":{"entryPoint":4117,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":4392,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":5043,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":3584,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":3894,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":4202,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":4829,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":4287,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_enum$_RaffleState_$4415_to_t_uint8_fromStack":{"entryPoint":3133,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_stringliteral_047e53bda3b1755bdcd010ea559fd4ce3f4332c889ecbf649f4153f3160f1630_to_t_string_memory_ptr_fromStack":{"entryPoint":4752,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_0af1a4442a600edd3bde606629dbe1d858edd05765327f25ead92d55536f2d3b_to_t_string_memory_ptr_fromStack":{"entryPoint":4644,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_15a10bfc30965e42ff8acbb34211e82f5d4dfa40cc212e627d7e731a1df1e3de_to_t_string_memory_ptr_fromStack":{"entryPoint":4536,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_b14fb95164ea63e35a67574e2c81cbc6f6b5d123e185e0169f7323e26de6be4d_to_t_string_memory_ptr_fromStack":{"entryPoint":5441,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":5344,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint16_to_t_uint16_fromStack":{"entryPoint":4893,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":2987,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint32_to_t_uint32_fromStack":{"entryPoint":4924,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint64_to_t_uint64_fromStack":{"entryPoint":4864,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":5379,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":3909,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed":{"entryPoint":4437,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bool_t_bytes_memory_ptr__to_t_bool_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":4344,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_uint64_t_uint16_t_uint32_t_uint32__to_t_bytes32_t_uint64_t_uint16_t_uint32_t_uint32__fromStack_reversed":{"entryPoint":4939,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_enum$_RaffleState_$4415__to_t_uint8__fromStack_reversed":{"entryPoint":3148,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_047e53bda3b1755bdcd010ea559fd4ce3f4332c889ecbf649f4153f3160f1630__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4787,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0af1a4442a600edd3bde606629dbe1d858edd05765327f25ead92d55536f2d3b__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4679,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_15a10bfc30965e42ff8acbb34211e82f5d4dfa40cc212e627d7e731a1df1e3de__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4571,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b14fb95164ea63e35a67574e2c81cbc6f6b5d123e185e0169f7323e26de6be4d__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5476,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":3002,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":3357,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":3175,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":3384,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_t_bytes_memory_ptr":{"entryPoint":3941,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":4217,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack":{"entryPoint":4228,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":5330,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":4478,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":5135,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":3876,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":4190,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":4819,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_enum$_RaffleState_$4415":{"entryPoint":3096,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint16":{"entryPoint":4879,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":3844,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":2977,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint32":{"entryPoint":4908,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint64":{"entryPoint":4844,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_enum$_RaffleState_$4415_to_t_uint8":{"entryPoint":3115,"id":null,"parameterSlots":1,"returnSlots":1},"copy_calldata_to_memory_with_cleanup":{"entryPoint":3990,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":4245,"id":null,"parameterSlots":3,"returnSlots":0},"finalize_allocation":{"entryPoint":3308,"id":null,"parameterSlots":2,"returnSlots":0},"mod_t_uint256":{"entryPoint":5281,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":5088,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":5234,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x21":{"entryPoint":3029,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":5187,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":3261,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490":{"entryPoint":3676,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":3239,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":3428,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":3936,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":3190,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":3185,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":3244,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_047e53bda3b1755bdcd010ea559fd4ce3f4332c889ecbf649f4153f3160f1630":{"entryPoint":4711,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_0af1a4442a600edd3bde606629dbe1d858edd05765327f25ead92d55536f2d3b":{"entryPoint":4603,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_15a10bfc30965e42ff8acbb34211e82f5d4dfa40cc212e627d7e731a1df1e3de":{"entryPoint":4495,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_b14fb95164ea63e35a67574e2c81cbc6f6b5d123e185e0169f7323e26de6be4d":{"entryPoint":5400,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470":{"entryPoint":5341,"id":null,"parameterSlots":1,"returnSlots":0},"validator_assert_t_enum$_RaffleState_$4415":{"entryPoint":3076,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":3195,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:19147:20","nodeType":"YulBlock","src":"0:19147:20","statements":[{"body":{"nativeSrc":"52:32:20","nodeType":"YulBlock","src":"52:32:20","statements":[{"nativeSrc":"62:16:20","nodeType":"YulAssignment","src":"62:16:20","value":{"name":"value","nativeSrc":"73:5:20","nodeType":"YulIdentifier","src":"73:5:20"},"variableNames":[{"name":"cleaned","nativeSrc":"62:7:20","nodeType":"YulIdentifier","src":"62:7:20"}]}]},"name":"cleanup_t_uint256","nativeSrc":"7:77:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"34:5:20","nodeType":"YulTypedName","src":"34:5:20","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"44:7:20","nodeType":"YulTypedName","src":"44:7:20","type":""}],"src":"7:77:20"},{"body":{"nativeSrc":"155:53:20","nodeType":"YulBlock","src":"155:53:20","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"172:3:20","nodeType":"YulIdentifier","src":"172:3:20"},{"arguments":[{"name":"value","nativeSrc":"195:5:20","nodeType":"YulIdentifier","src":"195:5:20"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"177:17:20","nodeType":"YulIdentifier","src":"177:17:20"},"nativeSrc":"177:24:20","nodeType":"YulFunctionCall","src":"177:24:20"}],"functionName":{"name":"mstore","nativeSrc":"165:6:20","nodeType":"YulIdentifier","src":"165:6:20"},"nativeSrc":"165:37:20","nodeType":"YulFunctionCall","src":"165:37:20"},"nativeSrc":"165:37:20","nodeType":"YulExpressionStatement","src":"165:37:20"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"90:118:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"143:5:20","nodeType":"YulTypedName","src":"143:5:20","type":""},{"name":"pos","nativeSrc":"150:3:20","nodeType":"YulTypedName","src":"150:3:20","type":""}],"src":"90:118:20"},{"body":{"nativeSrc":"312:124:20","nodeType":"YulBlock","src":"312:124:20","statements":[{"nativeSrc":"322:26:20","nodeType":"YulAssignment","src":"322:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"334:9:20","nodeType":"YulIdentifier","src":"334:9:20"},{"kind":"number","nativeSrc":"345:2:20","nodeType":"YulLiteral","src":"345:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"330:3:20","nodeType":"YulIdentifier","src":"330:3:20"},"nativeSrc":"330:18:20","nodeType":"YulFunctionCall","src":"330:18:20"},"variableNames":[{"name":"tail","nativeSrc":"322:4:20","nodeType":"YulIdentifier","src":"322:4:20"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"402:6:20","nodeType":"YulIdentifier","src":"402:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"415:9:20","nodeType":"YulIdentifier","src":"415:9:20"},{"kind":"number","nativeSrc":"426:1:20","nodeType":"YulLiteral","src":"426:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"411:3:20","nodeType":"YulIdentifier","src":"411:3:20"},"nativeSrc":"411:17:20","nodeType":"YulFunctionCall","src":"411:17:20"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"358:43:20","nodeType":"YulIdentifier","src":"358:43:20"},"nativeSrc":"358:71:20","nodeType":"YulFunctionCall","src":"358:71:20"},"nativeSrc":"358:71:20","nodeType":"YulExpressionStatement","src":"358:71:20"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"214:222:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"284:9:20","nodeType":"YulTypedName","src":"284:9:20","type":""},{"name":"value0","nativeSrc":"296:6:20","nodeType":"YulTypedName","src":"296:6:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"307:4:20","nodeType":"YulTypedName","src":"307:4:20","type":""}],"src":"214:222:20"},{"body":{"nativeSrc":"470:152:20","nodeType":"YulBlock","src":"470:152:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"487:1:20","nodeType":"YulLiteral","src":"487:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"490:77:20","nodeType":"YulLiteral","src":"490:77:20","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"480:6:20","nodeType":"YulIdentifier","src":"480:6:20"},"nativeSrc":"480:88:20","nodeType":"YulFunctionCall","src":"480:88:20"},"nativeSrc":"480:88:20","nodeType":"YulExpressionStatement","src":"480:88:20"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"584:1:20","nodeType":"YulLiteral","src":"584:1:20","type":"","value":"4"},{"kind":"number","nativeSrc":"587:4:20","nodeType":"YulLiteral","src":"587:4:20","type":"","value":"0x21"}],"functionName":{"name":"mstore","nativeSrc":"577:6:20","nodeType":"YulIdentifier","src":"577:6:20"},"nativeSrc":"577:15:20","nodeType":"YulFunctionCall","src":"577:15:20"},"nativeSrc":"577:15:20","nodeType":"YulExpressionStatement","src":"577:15:20"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"608:1:20","nodeType":"YulLiteral","src":"608:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"611:4:20","nodeType":"YulLiteral","src":"611:4:20","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"601:6:20","nodeType":"YulIdentifier","src":"601:6:20"},"nativeSrc":"601:15:20","nodeType":"YulFunctionCall","src":"601:15:20"},"nativeSrc":"601:15:20","nodeType":"YulExpressionStatement","src":"601:15:20"}]},"name":"panic_error_0x21","nativeSrc":"442:180:20","nodeType":"YulFunctionDefinition","src":"442:180:20"},{"body":{"nativeSrc":"687:62:20","nodeType":"YulBlock","src":"687:62:20","statements":[{"body":{"nativeSrc":"721:22:20","nodeType":"YulBlock","src":"721:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x21","nativeSrc":"723:16:20","nodeType":"YulIdentifier","src":"723:16:20"},"nativeSrc":"723:18:20","nodeType":"YulFunctionCall","src":"723:18:20"},"nativeSrc":"723:18:20","nodeType":"YulExpressionStatement","src":"723:18:20"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"710:5:20","nodeType":"YulIdentifier","src":"710:5:20"},{"kind":"number","nativeSrc":"717:1:20","nodeType":"YulLiteral","src":"717:1:20","type":"","value":"2"}],"functionName":{"name":"lt","nativeSrc":"707:2:20","nodeType":"YulIdentifier","src":"707:2:20"},"nativeSrc":"707:12:20","nodeType":"YulFunctionCall","src":"707:12:20"}],"functionName":{"name":"iszero","nativeSrc":"700:6:20","nodeType":"YulIdentifier","src":"700:6:20"},"nativeSrc":"700:20:20","nodeType":"YulFunctionCall","src":"700:20:20"},"nativeSrc":"697:46:20","nodeType":"YulIf","src":"697:46:20"}]},"name":"validator_assert_t_enum$_RaffleState_$4415","nativeSrc":"628:121:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"680:5:20","nodeType":"YulTypedName","src":"680:5:20","type":""}],"src":"628:121:20"},{"body":{"nativeSrc":"816:82:20","nodeType":"YulBlock","src":"816:82:20","statements":[{"nativeSrc":"826:16:20","nodeType":"YulAssignment","src":"826:16:20","value":{"name":"value","nativeSrc":"837:5:20","nodeType":"YulIdentifier","src":"837:5:20"},"variableNames":[{"name":"cleaned","nativeSrc":"826:7:20","nodeType":"YulIdentifier","src":"826:7:20"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"886:5:20","nodeType":"YulIdentifier","src":"886:5:20"}],"functionName":{"name":"validator_assert_t_enum$_RaffleState_$4415","nativeSrc":"843:42:20","nodeType":"YulIdentifier","src":"843:42:20"},"nativeSrc":"843:49:20","nodeType":"YulFunctionCall","src":"843:49:20"},"nativeSrc":"843:49:20","nodeType":"YulExpressionStatement","src":"843:49:20"}]},"name":"cleanup_t_enum$_RaffleState_$4415","nativeSrc":"755:143:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"798:5:20","nodeType":"YulTypedName","src":"798:5:20","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"808:7:20","nodeType":"YulTypedName","src":"808:7:20","type":""}],"src":"755:143:20"},{"body":{"nativeSrc":"978:69:20","nodeType":"YulBlock","src":"978:69:20","statements":[{"nativeSrc":"988:53:20","nodeType":"YulAssignment","src":"988:53:20","value":{"arguments":[{"name":"value","nativeSrc":"1035:5:20","nodeType":"YulIdentifier","src":"1035:5:20"}],"functionName":{"name":"cleanup_t_enum$_RaffleState_$4415","nativeSrc":"1001:33:20","nodeType":"YulIdentifier","src":"1001:33:20"},"nativeSrc":"1001:40:20","nodeType":"YulFunctionCall","src":"1001:40:20"},"variableNames":[{"name":"converted","nativeSrc":"988:9:20","nodeType":"YulIdentifier","src":"988:9:20"}]}]},"name":"convert_t_enum$_RaffleState_$4415_to_t_uint8","nativeSrc":"904:143:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"958:5:20","nodeType":"YulTypedName","src":"958:5:20","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"968:9:20","nodeType":"YulTypedName","src":"968:9:20","type":""}],"src":"904:143:20"},{"body":{"nativeSrc":"1132:80:20","nodeType":"YulBlock","src":"1132:80:20","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"1149:3:20","nodeType":"YulIdentifier","src":"1149:3:20"},{"arguments":[{"name":"value","nativeSrc":"1199:5:20","nodeType":"YulIdentifier","src":"1199:5:20"}],"functionName":{"name":"convert_t_enum$_RaffleState_$4415_to_t_uint8","nativeSrc":"1154:44:20","nodeType":"YulIdentifier","src":"1154:44:20"},"nativeSrc":"1154:51:20","nodeType":"YulFunctionCall","src":"1154:51:20"}],"functionName":{"name":"mstore","nativeSrc":"1142:6:20","nodeType":"YulIdentifier","src":"1142:6:20"},"nativeSrc":"1142:64:20","nodeType":"YulFunctionCall","src":"1142:64:20"},"nativeSrc":"1142:64:20","nodeType":"YulExpressionStatement","src":"1142:64:20"}]},"name":"abi_encode_t_enum$_RaffleState_$4415_to_t_uint8_fromStack","nativeSrc":"1053:159:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1120:5:20","nodeType":"YulTypedName","src":"1120:5:20","type":""},{"name":"pos","nativeSrc":"1127:3:20","nodeType":"YulTypedName","src":"1127:3:20","type":""}],"src":"1053:159:20"},{"body":{"nativeSrc":"1330:138:20","nodeType":"YulBlock","src":"1330:138:20","statements":[{"nativeSrc":"1340:26:20","nodeType":"YulAssignment","src":"1340:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"1352:9:20","nodeType":"YulIdentifier","src":"1352:9:20"},{"kind":"number","nativeSrc":"1363:2:20","nodeType":"YulLiteral","src":"1363:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1348:3:20","nodeType":"YulIdentifier","src":"1348:3:20"},"nativeSrc":"1348:18:20","nodeType":"YulFunctionCall","src":"1348:18:20"},"variableNames":[{"name":"tail","nativeSrc":"1340:4:20","nodeType":"YulIdentifier","src":"1340:4:20"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"1434:6:20","nodeType":"YulIdentifier","src":"1434:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"1447:9:20","nodeType":"YulIdentifier","src":"1447:9:20"},{"kind":"number","nativeSrc":"1458:1:20","nodeType":"YulLiteral","src":"1458:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"1443:3:20","nodeType":"YulIdentifier","src":"1443:3:20"},"nativeSrc":"1443:17:20","nodeType":"YulFunctionCall","src":"1443:17:20"}],"functionName":{"name":"abi_encode_t_enum$_RaffleState_$4415_to_t_uint8_fromStack","nativeSrc":"1376:57:20","nodeType":"YulIdentifier","src":"1376:57:20"},"nativeSrc":"1376:85:20","nodeType":"YulFunctionCall","src":"1376:85:20"},"nativeSrc":"1376:85:20","nodeType":"YulExpressionStatement","src":"1376:85:20"}]},"name":"abi_encode_tuple_t_enum$_RaffleState_$4415__to_t_uint8__fromStack_reversed","nativeSrc":"1218:250:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1302:9:20","nodeType":"YulTypedName","src":"1302:9:20","type":""},{"name":"value0","nativeSrc":"1314:6:20","nodeType":"YulTypedName","src":"1314:6:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1325:4:20","nodeType":"YulTypedName","src":"1325:4:20","type":""}],"src":"1218:250:20"},{"body":{"nativeSrc":"1514:35:20","nodeType":"YulBlock","src":"1514:35:20","statements":[{"nativeSrc":"1524:19:20","nodeType":"YulAssignment","src":"1524:19:20","value":{"arguments":[{"kind":"number","nativeSrc":"1540:2:20","nodeType":"YulLiteral","src":"1540:2:20","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"1534:5:20","nodeType":"YulIdentifier","src":"1534:5:20"},"nativeSrc":"1534:9:20","nodeType":"YulFunctionCall","src":"1534:9:20"},"variableNames":[{"name":"memPtr","nativeSrc":"1524:6:20","nodeType":"YulIdentifier","src":"1524:6:20"}]}]},"name":"allocate_unbounded","nativeSrc":"1474:75:20","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"1507:6:20","nodeType":"YulTypedName","src":"1507:6:20","type":""}],"src":"1474:75:20"},{"body":{"nativeSrc":"1644:28:20","nodeType":"YulBlock","src":"1644:28:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1661:1:20","nodeType":"YulLiteral","src":"1661:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"1664:1:20","nodeType":"YulLiteral","src":"1664:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1654:6:20","nodeType":"YulIdentifier","src":"1654:6:20"},"nativeSrc":"1654:12:20","nodeType":"YulFunctionCall","src":"1654:12:20"},"nativeSrc":"1654:12:20","nodeType":"YulExpressionStatement","src":"1654:12:20"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"1555:117:20","nodeType":"YulFunctionDefinition","src":"1555:117:20"},{"body":{"nativeSrc":"1767:28:20","nodeType":"YulBlock","src":"1767:28:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1784:1:20","nodeType":"YulLiteral","src":"1784:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"1787:1:20","nodeType":"YulLiteral","src":"1787:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1777:6:20","nodeType":"YulIdentifier","src":"1777:6:20"},"nativeSrc":"1777:12:20","nodeType":"YulFunctionCall","src":"1777:12:20"},"nativeSrc":"1777:12:20","nodeType":"YulExpressionStatement","src":"1777:12:20"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"1678:117:20","nodeType":"YulFunctionDefinition","src":"1678:117:20"},{"body":{"nativeSrc":"1844:79:20","nodeType":"YulBlock","src":"1844:79:20","statements":[{"body":{"nativeSrc":"1901:16:20","nodeType":"YulBlock","src":"1901:16:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1910:1:20","nodeType":"YulLiteral","src":"1910:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"1913:1:20","nodeType":"YulLiteral","src":"1913:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1903:6:20","nodeType":"YulIdentifier","src":"1903:6:20"},"nativeSrc":"1903:12:20","nodeType":"YulFunctionCall","src":"1903:12:20"},"nativeSrc":"1903:12:20","nodeType":"YulExpressionStatement","src":"1903:12:20"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1867:5:20","nodeType":"YulIdentifier","src":"1867:5:20"},{"arguments":[{"name":"value","nativeSrc":"1892:5:20","nodeType":"YulIdentifier","src":"1892:5:20"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"1874:17:20","nodeType":"YulIdentifier","src":"1874:17:20"},"nativeSrc":"1874:24:20","nodeType":"YulFunctionCall","src":"1874:24:20"}],"functionName":{"name":"eq","nativeSrc":"1864:2:20","nodeType":"YulIdentifier","src":"1864:2:20"},"nativeSrc":"1864:35:20","nodeType":"YulFunctionCall","src":"1864:35:20"}],"functionName":{"name":"iszero","nativeSrc":"1857:6:20","nodeType":"YulIdentifier","src":"1857:6:20"},"nativeSrc":"1857:43:20","nodeType":"YulFunctionCall","src":"1857:43:20"},"nativeSrc":"1854:63:20","nodeType":"YulIf","src":"1854:63:20"}]},"name":"validator_revert_t_uint256","nativeSrc":"1801:122:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1837:5:20","nodeType":"YulTypedName","src":"1837:5:20","type":""}],"src":"1801:122:20"},{"body":{"nativeSrc":"1981:87:20","nodeType":"YulBlock","src":"1981:87:20","statements":[{"nativeSrc":"1991:29:20","nodeType":"YulAssignment","src":"1991:29:20","value":{"arguments":[{"name":"offset","nativeSrc":"2013:6:20","nodeType":"YulIdentifier","src":"2013:6:20"}],"functionName":{"name":"calldataload","nativeSrc":"2000:12:20","nodeType":"YulIdentifier","src":"2000:12:20"},"nativeSrc":"2000:20:20","nodeType":"YulFunctionCall","src":"2000:20:20"},"variableNames":[{"name":"value","nativeSrc":"1991:5:20","nodeType":"YulIdentifier","src":"1991:5:20"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"2056:5:20","nodeType":"YulIdentifier","src":"2056:5:20"}],"functionName":{"name":"validator_revert_t_uint256","nativeSrc":"2029:26:20","nodeType":"YulIdentifier","src":"2029:26:20"},"nativeSrc":"2029:33:20","nodeType":"YulFunctionCall","src":"2029:33:20"},"nativeSrc":"2029:33:20","nodeType":"YulExpressionStatement","src":"2029:33:20"}]},"name":"abi_decode_t_uint256","nativeSrc":"1929:139:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"1959:6:20","nodeType":"YulTypedName","src":"1959:6:20","type":""},{"name":"end","nativeSrc":"1967:3:20","nodeType":"YulTypedName","src":"1967:3:20","type":""}],"returnVariables":[{"name":"value","nativeSrc":"1975:5:20","nodeType":"YulTypedName","src":"1975:5:20","type":""}],"src":"1929:139:20"},{"body":{"nativeSrc":"2163:28:20","nodeType":"YulBlock","src":"2163:28:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2180:1:20","nodeType":"YulLiteral","src":"2180:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"2183:1:20","nodeType":"YulLiteral","src":"2183:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"2173:6:20","nodeType":"YulIdentifier","src":"2173:6:20"},"nativeSrc":"2173:12:20","nodeType":"YulFunctionCall","src":"2173:12:20"},"nativeSrc":"2173:12:20","nodeType":"YulExpressionStatement","src":"2173:12:20"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"2074:117:20","nodeType":"YulFunctionDefinition","src":"2074:117:20"},{"body":{"nativeSrc":"2245:54:20","nodeType":"YulBlock","src":"2245:54:20","statements":[{"nativeSrc":"2255:38:20","nodeType":"YulAssignment","src":"2255:38:20","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"2273:5:20","nodeType":"YulIdentifier","src":"2273:5:20"},{"kind":"number","nativeSrc":"2280:2:20","nodeType":"YulLiteral","src":"2280:2:20","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"2269:3:20","nodeType":"YulIdentifier","src":"2269:3:20"},"nativeSrc":"2269:14:20","nodeType":"YulFunctionCall","src":"2269:14:20"},{"arguments":[{"kind":"number","nativeSrc":"2289:2:20","nodeType":"YulLiteral","src":"2289:2:20","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"2285:3:20","nodeType":"YulIdentifier","src":"2285:3:20"},"nativeSrc":"2285:7:20","nodeType":"YulFunctionCall","src":"2285:7:20"}],"functionName":{"name":"and","nativeSrc":"2265:3:20","nodeType":"YulIdentifier","src":"2265:3:20"},"nativeSrc":"2265:28:20","nodeType":"YulFunctionCall","src":"2265:28:20"},"variableNames":[{"name":"result","nativeSrc":"2255:6:20","nodeType":"YulIdentifier","src":"2255:6:20"}]}]},"name":"round_up_to_mul_of_32","nativeSrc":"2197:102:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2228:5:20","nodeType":"YulTypedName","src":"2228:5:20","type":""}],"returnVariables":[{"name":"result","nativeSrc":"2238:6:20","nodeType":"YulTypedName","src":"2238:6:20","type":""}],"src":"2197:102:20"},{"body":{"nativeSrc":"2333:152:20","nodeType":"YulBlock","src":"2333:152:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2350:1:20","nodeType":"YulLiteral","src":"2350:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"2353:77:20","nodeType":"YulLiteral","src":"2353:77:20","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"2343:6:20","nodeType":"YulIdentifier","src":"2343:6:20"},"nativeSrc":"2343:88:20","nodeType":"YulFunctionCall","src":"2343:88:20"},"nativeSrc":"2343:88:20","nodeType":"YulExpressionStatement","src":"2343:88:20"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"2447:1:20","nodeType":"YulLiteral","src":"2447:1:20","type":"","value":"4"},{"kind":"number","nativeSrc":"2450:4:20","nodeType":"YulLiteral","src":"2450:4:20","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"2440:6:20","nodeType":"YulIdentifier","src":"2440:6:20"},"nativeSrc":"2440:15:20","nodeType":"YulFunctionCall","src":"2440:15:20"},"nativeSrc":"2440:15:20","nodeType":"YulExpressionStatement","src":"2440:15:20"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"2471:1:20","nodeType":"YulLiteral","src":"2471:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"2474:4:20","nodeType":"YulLiteral","src":"2474:4:20","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"2464:6:20","nodeType":"YulIdentifier","src":"2464:6:20"},"nativeSrc":"2464:15:20","nodeType":"YulFunctionCall","src":"2464:15:20"},"nativeSrc":"2464:15:20","nodeType":"YulExpressionStatement","src":"2464:15:20"}]},"name":"panic_error_0x41","nativeSrc":"2305:180:20","nodeType":"YulFunctionDefinition","src":"2305:180:20"},{"body":{"nativeSrc":"2534:238:20","nodeType":"YulBlock","src":"2534:238:20","statements":[{"nativeSrc":"2544:58:20","nodeType":"YulVariableDeclaration","src":"2544:58:20","value":{"arguments":[{"name":"memPtr","nativeSrc":"2566:6:20","nodeType":"YulIdentifier","src":"2566:6:20"},{"arguments":[{"name":"size","nativeSrc":"2596:4:20","nodeType":"YulIdentifier","src":"2596:4:20"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"2574:21:20","nodeType":"YulIdentifier","src":"2574:21:20"},"nativeSrc":"2574:27:20","nodeType":"YulFunctionCall","src":"2574:27:20"}],"functionName":{"name":"add","nativeSrc":"2562:3:20","nodeType":"YulIdentifier","src":"2562:3:20"},"nativeSrc":"2562:40:20","nodeType":"YulFunctionCall","src":"2562:40:20"},"variables":[{"name":"newFreePtr","nativeSrc":"2548:10:20","nodeType":"YulTypedName","src":"2548:10:20","type":""}]},{"body":{"nativeSrc":"2713:22:20","nodeType":"YulBlock","src":"2713:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"2715:16:20","nodeType":"YulIdentifier","src":"2715:16:20"},"nativeSrc":"2715:18:20","nodeType":"YulFunctionCall","src":"2715:18:20"},"nativeSrc":"2715:18:20","nodeType":"YulExpressionStatement","src":"2715:18:20"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nativeSrc":"2656:10:20","nodeType":"YulIdentifier","src":"2656:10:20"},{"kind":"number","nativeSrc":"2668:18:20","nodeType":"YulLiteral","src":"2668:18:20","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"2653:2:20","nodeType":"YulIdentifier","src":"2653:2:20"},"nativeSrc":"2653:34:20","nodeType":"YulFunctionCall","src":"2653:34:20"},{"arguments":[{"name":"newFreePtr","nativeSrc":"2692:10:20","nodeType":"YulIdentifier","src":"2692:10:20"},{"name":"memPtr","nativeSrc":"2704:6:20","nodeType":"YulIdentifier","src":"2704:6:20"}],"functionName":{"name":"lt","nativeSrc":"2689:2:20","nodeType":"YulIdentifier","src":"2689:2:20"},"nativeSrc":"2689:22:20","nodeType":"YulFunctionCall","src":"2689:22:20"}],"functionName":{"name":"or","nativeSrc":"2650:2:20","nodeType":"YulIdentifier","src":"2650:2:20"},"nativeSrc":"2650:62:20","nodeType":"YulFunctionCall","src":"2650:62:20"},"nativeSrc":"2647:88:20","nodeType":"YulIf","src":"2647:88:20"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"2751:2:20","nodeType":"YulLiteral","src":"2751:2:20","type":"","value":"64"},{"name":"newFreePtr","nativeSrc":"2755:10:20","nodeType":"YulIdentifier","src":"2755:10:20"}],"functionName":{"name":"mstore","nativeSrc":"2744:6:20","nodeType":"YulIdentifier","src":"2744:6:20"},"nativeSrc":"2744:22:20","nodeType":"YulFunctionCall","src":"2744:22:20"},"nativeSrc":"2744:22:20","nodeType":"YulExpressionStatement","src":"2744:22:20"}]},"name":"finalize_allocation","nativeSrc":"2491:281:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"2520:6:20","nodeType":"YulTypedName","src":"2520:6:20","type":""},{"name":"size","nativeSrc":"2528:4:20","nodeType":"YulTypedName","src":"2528:4:20","type":""}],"src":"2491:281:20"},{"body":{"nativeSrc":"2819:88:20","nodeType":"YulBlock","src":"2819:88:20","statements":[{"nativeSrc":"2829:30:20","nodeType":"YulAssignment","src":"2829:30:20","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nativeSrc":"2839:18:20","nodeType":"YulIdentifier","src":"2839:18:20"},"nativeSrc":"2839:20:20","nodeType":"YulFunctionCall","src":"2839:20:20"},"variableNames":[{"name":"memPtr","nativeSrc":"2829:6:20","nodeType":"YulIdentifier","src":"2829:6:20"}]},{"expression":{"arguments":[{"name":"memPtr","nativeSrc":"2888:6:20","nodeType":"YulIdentifier","src":"2888:6:20"},{"name":"size","nativeSrc":"2896:4:20","nodeType":"YulIdentifier","src":"2896:4:20"}],"functionName":{"name":"finalize_allocation","nativeSrc":"2868:19:20","nodeType":"YulIdentifier","src":"2868:19:20"},"nativeSrc":"2868:33:20","nodeType":"YulFunctionCall","src":"2868:33:20"},"nativeSrc":"2868:33:20","nodeType":"YulExpressionStatement","src":"2868:33:20"}]},"name":"allocate_memory","nativeSrc":"2778:129:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nativeSrc":"2803:4:20","nodeType":"YulTypedName","src":"2803:4:20","type":""}],"returnVariables":[{"name":"memPtr","nativeSrc":"2812:6:20","nodeType":"YulTypedName","src":"2812:6:20","type":""}],"src":"2778:129:20"},{"body":{"nativeSrc":"2995:229:20","nodeType":"YulBlock","src":"2995:229:20","statements":[{"body":{"nativeSrc":"3100:22:20","nodeType":"YulBlock","src":"3100:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"3102:16:20","nodeType":"YulIdentifier","src":"3102:16:20"},"nativeSrc":"3102:18:20","nodeType":"YulFunctionCall","src":"3102:18:20"},"nativeSrc":"3102:18:20","nodeType":"YulExpressionStatement","src":"3102:18:20"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"3072:6:20","nodeType":"YulIdentifier","src":"3072:6:20"},{"kind":"number","nativeSrc":"3080:18:20","nodeType":"YulLiteral","src":"3080:18:20","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"3069:2:20","nodeType":"YulIdentifier","src":"3069:2:20"},"nativeSrc":"3069:30:20","nodeType":"YulFunctionCall","src":"3069:30:20"},"nativeSrc":"3066:56:20","nodeType":"YulIf","src":"3066:56:20"},{"nativeSrc":"3132:25:20","nodeType":"YulAssignment","src":"3132:25:20","value":{"arguments":[{"name":"length","nativeSrc":"3144:6:20","nodeType":"YulIdentifier","src":"3144:6:20"},{"kind":"number","nativeSrc":"3152:4:20","nodeType":"YulLiteral","src":"3152:4:20","type":"","value":"0x20"}],"functionName":{"name":"mul","nativeSrc":"3140:3:20","nodeType":"YulIdentifier","src":"3140:3:20"},"nativeSrc":"3140:17:20","nodeType":"YulFunctionCall","src":"3140:17:20"},"variableNames":[{"name":"size","nativeSrc":"3132:4:20","nodeType":"YulIdentifier","src":"3132:4:20"}]},{"nativeSrc":"3194:23:20","nodeType":"YulAssignment","src":"3194:23:20","value":{"arguments":[{"name":"size","nativeSrc":"3206:4:20","nodeType":"YulIdentifier","src":"3206:4:20"},{"kind":"number","nativeSrc":"3212:4:20","nodeType":"YulLiteral","src":"3212:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"3202:3:20","nodeType":"YulIdentifier","src":"3202:3:20"},"nativeSrc":"3202:15:20","nodeType":"YulFunctionCall","src":"3202:15:20"},"variableNames":[{"name":"size","nativeSrc":"3194:4:20","nodeType":"YulIdentifier","src":"3194:4:20"}]}]},"name":"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"2913:311:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nativeSrc":"2979:6:20","nodeType":"YulTypedName","src":"2979:6:20","type":""}],"returnVariables":[{"name":"size","nativeSrc":"2990:4:20","nodeType":"YulTypedName","src":"2990:4:20","type":""}],"src":"2913:311:20"},{"body":{"nativeSrc":"3319:28:20","nodeType":"YulBlock","src":"3319:28:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3336:1:20","nodeType":"YulLiteral","src":"3336:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"3339:1:20","nodeType":"YulLiteral","src":"3339:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3329:6:20","nodeType":"YulIdentifier","src":"3329:6:20"},"nativeSrc":"3329:12:20","nodeType":"YulFunctionCall","src":"3329:12:20"},"nativeSrc":"3329:12:20","nodeType":"YulExpressionStatement","src":"3329:12:20"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nativeSrc":"3230:117:20","nodeType":"YulFunctionDefinition","src":"3230:117:20"},{"body":{"nativeSrc":"3472:608:20","nodeType":"YulBlock","src":"3472:608:20","statements":[{"nativeSrc":"3482:90:20","nodeType":"YulAssignment","src":"3482:90:20","value":{"arguments":[{"arguments":[{"name":"length","nativeSrc":"3564:6:20","nodeType":"YulIdentifier","src":"3564:6:20"}],"functionName":{"name":"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"3507:56:20","nodeType":"YulIdentifier","src":"3507:56:20"},"nativeSrc":"3507:64:20","nodeType":"YulFunctionCall","src":"3507:64:20"}],"functionName":{"name":"allocate_memory","nativeSrc":"3491:15:20","nodeType":"YulIdentifier","src":"3491:15:20"},"nativeSrc":"3491:81:20","nodeType":"YulFunctionCall","src":"3491:81:20"},"variableNames":[{"name":"array","nativeSrc":"3482:5:20","nodeType":"YulIdentifier","src":"3482:5:20"}]},{"nativeSrc":"3581:16:20","nodeType":"YulVariableDeclaration","src":"3581:16:20","value":{"name":"array","nativeSrc":"3592:5:20","nodeType":"YulIdentifier","src":"3592:5:20"},"variables":[{"name":"dst","nativeSrc":"3585:3:20","nodeType":"YulTypedName","src":"3585:3:20","type":""}]},{"expression":{"arguments":[{"name":"array","nativeSrc":"3614:5:20","nodeType":"YulIdentifier","src":"3614:5:20"},{"name":"length","nativeSrc":"3621:6:20","nodeType":"YulIdentifier","src":"3621:6:20"}],"functionName":{"name":"mstore","nativeSrc":"3607:6:20","nodeType":"YulIdentifier","src":"3607:6:20"},"nativeSrc":"3607:21:20","nodeType":"YulFunctionCall","src":"3607:21:20"},"nativeSrc":"3607:21:20","nodeType":"YulExpressionStatement","src":"3607:21:20"},{"nativeSrc":"3637:23:20","nodeType":"YulAssignment","src":"3637:23:20","value":{"arguments":[{"name":"array","nativeSrc":"3648:5:20","nodeType":"YulIdentifier","src":"3648:5:20"},{"kind":"number","nativeSrc":"3655:4:20","nodeType":"YulLiteral","src":"3655:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"3644:3:20","nodeType":"YulIdentifier","src":"3644:3:20"},"nativeSrc":"3644:16:20","nodeType":"YulFunctionCall","src":"3644:16:20"},"variableNames":[{"name":"dst","nativeSrc":"3637:3:20","nodeType":"YulIdentifier","src":"3637:3:20"}]},{"nativeSrc":"3670:44:20","nodeType":"YulVariableDeclaration","src":"3670:44:20","value":{"arguments":[{"name":"offset","nativeSrc":"3688:6:20","nodeType":"YulIdentifier","src":"3688:6:20"},{"arguments":[{"name":"length","nativeSrc":"3700:6:20","nodeType":"YulIdentifier","src":"3700:6:20"},{"kind":"number","nativeSrc":"3708:4:20","nodeType":"YulLiteral","src":"3708:4:20","type":"","value":"0x20"}],"functionName":{"name":"mul","nativeSrc":"3696:3:20","nodeType":"YulIdentifier","src":"3696:3:20"},"nativeSrc":"3696:17:20","nodeType":"YulFunctionCall","src":"3696:17:20"}],"functionName":{"name":"add","nativeSrc":"3684:3:20","nodeType":"YulIdentifier","src":"3684:3:20"},"nativeSrc":"3684:30:20","nodeType":"YulFunctionCall","src":"3684:30:20"},"variables":[{"name":"srcEnd","nativeSrc":"3674:6:20","nodeType":"YulTypedName","src":"3674:6:20","type":""}]},{"body":{"nativeSrc":"3742:103:20","nodeType":"YulBlock","src":"3742:103:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nativeSrc":"3756:77:20","nodeType":"YulIdentifier","src":"3756:77:20"},"nativeSrc":"3756:79:20","nodeType":"YulFunctionCall","src":"3756:79:20"},"nativeSrc":"3756:79:20","nodeType":"YulExpressionStatement","src":"3756:79:20"}]},"condition":{"arguments":[{"name":"srcEnd","nativeSrc":"3729:6:20","nodeType":"YulIdentifier","src":"3729:6:20"},{"name":"end","nativeSrc":"3737:3:20","nodeType":"YulIdentifier","src":"3737:3:20"}],"functionName":{"name":"gt","nativeSrc":"3726:2:20","nodeType":"YulIdentifier","src":"3726:2:20"},"nativeSrc":"3726:15:20","nodeType":"YulFunctionCall","src":"3726:15:20"},"nativeSrc":"3723:122:20","nodeType":"YulIf","src":"3723:122:20"},{"body":{"nativeSrc":"3930:144:20","nodeType":"YulBlock","src":"3930:144:20","statements":[{"nativeSrc":"3945:21:20","nodeType":"YulVariableDeclaration","src":"3945:21:20","value":{"name":"src","nativeSrc":"3963:3:20","nodeType":"YulIdentifier","src":"3963:3:20"},"variables":[{"name":"elementPos","nativeSrc":"3949:10:20","nodeType":"YulTypedName","src":"3949:10:20","type":""}]},{"expression":{"arguments":[{"name":"dst","nativeSrc":"3987:3:20","nodeType":"YulIdentifier","src":"3987:3:20"},{"arguments":[{"name":"elementPos","nativeSrc":"4013:10:20","nodeType":"YulIdentifier","src":"4013:10:20"},{"name":"end","nativeSrc":"4025:3:20","nodeType":"YulIdentifier","src":"4025:3:20"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"3992:20:20","nodeType":"YulIdentifier","src":"3992:20:20"},"nativeSrc":"3992:37:20","nodeType":"YulFunctionCall","src":"3992:37:20"}],"functionName":{"name":"mstore","nativeSrc":"3980:6:20","nodeType":"YulIdentifier","src":"3980:6:20"},"nativeSrc":"3980:50:20","nodeType":"YulFunctionCall","src":"3980:50:20"},"nativeSrc":"3980:50:20","nodeType":"YulExpressionStatement","src":"3980:50:20"},{"nativeSrc":"4043:21:20","nodeType":"YulAssignment","src":"4043:21:20","value":{"arguments":[{"name":"dst","nativeSrc":"4054:3:20","nodeType":"YulIdentifier","src":"4054:3:20"},{"kind":"number","nativeSrc":"4059:4:20","nodeType":"YulLiteral","src":"4059:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"4050:3:20","nodeType":"YulIdentifier","src":"4050:3:20"},"nativeSrc":"4050:14:20","nodeType":"YulFunctionCall","src":"4050:14:20"},"variableNames":[{"name":"dst","nativeSrc":"4043:3:20","nodeType":"YulIdentifier","src":"4043:3:20"}]}]},"condition":{"arguments":[{"name":"src","nativeSrc":"3883:3:20","nodeType":"YulIdentifier","src":"3883:3:20"},{"name":"srcEnd","nativeSrc":"3888:6:20","nodeType":"YulIdentifier","src":"3888:6:20"}],"functionName":{"name":"lt","nativeSrc":"3880:2:20","nodeType":"YulIdentifier","src":"3880:2:20"},"nativeSrc":"3880:15:20","nodeType":"YulFunctionCall","src":"3880:15:20"},"nativeSrc":"3854:220:20","nodeType":"YulForLoop","post":{"nativeSrc":"3896:25:20","nodeType":"YulBlock","src":"3896:25:20","statements":[{"nativeSrc":"3898:21:20","nodeType":"YulAssignment","src":"3898:21:20","value":{"arguments":[{"name":"src","nativeSrc":"3909:3:20","nodeType":"YulIdentifier","src":"3909:3:20"},{"kind":"number","nativeSrc":"3914:4:20","nodeType":"YulLiteral","src":"3914:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"3905:3:20","nodeType":"YulIdentifier","src":"3905:3:20"},"nativeSrc":"3905:14:20","nodeType":"YulFunctionCall","src":"3905:14:20"},"variableNames":[{"name":"src","nativeSrc":"3898:3:20","nodeType":"YulIdentifier","src":"3898:3:20"}]}]},"pre":{"nativeSrc":"3858:21:20","nodeType":"YulBlock","src":"3858:21:20","statements":[{"nativeSrc":"3860:17:20","nodeType":"YulVariableDeclaration","src":"3860:17:20","value":{"name":"offset","nativeSrc":"3871:6:20","nodeType":"YulIdentifier","src":"3871:6:20"},"variables":[{"name":"src","nativeSrc":"3864:3:20","nodeType":"YulTypedName","src":"3864:3:20","type":""}]}]},"src":"3854:220:20"}]},"name":"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"3370:710:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"3442:6:20","nodeType":"YulTypedName","src":"3442:6:20","type":""},{"name":"length","nativeSrc":"3450:6:20","nodeType":"YulTypedName","src":"3450:6:20","type":""},{"name":"end","nativeSrc":"3458:3:20","nodeType":"YulTypedName","src":"3458:3:20","type":""}],"returnVariables":[{"name":"array","nativeSrc":"3466:5:20","nodeType":"YulTypedName","src":"3466:5:20","type":""}],"src":"3370:710:20"},{"body":{"nativeSrc":"4180:293:20","nodeType":"YulBlock","src":"4180:293:20","statements":[{"body":{"nativeSrc":"4229:83:20","nodeType":"YulBlock","src":"4229:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"4231:77:20","nodeType":"YulIdentifier","src":"4231:77:20"},"nativeSrc":"4231:79:20","nodeType":"YulFunctionCall","src":"4231:79:20"},"nativeSrc":"4231:79:20","nodeType":"YulExpressionStatement","src":"4231:79:20"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"4208:6:20","nodeType":"YulIdentifier","src":"4208:6:20"},{"kind":"number","nativeSrc":"4216:4:20","nodeType":"YulLiteral","src":"4216:4:20","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"4204:3:20","nodeType":"YulIdentifier","src":"4204:3:20"},"nativeSrc":"4204:17:20","nodeType":"YulFunctionCall","src":"4204:17:20"},{"name":"end","nativeSrc":"4223:3:20","nodeType":"YulIdentifier","src":"4223:3:20"}],"functionName":{"name":"slt","nativeSrc":"4200:3:20","nodeType":"YulIdentifier","src":"4200:3:20"},"nativeSrc":"4200:27:20","nodeType":"YulFunctionCall","src":"4200:27:20"}],"functionName":{"name":"iszero","nativeSrc":"4193:6:20","nodeType":"YulIdentifier","src":"4193:6:20"},"nativeSrc":"4193:35:20","nodeType":"YulFunctionCall","src":"4193:35:20"},"nativeSrc":"4190:122:20","nodeType":"YulIf","src":"4190:122:20"},{"nativeSrc":"4321:34:20","nodeType":"YulVariableDeclaration","src":"4321:34:20","value":{"arguments":[{"name":"offset","nativeSrc":"4348:6:20","nodeType":"YulIdentifier","src":"4348:6:20"}],"functionName":{"name":"calldataload","nativeSrc":"4335:12:20","nodeType":"YulIdentifier","src":"4335:12:20"},"nativeSrc":"4335:20:20","nodeType":"YulFunctionCall","src":"4335:20:20"},"variables":[{"name":"length","nativeSrc":"4325:6:20","nodeType":"YulTypedName","src":"4325:6:20","type":""}]},{"nativeSrc":"4364:103:20","nodeType":"YulAssignment","src":"4364:103:20","value":{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"4440:6:20","nodeType":"YulIdentifier","src":"4440:6:20"},{"kind":"number","nativeSrc":"4448:4:20","nodeType":"YulLiteral","src":"4448:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"4436:3:20","nodeType":"YulIdentifier","src":"4436:3:20"},"nativeSrc":"4436:17:20","nodeType":"YulFunctionCall","src":"4436:17:20"},{"name":"length","nativeSrc":"4455:6:20","nodeType":"YulIdentifier","src":"4455:6:20"},{"name":"end","nativeSrc":"4463:3:20","nodeType":"YulIdentifier","src":"4463:3:20"}],"functionName":{"name":"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"4373:62:20","nodeType":"YulIdentifier","src":"4373:62:20"},"nativeSrc":"4373:94:20","nodeType":"YulFunctionCall","src":"4373:94:20"},"variableNames":[{"name":"array","nativeSrc":"4364:5:20","nodeType":"YulIdentifier","src":"4364:5:20"}]}]},"name":"abi_decode_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"4103:370:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"4158:6:20","nodeType":"YulTypedName","src":"4158:6:20","type":""},{"name":"end","nativeSrc":"4166:3:20","nodeType":"YulTypedName","src":"4166:3:20","type":""}],"returnVariables":[{"name":"array","nativeSrc":"4174:5:20","nodeType":"YulTypedName","src":"4174:5:20","type":""}],"src":"4103:370:20"},{"body":{"nativeSrc":"4587:576:20","nodeType":"YulBlock","src":"4587:576:20","statements":[{"body":{"nativeSrc":"4633:83:20","nodeType":"YulBlock","src":"4633:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"4635:77:20","nodeType":"YulIdentifier","src":"4635:77:20"},"nativeSrc":"4635:79:20","nodeType":"YulFunctionCall","src":"4635:79:20"},"nativeSrc":"4635:79:20","nodeType":"YulExpressionStatement","src":"4635:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"4608:7:20","nodeType":"YulIdentifier","src":"4608:7:20"},{"name":"headStart","nativeSrc":"4617:9:20","nodeType":"YulIdentifier","src":"4617:9:20"}],"functionName":{"name":"sub","nativeSrc":"4604:3:20","nodeType":"YulIdentifier","src":"4604:3:20"},"nativeSrc":"4604:23:20","nodeType":"YulFunctionCall","src":"4604:23:20"},{"kind":"number","nativeSrc":"4629:2:20","nodeType":"YulLiteral","src":"4629:2:20","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"4600:3:20","nodeType":"YulIdentifier","src":"4600:3:20"},"nativeSrc":"4600:32:20","nodeType":"YulFunctionCall","src":"4600:32:20"},"nativeSrc":"4597:119:20","nodeType":"YulIf","src":"4597:119:20"},{"nativeSrc":"4726:117:20","nodeType":"YulBlock","src":"4726:117:20","statements":[{"nativeSrc":"4741:15:20","nodeType":"YulVariableDeclaration","src":"4741:15:20","value":{"kind":"number","nativeSrc":"4755:1:20","nodeType":"YulLiteral","src":"4755:1:20","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"4745:6:20","nodeType":"YulTypedName","src":"4745:6:20","type":""}]},{"nativeSrc":"4770:63:20","nodeType":"YulAssignment","src":"4770:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4805:9:20","nodeType":"YulIdentifier","src":"4805:9:20"},{"name":"offset","nativeSrc":"4816:6:20","nodeType":"YulIdentifier","src":"4816:6:20"}],"functionName":{"name":"add","nativeSrc":"4801:3:20","nodeType":"YulIdentifier","src":"4801:3:20"},"nativeSrc":"4801:22:20","nodeType":"YulFunctionCall","src":"4801:22:20"},{"name":"dataEnd","nativeSrc":"4825:7:20","nodeType":"YulIdentifier","src":"4825:7:20"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"4780:20:20","nodeType":"YulIdentifier","src":"4780:20:20"},"nativeSrc":"4780:53:20","nodeType":"YulFunctionCall","src":"4780:53:20"},"variableNames":[{"name":"value0","nativeSrc":"4770:6:20","nodeType":"YulIdentifier","src":"4770:6:20"}]}]},{"nativeSrc":"4853:303:20","nodeType":"YulBlock","src":"4853:303:20","statements":[{"nativeSrc":"4868:46:20","nodeType":"YulVariableDeclaration","src":"4868:46:20","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4899:9:20","nodeType":"YulIdentifier","src":"4899:9:20"},{"kind":"number","nativeSrc":"4910:2:20","nodeType":"YulLiteral","src":"4910:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4895:3:20","nodeType":"YulIdentifier","src":"4895:3:20"},"nativeSrc":"4895:18:20","nodeType":"YulFunctionCall","src":"4895:18:20"}],"functionName":{"name":"calldataload","nativeSrc":"4882:12:20","nodeType":"YulIdentifier","src":"4882:12:20"},"nativeSrc":"4882:32:20","nodeType":"YulFunctionCall","src":"4882:32:20"},"variables":[{"name":"offset","nativeSrc":"4872:6:20","nodeType":"YulTypedName","src":"4872:6:20","type":""}]},{"body":{"nativeSrc":"4961:83:20","nodeType":"YulBlock","src":"4961:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"4963:77:20","nodeType":"YulIdentifier","src":"4963:77:20"},"nativeSrc":"4963:79:20","nodeType":"YulFunctionCall","src":"4963:79:20"},"nativeSrc":"4963:79:20","nodeType":"YulExpressionStatement","src":"4963:79:20"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"4933:6:20","nodeType":"YulIdentifier","src":"4933:6:20"},{"kind":"number","nativeSrc":"4941:18:20","nodeType":"YulLiteral","src":"4941:18:20","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"4930:2:20","nodeType":"YulIdentifier","src":"4930:2:20"},"nativeSrc":"4930:30:20","nodeType":"YulFunctionCall","src":"4930:30:20"},"nativeSrc":"4927:117:20","nodeType":"YulIf","src":"4927:117:20"},{"nativeSrc":"5058:88:20","nodeType":"YulAssignment","src":"5058:88:20","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5118:9:20","nodeType":"YulIdentifier","src":"5118:9:20"},{"name":"offset","nativeSrc":"5129:6:20","nodeType":"YulIdentifier","src":"5129:6:20"}],"functionName":{"name":"add","nativeSrc":"5114:3:20","nodeType":"YulIdentifier","src":"5114:3:20"},"nativeSrc":"5114:22:20","nodeType":"YulFunctionCall","src":"5114:22:20"},{"name":"dataEnd","nativeSrc":"5138:7:20","nodeType":"YulIdentifier","src":"5138:7:20"}],"functionName":{"name":"abi_decode_t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"5068:45:20","nodeType":"YulIdentifier","src":"5068:45:20"},"nativeSrc":"5068:78:20","nodeType":"YulFunctionCall","src":"5068:78:20"},"variableNames":[{"name":"value1","nativeSrc":"5058:6:20","nodeType":"YulIdentifier","src":"5058:6:20"}]}]}]},"name":"abi_decode_tuple_t_uint256t_array$_t_uint256_$dyn_memory_ptr","nativeSrc":"4479:684:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4549:9:20","nodeType":"YulTypedName","src":"4549:9:20","type":""},{"name":"dataEnd","nativeSrc":"4560:7:20","nodeType":"YulTypedName","src":"4560:7:20","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"4572:6:20","nodeType":"YulTypedName","src":"4572:6:20","type":""},{"name":"value1","nativeSrc":"4580:6:20","nodeType":"YulTypedName","src":"4580:6:20","type":""}],"src":"4479:684:20"},{"body":{"nativeSrc":"5258:28:20","nodeType":"YulBlock","src":"5258:28:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5275:1:20","nodeType":"YulLiteral","src":"5275:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"5278:1:20","nodeType":"YulLiteral","src":"5278:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"5268:6:20","nodeType":"YulIdentifier","src":"5268:6:20"},"nativeSrc":"5268:12:20","nodeType":"YulFunctionCall","src":"5268:12:20"},"nativeSrc":"5268:12:20","nodeType":"YulExpressionStatement","src":"5268:12:20"}]},"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nativeSrc":"5169:117:20","nodeType":"YulFunctionDefinition","src":"5169:117:20"},{"body":{"nativeSrc":"5379:478:20","nodeType":"YulBlock","src":"5379:478:20","statements":[{"body":{"nativeSrc":"5428:83:20","nodeType":"YulBlock","src":"5428:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"5430:77:20","nodeType":"YulIdentifier","src":"5430:77:20"},"nativeSrc":"5430:79:20","nodeType":"YulFunctionCall","src":"5430:79:20"},"nativeSrc":"5430:79:20","nodeType":"YulExpressionStatement","src":"5430:79:20"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"5407:6:20","nodeType":"YulIdentifier","src":"5407:6:20"},{"kind":"number","nativeSrc":"5415:4:20","nodeType":"YulLiteral","src":"5415:4:20","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"5403:3:20","nodeType":"YulIdentifier","src":"5403:3:20"},"nativeSrc":"5403:17:20","nodeType":"YulFunctionCall","src":"5403:17:20"},{"name":"end","nativeSrc":"5422:3:20","nodeType":"YulIdentifier","src":"5422:3:20"}],"functionName":{"name":"slt","nativeSrc":"5399:3:20","nodeType":"YulIdentifier","src":"5399:3:20"},"nativeSrc":"5399:27:20","nodeType":"YulFunctionCall","src":"5399:27:20"}],"functionName":{"name":"iszero","nativeSrc":"5392:6:20","nodeType":"YulIdentifier","src":"5392:6:20"},"nativeSrc":"5392:35:20","nodeType":"YulFunctionCall","src":"5392:35:20"},"nativeSrc":"5389:122:20","nodeType":"YulIf","src":"5389:122:20"},{"nativeSrc":"5520:30:20","nodeType":"YulAssignment","src":"5520:30:20","value":{"arguments":[{"name":"offset","nativeSrc":"5543:6:20","nodeType":"YulIdentifier","src":"5543:6:20"}],"functionName":{"name":"calldataload","nativeSrc":"5530:12:20","nodeType":"YulIdentifier","src":"5530:12:20"},"nativeSrc":"5530:20:20","nodeType":"YulFunctionCall","src":"5530:20:20"},"variableNames":[{"name":"length","nativeSrc":"5520:6:20","nodeType":"YulIdentifier","src":"5520:6:20"}]},{"body":{"nativeSrc":"5593:83:20","nodeType":"YulBlock","src":"5593:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490","nativeSrc":"5595:77:20","nodeType":"YulIdentifier","src":"5595:77:20"},"nativeSrc":"5595:79:20","nodeType":"YulFunctionCall","src":"5595:79:20"},"nativeSrc":"5595:79:20","nodeType":"YulExpressionStatement","src":"5595:79:20"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"5565:6:20","nodeType":"YulIdentifier","src":"5565:6:20"},{"kind":"number","nativeSrc":"5573:18:20","nodeType":"YulLiteral","src":"5573:18:20","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"5562:2:20","nodeType":"YulIdentifier","src":"5562:2:20"},"nativeSrc":"5562:30:20","nodeType":"YulFunctionCall","src":"5562:30:20"},"nativeSrc":"5559:117:20","nodeType":"YulIf","src":"5559:117:20"},{"nativeSrc":"5685:29:20","nodeType":"YulAssignment","src":"5685:29:20","value":{"arguments":[{"name":"offset","nativeSrc":"5701:6:20","nodeType":"YulIdentifier","src":"5701:6:20"},{"kind":"number","nativeSrc":"5709:4:20","nodeType":"YulLiteral","src":"5709:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"5697:3:20","nodeType":"YulIdentifier","src":"5697:3:20"},"nativeSrc":"5697:17:20","nodeType":"YulFunctionCall","src":"5697:17:20"},"variableNames":[{"name":"arrayPos","nativeSrc":"5685:8:20","nodeType":"YulIdentifier","src":"5685:8:20"}]},{"body":{"nativeSrc":"5768:83:20","nodeType":"YulBlock","src":"5768:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nativeSrc":"5770:77:20","nodeType":"YulIdentifier","src":"5770:77:20"},"nativeSrc":"5770:79:20","nodeType":"YulFunctionCall","src":"5770:79:20"},"nativeSrc":"5770:79:20","nodeType":"YulExpressionStatement","src":"5770:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"arrayPos","nativeSrc":"5733:8:20","nodeType":"YulIdentifier","src":"5733:8:20"},{"arguments":[{"name":"length","nativeSrc":"5747:6:20","nodeType":"YulIdentifier","src":"5747:6:20"},{"kind":"number","nativeSrc":"5755:4:20","nodeType":"YulLiteral","src":"5755:4:20","type":"","value":"0x01"}],"functionName":{"name":"mul","nativeSrc":"5743:3:20","nodeType":"YulIdentifier","src":"5743:3:20"},"nativeSrc":"5743:17:20","nodeType":"YulFunctionCall","src":"5743:17:20"}],"functionName":{"name":"add","nativeSrc":"5729:3:20","nodeType":"YulIdentifier","src":"5729:3:20"},"nativeSrc":"5729:32:20","nodeType":"YulFunctionCall","src":"5729:32:20"},{"name":"end","nativeSrc":"5763:3:20","nodeType":"YulIdentifier","src":"5763:3:20"}],"functionName":{"name":"gt","nativeSrc":"5726:2:20","nodeType":"YulIdentifier","src":"5726:2:20"},"nativeSrc":"5726:41:20","nodeType":"YulFunctionCall","src":"5726:41:20"},"nativeSrc":"5723:128:20","nodeType":"YulIf","src":"5723:128:20"}]},"name":"abi_decode_t_bytes_calldata_ptr","nativeSrc":"5305:552:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"5346:6:20","nodeType":"YulTypedName","src":"5346:6:20","type":""},{"name":"end","nativeSrc":"5354:3:20","nodeType":"YulTypedName","src":"5354:3:20","type":""}],"returnVariables":[{"name":"arrayPos","nativeSrc":"5362:8:20","nodeType":"YulTypedName","src":"5362:8:20","type":""},{"name":"length","nativeSrc":"5372:6:20","nodeType":"YulTypedName","src":"5372:6:20","type":""}],"src":"5305:552:20"},{"body":{"nativeSrc":"5948:442:20","nodeType":"YulBlock","src":"5948:442:20","statements":[{"body":{"nativeSrc":"5994:83:20","nodeType":"YulBlock","src":"5994:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"5996:77:20","nodeType":"YulIdentifier","src":"5996:77:20"},"nativeSrc":"5996:79:20","nodeType":"YulFunctionCall","src":"5996:79:20"},"nativeSrc":"5996:79:20","nodeType":"YulExpressionStatement","src":"5996:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"5969:7:20","nodeType":"YulIdentifier","src":"5969:7:20"},{"name":"headStart","nativeSrc":"5978:9:20","nodeType":"YulIdentifier","src":"5978:9:20"}],"functionName":{"name":"sub","nativeSrc":"5965:3:20","nodeType":"YulIdentifier","src":"5965:3:20"},"nativeSrc":"5965:23:20","nodeType":"YulFunctionCall","src":"5965:23:20"},{"kind":"number","nativeSrc":"5990:2:20","nodeType":"YulLiteral","src":"5990:2:20","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"5961:3:20","nodeType":"YulIdentifier","src":"5961:3:20"},"nativeSrc":"5961:32:20","nodeType":"YulFunctionCall","src":"5961:32:20"},"nativeSrc":"5958:119:20","nodeType":"YulIf","src":"5958:119:20"},{"nativeSrc":"6087:296:20","nodeType":"YulBlock","src":"6087:296:20","statements":[{"nativeSrc":"6102:45:20","nodeType":"YulVariableDeclaration","src":"6102:45:20","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6133:9:20","nodeType":"YulIdentifier","src":"6133:9:20"},{"kind":"number","nativeSrc":"6144:1:20","nodeType":"YulLiteral","src":"6144:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"6129:3:20","nodeType":"YulIdentifier","src":"6129:3:20"},"nativeSrc":"6129:17:20","nodeType":"YulFunctionCall","src":"6129:17:20"}],"functionName":{"name":"calldataload","nativeSrc":"6116:12:20","nodeType":"YulIdentifier","src":"6116:12:20"},"nativeSrc":"6116:31:20","nodeType":"YulFunctionCall","src":"6116:31:20"},"variables":[{"name":"offset","nativeSrc":"6106:6:20","nodeType":"YulTypedName","src":"6106:6:20","type":""}]},{"body":{"nativeSrc":"6194:83:20","nodeType":"YulBlock","src":"6194:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"6196:77:20","nodeType":"YulIdentifier","src":"6196:77:20"},"nativeSrc":"6196:79:20","nodeType":"YulFunctionCall","src":"6196:79:20"},"nativeSrc":"6196:79:20","nodeType":"YulExpressionStatement","src":"6196:79:20"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"6166:6:20","nodeType":"YulIdentifier","src":"6166:6:20"},{"kind":"number","nativeSrc":"6174:18:20","nodeType":"YulLiteral","src":"6174:18:20","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"6163:2:20","nodeType":"YulIdentifier","src":"6163:2:20"},"nativeSrc":"6163:30:20","nodeType":"YulFunctionCall","src":"6163:30:20"},"nativeSrc":"6160:117:20","nodeType":"YulIf","src":"6160:117:20"},{"nativeSrc":"6291:82:20","nodeType":"YulAssignment","src":"6291:82:20","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6345:9:20","nodeType":"YulIdentifier","src":"6345:9:20"},{"name":"offset","nativeSrc":"6356:6:20","nodeType":"YulIdentifier","src":"6356:6:20"}],"functionName":{"name":"add","nativeSrc":"6341:3:20","nodeType":"YulIdentifier","src":"6341:3:20"},"nativeSrc":"6341:22:20","nodeType":"YulFunctionCall","src":"6341:22:20"},{"name":"dataEnd","nativeSrc":"6365:7:20","nodeType":"YulIdentifier","src":"6365:7:20"}],"functionName":{"name":"abi_decode_t_bytes_calldata_ptr","nativeSrc":"6309:31:20","nodeType":"YulIdentifier","src":"6309:31:20"},"nativeSrc":"6309:64:20","nodeType":"YulFunctionCall","src":"6309:64:20"},"variableNames":[{"name":"value0","nativeSrc":"6291:6:20","nodeType":"YulIdentifier","src":"6291:6:20"},{"name":"value1","nativeSrc":"6299:6:20","nodeType":"YulIdentifier","src":"6299:6:20"}]}]}]},"name":"abi_decode_tuple_t_bytes_calldata_ptr","nativeSrc":"5863:527:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5910:9:20","nodeType":"YulTypedName","src":"5910:9:20","type":""},{"name":"dataEnd","nativeSrc":"5921:7:20","nodeType":"YulTypedName","src":"5921:7:20","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"5933:6:20","nodeType":"YulTypedName","src":"5933:6:20","type":""},{"name":"value1","nativeSrc":"5941:6:20","nodeType":"YulTypedName","src":"5941:6:20","type":""}],"src":"5863:527:20"},{"body":{"nativeSrc":"6441:81:20","nodeType":"YulBlock","src":"6441:81:20","statements":[{"nativeSrc":"6451:65:20","nodeType":"YulAssignment","src":"6451:65:20","value":{"arguments":[{"name":"value","nativeSrc":"6466:5:20","nodeType":"YulIdentifier","src":"6466:5:20"},{"kind":"number","nativeSrc":"6473:42:20","nodeType":"YulLiteral","src":"6473:42:20","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"6462:3:20","nodeType":"YulIdentifier","src":"6462:3:20"},"nativeSrc":"6462:54:20","nodeType":"YulFunctionCall","src":"6462:54:20"},"variableNames":[{"name":"cleaned","nativeSrc":"6451:7:20","nodeType":"YulIdentifier","src":"6451:7:20"}]}]},"name":"cleanup_t_uint160","nativeSrc":"6396:126:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6423:5:20","nodeType":"YulTypedName","src":"6423:5:20","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"6433:7:20","nodeType":"YulTypedName","src":"6433:7:20","type":""}],"src":"6396:126:20"},{"body":{"nativeSrc":"6573:51:20","nodeType":"YulBlock","src":"6573:51:20","statements":[{"nativeSrc":"6583:35:20","nodeType":"YulAssignment","src":"6583:35:20","value":{"arguments":[{"name":"value","nativeSrc":"6612:5:20","nodeType":"YulIdentifier","src":"6612:5:20"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"6594:17:20","nodeType":"YulIdentifier","src":"6594:17:20"},"nativeSrc":"6594:24:20","nodeType":"YulFunctionCall","src":"6594:24:20"},"variableNames":[{"name":"cleaned","nativeSrc":"6583:7:20","nodeType":"YulIdentifier","src":"6583:7:20"}]}]},"name":"cleanup_t_address","nativeSrc":"6528:96:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6555:5:20","nodeType":"YulTypedName","src":"6555:5:20","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"6565:7:20","nodeType":"YulTypedName","src":"6565:7:20","type":""}],"src":"6528:96:20"},{"body":{"nativeSrc":"6695:53:20","nodeType":"YulBlock","src":"6695:53:20","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"6712:3:20","nodeType":"YulIdentifier","src":"6712:3:20"},{"arguments":[{"name":"value","nativeSrc":"6735:5:20","nodeType":"YulIdentifier","src":"6735:5:20"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"6717:17:20","nodeType":"YulIdentifier","src":"6717:17:20"},"nativeSrc":"6717:24:20","nodeType":"YulFunctionCall","src":"6717:24:20"}],"functionName":{"name":"mstore","nativeSrc":"6705:6:20","nodeType":"YulIdentifier","src":"6705:6:20"},"nativeSrc":"6705:37:20","nodeType":"YulFunctionCall","src":"6705:37:20"},"nativeSrc":"6705:37:20","nodeType":"YulExpressionStatement","src":"6705:37:20"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"6630:118:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6683:5:20","nodeType":"YulTypedName","src":"6683:5:20","type":""},{"name":"pos","nativeSrc":"6690:3:20","nodeType":"YulTypedName","src":"6690:3:20","type":""}],"src":"6630:118:20"},{"body":{"nativeSrc":"6852:124:20","nodeType":"YulBlock","src":"6852:124:20","statements":[{"nativeSrc":"6862:26:20","nodeType":"YulAssignment","src":"6862:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"6874:9:20","nodeType":"YulIdentifier","src":"6874:9:20"},{"kind":"number","nativeSrc":"6885:2:20","nodeType":"YulLiteral","src":"6885:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6870:3:20","nodeType":"YulIdentifier","src":"6870:3:20"},"nativeSrc":"6870:18:20","nodeType":"YulFunctionCall","src":"6870:18:20"},"variableNames":[{"name":"tail","nativeSrc":"6862:4:20","nodeType":"YulIdentifier","src":"6862:4:20"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"6942:6:20","nodeType":"YulIdentifier","src":"6942:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"6955:9:20","nodeType":"YulIdentifier","src":"6955:9:20"},{"kind":"number","nativeSrc":"6966:1:20","nodeType":"YulLiteral","src":"6966:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"6951:3:20","nodeType":"YulIdentifier","src":"6951:3:20"},"nativeSrc":"6951:17:20","nodeType":"YulFunctionCall","src":"6951:17:20"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"6898:43:20","nodeType":"YulIdentifier","src":"6898:43:20"},"nativeSrc":"6898:71:20","nodeType":"YulFunctionCall","src":"6898:71:20"},"nativeSrc":"6898:71:20","nodeType":"YulExpressionStatement","src":"6898:71:20"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"6754:222:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6824:9:20","nodeType":"YulTypedName","src":"6824:9:20","type":""},{"name":"value0","nativeSrc":"6836:6:20","nodeType":"YulTypedName","src":"6836:6:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"6847:4:20","nodeType":"YulTypedName","src":"6847:4:20","type":""}],"src":"6754:222:20"},{"body":{"nativeSrc":"7071:28:20","nodeType":"YulBlock","src":"7071:28:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"7088:1:20","nodeType":"YulLiteral","src":"7088:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"7091:1:20","nodeType":"YulLiteral","src":"7091:1:20","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"7081:6:20","nodeType":"YulIdentifier","src":"7081:6:20"},"nativeSrc":"7081:12:20","nodeType":"YulFunctionCall","src":"7081:12:20"},"nativeSrc":"7081:12:20","nodeType":"YulExpressionStatement","src":"7081:12:20"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nativeSrc":"6982:117:20","nodeType":"YulFunctionDefinition","src":"6982:117:20"},{"body":{"nativeSrc":"7171:241:20","nodeType":"YulBlock","src":"7171:241:20","statements":[{"body":{"nativeSrc":"7276:22:20","nodeType":"YulBlock","src":"7276:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"7278:16:20","nodeType":"YulIdentifier","src":"7278:16:20"},"nativeSrc":"7278:18:20","nodeType":"YulFunctionCall","src":"7278:18:20"},"nativeSrc":"7278:18:20","nodeType":"YulExpressionStatement","src":"7278:18:20"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"7248:6:20","nodeType":"YulIdentifier","src":"7248:6:20"},{"kind":"number","nativeSrc":"7256:18:20","nodeType":"YulLiteral","src":"7256:18:20","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"7245:2:20","nodeType":"YulIdentifier","src":"7245:2:20"},"nativeSrc":"7245:30:20","nodeType":"YulFunctionCall","src":"7245:30:20"},"nativeSrc":"7242:56:20","nodeType":"YulIf","src":"7242:56:20"},{"nativeSrc":"7308:37:20","nodeType":"YulAssignment","src":"7308:37:20","value":{"arguments":[{"name":"length","nativeSrc":"7338:6:20","nodeType":"YulIdentifier","src":"7338:6:20"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"7316:21:20","nodeType":"YulIdentifier","src":"7316:21:20"},"nativeSrc":"7316:29:20","nodeType":"YulFunctionCall","src":"7316:29:20"},"variableNames":[{"name":"size","nativeSrc":"7308:4:20","nodeType":"YulIdentifier","src":"7308:4:20"}]},{"nativeSrc":"7382:23:20","nodeType":"YulAssignment","src":"7382:23:20","value":{"arguments":[{"name":"size","nativeSrc":"7394:4:20","nodeType":"YulIdentifier","src":"7394:4:20"},{"kind":"number","nativeSrc":"7400:4:20","nodeType":"YulLiteral","src":"7400:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"7390:3:20","nodeType":"YulIdentifier","src":"7390:3:20"},"nativeSrc":"7390:15:20","nodeType":"YulFunctionCall","src":"7390:15:20"},"variableNames":[{"name":"size","nativeSrc":"7382:4:20","nodeType":"YulIdentifier","src":"7382:4:20"}]}]},"name":"array_allocation_size_t_bytes_memory_ptr","nativeSrc":"7105:307:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nativeSrc":"7155:6:20","nodeType":"YulTypedName","src":"7155:6:20","type":""}],"returnVariables":[{"name":"size","nativeSrc":"7166:4:20","nodeType":"YulTypedName","src":"7166:4:20","type":""}],"src":"7105:307:20"},{"body":{"nativeSrc":"7482:82:20","nodeType":"YulBlock","src":"7482:82:20","statements":[{"expression":{"arguments":[{"name":"dst","nativeSrc":"7505:3:20","nodeType":"YulIdentifier","src":"7505:3:20"},{"name":"src","nativeSrc":"7510:3:20","nodeType":"YulIdentifier","src":"7510:3:20"},{"name":"length","nativeSrc":"7515:6:20","nodeType":"YulIdentifier","src":"7515:6:20"}],"functionName":{"name":"calldatacopy","nativeSrc":"7492:12:20","nodeType":"YulIdentifier","src":"7492:12:20"},"nativeSrc":"7492:30:20","nodeType":"YulFunctionCall","src":"7492:30:20"},"nativeSrc":"7492:30:20","nodeType":"YulExpressionStatement","src":"7492:30:20"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"7542:3:20","nodeType":"YulIdentifier","src":"7542:3:20"},{"name":"length","nativeSrc":"7547:6:20","nodeType":"YulIdentifier","src":"7547:6:20"}],"functionName":{"name":"add","nativeSrc":"7538:3:20","nodeType":"YulIdentifier","src":"7538:3:20"},"nativeSrc":"7538:16:20","nodeType":"YulFunctionCall","src":"7538:16:20"},{"kind":"number","nativeSrc":"7556:1:20","nodeType":"YulLiteral","src":"7556:1:20","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"7531:6:20","nodeType":"YulIdentifier","src":"7531:6:20"},"nativeSrc":"7531:27:20","nodeType":"YulFunctionCall","src":"7531:27:20"},"nativeSrc":"7531:27:20","nodeType":"YulExpressionStatement","src":"7531:27:20"}]},"name":"copy_calldata_to_memory_with_cleanup","nativeSrc":"7418:146:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"7464:3:20","nodeType":"YulTypedName","src":"7464:3:20","type":""},{"name":"dst","nativeSrc":"7469:3:20","nodeType":"YulTypedName","src":"7469:3:20","type":""},{"name":"length","nativeSrc":"7474:6:20","nodeType":"YulTypedName","src":"7474:6:20","type":""}],"src":"7418:146:20"},{"body":{"nativeSrc":"7653:340:20","nodeType":"YulBlock","src":"7653:340:20","statements":[{"nativeSrc":"7663:74:20","nodeType":"YulAssignment","src":"7663:74:20","value":{"arguments":[{"arguments":[{"name":"length","nativeSrc":"7729:6:20","nodeType":"YulIdentifier","src":"7729:6:20"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nativeSrc":"7688:40:20","nodeType":"YulIdentifier","src":"7688:40:20"},"nativeSrc":"7688:48:20","nodeType":"YulFunctionCall","src":"7688:48:20"}],"functionName":{"name":"allocate_memory","nativeSrc":"7672:15:20","nodeType":"YulIdentifier","src":"7672:15:20"},"nativeSrc":"7672:65:20","nodeType":"YulFunctionCall","src":"7672:65:20"},"variableNames":[{"name":"array","nativeSrc":"7663:5:20","nodeType":"YulIdentifier","src":"7663:5:20"}]},{"expression":{"arguments":[{"name":"array","nativeSrc":"7753:5:20","nodeType":"YulIdentifier","src":"7753:5:20"},{"name":"length","nativeSrc":"7760:6:20","nodeType":"YulIdentifier","src":"7760:6:20"}],"functionName":{"name":"mstore","nativeSrc":"7746:6:20","nodeType":"YulIdentifier","src":"7746:6:20"},"nativeSrc":"7746:21:20","nodeType":"YulFunctionCall","src":"7746:21:20"},"nativeSrc":"7746:21:20","nodeType":"YulExpressionStatement","src":"7746:21:20"},{"nativeSrc":"7776:27:20","nodeType":"YulVariableDeclaration","src":"7776:27:20","value":{"arguments":[{"name":"array","nativeSrc":"7791:5:20","nodeType":"YulIdentifier","src":"7791:5:20"},{"kind":"number","nativeSrc":"7798:4:20","nodeType":"YulLiteral","src":"7798:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"7787:3:20","nodeType":"YulIdentifier","src":"7787:3:20"},"nativeSrc":"7787:16:20","nodeType":"YulFunctionCall","src":"7787:16:20"},"variables":[{"name":"dst","nativeSrc":"7780:3:20","nodeType":"YulTypedName","src":"7780:3:20","type":""}]},{"body":{"nativeSrc":"7841:83:20","nodeType":"YulBlock","src":"7841:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nativeSrc":"7843:77:20","nodeType":"YulIdentifier","src":"7843:77:20"},"nativeSrc":"7843:79:20","nodeType":"YulFunctionCall","src":"7843:79:20"},"nativeSrc":"7843:79:20","nodeType":"YulExpressionStatement","src":"7843:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"7822:3:20","nodeType":"YulIdentifier","src":"7822:3:20"},{"name":"length","nativeSrc":"7827:6:20","nodeType":"YulIdentifier","src":"7827:6:20"}],"functionName":{"name":"add","nativeSrc":"7818:3:20","nodeType":"YulIdentifier","src":"7818:3:20"},"nativeSrc":"7818:16:20","nodeType":"YulFunctionCall","src":"7818:16:20"},{"name":"end","nativeSrc":"7836:3:20","nodeType":"YulIdentifier","src":"7836:3:20"}],"functionName":{"name":"gt","nativeSrc":"7815:2:20","nodeType":"YulIdentifier","src":"7815:2:20"},"nativeSrc":"7815:25:20","nodeType":"YulFunctionCall","src":"7815:25:20"},"nativeSrc":"7812:112:20","nodeType":"YulIf","src":"7812:112:20"},{"expression":{"arguments":[{"name":"src","nativeSrc":"7970:3:20","nodeType":"YulIdentifier","src":"7970:3:20"},{"name":"dst","nativeSrc":"7975:3:20","nodeType":"YulIdentifier","src":"7975:3:20"},{"name":"length","nativeSrc":"7980:6:20","nodeType":"YulIdentifier","src":"7980:6:20"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nativeSrc":"7933:36:20","nodeType":"YulIdentifier","src":"7933:36:20"},"nativeSrc":"7933:54:20","nodeType":"YulFunctionCall","src":"7933:54:20"},"nativeSrc":"7933:54:20","nodeType":"YulExpressionStatement","src":"7933:54:20"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr","nativeSrc":"7570:423:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"7626:3:20","nodeType":"YulTypedName","src":"7626:3:20","type":""},{"name":"length","nativeSrc":"7631:6:20","nodeType":"YulTypedName","src":"7631:6:20","type":""},{"name":"end","nativeSrc":"7639:3:20","nodeType":"YulTypedName","src":"7639:3:20","type":""}],"returnVariables":[{"name":"array","nativeSrc":"7647:5:20","nodeType":"YulTypedName","src":"7647:5:20","type":""}],"src":"7570:423:20"},{"body":{"nativeSrc":"8073:277:20","nodeType":"YulBlock","src":"8073:277:20","statements":[{"body":{"nativeSrc":"8122:83:20","nodeType":"YulBlock","src":"8122:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"8124:77:20","nodeType":"YulIdentifier","src":"8124:77:20"},"nativeSrc":"8124:79:20","nodeType":"YulFunctionCall","src":"8124:79:20"},"nativeSrc":"8124:79:20","nodeType":"YulExpressionStatement","src":"8124:79:20"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"8101:6:20","nodeType":"YulIdentifier","src":"8101:6:20"},{"kind":"number","nativeSrc":"8109:4:20","nodeType":"YulLiteral","src":"8109:4:20","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"8097:3:20","nodeType":"YulIdentifier","src":"8097:3:20"},"nativeSrc":"8097:17:20","nodeType":"YulFunctionCall","src":"8097:17:20"},{"name":"end","nativeSrc":"8116:3:20","nodeType":"YulIdentifier","src":"8116:3:20"}],"functionName":{"name":"slt","nativeSrc":"8093:3:20","nodeType":"YulIdentifier","src":"8093:3:20"},"nativeSrc":"8093:27:20","nodeType":"YulFunctionCall","src":"8093:27:20"}],"functionName":{"name":"iszero","nativeSrc":"8086:6:20","nodeType":"YulIdentifier","src":"8086:6:20"},"nativeSrc":"8086:35:20","nodeType":"YulFunctionCall","src":"8086:35:20"},"nativeSrc":"8083:122:20","nodeType":"YulIf","src":"8083:122:20"},{"nativeSrc":"8214:34:20","nodeType":"YulVariableDeclaration","src":"8214:34:20","value":{"arguments":[{"name":"offset","nativeSrc":"8241:6:20","nodeType":"YulIdentifier","src":"8241:6:20"}],"functionName":{"name":"calldataload","nativeSrc":"8228:12:20","nodeType":"YulIdentifier","src":"8228:12:20"},"nativeSrc":"8228:20:20","nodeType":"YulFunctionCall","src":"8228:20:20"},"variables":[{"name":"length","nativeSrc":"8218:6:20","nodeType":"YulTypedName","src":"8218:6:20","type":""}]},{"nativeSrc":"8257:87:20","nodeType":"YulAssignment","src":"8257:87:20","value":{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"8317:6:20","nodeType":"YulIdentifier","src":"8317:6:20"},{"kind":"number","nativeSrc":"8325:4:20","nodeType":"YulLiteral","src":"8325:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"8313:3:20","nodeType":"YulIdentifier","src":"8313:3:20"},"nativeSrc":"8313:17:20","nodeType":"YulFunctionCall","src":"8313:17:20"},{"name":"length","nativeSrc":"8332:6:20","nodeType":"YulIdentifier","src":"8332:6:20"},{"name":"end","nativeSrc":"8340:3:20","nodeType":"YulIdentifier","src":"8340:3:20"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr","nativeSrc":"8266:46:20","nodeType":"YulIdentifier","src":"8266:46:20"},"nativeSrc":"8266:78:20","nodeType":"YulFunctionCall","src":"8266:78:20"},"variableNames":[{"name":"array","nativeSrc":"8257:5:20","nodeType":"YulIdentifier","src":"8257:5:20"}]}]},"name":"abi_decode_t_bytes_memory_ptr","nativeSrc":"8012:338:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"8051:6:20","nodeType":"YulTypedName","src":"8051:6:20","type":""},{"name":"end","nativeSrc":"8059:3:20","nodeType":"YulTypedName","src":"8059:3:20","type":""}],"returnVariables":[{"name":"array","nativeSrc":"8067:5:20","nodeType":"YulTypedName","src":"8067:5:20","type":""}],"src":"8012:338:20"},{"body":{"nativeSrc":"8431:432:20","nodeType":"YulBlock","src":"8431:432:20","statements":[{"body":{"nativeSrc":"8477:83:20","nodeType":"YulBlock","src":"8477:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"8479:77:20","nodeType":"YulIdentifier","src":"8479:77:20"},"nativeSrc":"8479:79:20","nodeType":"YulFunctionCall","src":"8479:79:20"},"nativeSrc":"8479:79:20","nodeType":"YulExpressionStatement","src":"8479:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"8452:7:20","nodeType":"YulIdentifier","src":"8452:7:20"},{"name":"headStart","nativeSrc":"8461:9:20","nodeType":"YulIdentifier","src":"8461:9:20"}],"functionName":{"name":"sub","nativeSrc":"8448:3:20","nodeType":"YulIdentifier","src":"8448:3:20"},"nativeSrc":"8448:23:20","nodeType":"YulFunctionCall","src":"8448:23:20"},{"kind":"number","nativeSrc":"8473:2:20","nodeType":"YulLiteral","src":"8473:2:20","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"8444:3:20","nodeType":"YulIdentifier","src":"8444:3:20"},"nativeSrc":"8444:32:20","nodeType":"YulFunctionCall","src":"8444:32:20"},"nativeSrc":"8441:119:20","nodeType":"YulIf","src":"8441:119:20"},{"nativeSrc":"8570:286:20","nodeType":"YulBlock","src":"8570:286:20","statements":[{"nativeSrc":"8585:45:20","nodeType":"YulVariableDeclaration","src":"8585:45:20","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8616:9:20","nodeType":"YulIdentifier","src":"8616:9:20"},{"kind":"number","nativeSrc":"8627:1:20","nodeType":"YulLiteral","src":"8627:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"8612:3:20","nodeType":"YulIdentifier","src":"8612:3:20"},"nativeSrc":"8612:17:20","nodeType":"YulFunctionCall","src":"8612:17:20"}],"functionName":{"name":"calldataload","nativeSrc":"8599:12:20","nodeType":"YulIdentifier","src":"8599:12:20"},"nativeSrc":"8599:31:20","nodeType":"YulFunctionCall","src":"8599:31:20"},"variables":[{"name":"offset","nativeSrc":"8589:6:20","nodeType":"YulTypedName","src":"8589:6:20","type":""}]},{"body":{"nativeSrc":"8677:83:20","nodeType":"YulBlock","src":"8677:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"8679:77:20","nodeType":"YulIdentifier","src":"8679:77:20"},"nativeSrc":"8679:79:20","nodeType":"YulFunctionCall","src":"8679:79:20"},"nativeSrc":"8679:79:20","nodeType":"YulExpressionStatement","src":"8679:79:20"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"8649:6:20","nodeType":"YulIdentifier","src":"8649:6:20"},{"kind":"number","nativeSrc":"8657:18:20","nodeType":"YulLiteral","src":"8657:18:20","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"8646:2:20","nodeType":"YulIdentifier","src":"8646:2:20"},"nativeSrc":"8646:30:20","nodeType":"YulFunctionCall","src":"8646:30:20"},"nativeSrc":"8643:117:20","nodeType":"YulIf","src":"8643:117:20"},{"nativeSrc":"8774:72:20","nodeType":"YulAssignment","src":"8774:72:20","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8818:9:20","nodeType":"YulIdentifier","src":"8818:9:20"},{"name":"offset","nativeSrc":"8829:6:20","nodeType":"YulIdentifier","src":"8829:6:20"}],"functionName":{"name":"add","nativeSrc":"8814:3:20","nodeType":"YulIdentifier","src":"8814:3:20"},"nativeSrc":"8814:22:20","nodeType":"YulFunctionCall","src":"8814:22:20"},{"name":"dataEnd","nativeSrc":"8838:7:20","nodeType":"YulIdentifier","src":"8838:7:20"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nativeSrc":"8784:29:20","nodeType":"YulIdentifier","src":"8784:29:20"},"nativeSrc":"8784:62:20","nodeType":"YulFunctionCall","src":"8784:62:20"},"variableNames":[{"name":"value0","nativeSrc":"8774:6:20","nodeType":"YulIdentifier","src":"8774:6:20"}]}]}]},"name":"abi_decode_tuple_t_bytes_memory_ptr","nativeSrc":"8356:507:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"8401:9:20","nodeType":"YulTypedName","src":"8401:9:20","type":""},{"name":"dataEnd","nativeSrc":"8412:7:20","nodeType":"YulTypedName","src":"8412:7:20","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"8424:6:20","nodeType":"YulTypedName","src":"8424:6:20","type":""}],"src":"8356:507:20"},{"body":{"nativeSrc":"8911:48:20","nodeType":"YulBlock","src":"8911:48:20","statements":[{"nativeSrc":"8921:32:20","nodeType":"YulAssignment","src":"8921:32:20","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"8946:5:20","nodeType":"YulIdentifier","src":"8946:5:20"}],"functionName":{"name":"iszero","nativeSrc":"8939:6:20","nodeType":"YulIdentifier","src":"8939:6:20"},"nativeSrc":"8939:13:20","nodeType":"YulFunctionCall","src":"8939:13:20"}],"functionName":{"name":"iszero","nativeSrc":"8932:6:20","nodeType":"YulIdentifier","src":"8932:6:20"},"nativeSrc":"8932:21:20","nodeType":"YulFunctionCall","src":"8932:21:20"},"variableNames":[{"name":"cleaned","nativeSrc":"8921:7:20","nodeType":"YulIdentifier","src":"8921:7:20"}]}]},"name":"cleanup_t_bool","nativeSrc":"8869:90:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"8893:5:20","nodeType":"YulTypedName","src":"8893:5:20","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"8903:7:20","nodeType":"YulTypedName","src":"8903:7:20","type":""}],"src":"8869:90:20"},{"body":{"nativeSrc":"9024:50:20","nodeType":"YulBlock","src":"9024:50:20","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"9041:3:20","nodeType":"YulIdentifier","src":"9041:3:20"},{"arguments":[{"name":"value","nativeSrc":"9061:5:20","nodeType":"YulIdentifier","src":"9061:5:20"}],"functionName":{"name":"cleanup_t_bool","nativeSrc":"9046:14:20","nodeType":"YulIdentifier","src":"9046:14:20"},"nativeSrc":"9046:21:20","nodeType":"YulFunctionCall","src":"9046:21:20"}],"functionName":{"name":"mstore","nativeSrc":"9034:6:20","nodeType":"YulIdentifier","src":"9034:6:20"},"nativeSrc":"9034:34:20","nodeType":"YulFunctionCall","src":"9034:34:20"},"nativeSrc":"9034:34:20","nodeType":"YulExpressionStatement","src":"9034:34:20"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"8965:109:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"9012:5:20","nodeType":"YulTypedName","src":"9012:5:20","type":""},{"name":"pos","nativeSrc":"9019:3:20","nodeType":"YulTypedName","src":"9019:3:20","type":""}],"src":"8965:109:20"},{"body":{"nativeSrc":"9138:40:20","nodeType":"YulBlock","src":"9138:40:20","statements":[{"nativeSrc":"9149:22:20","nodeType":"YulAssignment","src":"9149:22:20","value":{"arguments":[{"name":"value","nativeSrc":"9165:5:20","nodeType":"YulIdentifier","src":"9165:5:20"}],"functionName":{"name":"mload","nativeSrc":"9159:5:20","nodeType":"YulIdentifier","src":"9159:5:20"},"nativeSrc":"9159:12:20","nodeType":"YulFunctionCall","src":"9159:12:20"},"variableNames":[{"name":"length","nativeSrc":"9149:6:20","nodeType":"YulIdentifier","src":"9149:6:20"}]}]},"name":"array_length_t_bytes_memory_ptr","nativeSrc":"9080:98:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"9121:5:20","nodeType":"YulTypedName","src":"9121:5:20","type":""}],"returnVariables":[{"name":"length","nativeSrc":"9131:6:20","nodeType":"YulTypedName","src":"9131:6:20","type":""}],"src":"9080:98:20"},{"body":{"nativeSrc":"9279:73:20","nodeType":"YulBlock","src":"9279:73:20","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"9296:3:20","nodeType":"YulIdentifier","src":"9296:3:20"},{"name":"length","nativeSrc":"9301:6:20","nodeType":"YulIdentifier","src":"9301:6:20"}],"functionName":{"name":"mstore","nativeSrc":"9289:6:20","nodeType":"YulIdentifier","src":"9289:6:20"},"nativeSrc":"9289:19:20","nodeType":"YulFunctionCall","src":"9289:19:20"},"nativeSrc":"9289:19:20","nodeType":"YulExpressionStatement","src":"9289:19:20"},{"nativeSrc":"9317:29:20","nodeType":"YulAssignment","src":"9317:29:20","value":{"arguments":[{"name":"pos","nativeSrc":"9336:3:20","nodeType":"YulIdentifier","src":"9336:3:20"},{"kind":"number","nativeSrc":"9341:4:20","nodeType":"YulLiteral","src":"9341:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"9332:3:20","nodeType":"YulIdentifier","src":"9332:3:20"},"nativeSrc":"9332:14:20","nodeType":"YulFunctionCall","src":"9332:14:20"},"variableNames":[{"name":"updated_pos","nativeSrc":"9317:11:20","nodeType":"YulIdentifier","src":"9317:11:20"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nativeSrc":"9184:168:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"9251:3:20","nodeType":"YulTypedName","src":"9251:3:20","type":""},{"name":"length","nativeSrc":"9256:6:20","nodeType":"YulTypedName","src":"9256:6:20","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"9267:11:20","nodeType":"YulTypedName","src":"9267:11:20","type":""}],"src":"9184:168:20"},{"body":{"nativeSrc":"9420:184:20","nodeType":"YulBlock","src":"9420:184:20","statements":[{"nativeSrc":"9430:10:20","nodeType":"YulVariableDeclaration","src":"9430:10:20","value":{"kind":"number","nativeSrc":"9439:1:20","nodeType":"YulLiteral","src":"9439:1:20","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"9434:1:20","nodeType":"YulTypedName","src":"9434:1:20","type":""}]},{"body":{"nativeSrc":"9499:63:20","nodeType":"YulBlock","src":"9499:63:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"9524:3:20","nodeType":"YulIdentifier","src":"9524:3:20"},{"name":"i","nativeSrc":"9529:1:20","nodeType":"YulIdentifier","src":"9529:1:20"}],"functionName":{"name":"add","nativeSrc":"9520:3:20","nodeType":"YulIdentifier","src":"9520:3:20"},"nativeSrc":"9520:11:20","nodeType":"YulFunctionCall","src":"9520:11:20"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"9543:3:20","nodeType":"YulIdentifier","src":"9543:3:20"},{"name":"i","nativeSrc":"9548:1:20","nodeType":"YulIdentifier","src":"9548:1:20"}],"functionName":{"name":"add","nativeSrc":"9539:3:20","nodeType":"YulIdentifier","src":"9539:3:20"},"nativeSrc":"9539:11:20","nodeType":"YulFunctionCall","src":"9539:11:20"}],"functionName":{"name":"mload","nativeSrc":"9533:5:20","nodeType":"YulIdentifier","src":"9533:5:20"},"nativeSrc":"9533:18:20","nodeType":"YulFunctionCall","src":"9533:18:20"}],"functionName":{"name":"mstore","nativeSrc":"9513:6:20","nodeType":"YulIdentifier","src":"9513:6:20"},"nativeSrc":"9513:39:20","nodeType":"YulFunctionCall","src":"9513:39:20"},"nativeSrc":"9513:39:20","nodeType":"YulExpressionStatement","src":"9513:39:20"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"9460:1:20","nodeType":"YulIdentifier","src":"9460:1:20"},{"name":"length","nativeSrc":"9463:6:20","nodeType":"YulIdentifier","src":"9463:6:20"}],"functionName":{"name":"lt","nativeSrc":"9457:2:20","nodeType":"YulIdentifier","src":"9457:2:20"},"nativeSrc":"9457:13:20","nodeType":"YulFunctionCall","src":"9457:13:20"},"nativeSrc":"9449:113:20","nodeType":"YulForLoop","post":{"nativeSrc":"9471:19:20","nodeType":"YulBlock","src":"9471:19:20","statements":[{"nativeSrc":"9473:15:20","nodeType":"YulAssignment","src":"9473:15:20","value":{"arguments":[{"name":"i","nativeSrc":"9482:1:20","nodeType":"YulIdentifier","src":"9482:1:20"},{"kind":"number","nativeSrc":"9485:2:20","nodeType":"YulLiteral","src":"9485:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"9478:3:20","nodeType":"YulIdentifier","src":"9478:3:20"},"nativeSrc":"9478:10:20","nodeType":"YulFunctionCall","src":"9478:10:20"},"variableNames":[{"name":"i","nativeSrc":"9473:1:20","nodeType":"YulIdentifier","src":"9473:1:20"}]}]},"pre":{"nativeSrc":"9453:3:20","nodeType":"YulBlock","src":"9453:3:20","statements":[]},"src":"9449:113:20"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"9582:3:20","nodeType":"YulIdentifier","src":"9582:3:20"},{"name":"length","nativeSrc":"9587:6:20","nodeType":"YulIdentifier","src":"9587:6:20"}],"functionName":{"name":"add","nativeSrc":"9578:3:20","nodeType":"YulIdentifier","src":"9578:3:20"},"nativeSrc":"9578:16:20","nodeType":"YulFunctionCall","src":"9578:16:20"},{"kind":"number","nativeSrc":"9596:1:20","nodeType":"YulLiteral","src":"9596:1:20","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"9571:6:20","nodeType":"YulIdentifier","src":"9571:6:20"},"nativeSrc":"9571:27:20","nodeType":"YulFunctionCall","src":"9571:27:20"},"nativeSrc":"9571:27:20","nodeType":"YulExpressionStatement","src":"9571:27:20"}]},"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"9358:246:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"9402:3:20","nodeType":"YulTypedName","src":"9402:3:20","type":""},{"name":"dst","nativeSrc":"9407:3:20","nodeType":"YulTypedName","src":"9407:3:20","type":""},{"name":"length","nativeSrc":"9412:6:20","nodeType":"YulTypedName","src":"9412:6:20","type":""}],"src":"9358:246:20"},{"body":{"nativeSrc":"9700:283:20","nodeType":"YulBlock","src":"9700:283:20","statements":[{"nativeSrc":"9710:52:20","nodeType":"YulVariableDeclaration","src":"9710:52:20","value":{"arguments":[{"name":"value","nativeSrc":"9756:5:20","nodeType":"YulIdentifier","src":"9756:5:20"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nativeSrc":"9724:31:20","nodeType":"YulIdentifier","src":"9724:31:20"},"nativeSrc":"9724:38:20","nodeType":"YulFunctionCall","src":"9724:38:20"},"variables":[{"name":"length","nativeSrc":"9714:6:20","nodeType":"YulTypedName","src":"9714:6:20","type":""}]},{"nativeSrc":"9771:77:20","nodeType":"YulAssignment","src":"9771:77:20","value":{"arguments":[{"name":"pos","nativeSrc":"9836:3:20","nodeType":"YulIdentifier","src":"9836:3:20"},{"name":"length","nativeSrc":"9841:6:20","nodeType":"YulIdentifier","src":"9841:6:20"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nativeSrc":"9778:57:20","nodeType":"YulIdentifier","src":"9778:57:20"},"nativeSrc":"9778:70:20","nodeType":"YulFunctionCall","src":"9778:70:20"},"variableNames":[{"name":"pos","nativeSrc":"9771:3:20","nodeType":"YulIdentifier","src":"9771:3:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"9896:5:20","nodeType":"YulIdentifier","src":"9896:5:20"},{"kind":"number","nativeSrc":"9903:4:20","nodeType":"YulLiteral","src":"9903:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"9892:3:20","nodeType":"YulIdentifier","src":"9892:3:20"},"nativeSrc":"9892:16:20","nodeType":"YulFunctionCall","src":"9892:16:20"},{"name":"pos","nativeSrc":"9910:3:20","nodeType":"YulIdentifier","src":"9910:3:20"},{"name":"length","nativeSrc":"9915:6:20","nodeType":"YulIdentifier","src":"9915:6:20"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"9857:34:20","nodeType":"YulIdentifier","src":"9857:34:20"},"nativeSrc":"9857:65:20","nodeType":"YulFunctionCall","src":"9857:65:20"},"nativeSrc":"9857:65:20","nodeType":"YulExpressionStatement","src":"9857:65:20"},{"nativeSrc":"9931:46:20","nodeType":"YulAssignment","src":"9931:46:20","value":{"arguments":[{"name":"pos","nativeSrc":"9942:3:20","nodeType":"YulIdentifier","src":"9942:3:20"},{"arguments":[{"name":"length","nativeSrc":"9969:6:20","nodeType":"YulIdentifier","src":"9969:6:20"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"9947:21:20","nodeType":"YulIdentifier","src":"9947:21:20"},"nativeSrc":"9947:29:20","nodeType":"YulFunctionCall","src":"9947:29:20"}],"functionName":{"name":"add","nativeSrc":"9938:3:20","nodeType":"YulIdentifier","src":"9938:3:20"},"nativeSrc":"9938:39:20","nodeType":"YulFunctionCall","src":"9938:39:20"},"variableNames":[{"name":"end","nativeSrc":"9931:3:20","nodeType":"YulIdentifier","src":"9931:3:20"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nativeSrc":"9610:373:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"9681:5:20","nodeType":"YulTypedName","src":"9681:5:20","type":""},{"name":"pos","nativeSrc":"9688:3:20","nodeType":"YulTypedName","src":"9688:3:20","type":""}],"returnVariables":[{"name":"end","nativeSrc":"9696:3:20","nodeType":"YulTypedName","src":"9696:3:20","type":""}],"src":"9610:373:20"},{"body":{"nativeSrc":"10127:269:20","nodeType":"YulBlock","src":"10127:269:20","statements":[{"nativeSrc":"10137:26:20","nodeType":"YulAssignment","src":"10137:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"10149:9:20","nodeType":"YulIdentifier","src":"10149:9:20"},{"kind":"number","nativeSrc":"10160:2:20","nodeType":"YulLiteral","src":"10160:2:20","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"10145:3:20","nodeType":"YulIdentifier","src":"10145:3:20"},"nativeSrc":"10145:18:20","nodeType":"YulFunctionCall","src":"10145:18:20"},"variableNames":[{"name":"tail","nativeSrc":"10137:4:20","nodeType":"YulIdentifier","src":"10137:4:20"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"10211:6:20","nodeType":"YulIdentifier","src":"10211:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"10224:9:20","nodeType":"YulIdentifier","src":"10224:9:20"},{"kind":"number","nativeSrc":"10235:1:20","nodeType":"YulLiteral","src":"10235:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"10220:3:20","nodeType":"YulIdentifier","src":"10220:3:20"},"nativeSrc":"10220:17:20","nodeType":"YulFunctionCall","src":"10220:17:20"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"10173:37:20","nodeType":"YulIdentifier","src":"10173:37:20"},"nativeSrc":"10173:65:20","nodeType":"YulFunctionCall","src":"10173:65:20"},"nativeSrc":"10173:65:20","nodeType":"YulExpressionStatement","src":"10173:65:20"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10259:9:20","nodeType":"YulIdentifier","src":"10259:9:20"},{"kind":"number","nativeSrc":"10270:2:20","nodeType":"YulLiteral","src":"10270:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"10255:3:20","nodeType":"YulIdentifier","src":"10255:3:20"},"nativeSrc":"10255:18:20","nodeType":"YulFunctionCall","src":"10255:18:20"},{"arguments":[{"name":"tail","nativeSrc":"10279:4:20","nodeType":"YulIdentifier","src":"10279:4:20"},{"name":"headStart","nativeSrc":"10285:9:20","nodeType":"YulIdentifier","src":"10285:9:20"}],"functionName":{"name":"sub","nativeSrc":"10275:3:20","nodeType":"YulIdentifier","src":"10275:3:20"},"nativeSrc":"10275:20:20","nodeType":"YulFunctionCall","src":"10275:20:20"}],"functionName":{"name":"mstore","nativeSrc":"10248:6:20","nodeType":"YulIdentifier","src":"10248:6:20"},"nativeSrc":"10248:48:20","nodeType":"YulFunctionCall","src":"10248:48:20"},"nativeSrc":"10248:48:20","nodeType":"YulExpressionStatement","src":"10248:48:20"},{"nativeSrc":"10305:84:20","nodeType":"YulAssignment","src":"10305:84:20","value":{"arguments":[{"name":"value1","nativeSrc":"10375:6:20","nodeType":"YulIdentifier","src":"10375:6:20"},{"name":"tail","nativeSrc":"10384:4:20","nodeType":"YulIdentifier","src":"10384:4:20"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nativeSrc":"10313:61:20","nodeType":"YulIdentifier","src":"10313:61:20"},"nativeSrc":"10313:76:20","nodeType":"YulFunctionCall","src":"10313:76:20"},"variableNames":[{"name":"tail","nativeSrc":"10305:4:20","nodeType":"YulIdentifier","src":"10305:4:20"}]}]},"name":"abi_encode_tuple_t_bool_t_bytes_memory_ptr__to_t_bool_t_bytes_memory_ptr__fromStack_reversed","nativeSrc":"9989:407:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"10091:9:20","nodeType":"YulTypedName","src":"10091:9:20","type":""},{"name":"value1","nativeSrc":"10103:6:20","nodeType":"YulTypedName","src":"10103:6:20","type":""},{"name":"value0","nativeSrc":"10111:6:20","nodeType":"YulTypedName","src":"10111:6:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"10122:4:20","nodeType":"YulTypedName","src":"10122:4:20","type":""}],"src":"9989:407:20"},{"body":{"nativeSrc":"10468:263:20","nodeType":"YulBlock","src":"10468:263:20","statements":[{"body":{"nativeSrc":"10514:83:20","nodeType":"YulBlock","src":"10514:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"10516:77:20","nodeType":"YulIdentifier","src":"10516:77:20"},"nativeSrc":"10516:79:20","nodeType":"YulFunctionCall","src":"10516:79:20"},"nativeSrc":"10516:79:20","nodeType":"YulExpressionStatement","src":"10516:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"10489:7:20","nodeType":"YulIdentifier","src":"10489:7:20"},{"name":"headStart","nativeSrc":"10498:9:20","nodeType":"YulIdentifier","src":"10498:9:20"}],"functionName":{"name":"sub","nativeSrc":"10485:3:20","nodeType":"YulIdentifier","src":"10485:3:20"},"nativeSrc":"10485:23:20","nodeType":"YulFunctionCall","src":"10485:23:20"},{"kind":"number","nativeSrc":"10510:2:20","nodeType":"YulLiteral","src":"10510:2:20","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"10481:3:20","nodeType":"YulIdentifier","src":"10481:3:20"},"nativeSrc":"10481:32:20","nodeType":"YulFunctionCall","src":"10481:32:20"},"nativeSrc":"10478:119:20","nodeType":"YulIf","src":"10478:119:20"},{"nativeSrc":"10607:117:20","nodeType":"YulBlock","src":"10607:117:20","statements":[{"nativeSrc":"10622:15:20","nodeType":"YulVariableDeclaration","src":"10622:15:20","value":{"kind":"number","nativeSrc":"10636:1:20","nodeType":"YulLiteral","src":"10636:1:20","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"10626:6:20","nodeType":"YulTypedName","src":"10626:6:20","type":""}]},{"nativeSrc":"10651:63:20","nodeType":"YulAssignment","src":"10651:63:20","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10686:9:20","nodeType":"YulIdentifier","src":"10686:9:20"},{"name":"offset","nativeSrc":"10697:6:20","nodeType":"YulIdentifier","src":"10697:6:20"}],"functionName":{"name":"add","nativeSrc":"10682:3:20","nodeType":"YulIdentifier","src":"10682:3:20"},"nativeSrc":"10682:22:20","nodeType":"YulFunctionCall","src":"10682:22:20"},{"name":"dataEnd","nativeSrc":"10706:7:20","nodeType":"YulIdentifier","src":"10706:7:20"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"10661:20:20","nodeType":"YulIdentifier","src":"10661:20:20"},"nativeSrc":"10661:53:20","nodeType":"YulFunctionCall","src":"10661:53:20"},"variableNames":[{"name":"value0","nativeSrc":"10651:6:20","nodeType":"YulIdentifier","src":"10651:6:20"}]}]}]},"name":"abi_decode_tuple_t_uint256","nativeSrc":"10402:329:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"10438:9:20","nodeType":"YulTypedName","src":"10438:9:20","type":""},{"name":"dataEnd","nativeSrc":"10449:7:20","nodeType":"YulTypedName","src":"10449:7:20","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"10461:6:20","nodeType":"YulTypedName","src":"10461:6:20","type":""}],"src":"10402:329:20"},{"body":{"nativeSrc":"10863:206:20","nodeType":"YulBlock","src":"10863:206:20","statements":[{"nativeSrc":"10873:26:20","nodeType":"YulAssignment","src":"10873:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"10885:9:20","nodeType":"YulIdentifier","src":"10885:9:20"},{"kind":"number","nativeSrc":"10896:2:20","nodeType":"YulLiteral","src":"10896:2:20","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"10881:3:20","nodeType":"YulIdentifier","src":"10881:3:20"},"nativeSrc":"10881:18:20","nodeType":"YulFunctionCall","src":"10881:18:20"},"variableNames":[{"name":"tail","nativeSrc":"10873:4:20","nodeType":"YulIdentifier","src":"10873:4:20"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"10953:6:20","nodeType":"YulIdentifier","src":"10953:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"10966:9:20","nodeType":"YulIdentifier","src":"10966:9:20"},{"kind":"number","nativeSrc":"10977:1:20","nodeType":"YulLiteral","src":"10977:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"10962:3:20","nodeType":"YulIdentifier","src":"10962:3:20"},"nativeSrc":"10962:17:20","nodeType":"YulFunctionCall","src":"10962:17:20"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"10909:43:20","nodeType":"YulIdentifier","src":"10909:43:20"},"nativeSrc":"10909:71:20","nodeType":"YulFunctionCall","src":"10909:71:20"},"nativeSrc":"10909:71:20","nodeType":"YulExpressionStatement","src":"10909:71:20"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"11034:6:20","nodeType":"YulIdentifier","src":"11034:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"11047:9:20","nodeType":"YulIdentifier","src":"11047:9:20"},{"kind":"number","nativeSrc":"11058:2:20","nodeType":"YulLiteral","src":"11058:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"11043:3:20","nodeType":"YulIdentifier","src":"11043:3:20"},"nativeSrc":"11043:18:20","nodeType":"YulFunctionCall","src":"11043:18:20"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"10990:43:20","nodeType":"YulIdentifier","src":"10990:43:20"},"nativeSrc":"10990:72:20","nodeType":"YulFunctionCall","src":"10990:72:20"},"nativeSrc":"10990:72:20","nodeType":"YulExpressionStatement","src":"10990:72:20"}]},"name":"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed","nativeSrc":"10737:332:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"10827:9:20","nodeType":"YulTypedName","src":"10827:9:20","type":""},{"name":"value1","nativeSrc":"10839:6:20","nodeType":"YulTypedName","src":"10839:6:20","type":""},{"name":"value0","nativeSrc":"10847:6:20","nodeType":"YulTypedName","src":"10847:6:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"10858:4:20","nodeType":"YulTypedName","src":"10858:4:20","type":""}],"src":"10737:332:20"},{"body":{"nativeSrc":"11171:73:20","nodeType":"YulBlock","src":"11171:73:20","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"11188:3:20","nodeType":"YulIdentifier","src":"11188:3:20"},{"name":"length","nativeSrc":"11193:6:20","nodeType":"YulIdentifier","src":"11193:6:20"}],"functionName":{"name":"mstore","nativeSrc":"11181:6:20","nodeType":"YulIdentifier","src":"11181:6:20"},"nativeSrc":"11181:19:20","nodeType":"YulFunctionCall","src":"11181:19:20"},"nativeSrc":"11181:19:20","nodeType":"YulExpressionStatement","src":"11181:19:20"},{"nativeSrc":"11209:29:20","nodeType":"YulAssignment","src":"11209:29:20","value":{"arguments":[{"name":"pos","nativeSrc":"11228:3:20","nodeType":"YulIdentifier","src":"11228:3:20"},{"kind":"number","nativeSrc":"11233:4:20","nodeType":"YulLiteral","src":"11233:4:20","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"11224:3:20","nodeType":"YulIdentifier","src":"11224:3:20"},"nativeSrc":"11224:14:20","nodeType":"YulFunctionCall","src":"11224:14:20"},"variableNames":[{"name":"updated_pos","nativeSrc":"11209:11:20","nodeType":"YulIdentifier","src":"11209:11:20"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"11075:169:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"11143:3:20","nodeType":"YulTypedName","src":"11143:3:20","type":""},{"name":"length","nativeSrc":"11148:6:20","nodeType":"YulTypedName","src":"11148:6:20","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"11159:11:20","nodeType":"YulTypedName","src":"11159:11:20","type":""}],"src":"11075:169:20"},{"body":{"nativeSrc":"11356:59:20","nodeType":"YulBlock","src":"11356:59:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"11378:6:20","nodeType":"YulIdentifier","src":"11378:6:20"},{"kind":"number","nativeSrc":"11386:1:20","nodeType":"YulLiteral","src":"11386:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"11374:3:20","nodeType":"YulIdentifier","src":"11374:3:20"},"nativeSrc":"11374:14:20","nodeType":"YulFunctionCall","src":"11374:14:20"},{"hexValue":"4e6f7420656e6f7567682045544821","kind":"string","nativeSrc":"11390:17:20","nodeType":"YulLiteral","src":"11390:17:20","type":"","value":"Not enough ETH!"}],"functionName":{"name":"mstore","nativeSrc":"11367:6:20","nodeType":"YulIdentifier","src":"11367:6:20"},"nativeSrc":"11367:41:20","nodeType":"YulFunctionCall","src":"11367:41:20"},"nativeSrc":"11367:41:20","nodeType":"YulExpressionStatement","src":"11367:41:20"}]},"name":"store_literal_in_memory_15a10bfc30965e42ff8acbb34211e82f5d4dfa40cc212e627d7e731a1df1e3de","nativeSrc":"11250:165:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"11348:6:20","nodeType":"YulTypedName","src":"11348:6:20","type":""}],"src":"11250:165:20"},{"body":{"nativeSrc":"11567:220:20","nodeType":"YulBlock","src":"11567:220:20","statements":[{"nativeSrc":"11577:74:20","nodeType":"YulAssignment","src":"11577:74:20","value":{"arguments":[{"name":"pos","nativeSrc":"11643:3:20","nodeType":"YulIdentifier","src":"11643:3:20"},{"kind":"number","nativeSrc":"11648:2:20","nodeType":"YulLiteral","src":"11648:2:20","type":"","value":"15"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"11584:58:20","nodeType":"YulIdentifier","src":"11584:58:20"},"nativeSrc":"11584:67:20","nodeType":"YulFunctionCall","src":"11584:67:20"},"variableNames":[{"name":"pos","nativeSrc":"11577:3:20","nodeType":"YulIdentifier","src":"11577:3:20"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"11749:3:20","nodeType":"YulIdentifier","src":"11749:3:20"}],"functionName":{"name":"store_literal_in_memory_15a10bfc30965e42ff8acbb34211e82f5d4dfa40cc212e627d7e731a1df1e3de","nativeSrc":"11660:88:20","nodeType":"YulIdentifier","src":"11660:88:20"},"nativeSrc":"11660:93:20","nodeType":"YulFunctionCall","src":"11660:93:20"},"nativeSrc":"11660:93:20","nodeType":"YulExpressionStatement","src":"11660:93:20"},{"nativeSrc":"11762:19:20","nodeType":"YulAssignment","src":"11762:19:20","value":{"arguments":[{"name":"pos","nativeSrc":"11773:3:20","nodeType":"YulIdentifier","src":"11773:3:20"},{"kind":"number","nativeSrc":"11778:2:20","nodeType":"YulLiteral","src":"11778:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"11769:3:20","nodeType":"YulIdentifier","src":"11769:3:20"},"nativeSrc":"11769:12:20","nodeType":"YulFunctionCall","src":"11769:12:20"},"variableNames":[{"name":"end","nativeSrc":"11762:3:20","nodeType":"YulIdentifier","src":"11762:3:20"}]}]},"name":"abi_encode_t_stringliteral_15a10bfc30965e42ff8acbb34211e82f5d4dfa40cc212e627d7e731a1df1e3de_to_t_string_memory_ptr_fromStack","nativeSrc":"11421:366:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"11555:3:20","nodeType":"YulTypedName","src":"11555:3:20","type":""}],"returnVariables":[{"name":"end","nativeSrc":"11563:3:20","nodeType":"YulTypedName","src":"11563:3:20","type":""}],"src":"11421:366:20"},{"body":{"nativeSrc":"11964:248:20","nodeType":"YulBlock","src":"11964:248:20","statements":[{"nativeSrc":"11974:26:20","nodeType":"YulAssignment","src":"11974:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"11986:9:20","nodeType":"YulIdentifier","src":"11986:9:20"},{"kind":"number","nativeSrc":"11997:2:20","nodeType":"YulLiteral","src":"11997:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"11982:3:20","nodeType":"YulIdentifier","src":"11982:3:20"},"nativeSrc":"11982:18:20","nodeType":"YulFunctionCall","src":"11982:18:20"},"variableNames":[{"name":"tail","nativeSrc":"11974:4:20","nodeType":"YulIdentifier","src":"11974:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12021:9:20","nodeType":"YulIdentifier","src":"12021:9:20"},{"kind":"number","nativeSrc":"12032:1:20","nodeType":"YulLiteral","src":"12032:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"12017:3:20","nodeType":"YulIdentifier","src":"12017:3:20"},"nativeSrc":"12017:17:20","nodeType":"YulFunctionCall","src":"12017:17:20"},{"arguments":[{"name":"tail","nativeSrc":"12040:4:20","nodeType":"YulIdentifier","src":"12040:4:20"},{"name":"headStart","nativeSrc":"12046:9:20","nodeType":"YulIdentifier","src":"12046:9:20"}],"functionName":{"name":"sub","nativeSrc":"12036:3:20","nodeType":"YulIdentifier","src":"12036:3:20"},"nativeSrc":"12036:20:20","nodeType":"YulFunctionCall","src":"12036:20:20"}],"functionName":{"name":"mstore","nativeSrc":"12010:6:20","nodeType":"YulIdentifier","src":"12010:6:20"},"nativeSrc":"12010:47:20","nodeType":"YulFunctionCall","src":"12010:47:20"},"nativeSrc":"12010:47:20","nodeType":"YulExpressionStatement","src":"12010:47:20"},{"nativeSrc":"12066:139:20","nodeType":"YulAssignment","src":"12066:139:20","value":{"arguments":[{"name":"tail","nativeSrc":"12200:4:20","nodeType":"YulIdentifier","src":"12200:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_15a10bfc30965e42ff8acbb34211e82f5d4dfa40cc212e627d7e731a1df1e3de_to_t_string_memory_ptr_fromStack","nativeSrc":"12074:124:20","nodeType":"YulIdentifier","src":"12074:124:20"},"nativeSrc":"12074:131:20","nodeType":"YulFunctionCall","src":"12074:131:20"},"variableNames":[{"name":"tail","nativeSrc":"12066:4:20","nodeType":"YulIdentifier","src":"12066:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_15a10bfc30965e42ff8acbb34211e82f5d4dfa40cc212e627d7e731a1df1e3de__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"11793:419:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"11944:9:20","nodeType":"YulTypedName","src":"11944:9:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"11959:4:20","nodeType":"YulTypedName","src":"11959:4:20","type":""}],"src":"11793:419:20"},{"body":{"nativeSrc":"12324:52:20","nodeType":"YulBlock","src":"12324:52:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"12346:6:20","nodeType":"YulIdentifier","src":"12346:6:20"},{"kind":"number","nativeSrc":"12354:1:20","nodeType":"YulLiteral","src":"12354:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"12342:3:20","nodeType":"YulIdentifier","src":"12342:3:20"},"nativeSrc":"12342:14:20","nodeType":"YulFunctionCall","src":"12342:14:20"},{"hexValue":"4e6f74206f70656e","kind":"string","nativeSrc":"12358:10:20","nodeType":"YulLiteral","src":"12358:10:20","type":"","value":"Not open"}],"functionName":{"name":"mstore","nativeSrc":"12335:6:20","nodeType":"YulIdentifier","src":"12335:6:20"},"nativeSrc":"12335:34:20","nodeType":"YulFunctionCall","src":"12335:34:20"},"nativeSrc":"12335:34:20","nodeType":"YulExpressionStatement","src":"12335:34:20"}]},"name":"store_literal_in_memory_0af1a4442a600edd3bde606629dbe1d858edd05765327f25ead92d55536f2d3b","nativeSrc":"12218:158:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"12316:6:20","nodeType":"YulTypedName","src":"12316:6:20","type":""}],"src":"12218:158:20"},{"body":{"nativeSrc":"12528:219:20","nodeType":"YulBlock","src":"12528:219:20","statements":[{"nativeSrc":"12538:73:20","nodeType":"YulAssignment","src":"12538:73:20","value":{"arguments":[{"name":"pos","nativeSrc":"12604:3:20","nodeType":"YulIdentifier","src":"12604:3:20"},{"kind":"number","nativeSrc":"12609:1:20","nodeType":"YulLiteral","src":"12609:1:20","type":"","value":"8"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"12545:58:20","nodeType":"YulIdentifier","src":"12545:58:20"},"nativeSrc":"12545:66:20","nodeType":"YulFunctionCall","src":"12545:66:20"},"variableNames":[{"name":"pos","nativeSrc":"12538:3:20","nodeType":"YulIdentifier","src":"12538:3:20"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"12709:3:20","nodeType":"YulIdentifier","src":"12709:3:20"}],"functionName":{"name":"store_literal_in_memory_0af1a4442a600edd3bde606629dbe1d858edd05765327f25ead92d55536f2d3b","nativeSrc":"12620:88:20","nodeType":"YulIdentifier","src":"12620:88:20"},"nativeSrc":"12620:93:20","nodeType":"YulFunctionCall","src":"12620:93:20"},"nativeSrc":"12620:93:20","nodeType":"YulExpressionStatement","src":"12620:93:20"},{"nativeSrc":"12722:19:20","nodeType":"YulAssignment","src":"12722:19:20","value":{"arguments":[{"name":"pos","nativeSrc":"12733:3:20","nodeType":"YulIdentifier","src":"12733:3:20"},{"kind":"number","nativeSrc":"12738:2:20","nodeType":"YulLiteral","src":"12738:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"12729:3:20","nodeType":"YulIdentifier","src":"12729:3:20"},"nativeSrc":"12729:12:20","nodeType":"YulFunctionCall","src":"12729:12:20"},"variableNames":[{"name":"end","nativeSrc":"12722:3:20","nodeType":"YulIdentifier","src":"12722:3:20"}]}]},"name":"abi_encode_t_stringliteral_0af1a4442a600edd3bde606629dbe1d858edd05765327f25ead92d55536f2d3b_to_t_string_memory_ptr_fromStack","nativeSrc":"12382:365:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"12516:3:20","nodeType":"YulTypedName","src":"12516:3:20","type":""}],"returnVariables":[{"name":"end","nativeSrc":"12524:3:20","nodeType":"YulTypedName","src":"12524:3:20","type":""}],"src":"12382:365:20"},{"body":{"nativeSrc":"12924:248:20","nodeType":"YulBlock","src":"12924:248:20","statements":[{"nativeSrc":"12934:26:20","nodeType":"YulAssignment","src":"12934:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"12946:9:20","nodeType":"YulIdentifier","src":"12946:9:20"},{"kind":"number","nativeSrc":"12957:2:20","nodeType":"YulLiteral","src":"12957:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"12942:3:20","nodeType":"YulIdentifier","src":"12942:3:20"},"nativeSrc":"12942:18:20","nodeType":"YulFunctionCall","src":"12942:18:20"},"variableNames":[{"name":"tail","nativeSrc":"12934:4:20","nodeType":"YulIdentifier","src":"12934:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"12981:9:20","nodeType":"YulIdentifier","src":"12981:9:20"},{"kind":"number","nativeSrc":"12992:1:20","nodeType":"YulLiteral","src":"12992:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"12977:3:20","nodeType":"YulIdentifier","src":"12977:3:20"},"nativeSrc":"12977:17:20","nodeType":"YulFunctionCall","src":"12977:17:20"},{"arguments":[{"name":"tail","nativeSrc":"13000:4:20","nodeType":"YulIdentifier","src":"13000:4:20"},{"name":"headStart","nativeSrc":"13006:9:20","nodeType":"YulIdentifier","src":"13006:9:20"}],"functionName":{"name":"sub","nativeSrc":"12996:3:20","nodeType":"YulIdentifier","src":"12996:3:20"},"nativeSrc":"12996:20:20","nodeType":"YulFunctionCall","src":"12996:20:20"}],"functionName":{"name":"mstore","nativeSrc":"12970:6:20","nodeType":"YulIdentifier","src":"12970:6:20"},"nativeSrc":"12970:47:20","nodeType":"YulFunctionCall","src":"12970:47:20"},"nativeSrc":"12970:47:20","nodeType":"YulExpressionStatement","src":"12970:47:20"},{"nativeSrc":"13026:139:20","nodeType":"YulAssignment","src":"13026:139:20","value":{"arguments":[{"name":"tail","nativeSrc":"13160:4:20","nodeType":"YulIdentifier","src":"13160:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_0af1a4442a600edd3bde606629dbe1d858edd05765327f25ead92d55536f2d3b_to_t_string_memory_ptr_fromStack","nativeSrc":"13034:124:20","nodeType":"YulIdentifier","src":"13034:124:20"},"nativeSrc":"13034:131:20","nodeType":"YulFunctionCall","src":"13034:131:20"},"variableNames":[{"name":"tail","nativeSrc":"13026:4:20","nodeType":"YulIdentifier","src":"13026:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_0af1a4442a600edd3bde606629dbe1d858edd05765327f25ead92d55536f2d3b__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"12753:419:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"12904:9:20","nodeType":"YulTypedName","src":"12904:9:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"12919:4:20","nodeType":"YulTypedName","src":"12919:4:20","type":""}],"src":"12753:419:20"},{"body":{"nativeSrc":"13284:61:20","nodeType":"YulBlock","src":"13284:61:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"13306:6:20","nodeType":"YulIdentifier","src":"13306:6:20"},{"kind":"number","nativeSrc":"13314:1:20","nodeType":"YulLiteral","src":"13314:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"13302:3:20","nodeType":"YulIdentifier","src":"13302:3:20"},"nativeSrc":"13302:14:20","nodeType":"YulFunctionCall","src":"13302:14:20"},{"hexValue":"55706b656570206e6f74206e6565646564","kind":"string","nativeSrc":"13318:19:20","nodeType":"YulLiteral","src":"13318:19:20","type":"","value":"Upkeep not needed"}],"functionName":{"name":"mstore","nativeSrc":"13295:6:20","nodeType":"YulIdentifier","src":"13295:6:20"},"nativeSrc":"13295:43:20","nodeType":"YulFunctionCall","src":"13295:43:20"},"nativeSrc":"13295:43:20","nodeType":"YulExpressionStatement","src":"13295:43:20"}]},"name":"store_literal_in_memory_047e53bda3b1755bdcd010ea559fd4ce3f4332c889ecbf649f4153f3160f1630","nativeSrc":"13178:167:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"13276:6:20","nodeType":"YulTypedName","src":"13276:6:20","type":""}],"src":"13178:167:20"},{"body":{"nativeSrc":"13497:220:20","nodeType":"YulBlock","src":"13497:220:20","statements":[{"nativeSrc":"13507:74:20","nodeType":"YulAssignment","src":"13507:74:20","value":{"arguments":[{"name":"pos","nativeSrc":"13573:3:20","nodeType":"YulIdentifier","src":"13573:3:20"},{"kind":"number","nativeSrc":"13578:2:20","nodeType":"YulLiteral","src":"13578:2:20","type":"","value":"17"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"13514:58:20","nodeType":"YulIdentifier","src":"13514:58:20"},"nativeSrc":"13514:67:20","nodeType":"YulFunctionCall","src":"13514:67:20"},"variableNames":[{"name":"pos","nativeSrc":"13507:3:20","nodeType":"YulIdentifier","src":"13507:3:20"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"13679:3:20","nodeType":"YulIdentifier","src":"13679:3:20"}],"functionName":{"name":"store_literal_in_memory_047e53bda3b1755bdcd010ea559fd4ce3f4332c889ecbf649f4153f3160f1630","nativeSrc":"13590:88:20","nodeType":"YulIdentifier","src":"13590:88:20"},"nativeSrc":"13590:93:20","nodeType":"YulFunctionCall","src":"13590:93:20"},"nativeSrc":"13590:93:20","nodeType":"YulExpressionStatement","src":"13590:93:20"},{"nativeSrc":"13692:19:20","nodeType":"YulAssignment","src":"13692:19:20","value":{"arguments":[{"name":"pos","nativeSrc":"13703:3:20","nodeType":"YulIdentifier","src":"13703:3:20"},{"kind":"number","nativeSrc":"13708:2:20","nodeType":"YulLiteral","src":"13708:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"13699:3:20","nodeType":"YulIdentifier","src":"13699:3:20"},"nativeSrc":"13699:12:20","nodeType":"YulFunctionCall","src":"13699:12:20"},"variableNames":[{"name":"end","nativeSrc":"13692:3:20","nodeType":"YulIdentifier","src":"13692:3:20"}]}]},"name":"abi_encode_t_stringliteral_047e53bda3b1755bdcd010ea559fd4ce3f4332c889ecbf649f4153f3160f1630_to_t_string_memory_ptr_fromStack","nativeSrc":"13351:366:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"13485:3:20","nodeType":"YulTypedName","src":"13485:3:20","type":""}],"returnVariables":[{"name":"end","nativeSrc":"13493:3:20","nodeType":"YulTypedName","src":"13493:3:20","type":""}],"src":"13351:366:20"},{"body":{"nativeSrc":"13894:248:20","nodeType":"YulBlock","src":"13894:248:20","statements":[{"nativeSrc":"13904:26:20","nodeType":"YulAssignment","src":"13904:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"13916:9:20","nodeType":"YulIdentifier","src":"13916:9:20"},{"kind":"number","nativeSrc":"13927:2:20","nodeType":"YulLiteral","src":"13927:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"13912:3:20","nodeType":"YulIdentifier","src":"13912:3:20"},"nativeSrc":"13912:18:20","nodeType":"YulFunctionCall","src":"13912:18:20"},"variableNames":[{"name":"tail","nativeSrc":"13904:4:20","nodeType":"YulIdentifier","src":"13904:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"13951:9:20","nodeType":"YulIdentifier","src":"13951:9:20"},{"kind":"number","nativeSrc":"13962:1:20","nodeType":"YulLiteral","src":"13962:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"13947:3:20","nodeType":"YulIdentifier","src":"13947:3:20"},"nativeSrc":"13947:17:20","nodeType":"YulFunctionCall","src":"13947:17:20"},{"arguments":[{"name":"tail","nativeSrc":"13970:4:20","nodeType":"YulIdentifier","src":"13970:4:20"},{"name":"headStart","nativeSrc":"13976:9:20","nodeType":"YulIdentifier","src":"13976:9:20"}],"functionName":{"name":"sub","nativeSrc":"13966:3:20","nodeType":"YulIdentifier","src":"13966:3:20"},"nativeSrc":"13966:20:20","nodeType":"YulFunctionCall","src":"13966:20:20"}],"functionName":{"name":"mstore","nativeSrc":"13940:6:20","nodeType":"YulIdentifier","src":"13940:6:20"},"nativeSrc":"13940:47:20","nodeType":"YulFunctionCall","src":"13940:47:20"},"nativeSrc":"13940:47:20","nodeType":"YulExpressionStatement","src":"13940:47:20"},{"nativeSrc":"13996:139:20","nodeType":"YulAssignment","src":"13996:139:20","value":{"arguments":[{"name":"tail","nativeSrc":"14130:4:20","nodeType":"YulIdentifier","src":"14130:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_047e53bda3b1755bdcd010ea559fd4ce3f4332c889ecbf649f4153f3160f1630_to_t_string_memory_ptr_fromStack","nativeSrc":"14004:124:20","nodeType":"YulIdentifier","src":"14004:124:20"},"nativeSrc":"14004:131:20","nodeType":"YulFunctionCall","src":"14004:131:20"},"variableNames":[{"name":"tail","nativeSrc":"13996:4:20","nodeType":"YulIdentifier","src":"13996:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_047e53bda3b1755bdcd010ea559fd4ce3f4332c889ecbf649f4153f3160f1630__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"13723:419:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"13874:9:20","nodeType":"YulTypedName","src":"13874:9:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"13889:4:20","nodeType":"YulTypedName","src":"13889:4:20","type":""}],"src":"13723:419:20"},{"body":{"nativeSrc":"14193:32:20","nodeType":"YulBlock","src":"14193:32:20","statements":[{"nativeSrc":"14203:16:20","nodeType":"YulAssignment","src":"14203:16:20","value":{"name":"value","nativeSrc":"14214:5:20","nodeType":"YulIdentifier","src":"14214:5:20"},"variableNames":[{"name":"cleaned","nativeSrc":"14203:7:20","nodeType":"YulIdentifier","src":"14203:7:20"}]}]},"name":"cleanup_t_bytes32","nativeSrc":"14148:77:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"14175:5:20","nodeType":"YulTypedName","src":"14175:5:20","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"14185:7:20","nodeType":"YulTypedName","src":"14185:7:20","type":""}],"src":"14148:77:20"},{"body":{"nativeSrc":"14296:53:20","nodeType":"YulBlock","src":"14296:53:20","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"14313:3:20","nodeType":"YulIdentifier","src":"14313:3:20"},{"arguments":[{"name":"value","nativeSrc":"14336:5:20","nodeType":"YulIdentifier","src":"14336:5:20"}],"functionName":{"name":"cleanup_t_bytes32","nativeSrc":"14318:17:20","nodeType":"YulIdentifier","src":"14318:17:20"},"nativeSrc":"14318:24:20","nodeType":"YulFunctionCall","src":"14318:24:20"}],"functionName":{"name":"mstore","nativeSrc":"14306:6:20","nodeType":"YulIdentifier","src":"14306:6:20"},"nativeSrc":"14306:37:20","nodeType":"YulFunctionCall","src":"14306:37:20"},"nativeSrc":"14306:37:20","nodeType":"YulExpressionStatement","src":"14306:37:20"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"14231:118:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"14284:5:20","nodeType":"YulTypedName","src":"14284:5:20","type":""},{"name":"pos","nativeSrc":"14291:3:20","nodeType":"YulTypedName","src":"14291:3:20","type":""}],"src":"14231:118:20"},{"body":{"nativeSrc":"14399:57:20","nodeType":"YulBlock","src":"14399:57:20","statements":[{"nativeSrc":"14409:41:20","nodeType":"YulAssignment","src":"14409:41:20","value":{"arguments":[{"name":"value","nativeSrc":"14424:5:20","nodeType":"YulIdentifier","src":"14424:5:20"},{"kind":"number","nativeSrc":"14431:18:20","nodeType":"YulLiteral","src":"14431:18:20","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"14420:3:20","nodeType":"YulIdentifier","src":"14420:3:20"},"nativeSrc":"14420:30:20","nodeType":"YulFunctionCall","src":"14420:30:20"},"variableNames":[{"name":"cleaned","nativeSrc":"14409:7:20","nodeType":"YulIdentifier","src":"14409:7:20"}]}]},"name":"cleanup_t_uint64","nativeSrc":"14355:101:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"14381:5:20","nodeType":"YulTypedName","src":"14381:5:20","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"14391:7:20","nodeType":"YulTypedName","src":"14391:7:20","type":""}],"src":"14355:101:20"},{"body":{"nativeSrc":"14525:52:20","nodeType":"YulBlock","src":"14525:52:20","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"14542:3:20","nodeType":"YulIdentifier","src":"14542:3:20"},{"arguments":[{"name":"value","nativeSrc":"14564:5:20","nodeType":"YulIdentifier","src":"14564:5:20"}],"functionName":{"name":"cleanup_t_uint64","nativeSrc":"14547:16:20","nodeType":"YulIdentifier","src":"14547:16:20"},"nativeSrc":"14547:23:20","nodeType":"YulFunctionCall","src":"14547:23:20"}],"functionName":{"name":"mstore","nativeSrc":"14535:6:20","nodeType":"YulIdentifier","src":"14535:6:20"},"nativeSrc":"14535:36:20","nodeType":"YulFunctionCall","src":"14535:36:20"},"nativeSrc":"14535:36:20","nodeType":"YulExpressionStatement","src":"14535:36:20"}]},"name":"abi_encode_t_uint64_to_t_uint64_fromStack","nativeSrc":"14462:115:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"14513:5:20","nodeType":"YulTypedName","src":"14513:5:20","type":""},{"name":"pos","nativeSrc":"14520:3:20","nodeType":"YulTypedName","src":"14520:3:20","type":""}],"src":"14462:115:20"},{"body":{"nativeSrc":"14627:45:20","nodeType":"YulBlock","src":"14627:45:20","statements":[{"nativeSrc":"14637:29:20","nodeType":"YulAssignment","src":"14637:29:20","value":{"arguments":[{"name":"value","nativeSrc":"14652:5:20","nodeType":"YulIdentifier","src":"14652:5:20"},{"kind":"number","nativeSrc":"14659:6:20","nodeType":"YulLiteral","src":"14659:6:20","type":"","value":"0xffff"}],"functionName":{"name":"and","nativeSrc":"14648:3:20","nodeType":"YulIdentifier","src":"14648:3:20"},"nativeSrc":"14648:18:20","nodeType":"YulFunctionCall","src":"14648:18:20"},"variableNames":[{"name":"cleaned","nativeSrc":"14637:7:20","nodeType":"YulIdentifier","src":"14637:7:20"}]}]},"name":"cleanup_t_uint16","nativeSrc":"14583:89:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"14609:5:20","nodeType":"YulTypedName","src":"14609:5:20","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"14619:7:20","nodeType":"YulTypedName","src":"14619:7:20","type":""}],"src":"14583:89:20"},{"body":{"nativeSrc":"14741:52:20","nodeType":"YulBlock","src":"14741:52:20","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"14758:3:20","nodeType":"YulIdentifier","src":"14758:3:20"},{"arguments":[{"name":"value","nativeSrc":"14780:5:20","nodeType":"YulIdentifier","src":"14780:5:20"}],"functionName":{"name":"cleanup_t_uint16","nativeSrc":"14763:16:20","nodeType":"YulIdentifier","src":"14763:16:20"},"nativeSrc":"14763:23:20","nodeType":"YulFunctionCall","src":"14763:23:20"}],"functionName":{"name":"mstore","nativeSrc":"14751:6:20","nodeType":"YulIdentifier","src":"14751:6:20"},"nativeSrc":"14751:36:20","nodeType":"YulFunctionCall","src":"14751:36:20"},"nativeSrc":"14751:36:20","nodeType":"YulExpressionStatement","src":"14751:36:20"}]},"name":"abi_encode_t_uint16_to_t_uint16_fromStack","nativeSrc":"14678:115:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"14729:5:20","nodeType":"YulTypedName","src":"14729:5:20","type":""},{"name":"pos","nativeSrc":"14736:3:20","nodeType":"YulTypedName","src":"14736:3:20","type":""}],"src":"14678:115:20"},{"body":{"nativeSrc":"14843:49:20","nodeType":"YulBlock","src":"14843:49:20","statements":[{"nativeSrc":"14853:33:20","nodeType":"YulAssignment","src":"14853:33:20","value":{"arguments":[{"name":"value","nativeSrc":"14868:5:20","nodeType":"YulIdentifier","src":"14868:5:20"},{"kind":"number","nativeSrc":"14875:10:20","nodeType":"YulLiteral","src":"14875:10:20","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nativeSrc":"14864:3:20","nodeType":"YulIdentifier","src":"14864:3:20"},"nativeSrc":"14864:22:20","nodeType":"YulFunctionCall","src":"14864:22:20"},"variableNames":[{"name":"cleaned","nativeSrc":"14853:7:20","nodeType":"YulIdentifier","src":"14853:7:20"}]}]},"name":"cleanup_t_uint32","nativeSrc":"14799:93:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"14825:5:20","nodeType":"YulTypedName","src":"14825:5:20","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"14835:7:20","nodeType":"YulTypedName","src":"14835:7:20","type":""}],"src":"14799:93:20"},{"body":{"nativeSrc":"14961:52:20","nodeType":"YulBlock","src":"14961:52:20","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"14978:3:20","nodeType":"YulIdentifier","src":"14978:3:20"},{"arguments":[{"name":"value","nativeSrc":"15000:5:20","nodeType":"YulIdentifier","src":"15000:5:20"}],"functionName":{"name":"cleanup_t_uint32","nativeSrc":"14983:16:20","nodeType":"YulIdentifier","src":"14983:16:20"},"nativeSrc":"14983:23:20","nodeType":"YulFunctionCall","src":"14983:23:20"}],"functionName":{"name":"mstore","nativeSrc":"14971:6:20","nodeType":"YulIdentifier","src":"14971:6:20"},"nativeSrc":"14971:36:20","nodeType":"YulFunctionCall","src":"14971:36:20"},"nativeSrc":"14971:36:20","nodeType":"YulExpressionStatement","src":"14971:36:20"}]},"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nativeSrc":"14898:115:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"14949:5:20","nodeType":"YulTypedName","src":"14949:5:20","type":""},{"name":"pos","nativeSrc":"14956:3:20","nodeType":"YulTypedName","src":"14956:3:20","type":""}],"src":"14898:115:20"},{"body":{"nativeSrc":"15221:446:20","nodeType":"YulBlock","src":"15221:446:20","statements":[{"nativeSrc":"15231:27:20","nodeType":"YulAssignment","src":"15231:27:20","value":{"arguments":[{"name":"headStart","nativeSrc":"15243:9:20","nodeType":"YulIdentifier","src":"15243:9:20"},{"kind":"number","nativeSrc":"15254:3:20","nodeType":"YulLiteral","src":"15254:3:20","type":"","value":"160"}],"functionName":{"name":"add","nativeSrc":"15239:3:20","nodeType":"YulIdentifier","src":"15239:3:20"},"nativeSrc":"15239:19:20","nodeType":"YulFunctionCall","src":"15239:19:20"},"variableNames":[{"name":"tail","nativeSrc":"15231:4:20","nodeType":"YulIdentifier","src":"15231:4:20"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"15312:6:20","nodeType":"YulIdentifier","src":"15312:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"15325:9:20","nodeType":"YulIdentifier","src":"15325:9:20"},{"kind":"number","nativeSrc":"15336:1:20","nodeType":"YulLiteral","src":"15336:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"15321:3:20","nodeType":"YulIdentifier","src":"15321:3:20"},"nativeSrc":"15321:17:20","nodeType":"YulFunctionCall","src":"15321:17:20"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"15268:43:20","nodeType":"YulIdentifier","src":"15268:43:20"},"nativeSrc":"15268:71:20","nodeType":"YulFunctionCall","src":"15268:71:20"},"nativeSrc":"15268:71:20","nodeType":"YulExpressionStatement","src":"15268:71:20"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"15391:6:20","nodeType":"YulIdentifier","src":"15391:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"15404:9:20","nodeType":"YulIdentifier","src":"15404:9:20"},{"kind":"number","nativeSrc":"15415:2:20","nodeType":"YulLiteral","src":"15415:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"15400:3:20","nodeType":"YulIdentifier","src":"15400:3:20"},"nativeSrc":"15400:18:20","nodeType":"YulFunctionCall","src":"15400:18:20"}],"functionName":{"name":"abi_encode_t_uint64_to_t_uint64_fromStack","nativeSrc":"15349:41:20","nodeType":"YulIdentifier","src":"15349:41:20"},"nativeSrc":"15349:70:20","nodeType":"YulFunctionCall","src":"15349:70:20"},"nativeSrc":"15349:70:20","nodeType":"YulExpressionStatement","src":"15349:70:20"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"15471:6:20","nodeType":"YulIdentifier","src":"15471:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"15484:9:20","nodeType":"YulIdentifier","src":"15484:9:20"},{"kind":"number","nativeSrc":"15495:2:20","nodeType":"YulLiteral","src":"15495:2:20","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"15480:3:20","nodeType":"YulIdentifier","src":"15480:3:20"},"nativeSrc":"15480:18:20","nodeType":"YulFunctionCall","src":"15480:18:20"}],"functionName":{"name":"abi_encode_t_uint16_to_t_uint16_fromStack","nativeSrc":"15429:41:20","nodeType":"YulIdentifier","src":"15429:41:20"},"nativeSrc":"15429:70:20","nodeType":"YulFunctionCall","src":"15429:70:20"},"nativeSrc":"15429:70:20","nodeType":"YulExpressionStatement","src":"15429:70:20"},{"expression":{"arguments":[{"name":"value3","nativeSrc":"15551:6:20","nodeType":"YulIdentifier","src":"15551:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"15564:9:20","nodeType":"YulIdentifier","src":"15564:9:20"},{"kind":"number","nativeSrc":"15575:2:20","nodeType":"YulLiteral","src":"15575:2:20","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"15560:3:20","nodeType":"YulIdentifier","src":"15560:3:20"},"nativeSrc":"15560:18:20","nodeType":"YulFunctionCall","src":"15560:18:20"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nativeSrc":"15509:41:20","nodeType":"YulIdentifier","src":"15509:41:20"},"nativeSrc":"15509:70:20","nodeType":"YulFunctionCall","src":"15509:70:20"},"nativeSrc":"15509:70:20","nodeType":"YulExpressionStatement","src":"15509:70:20"},{"expression":{"arguments":[{"name":"value4","nativeSrc":"15631:6:20","nodeType":"YulIdentifier","src":"15631:6:20"},{"arguments":[{"name":"headStart","nativeSrc":"15644:9:20","nodeType":"YulIdentifier","src":"15644:9:20"},{"kind":"number","nativeSrc":"15655:3:20","nodeType":"YulLiteral","src":"15655:3:20","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"15640:3:20","nodeType":"YulIdentifier","src":"15640:3:20"},"nativeSrc":"15640:19:20","nodeType":"YulFunctionCall","src":"15640:19:20"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nativeSrc":"15589:41:20","nodeType":"YulIdentifier","src":"15589:41:20"},"nativeSrc":"15589:71:20","nodeType":"YulFunctionCall","src":"15589:71:20"},"nativeSrc":"15589:71:20","nodeType":"YulExpressionStatement","src":"15589:71:20"}]},"name":"abi_encode_tuple_t_bytes32_t_uint64_t_uint16_t_uint32_t_uint32__to_t_bytes32_t_uint64_t_uint16_t_uint32_t_uint32__fromStack_reversed","nativeSrc":"15019:648:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"15161:9:20","nodeType":"YulTypedName","src":"15161:9:20","type":""},{"name":"value4","nativeSrc":"15173:6:20","nodeType":"YulTypedName","src":"15173:6:20","type":""},{"name":"value3","nativeSrc":"15181:6:20","nodeType":"YulTypedName","src":"15181:6:20","type":""},{"name":"value2","nativeSrc":"15189:6:20","nodeType":"YulTypedName","src":"15189:6:20","type":""},{"name":"value1","nativeSrc":"15197:6:20","nodeType":"YulTypedName","src":"15197:6:20","type":""},{"name":"value0","nativeSrc":"15205:6:20","nodeType":"YulTypedName","src":"15205:6:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"15216:4:20","nodeType":"YulTypedName","src":"15216:4:20","type":""}],"src":"15019:648:20"},{"body":{"nativeSrc":"15736:80:20","nodeType":"YulBlock","src":"15736:80:20","statements":[{"nativeSrc":"15746:22:20","nodeType":"YulAssignment","src":"15746:22:20","value":{"arguments":[{"name":"offset","nativeSrc":"15761:6:20","nodeType":"YulIdentifier","src":"15761:6:20"}],"functionName":{"name":"mload","nativeSrc":"15755:5:20","nodeType":"YulIdentifier","src":"15755:5:20"},"nativeSrc":"15755:13:20","nodeType":"YulFunctionCall","src":"15755:13:20"},"variableNames":[{"name":"value","nativeSrc":"15746:5:20","nodeType":"YulIdentifier","src":"15746:5:20"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"15804:5:20","nodeType":"YulIdentifier","src":"15804:5:20"}],"functionName":{"name":"validator_revert_t_uint256","nativeSrc":"15777:26:20","nodeType":"YulIdentifier","src":"15777:26:20"},"nativeSrc":"15777:33:20","nodeType":"YulFunctionCall","src":"15777:33:20"},"nativeSrc":"15777:33:20","nodeType":"YulExpressionStatement","src":"15777:33:20"}]},"name":"abi_decode_t_uint256_fromMemory","nativeSrc":"15673:143:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"15714:6:20","nodeType":"YulTypedName","src":"15714:6:20","type":""},{"name":"end","nativeSrc":"15722:3:20","nodeType":"YulTypedName","src":"15722:3:20","type":""}],"returnVariables":[{"name":"value","nativeSrc":"15730:5:20","nodeType":"YulTypedName","src":"15730:5:20","type":""}],"src":"15673:143:20"},{"body":{"nativeSrc":"15899:274:20","nodeType":"YulBlock","src":"15899:274:20","statements":[{"body":{"nativeSrc":"15945:83:20","nodeType":"YulBlock","src":"15945:83:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"15947:77:20","nodeType":"YulIdentifier","src":"15947:77:20"},"nativeSrc":"15947:79:20","nodeType":"YulFunctionCall","src":"15947:79:20"},"nativeSrc":"15947:79:20","nodeType":"YulExpressionStatement","src":"15947:79:20"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"15920:7:20","nodeType":"YulIdentifier","src":"15920:7:20"},{"name":"headStart","nativeSrc":"15929:9:20","nodeType":"YulIdentifier","src":"15929:9:20"}],"functionName":{"name":"sub","nativeSrc":"15916:3:20","nodeType":"YulIdentifier","src":"15916:3:20"},"nativeSrc":"15916:23:20","nodeType":"YulFunctionCall","src":"15916:23:20"},{"kind":"number","nativeSrc":"15941:2:20","nodeType":"YulLiteral","src":"15941:2:20","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"15912:3:20","nodeType":"YulIdentifier","src":"15912:3:20"},"nativeSrc":"15912:32:20","nodeType":"YulFunctionCall","src":"15912:32:20"},"nativeSrc":"15909:119:20","nodeType":"YulIf","src":"15909:119:20"},{"nativeSrc":"16038:128:20","nodeType":"YulBlock","src":"16038:128:20","statements":[{"nativeSrc":"16053:15:20","nodeType":"YulVariableDeclaration","src":"16053:15:20","value":{"kind":"number","nativeSrc":"16067:1:20","nodeType":"YulLiteral","src":"16067:1:20","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"16057:6:20","nodeType":"YulTypedName","src":"16057:6:20","type":""}]},{"nativeSrc":"16082:74:20","nodeType":"YulAssignment","src":"16082:74:20","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"16128:9:20","nodeType":"YulIdentifier","src":"16128:9:20"},{"name":"offset","nativeSrc":"16139:6:20","nodeType":"YulIdentifier","src":"16139:6:20"}],"functionName":{"name":"add","nativeSrc":"16124:3:20","nodeType":"YulIdentifier","src":"16124:3:20"},"nativeSrc":"16124:22:20","nodeType":"YulFunctionCall","src":"16124:22:20"},{"name":"dataEnd","nativeSrc":"16148:7:20","nodeType":"YulIdentifier","src":"16148:7:20"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nativeSrc":"16092:31:20","nodeType":"YulIdentifier","src":"16092:31:20"},"nativeSrc":"16092:64:20","nodeType":"YulFunctionCall","src":"16092:64:20"},"variableNames":[{"name":"value0","nativeSrc":"16082:6:20","nodeType":"YulIdentifier","src":"16082:6:20"}]}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nativeSrc":"15822:351:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"15869:9:20","nodeType":"YulTypedName","src":"15869:9:20","type":""},{"name":"dataEnd","nativeSrc":"15880:7:20","nodeType":"YulTypedName","src":"15880:7:20","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"15892:6:20","nodeType":"YulTypedName","src":"15892:6:20","type":""}],"src":"15822:351:20"},{"body":{"nativeSrc":"16207:152:20","nodeType":"YulBlock","src":"16207:152:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"16224:1:20","nodeType":"YulLiteral","src":"16224:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"16227:77:20","nodeType":"YulLiteral","src":"16227:77:20","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"16217:6:20","nodeType":"YulIdentifier","src":"16217:6:20"},"nativeSrc":"16217:88:20","nodeType":"YulFunctionCall","src":"16217:88:20"},"nativeSrc":"16217:88:20","nodeType":"YulExpressionStatement","src":"16217:88:20"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"16321:1:20","nodeType":"YulLiteral","src":"16321:1:20","type":"","value":"4"},{"kind":"number","nativeSrc":"16324:4:20","nodeType":"YulLiteral","src":"16324:4:20","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"16314:6:20","nodeType":"YulIdentifier","src":"16314:6:20"},"nativeSrc":"16314:15:20","nodeType":"YulFunctionCall","src":"16314:15:20"},"nativeSrc":"16314:15:20","nodeType":"YulExpressionStatement","src":"16314:15:20"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"16345:1:20","nodeType":"YulLiteral","src":"16345:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"16348:4:20","nodeType":"YulLiteral","src":"16348:4:20","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"16338:6:20","nodeType":"YulIdentifier","src":"16338:6:20"},"nativeSrc":"16338:15:20","nodeType":"YulFunctionCall","src":"16338:15:20"},"nativeSrc":"16338:15:20","nodeType":"YulExpressionStatement","src":"16338:15:20"}]},"name":"panic_error_0x11","nativeSrc":"16179:180:20","nodeType":"YulFunctionDefinition","src":"16179:180:20"},{"body":{"nativeSrc":"16410:149:20","nodeType":"YulBlock","src":"16410:149:20","statements":[{"nativeSrc":"16420:25:20","nodeType":"YulAssignment","src":"16420:25:20","value":{"arguments":[{"name":"x","nativeSrc":"16443:1:20","nodeType":"YulIdentifier","src":"16443:1:20"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"16425:17:20","nodeType":"YulIdentifier","src":"16425:17:20"},"nativeSrc":"16425:20:20","nodeType":"YulFunctionCall","src":"16425:20:20"},"variableNames":[{"name":"x","nativeSrc":"16420:1:20","nodeType":"YulIdentifier","src":"16420:1:20"}]},{"nativeSrc":"16454:25:20","nodeType":"YulAssignment","src":"16454:25:20","value":{"arguments":[{"name":"y","nativeSrc":"16477:1:20","nodeType":"YulIdentifier","src":"16477:1:20"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"16459:17:20","nodeType":"YulIdentifier","src":"16459:17:20"},"nativeSrc":"16459:20:20","nodeType":"YulFunctionCall","src":"16459:20:20"},"variableNames":[{"name":"y","nativeSrc":"16454:1:20","nodeType":"YulIdentifier","src":"16454:1:20"}]},{"nativeSrc":"16488:17:20","nodeType":"YulAssignment","src":"16488:17:20","value":{"arguments":[{"name":"x","nativeSrc":"16500:1:20","nodeType":"YulIdentifier","src":"16500:1:20"},{"name":"y","nativeSrc":"16503:1:20","nodeType":"YulIdentifier","src":"16503:1:20"}],"functionName":{"name":"sub","nativeSrc":"16496:3:20","nodeType":"YulIdentifier","src":"16496:3:20"},"nativeSrc":"16496:9:20","nodeType":"YulFunctionCall","src":"16496:9:20"},"variableNames":[{"name":"diff","nativeSrc":"16488:4:20","nodeType":"YulIdentifier","src":"16488:4:20"}]},{"body":{"nativeSrc":"16530:22:20","nodeType":"YulBlock","src":"16530:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"16532:16:20","nodeType":"YulIdentifier","src":"16532:16:20"},"nativeSrc":"16532:18:20","nodeType":"YulFunctionCall","src":"16532:18:20"},"nativeSrc":"16532:18:20","nodeType":"YulExpressionStatement","src":"16532:18:20"}]},"condition":{"arguments":[{"name":"diff","nativeSrc":"16521:4:20","nodeType":"YulIdentifier","src":"16521:4:20"},{"name":"x","nativeSrc":"16527:1:20","nodeType":"YulIdentifier","src":"16527:1:20"}],"functionName":{"name":"gt","nativeSrc":"16518:2:20","nodeType":"YulIdentifier","src":"16518:2:20"},"nativeSrc":"16518:11:20","nodeType":"YulFunctionCall","src":"16518:11:20"},"nativeSrc":"16515:37:20","nodeType":"YulIf","src":"16515:37:20"}]},"name":"checked_sub_t_uint256","nativeSrc":"16365:194:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"16396:1:20","nodeType":"YulTypedName","src":"16396:1:20","type":""},{"name":"y","nativeSrc":"16399:1:20","nodeType":"YulTypedName","src":"16399:1:20","type":""}],"returnVariables":[{"name":"diff","nativeSrc":"16405:4:20","nodeType":"YulTypedName","src":"16405:4:20","type":""}],"src":"16365:194:20"},{"body":{"nativeSrc":"16593:152:20","nodeType":"YulBlock","src":"16593:152:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"16610:1:20","nodeType":"YulLiteral","src":"16610:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"16613:77:20","nodeType":"YulLiteral","src":"16613:77:20","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"16603:6:20","nodeType":"YulIdentifier","src":"16603:6:20"},"nativeSrc":"16603:88:20","nodeType":"YulFunctionCall","src":"16603:88:20"},"nativeSrc":"16603:88:20","nodeType":"YulExpressionStatement","src":"16603:88:20"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"16707:1:20","nodeType":"YulLiteral","src":"16707:1:20","type":"","value":"4"},{"kind":"number","nativeSrc":"16710:4:20","nodeType":"YulLiteral","src":"16710:4:20","type":"","value":"0x32"}],"functionName":{"name":"mstore","nativeSrc":"16700:6:20","nodeType":"YulIdentifier","src":"16700:6:20"},"nativeSrc":"16700:15:20","nodeType":"YulFunctionCall","src":"16700:15:20"},"nativeSrc":"16700:15:20","nodeType":"YulExpressionStatement","src":"16700:15:20"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"16731:1:20","nodeType":"YulLiteral","src":"16731:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"16734:4:20","nodeType":"YulLiteral","src":"16734:4:20","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"16724:6:20","nodeType":"YulIdentifier","src":"16724:6:20"},"nativeSrc":"16724:15:20","nodeType":"YulFunctionCall","src":"16724:15:20"},"nativeSrc":"16724:15:20","nodeType":"YulExpressionStatement","src":"16724:15:20"}]},"name":"panic_error_0x32","nativeSrc":"16565:180:20","nodeType":"YulFunctionDefinition","src":"16565:180:20"},{"body":{"nativeSrc":"16779:152:20","nodeType":"YulBlock","src":"16779:152:20","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"16796:1:20","nodeType":"YulLiteral","src":"16796:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"16799:77:20","nodeType":"YulLiteral","src":"16799:77:20","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"16789:6:20","nodeType":"YulIdentifier","src":"16789:6:20"},"nativeSrc":"16789:88:20","nodeType":"YulFunctionCall","src":"16789:88:20"},"nativeSrc":"16789:88:20","nodeType":"YulExpressionStatement","src":"16789:88:20"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"16893:1:20","nodeType":"YulLiteral","src":"16893:1:20","type":"","value":"4"},{"kind":"number","nativeSrc":"16896:4:20","nodeType":"YulLiteral","src":"16896:4:20","type":"","value":"0x12"}],"functionName":{"name":"mstore","nativeSrc":"16886:6:20","nodeType":"YulIdentifier","src":"16886:6:20"},"nativeSrc":"16886:15:20","nodeType":"YulFunctionCall","src":"16886:15:20"},"nativeSrc":"16886:15:20","nodeType":"YulExpressionStatement","src":"16886:15:20"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"16917:1:20","nodeType":"YulLiteral","src":"16917:1:20","type":"","value":"0"},{"kind":"number","nativeSrc":"16920:4:20","nodeType":"YulLiteral","src":"16920:4:20","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"16910:6:20","nodeType":"YulIdentifier","src":"16910:6:20"},"nativeSrc":"16910:15:20","nodeType":"YulFunctionCall","src":"16910:15:20"},"nativeSrc":"16910:15:20","nodeType":"YulExpressionStatement","src":"16910:15:20"}]},"name":"panic_error_0x12","nativeSrc":"16751:180:20","nodeType":"YulFunctionDefinition","src":"16751:180:20"},{"body":{"nativeSrc":"16971:142:20","nodeType":"YulBlock","src":"16971:142:20","statements":[{"nativeSrc":"16981:25:20","nodeType":"YulAssignment","src":"16981:25:20","value":{"arguments":[{"name":"x","nativeSrc":"17004:1:20","nodeType":"YulIdentifier","src":"17004:1:20"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"16986:17:20","nodeType":"YulIdentifier","src":"16986:17:20"},"nativeSrc":"16986:20:20","nodeType":"YulFunctionCall","src":"16986:20:20"},"variableNames":[{"name":"x","nativeSrc":"16981:1:20","nodeType":"YulIdentifier","src":"16981:1:20"}]},{"nativeSrc":"17015:25:20","nodeType":"YulAssignment","src":"17015:25:20","value":{"arguments":[{"name":"y","nativeSrc":"17038:1:20","nodeType":"YulIdentifier","src":"17038:1:20"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"17020:17:20","nodeType":"YulIdentifier","src":"17020:17:20"},"nativeSrc":"17020:20:20","nodeType":"YulFunctionCall","src":"17020:20:20"},"variableNames":[{"name":"y","nativeSrc":"17015:1:20","nodeType":"YulIdentifier","src":"17015:1:20"}]},{"body":{"nativeSrc":"17062:22:20","nodeType":"YulBlock","src":"17062:22:20","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nativeSrc":"17064:16:20","nodeType":"YulIdentifier","src":"17064:16:20"},"nativeSrc":"17064:18:20","nodeType":"YulFunctionCall","src":"17064:18:20"},"nativeSrc":"17064:18:20","nodeType":"YulExpressionStatement","src":"17064:18:20"}]},"condition":{"arguments":[{"name":"y","nativeSrc":"17059:1:20","nodeType":"YulIdentifier","src":"17059:1:20"}],"functionName":{"name":"iszero","nativeSrc":"17052:6:20","nodeType":"YulIdentifier","src":"17052:6:20"},"nativeSrc":"17052:9:20","nodeType":"YulFunctionCall","src":"17052:9:20"},"nativeSrc":"17049:35:20","nodeType":"YulIf","src":"17049:35:20"},{"nativeSrc":"17093:14:20","nodeType":"YulAssignment","src":"17093:14:20","value":{"arguments":[{"name":"x","nativeSrc":"17102:1:20","nodeType":"YulIdentifier","src":"17102:1:20"},{"name":"y","nativeSrc":"17105:1:20","nodeType":"YulIdentifier","src":"17105:1:20"}],"functionName":{"name":"mod","nativeSrc":"17098:3:20","nodeType":"YulIdentifier","src":"17098:3:20"},"nativeSrc":"17098:9:20","nodeType":"YulFunctionCall","src":"17098:9:20"},"variableNames":[{"name":"r","nativeSrc":"17093:1:20","nodeType":"YulIdentifier","src":"17093:1:20"}]}]},"name":"mod_t_uint256","nativeSrc":"16937:176:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"16960:1:20","nodeType":"YulTypedName","src":"16960:1:20","type":""},{"name":"y","nativeSrc":"16963:1:20","nodeType":"YulTypedName","src":"16963:1:20","type":""}],"returnVariables":[{"name":"r","nativeSrc":"16969:1:20","nodeType":"YulTypedName","src":"16969:1:20","type":""}],"src":"16937:176:20"},{"body":{"nativeSrc":"17232:34:20","nodeType":"YulBlock","src":"17232:34:20","statements":[{"nativeSrc":"17242:18:20","nodeType":"YulAssignment","src":"17242:18:20","value":{"name":"pos","nativeSrc":"17257:3:20","nodeType":"YulIdentifier","src":"17257:3:20"},"variableNames":[{"name":"updated_pos","nativeSrc":"17242:11:20","nodeType":"YulIdentifier","src":"17242:11:20"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"17119:147:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"17204:3:20","nodeType":"YulTypedName","src":"17204:3:20","type":""},{"name":"length","nativeSrc":"17209:6:20","nodeType":"YulTypedName","src":"17209:6:20","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"17220:11:20","nodeType":"YulTypedName","src":"17220:11:20","type":""}],"src":"17119:147:20"},{"body":{"nativeSrc":"17378:8:20","nodeType":"YulBlock","src":"17378:8:20","statements":[]},"name":"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","nativeSrc":"17272:114:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"17370:6:20","nodeType":"YulTypedName","src":"17370:6:20","type":""}],"src":"17272:114:20"},{"body":{"nativeSrc":"17555:235:20","nodeType":"YulBlock","src":"17555:235:20","statements":[{"nativeSrc":"17565:90:20","nodeType":"YulAssignment","src":"17565:90:20","value":{"arguments":[{"name":"pos","nativeSrc":"17648:3:20","nodeType":"YulIdentifier","src":"17648:3:20"},{"kind":"number","nativeSrc":"17653:1:20","nodeType":"YulLiteral","src":"17653:1:20","type":"","value":"0"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"17572:75:20","nodeType":"YulIdentifier","src":"17572:75:20"},"nativeSrc":"17572:83:20","nodeType":"YulFunctionCall","src":"17572:83:20"},"variableNames":[{"name":"pos","nativeSrc":"17565:3:20","nodeType":"YulIdentifier","src":"17565:3:20"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"17753:3:20","nodeType":"YulIdentifier","src":"17753:3:20"}],"functionName":{"name":"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","nativeSrc":"17664:88:20","nodeType":"YulIdentifier","src":"17664:88:20"},"nativeSrc":"17664:93:20","nodeType":"YulFunctionCall","src":"17664:93:20"},"nativeSrc":"17664:93:20","nodeType":"YulExpressionStatement","src":"17664:93:20"},{"nativeSrc":"17766:18:20","nodeType":"YulAssignment","src":"17766:18:20","value":{"arguments":[{"name":"pos","nativeSrc":"17777:3:20","nodeType":"YulIdentifier","src":"17777:3:20"},{"kind":"number","nativeSrc":"17782:1:20","nodeType":"YulLiteral","src":"17782:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"17773:3:20","nodeType":"YulIdentifier","src":"17773:3:20"},"nativeSrc":"17773:11:20","nodeType":"YulFunctionCall","src":"17773:11:20"},"variableNames":[{"name":"end","nativeSrc":"17766:3:20","nodeType":"YulIdentifier","src":"17766:3:20"}]}]},"name":"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"17392:398:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"17543:3:20","nodeType":"YulTypedName","src":"17543:3:20","type":""}],"returnVariables":[{"name":"end","nativeSrc":"17551:3:20","nodeType":"YulTypedName","src":"17551:3:20","type":""}],"src":"17392:398:20"},{"body":{"nativeSrc":"17984:191:20","nodeType":"YulBlock","src":"17984:191:20","statements":[{"nativeSrc":"17995:154:20","nodeType":"YulAssignment","src":"17995:154:20","value":{"arguments":[{"name":"pos","nativeSrc":"18145:3:20","nodeType":"YulIdentifier","src":"18145:3:20"}],"functionName":{"name":"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"18002:141:20","nodeType":"YulIdentifier","src":"18002:141:20"},"nativeSrc":"18002:147:20","nodeType":"YulFunctionCall","src":"18002:147:20"},"variableNames":[{"name":"pos","nativeSrc":"17995:3:20","nodeType":"YulIdentifier","src":"17995:3:20"}]},{"nativeSrc":"18159:10:20","nodeType":"YulAssignment","src":"18159:10:20","value":{"name":"pos","nativeSrc":"18166:3:20","nodeType":"YulIdentifier","src":"18166:3:20"},"variableNames":[{"name":"end","nativeSrc":"18159:3:20","nodeType":"YulIdentifier","src":"18159:3:20"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nativeSrc":"17796:379:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"17971:3:20","nodeType":"YulTypedName","src":"17971:3:20","type":""}],"returnVariables":[{"name":"end","nativeSrc":"17980:3:20","nodeType":"YulTypedName","src":"17980:3:20","type":""}],"src":"17796:379:20"},{"body":{"nativeSrc":"18287:60:20","nodeType":"YulBlock","src":"18287:60:20","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"18309:6:20","nodeType":"YulIdentifier","src":"18309:6:20"},{"kind":"number","nativeSrc":"18317:1:20","nodeType":"YulLiteral","src":"18317:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"18305:3:20","nodeType":"YulIdentifier","src":"18305:3:20"},"nativeSrc":"18305:14:20","nodeType":"YulFunctionCall","src":"18305:14:20"},{"hexValue":"5472616e73666572204661696c656421","kind":"string","nativeSrc":"18321:18:20","nodeType":"YulLiteral","src":"18321:18:20","type":"","value":"Transfer Failed!"}],"functionName":{"name":"mstore","nativeSrc":"18298:6:20","nodeType":"YulIdentifier","src":"18298:6:20"},"nativeSrc":"18298:42:20","nodeType":"YulFunctionCall","src":"18298:42:20"},"nativeSrc":"18298:42:20","nodeType":"YulExpressionStatement","src":"18298:42:20"}]},"name":"store_literal_in_memory_b14fb95164ea63e35a67574e2c81cbc6f6b5d123e185e0169f7323e26de6be4d","nativeSrc":"18181:166:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"18279:6:20","nodeType":"YulTypedName","src":"18279:6:20","type":""}],"src":"18181:166:20"},{"body":{"nativeSrc":"18499:220:20","nodeType":"YulBlock","src":"18499:220:20","statements":[{"nativeSrc":"18509:74:20","nodeType":"YulAssignment","src":"18509:74:20","value":{"arguments":[{"name":"pos","nativeSrc":"18575:3:20","nodeType":"YulIdentifier","src":"18575:3:20"},{"kind":"number","nativeSrc":"18580:2:20","nodeType":"YulLiteral","src":"18580:2:20","type":"","value":"16"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"18516:58:20","nodeType":"YulIdentifier","src":"18516:58:20"},"nativeSrc":"18516:67:20","nodeType":"YulFunctionCall","src":"18516:67:20"},"variableNames":[{"name":"pos","nativeSrc":"18509:3:20","nodeType":"YulIdentifier","src":"18509:3:20"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"18681:3:20","nodeType":"YulIdentifier","src":"18681:3:20"}],"functionName":{"name":"store_literal_in_memory_b14fb95164ea63e35a67574e2c81cbc6f6b5d123e185e0169f7323e26de6be4d","nativeSrc":"18592:88:20","nodeType":"YulIdentifier","src":"18592:88:20"},"nativeSrc":"18592:93:20","nodeType":"YulFunctionCall","src":"18592:93:20"},"nativeSrc":"18592:93:20","nodeType":"YulExpressionStatement","src":"18592:93:20"},{"nativeSrc":"18694:19:20","nodeType":"YulAssignment","src":"18694:19:20","value":{"arguments":[{"name":"pos","nativeSrc":"18705:3:20","nodeType":"YulIdentifier","src":"18705:3:20"},{"kind":"number","nativeSrc":"18710:2:20","nodeType":"YulLiteral","src":"18710:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"18701:3:20","nodeType":"YulIdentifier","src":"18701:3:20"},"nativeSrc":"18701:12:20","nodeType":"YulFunctionCall","src":"18701:12:20"},"variableNames":[{"name":"end","nativeSrc":"18694:3:20","nodeType":"YulIdentifier","src":"18694:3:20"}]}]},"name":"abi_encode_t_stringliteral_b14fb95164ea63e35a67574e2c81cbc6f6b5d123e185e0169f7323e26de6be4d_to_t_string_memory_ptr_fromStack","nativeSrc":"18353:366:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"18487:3:20","nodeType":"YulTypedName","src":"18487:3:20","type":""}],"returnVariables":[{"name":"end","nativeSrc":"18495:3:20","nodeType":"YulTypedName","src":"18495:3:20","type":""}],"src":"18353:366:20"},{"body":{"nativeSrc":"18896:248:20","nodeType":"YulBlock","src":"18896:248:20","statements":[{"nativeSrc":"18906:26:20","nodeType":"YulAssignment","src":"18906:26:20","value":{"arguments":[{"name":"headStart","nativeSrc":"18918:9:20","nodeType":"YulIdentifier","src":"18918:9:20"},{"kind":"number","nativeSrc":"18929:2:20","nodeType":"YulLiteral","src":"18929:2:20","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"18914:3:20","nodeType":"YulIdentifier","src":"18914:3:20"},"nativeSrc":"18914:18:20","nodeType":"YulFunctionCall","src":"18914:18:20"},"variableNames":[{"name":"tail","nativeSrc":"18906:4:20","nodeType":"YulIdentifier","src":"18906:4:20"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"18953:9:20","nodeType":"YulIdentifier","src":"18953:9:20"},{"kind":"number","nativeSrc":"18964:1:20","nodeType":"YulLiteral","src":"18964:1:20","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"18949:3:20","nodeType":"YulIdentifier","src":"18949:3:20"},"nativeSrc":"18949:17:20","nodeType":"YulFunctionCall","src":"18949:17:20"},{"arguments":[{"name":"tail","nativeSrc":"18972:4:20","nodeType":"YulIdentifier","src":"18972:4:20"},{"name":"headStart","nativeSrc":"18978:9:20","nodeType":"YulIdentifier","src":"18978:9:20"}],"functionName":{"name":"sub","nativeSrc":"18968:3:20","nodeType":"YulIdentifier","src":"18968:3:20"},"nativeSrc":"18968:20:20","nodeType":"YulFunctionCall","src":"18968:20:20"}],"functionName":{"name":"mstore","nativeSrc":"18942:6:20","nodeType":"YulIdentifier","src":"18942:6:20"},"nativeSrc":"18942:47:20","nodeType":"YulFunctionCall","src":"18942:47:20"},"nativeSrc":"18942:47:20","nodeType":"YulExpressionStatement","src":"18942:47:20"},{"nativeSrc":"18998:139:20","nodeType":"YulAssignment","src":"18998:139:20","value":{"arguments":[{"name":"tail","nativeSrc":"19132:4:20","nodeType":"YulIdentifier","src":"19132:4:20"}],"functionName":{"name":"abi_encode_t_stringliteral_b14fb95164ea63e35a67574e2c81cbc6f6b5d123e185e0169f7323e26de6be4d_to_t_string_memory_ptr_fromStack","nativeSrc":"19006:124:20","nodeType":"YulIdentifier","src":"19006:124:20"},"nativeSrc":"19006:131:20","nodeType":"YulFunctionCall","src":"19006:131:20"},"variableNames":[{"name":"tail","nativeSrc":"18998:4:20","nodeType":"YulIdentifier","src":"18998:4:20"}]}]},"name":"abi_encode_tuple_t_stringliteral_b14fb95164ea63e35a67574e2c81cbc6f6b5d123e185e0169f7323e26de6be4d__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"18725:419:20","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"18876:9:20","nodeType":"YulTypedName","src":"18876:9:20","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"18891:4:20","nodeType":"YulTypedName","src":"18891:4:20","type":""}],"src":"18725:419:20"}]},"contents":"{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function validator_assert_t_enum$_RaffleState_$4415(value) {\n        if iszero(lt(value, 2)) { panic_error_0x21() }\n    }\n\n    function cleanup_t_enum$_RaffleState_$4415(value) -> cleaned {\n        cleaned := value validator_assert_t_enum$_RaffleState_$4415(value)\n    }\n\n    function convert_t_enum$_RaffleState_$4415_to_t_uint8(value) -> converted {\n        converted := cleanup_t_enum$_RaffleState_$4415(value)\n    }\n\n    function abi_encode_t_enum$_RaffleState_$4415_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_enum$_RaffleState_$4415_to_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_enum$_RaffleState_$4415__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_enum$_RaffleState_$4415_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // uint256[]\n    function abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_uint256(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_uint256t_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x01)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0, value1 := abi_decode_t_bytes_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_bytes_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_bool_t_bytes_memory_ptr__to_t_bool_t_bytes_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_15a10bfc30965e42ff8acbb34211e82f5d4dfa40cc212e627d7e731a1df1e3de(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not enough ETH!\")\n\n    }\n\n    function abi_encode_t_stringliteral_15a10bfc30965e42ff8acbb34211e82f5d4dfa40cc212e627d7e731a1df1e3de_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_15a10bfc30965e42ff8acbb34211e82f5d4dfa40cc212e627d7e731a1df1e3de(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_15a10bfc30965e42ff8acbb34211e82f5d4dfa40cc212e627d7e731a1df1e3de__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_15a10bfc30965e42ff8acbb34211e82f5d4dfa40cc212e627d7e731a1df1e3de_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0af1a4442a600edd3bde606629dbe1d858edd05765327f25ead92d55536f2d3b(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not open\")\n\n    }\n\n    function abi_encode_t_stringliteral_0af1a4442a600edd3bde606629dbe1d858edd05765327f25ead92d55536f2d3b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 8)\n        store_literal_in_memory_0af1a4442a600edd3bde606629dbe1d858edd05765327f25ead92d55536f2d3b(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0af1a4442a600edd3bde606629dbe1d858edd05765327f25ead92d55536f2d3b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0af1a4442a600edd3bde606629dbe1d858edd05765327f25ead92d55536f2d3b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_047e53bda3b1755bdcd010ea559fd4ce3f4332c889ecbf649f4153f3160f1630(memPtr) {\n\n        mstore(add(memPtr, 0), \"Upkeep not needed\")\n\n    }\n\n    function abi_encode_t_stringliteral_047e53bda3b1755bdcd010ea559fd4ce3f4332c889ecbf649f4153f3160f1630_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_047e53bda3b1755bdcd010ea559fd4ce3f4332c889ecbf649f4153f3160f1630(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_047e53bda3b1755bdcd010ea559fd4ce3f4332c889ecbf649f4153f3160f1630__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_047e53bda3b1755bdcd010ea559fd4ce3f4332c889ecbf649f4153f3160f1630_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function abi_encode_t_uint64_to_t_uint64_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint64(value))\n    }\n\n    function cleanup_t_uint16(value) -> cleaned {\n        cleaned := and(value, 0xffff)\n    }\n\n    function abi_encode_t_uint16_to_t_uint16_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint16(value))\n    }\n\n    function cleanup_t_uint32(value) -> cleaned {\n        cleaned := and(value, 0xffffffff)\n    }\n\n    function abi_encode_t_uint32_to_t_uint32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32_t_uint64_t_uint16_t_uint32_t_uint32__to_t_bytes32_t_uint64_t_uint16_t_uint32_t_uint32__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint64_to_t_uint64_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint16_to_t_uint16_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function mod_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_b14fb95164ea63e35a67574e2c81cbc6f6b5d123e185e0169f7323e26de6be4d(memPtr) {\n\n        mstore(add(memPtr, 0), \"Transfer Failed!\")\n\n    }\n\n    function abi_encode_t_stringliteral_b14fb95164ea63e35a67574e2c81cbc6f6b5d123e185e0169f7323e26de6be4d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_b14fb95164ea63e35a67574e2c81cbc6f6b5d123e185e0169f7323e26de6be4d(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b14fb95164ea63e35a67574e2c81cbc6f6b5d123e185e0169f7323e26de6be4d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b14fb95164ea63e35a67574e2c81cbc6f6b5d123e185e0169f7323e26de6be4d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n","id":20,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"2046":[{"length":32,"start":823},{"length":32,"start":907}],"4417":[{"length":32,"start":762},{"length":32,"start":1015}],"4423":[{"length":32,"start":1554}],"4425":[{"length":32,"start":1614}],"4427":[{"length":32,"start":1647}],"4432":[{"length":32,"start":1682}],"4437":[{"length":32,"start":1991},{"length":32,"start":2101}]},"linkReferences":{},"object":"6080604052600436106100c25760003560e01c8063473f1ddc1161007f57806391ad27b41161005957806391ad27b414610238578063ca6a9ef814610263578063e55ae4e81461028e578063fd6673f5146102cb576100c2565b8063473f1ddc146101a457806353a2c19a146101cf5780636e04ff0d146101fa576100c2565b806309bc33a7146100c7578063115cbaf5146100f25780631fe543e31461011d5780632cfcc53914610146578063320229eb146101505780634585e33b1461017b575b600080fd5b3480156100d357600080fd5b506100dc6102f6565b6040516100e99190610bba565b60405180910390f35b3480156100fe57600080fd5b5061010761031e565b6040516101149190610c4c565b60405180910390f35b34801561012957600080fd5b50610144600480360381019061013f9190610e00565b610335565b005b61014e6103f5565b005b34801561015c57600080fd5b50610165610576565b6040516101729190610bba565b60405180910390f35b34801561018757600080fd5b506101a2600480360381019061019d9190610eb7565b610580565b005b3480156101b057600080fd5b506101b961074b565b6040516101c69190610f45565b60405180910390f35b3480156101db57600080fd5b506101e4610775565b6040516101f19190610bba565b60405180910390f35b34801561020657600080fd5b50610221600480360381019061021c9190611015565b610784565b60405161022f9291906110f8565b60405180910390f35b34801561024457600080fd5b5061024d610831565b60405161025a9190610bba565b60405180910390f35b34801561026f57600080fd5b50610278610859565b6040516102859190610bba565b60405180910390f35b34801561029a57600080fd5b506102b560048036038101906102b09190611128565b610866565b6040516102c29190610f45565b60405180910390f35b3480156102d757600080fd5b506102e06108ad565b6040516102ed9190610bba565b60405180910390f35b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600160149054906101000a900460ff16905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103e757337f00000000000000000000000000000000000000000000000000000000000000006040517f1cf993f40000000000000000000000000000000000000000000000000000000081526004016103de929190611155565b60405180910390fd5b6103f182826108b9565b5050565b7f0000000000000000000000000000000000000000000000000000000000000000341015610458576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161044f906111db565b60405180910390fd5b6000600181111561046c5761046b610bd5565b5b600160149054906101000a900460ff16600181111561048e5761048d610bd5565b5b146104ce576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104c590611247565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff167f0805e1d667bddb8a95f0f09880cf94f403fb596ce79928d9f29b74203ba284d460405160405180910390a2565b6000600254905090565b600061059a60405180602001604052806000815250610784565b50905060011515811515146105e4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105db906112b3565b60405180910390fd5b60018060146101000a81548160ff0219169083600181111561060957610608610bd5565b5b021790555060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16635d3b1d307f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000060037f000000000000000000000000000000000000000000000000000000000000000060016040518663ffffffff1660e01b81526004016106d395949392919061134b565b6020604051808303816000875af11580156106f2573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061071691906113b3565b9050807fcd6e45c8998311cab7e9d4385596cac867e20a0587194b954fa3a731c93ce78b60405160405180910390a250505050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600163ffffffff16905090565b600060606000600160149054906101000a900460ff1660018111156107ac576107ab610bd5565b5b600060018111156107c0576107bf610bd5565b5b14905060007f0000000000000000000000000000000000000000000000000000000000000000600254426107f4919061140f565b119050600080600080549050119050600080471190508380156108145750825b801561081d5750815b80156108265750805b955050505050915091565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600361ffff16905090565b600080828154811061087b5761087a611443565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60008080549050905090565b60008080549050826000815181106108d4576108d3611443565b5b60200260200101516108e691906114a1565b905060008082815481106108fd576108fc611443565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600160146101000a81548160ff0219169083600181111561099157610990610bd5565b5b0217905550600067ffffffffffffffff8111156109b1576109b0610cbd565b5b6040519080825280602002602001820160405280156109df5781602001602082028036833780820191505090505b50600090805190602001906109f5929190610afa565b504260028190555060008173ffffffffffffffffffffffffffffffffffffffff1647604051610a2390611503565b60006040518083038185875af1925050503d8060008114610a60576040519150601f19603f3d011682016040523d82523d6000602084013e610a65565b606091505b505090506001151581151514610ab0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aa790611564565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff167f5b690ec4a06fe979403046eaeea5b3ce38524683c3001f662c8b5a829632f7df60405160405180910390a25050505050565b828054828255906000526020600020908101928215610b73579160200282015b82811115610b725782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610b1a565b5b509050610b809190610b84565b5090565b5b80821115610b9d576000816000905550600101610b85565b5090565b6000819050919050565b610bb481610ba1565b82525050565b6000602082019050610bcf6000830184610bab565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60028110610c1557610c14610bd5565b5b50565b6000819050610c2682610c04565b919050565b6000610c3682610c18565b9050919050565b610c4681610c2b565b82525050565b6000602082019050610c616000830184610c3d565b92915050565b6000604051905090565b600080fd5b600080fd5b610c8481610ba1565b8114610c8f57600080fd5b50565b600081359050610ca181610c7b565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610cf582610cac565b810181811067ffffffffffffffff82111715610d1457610d13610cbd565b5b80604052505050565b6000610d27610c67565b9050610d338282610cec565b919050565b600067ffffffffffffffff821115610d5357610d52610cbd565b5b602082029050602081019050919050565b600080fd5b6000610d7c610d7784610d38565b610d1d565b90508083825260208201905060208402830185811115610d9f57610d9e610d64565b5b835b81811015610dc85780610db48882610c92565b845260208401935050602081019050610da1565b5050509392505050565b600082601f830112610de757610de6610ca7565b5b8135610df7848260208601610d69565b91505092915050565b60008060408385031215610e1757610e16610c71565b5b6000610e2585828601610c92565b925050602083013567ffffffffffffffff811115610e4657610e45610c76565b5b610e5285828601610dd2565b9150509250929050565b600080fd5b60008083601f840112610e7757610e76610ca7565b5b8235905067ffffffffffffffff811115610e9457610e93610e5c565b5b602083019150836001820283011115610eb057610eaf610d64565b5b9250929050565b60008060208385031215610ece57610ecd610c71565b5b600083013567ffffffffffffffff811115610eec57610eeb610c76565b5b610ef885828601610e61565b92509250509250929050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610f2f82610f04565b9050919050565b610f3f81610f24565b82525050565b6000602082019050610f5a6000830184610f36565b92915050565b600080fd5b600067ffffffffffffffff821115610f8057610f7f610cbd565b5b610f8982610cac565b9050602081019050919050565b82818337600083830152505050565b6000610fb8610fb384610f65565b610d1d565b905082815260208101848484011115610fd457610fd3610f60565b5b610fdf848285610f96565b509392505050565b600082601f830112610ffc57610ffb610ca7565b5b813561100c848260208601610fa5565b91505092915050565b60006020828403121561102b5761102a610c71565b5b600082013567ffffffffffffffff81111561104957611048610c76565b5b61105584828501610fe7565b91505092915050565b60008115159050919050565b6110738161105e565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b838110156110b3578082015181840152602081019050611098565b60008484015250505050565b60006110ca82611079565b6110d48185611084565b93506110e4818560208601611095565b6110ed81610cac565b840191505092915050565b600060408201905061110d600083018561106a565b818103602083015261111f81846110bf565b90509392505050565b60006020828403121561113e5761113d610c71565b5b600061114c84828501610c92565b91505092915050565b600060408201905061116a6000830185610f36565b6111776020830184610f36565b9392505050565b600082825260208201905092915050565b7f4e6f7420656e6f75676820455448210000000000000000000000000000000000600082015250565b60006111c5600f8361117e565b91506111d08261118f565b602082019050919050565b600060208201905081810360008301526111f4816111b8565b9050919050565b7f4e6f74206f70656e000000000000000000000000000000000000000000000000600082015250565b600061123160088361117e565b915061123c826111fb565b602082019050919050565b6000602082019050818103600083015261126081611224565b9050919050565b7f55706b656570206e6f74206e6565646564000000000000000000000000000000600082015250565b600061129d60118361117e565b91506112a882611267565b602082019050919050565b600060208201905081810360008301526112cc81611290565b9050919050565b6000819050919050565b6112e6816112d3565b82525050565b600067ffffffffffffffff82169050919050565b611309816112ec565b82525050565b600061ffff82169050919050565b6113268161130f565b82525050565b600063ffffffff82169050919050565b6113458161132c565b82525050565b600060a08201905061136060008301886112dd565b61136d6020830187611300565b61137a604083018661131d565b611387606083018561133c565b611394608083018461133c565b9695505050505050565b6000815190506113ad81610c7b565b92915050565b6000602082840312156113c9576113c8610c71565b5b60006113d78482850161139e565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061141a82610ba1565b915061142583610ba1565b925082820390508181111561143d5761143c6113e0565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006114ac82610ba1565b91506114b783610ba1565b9250826114c7576114c6611472565b5b828206905092915050565b600081905092915050565b50565b60006114ed6000836114d2565b91506114f8826114dd565b600082019050919050565b600061150e826114e0565b9150819050919050565b7f5472616e73666572204661696c65642100000000000000000000000000000000600082015250565b600061154e60108361117e565b915061155982611518565b602082019050919050565b6000602082019050818103600083015261157d81611541565b905091905056fea26469706673582212205469a24b85fc232522d262f3cbfe88bdbc8754633a4bbf3657b4e8f1ae3be7a864736f6c63430008180033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xC2 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x473F1DDC GT PUSH2 0x7F JUMPI DUP1 PUSH4 0x91AD27B4 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0x91AD27B4 EQ PUSH2 0x238 JUMPI DUP1 PUSH4 0xCA6A9EF8 EQ PUSH2 0x263 JUMPI DUP1 PUSH4 0xE55AE4E8 EQ PUSH2 0x28E JUMPI DUP1 PUSH4 0xFD6673F5 EQ PUSH2 0x2CB JUMPI PUSH2 0xC2 JUMP JUMPDEST DUP1 PUSH4 0x473F1DDC EQ PUSH2 0x1A4 JUMPI DUP1 PUSH4 0x53A2C19A EQ PUSH2 0x1CF JUMPI DUP1 PUSH4 0x6E04FF0D EQ PUSH2 0x1FA JUMPI PUSH2 0xC2 JUMP JUMPDEST DUP1 PUSH4 0x9BC33A7 EQ PUSH2 0xC7 JUMPI DUP1 PUSH4 0x115CBAF5 EQ PUSH2 0xF2 JUMPI DUP1 PUSH4 0x1FE543E3 EQ PUSH2 0x11D JUMPI DUP1 PUSH4 0x2CFCC539 EQ PUSH2 0x146 JUMPI DUP1 PUSH4 0x320229EB EQ PUSH2 0x150 JUMPI DUP1 PUSH4 0x4585E33B EQ PUSH2 0x17B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xDC PUSH2 0x2F6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0xBBA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xFE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x107 PUSH2 0x31E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x114 SWAP2 SWAP1 PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x129 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x144 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x13F SWAP2 SWAP1 PUSH2 0xE00 JUMP JUMPDEST PUSH2 0x335 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x14E PUSH2 0x3F5 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x15C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x165 PUSH2 0x576 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x172 SWAP2 SWAP1 PUSH2 0xBBA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x187 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19D SWAP2 SWAP1 PUSH2 0xEB7 JUMP JUMPDEST PUSH2 0x580 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B9 PUSH2 0x74B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C6 SWAP2 SWAP1 PUSH2 0xF45 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E4 PUSH2 0x775 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F1 SWAP2 SWAP1 PUSH2 0xBBA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x206 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x221 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21C SWAP2 SWAP1 PUSH2 0x1015 JUMP JUMPDEST PUSH2 0x784 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22F SWAP3 SWAP2 SWAP1 PUSH2 0x10F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x244 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x24D PUSH2 0x831 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25A SWAP2 SWAP1 PUSH2 0xBBA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x26F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x278 PUSH2 0x859 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x285 SWAP2 SWAP1 PUSH2 0xBBA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x29A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B0 SWAP2 SWAP1 PUSH2 0x1128 JUMP JUMPDEST PUSH2 0x866 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C2 SWAP2 SWAP1 PUSH2 0xF45 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E0 PUSH2 0x8AD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2ED SWAP2 SWAP1 PUSH2 0xBBA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x3E7 JUMPI CALLER PUSH32 0x0 PUSH1 0x40 MLOAD PUSH32 0x1CF993F400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3DE SWAP3 SWAP2 SWAP1 PUSH2 0x1155 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3F1 DUP3 DUP3 PUSH2 0x8B9 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH32 0x0 CALLVALUE LT ISZERO PUSH2 0x458 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x44F SWAP1 PUSH2 0x11DB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x46C JUMPI PUSH2 0x46B PUSH2 0xBD5 JUMP JUMPDEST JUMPDEST PUSH1 0x1 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x48E JUMPI PUSH2 0x48D PUSH2 0xBD5 JUMP JUMPDEST JUMPDEST EQ PUSH2 0x4CE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4C5 SWAP1 PUSH2 0x1247 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 CALLER SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x805E1D667BDDB8A95F0F09880CF94F403FB596CE79928D9F29B74203BA284D4 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x59A PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x784 JUMP JUMPDEST POP SWAP1 POP PUSH1 0x1 ISZERO ISZERO DUP2 ISZERO ISZERO EQ PUSH2 0x5E4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5DB SWAP1 PUSH2 0x12B3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x609 JUMPI PUSH2 0x608 PUSH2 0xBD5 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x5D3B1D30 PUSH32 0x0 PUSH32 0x0 PUSH1 0x3 PUSH32 0x0 PUSH1 0x1 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6D3 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x134B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6F2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x716 SWAP2 SWAP1 PUSH2 0x13B3 JUMP JUMPDEST SWAP1 POP DUP1 PUSH32 0xCD6E45C8998311CAB7E9D4385596CAC867E20A0587194B954FA3A731C93CE78B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH4 0xFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x7AC JUMPI PUSH2 0x7AB PUSH2 0xBD5 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x7C0 JUMPI PUSH2 0x7BF PUSH2 0xBD5 JUMP JUMPDEST JUMPDEST EQ SWAP1 POP PUSH1 0x0 PUSH32 0x0 PUSH1 0x2 SLOAD TIMESTAMP PUSH2 0x7F4 SWAP2 SWAP1 PUSH2 0x140F JUMP JUMPDEST GT SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 SLOAD SWAP1 POP GT SWAP1 POP PUSH1 0x0 DUP1 SELFBALANCE GT SWAP1 POP DUP4 DUP1 ISZERO PUSH2 0x814 JUMPI POP DUP3 JUMPDEST DUP1 ISZERO PUSH2 0x81D JUMPI POP DUP2 JUMPDEST DUP1 ISZERO PUSH2 0x826 JUMPI POP DUP1 JUMPDEST SWAP6 POP POP POP POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH2 0xFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x87B JUMPI PUSH2 0x87A PUSH2 0x1443 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 SLOAD SWAP1 POP DUP3 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x8D4 JUMPI PUSH2 0x8D3 PUSH2 0x1443 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x8E6 SWAP2 SWAP1 PUSH2 0x14A1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x8FD JUMPI PUSH2 0x8FC PUSH2 0x1443 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x991 JUMPI PUSH2 0x990 PUSH2 0xBD5 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x9B1 JUMPI PUSH2 0x9B0 PUSH2 0xCBD JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x9DF JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH1 0x0 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x9F5 SWAP3 SWAP2 SWAP1 PUSH2 0xAFA JUMP JUMPDEST POP TIMESTAMP PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SELFBALANCE PUSH1 0x40 MLOAD PUSH2 0xA23 SWAP1 PUSH2 0x1503 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xA60 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xA65 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP PUSH1 0x1 ISZERO ISZERO DUP2 ISZERO ISZERO EQ PUSH2 0xAB0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAA7 SWAP1 PUSH2 0x1564 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x5B690EC4A06FE979403046EAEEA5B3CE38524683C3001F662C8B5A829632F7DF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0xB73 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0xB72 JUMPI DUP3 MLOAD DUP3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0xB1A JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0xB80 SWAP2 SWAP1 PUSH2 0xB84 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0xB9D JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0xB85 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBB4 DUP2 PUSH2 0xBA1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xBCF PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xBAB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 DUP2 LT PUSH2 0xC15 JUMPI PUSH2 0xC14 PUSH2 0xBD5 JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0xC26 DUP3 PUSH2 0xC04 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC36 DUP3 PUSH2 0xC18 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC46 DUP2 PUSH2 0xC2B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC61 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC3D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC84 DUP2 PUSH2 0xBA1 JUMP JUMPDEST DUP2 EQ PUSH2 0xC8F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xCA1 DUP2 PUSH2 0xC7B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0xCF5 DUP3 PUSH2 0xCAC JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0xD14 JUMPI PUSH2 0xD13 PUSH2 0xCBD JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD27 PUSH2 0xC67 JUMP JUMPDEST SWAP1 POP PUSH2 0xD33 DUP3 DUP3 PUSH2 0xCEC JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xD53 JUMPI PUSH2 0xD52 PUSH2 0xCBD JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xD7C PUSH2 0xD77 DUP5 PUSH2 0xD38 JUMP JUMPDEST PUSH2 0xD1D JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0xD9F JUMPI PUSH2 0xD9E PUSH2 0xD64 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xDC8 JUMPI DUP1 PUSH2 0xDB4 DUP9 DUP3 PUSH2 0xC92 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xDA1 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xDE7 JUMPI PUSH2 0xDE6 PUSH2 0xCA7 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0xDF7 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0xD69 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE17 JUMPI PUSH2 0xE16 PUSH2 0xC71 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xE25 DUP6 DUP3 DUP7 ADD PUSH2 0xC92 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xE46 JUMPI PUSH2 0xE45 PUSH2 0xC76 JUMP JUMPDEST JUMPDEST PUSH2 0xE52 DUP6 DUP3 DUP7 ADD PUSH2 0xDD2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0xE77 JUMPI PUSH2 0xE76 PUSH2 0xCA7 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xE94 JUMPI PUSH2 0xE93 PUSH2 0xE5C JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0xEB0 JUMPI PUSH2 0xEAF PUSH2 0xD64 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xECE JUMPI PUSH2 0xECD PUSH2 0xC71 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xEEC JUMPI PUSH2 0xEEB PUSH2 0xC76 JUMP JUMPDEST JUMPDEST PUSH2 0xEF8 DUP6 DUP3 DUP7 ADD PUSH2 0xE61 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF2F DUP3 PUSH2 0xF04 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF3F DUP2 PUSH2 0xF24 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF5A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xF36 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xF80 JUMPI PUSH2 0xF7F PUSH2 0xCBD JUMP JUMPDEST JUMPDEST PUSH2 0xF89 DUP3 PUSH2 0xCAC JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFB8 PUSH2 0xFB3 DUP5 PUSH2 0xF65 JUMP JUMPDEST PUSH2 0xD1D JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0xFD4 JUMPI PUSH2 0xFD3 PUSH2 0xF60 JUMP JUMPDEST JUMPDEST PUSH2 0xFDF DUP5 DUP3 DUP6 PUSH2 0xF96 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xFFC JUMPI PUSH2 0xFFB PUSH2 0xCA7 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x100C DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0xFA5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x102B JUMPI PUSH2 0x102A PUSH2 0xC71 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1049 JUMPI PUSH2 0x1048 PUSH2 0xC76 JUMP JUMPDEST JUMPDEST PUSH2 0x1055 DUP5 DUP3 DUP6 ADD PUSH2 0xFE7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1073 DUP2 PUSH2 0x105E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x10B3 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1098 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10CA DUP3 PUSH2 0x1079 JUMP JUMPDEST PUSH2 0x10D4 DUP2 DUP6 PUSH2 0x1084 JUMP JUMPDEST SWAP4 POP PUSH2 0x10E4 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1095 JUMP JUMPDEST PUSH2 0x10ED DUP2 PUSH2 0xCAC JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x110D PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x106A JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x111F DUP2 DUP5 PUSH2 0x10BF JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x113E JUMPI PUSH2 0x113D PUSH2 0xC71 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x114C DUP5 DUP3 DUP6 ADD PUSH2 0xC92 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x116A PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xF36 JUMP JUMPDEST PUSH2 0x1177 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xF36 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F7420656E6F75676820455448210000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11C5 PUSH1 0xF DUP4 PUSH2 0x117E JUMP JUMPDEST SWAP2 POP PUSH2 0x11D0 DUP3 PUSH2 0x118F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x11F4 DUP2 PUSH2 0x11B8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F74206F70656E000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1231 PUSH1 0x8 DUP4 PUSH2 0x117E JUMP JUMPDEST SWAP2 POP PUSH2 0x123C DUP3 PUSH2 0x11FB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1260 DUP2 PUSH2 0x1224 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x55706B656570206E6F74206E6565646564000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x129D PUSH1 0x11 DUP4 PUSH2 0x117E JUMP JUMPDEST SWAP2 POP PUSH2 0x12A8 DUP3 PUSH2 0x1267 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x12CC DUP2 PUSH2 0x1290 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12E6 DUP2 PUSH2 0x12D3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1309 DUP2 PUSH2 0x12EC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1326 DUP2 PUSH2 0x130F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1345 DUP2 PUSH2 0x132C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x1360 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x12DD JUMP JUMPDEST PUSH2 0x136D PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x1300 JUMP JUMPDEST PUSH2 0x137A PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x131D JUMP JUMPDEST PUSH2 0x1387 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x133C JUMP JUMPDEST PUSH2 0x1394 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x133C JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x13AD DUP2 PUSH2 0xC7B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13C9 JUMPI PUSH2 0x13C8 PUSH2 0xC71 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x13D7 DUP5 DUP3 DUP6 ADD PUSH2 0x139E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x141A DUP3 PUSH2 0xBA1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1425 DUP4 PUSH2 0xBA1 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x143D JUMPI PUSH2 0x143C PUSH2 0x13E0 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x14AC DUP3 PUSH2 0xBA1 JUMP JUMPDEST SWAP2 POP PUSH2 0x14B7 DUP4 PUSH2 0xBA1 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x14C7 JUMPI PUSH2 0x14C6 PUSH2 0x1472 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14ED PUSH1 0x0 DUP4 PUSH2 0x14D2 JUMP JUMPDEST SWAP2 POP PUSH2 0x14F8 DUP3 PUSH2 0x14DD JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x150E DUP3 PUSH2 0x14E0 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5472616E73666572204661696C65642100000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x154E PUSH1 0x10 DUP4 PUSH2 0x117E JUMP JUMPDEST SWAP2 POP PUSH2 0x1559 DUP3 PUSH2 0x1518 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x157D DUP2 PUSH2 0x1541 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SLOAD PUSH10 0xA24B85FC232522D262F3 0xCB INVALID DUP9 0xBD 0xBC DUP8 SLOAD PUSH4 0x3A4BBF36 JUMPI 0xB4 0xE8 CALL 0xAE EXTCODESIZE 0xE7 0xA8 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ","sourceMap":"349:4300:19:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3695:95;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4017:99;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6618:256:17;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1855:261:19;;;:::i;:::-;;4330:101;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2569:506;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3912:97;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4124:88;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2124:437;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;4557:89;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4439:110;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3798:106;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4220:102;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3695:95;3742:7;3769:13;3762:20;;3695:95;:::o;4017:99::-;4064:11;4095:13;;;;;;;;;;;4088:20;;4017:99;:::o;6618:256:17:-;6731:14;6717:28;;:10;:28;;;6713:109;;6788:10;6800:14;6762:53;;;;;;;;;;;;:::i;:::-;;;;;;;;6713:109;6827:42;6846:9;6857:11;6827:18;:42::i;:::-;6618:256;;:::o;1855:261:19:-;1925:13;1912:9;:26;;1904:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;1994:16;1977:33;;;;;;;;:::i;:::-;;:13;;;;;;;;;;;:33;;;;;;;;:::i;:::-;;;1969:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;2034:9;2057:10;2034:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2097:10;2085:23;;;;;;;;;;;;1855:261::o;4330:101::-;4381:7;4408:15;;4401:22;;4330:101;:::o;2569:506::-;2638:17;2661:15;;;;;;;;;;;;;:11;:15::i;:::-;2637:39;;;2711:4;2695:20;;:12;:20;;;2687:50;;;;;;;;;;;;:::i;:::-;;;;;;;;;2764:23;2748:13;;:39;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;2798:17;2818:16;:35;;;2868:9;2899:16;773:1;2966:18;867:1;2818:201;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2798:221;;3057:9;3035:32;;;;;;;;;;2626:449;;2569:506;;:::o;3912:97::-;3960:7;3987:14;;;;;;;;;;;3980:21;;3912:97;:::o;4124:88::-;4168:7;867:1;4188:16;;;;4124:88;:::o;2124:437::-;2200:17;2219:12;2244:11;2279:13;;;;;;;;;;;2259:33;;;;;;;;:::i;:::-;;:16;:33;;;;;;;;:::i;:::-;;;2244:49;;2304:15;2361:10;2342:15;;2324;:33;;;;:::i;:::-;2323:48;2304:68;;2383:15;2421:1;2402:9;:16;;;;:20;2383:40;;2434:15;2476:1;2452:21;:25;2434:43;;2504:6;:20;;;;;2514:10;2504:20;:34;;;;;2528:10;2504:34;:48;;;;;2542:10;2504:48;2488:65;;2233:328;;;;2124:437;;;:::o;4557:89::-;4601:7;4628:10;4621:17;;4557:89;:::o;4439:110::-;4494:7;773:1;4514:27;;;;4439:110;:::o;3798:106::-;3853:7;3880:9;3890:5;3880:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3873:23;;3798:106;;;:::o;4220:102::-;4271:7;4298:9;:16;;;;4291:23;;4220:102;:::o;3083:604::-;3204:21;3245:9;:16;;;;3228:11;3240:1;3228:14;;;;;;;;:::i;:::-;;;;;;;;:33;;;;:::i;:::-;3204:57;;3272:28;3303:9;3313:13;3303:24;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3272:55;;3355:12;3338:14;;:29;;;;;;;;;;;;;;;;;;3394:16;3378:13;;:32;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;3455:1;3433:24;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3421:9;:36;;;;;;;;;;;;:::i;:::-;;3486:15;3468;:33;;;;3513:12;3531;:17;;3556:21;3531:51;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3512:70;;;3612:4;3601:15;;:7;:15;;;3593:44;;;;;;;;;;;;:::i;:::-;;;;;;;;;3666:12;3653:26;;;;;;;;;;;;3193:494;;;3083:604;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:77:20:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;442:180::-;490:77;487:1;480:88;587:4;584:1;577:15;611:4;608:1;601:15;628:121;717:1;710:5;707:12;697:46;;723:18;;:::i;:::-;697:46;628:121;:::o;755:143::-;808:7;837:5;826:16;;843:49;886:5;843:49;:::i;:::-;755:143;;;:::o;904:::-;968:9;1001:40;1035:5;1001:40;:::i;:::-;988:53;;904:143;;;:::o;1053:159::-;1154:51;1199:5;1154:51;:::i;:::-;1149:3;1142:64;1053:159;;:::o;1218:250::-;1325:4;1363:2;1352:9;1348:18;1340:26;;1376:85;1458:1;1447:9;1443:17;1434:6;1376:85;:::i;:::-;1218:250;;;;:::o;1474:75::-;1507:6;1540:2;1534:9;1524:19;;1474:75;:::o;1555:117::-;1664:1;1661;1654:12;1678:117;1787:1;1784;1777:12;1801:122;1874:24;1892:5;1874:24;:::i;:::-;1867:5;1864:35;1854:63;;1913:1;1910;1903:12;1854:63;1801:122;:::o;1929:139::-;1975:5;2013:6;2000:20;1991:29;;2029:33;2056:5;2029:33;:::i;:::-;1929:139;;;;:::o;2074:117::-;2183:1;2180;2173:12;2197:102;2238:6;2289:2;2285:7;2280:2;2273:5;2269:14;2265:28;2255:38;;2197:102;;;:::o;2305:180::-;2353:77;2350:1;2343:88;2450:4;2447:1;2440:15;2474:4;2471:1;2464:15;2491:281;2574:27;2596:4;2574:27;:::i;:::-;2566:6;2562:40;2704:6;2692:10;2689:22;2668:18;2656:10;2653:34;2650:62;2647:88;;;2715:18;;:::i;:::-;2647:88;2755:10;2751:2;2744:22;2534:238;2491:281;;:::o;2778:129::-;2812:6;2839:20;;:::i;:::-;2829:30;;2868:33;2896:4;2888:6;2868:33;:::i;:::-;2778:129;;;:::o;2913:311::-;2990:4;3080:18;3072:6;3069:30;3066:56;;;3102:18;;:::i;:::-;3066:56;3152:4;3144:6;3140:17;3132:25;;3212:4;3206;3202:15;3194:23;;2913:311;;;:::o;3230:117::-;3339:1;3336;3329:12;3370:710;3466:5;3491:81;3507:64;3564:6;3507:64;:::i;:::-;3491:81;:::i;:::-;3482:90;;3592:5;3621:6;3614:5;3607:21;3655:4;3648:5;3644:16;3637:23;;3708:4;3700:6;3696:17;3688:6;3684:30;3737:3;3729:6;3726:15;3723:122;;;3756:79;;:::i;:::-;3723:122;3871:6;3854:220;3888:6;3883:3;3880:15;3854:220;;;3963:3;3992:37;4025:3;4013:10;3992:37;:::i;:::-;3987:3;3980:50;4059:4;4054:3;4050:14;4043:21;;3930:144;3914:4;3909:3;3905:14;3898:21;;3854:220;;;3858:21;3472:608;;3370:710;;;;;:::o;4103:370::-;4174:5;4223:3;4216:4;4208:6;4204:17;4200:27;4190:122;;4231:79;;:::i;:::-;4190:122;4348:6;4335:20;4373:94;4463:3;4455:6;4448:4;4440:6;4436:17;4373:94;:::i;:::-;4364:103;;4180:293;4103:370;;;;:::o;4479:684::-;4572:6;4580;4629:2;4617:9;4608:7;4604:23;4600:32;4597:119;;;4635:79;;:::i;:::-;4597:119;4755:1;4780:53;4825:7;4816:6;4805:9;4801:22;4780:53;:::i;:::-;4770:63;;4726:117;4910:2;4899:9;4895:18;4882:32;4941:18;4933:6;4930:30;4927:117;;;4963:79;;:::i;:::-;4927:117;5068:78;5138:7;5129:6;5118:9;5114:22;5068:78;:::i;:::-;5058:88;;4853:303;4479:684;;;;;:::o;5169:117::-;5278:1;5275;5268:12;5305:552;5362:8;5372:6;5422:3;5415:4;5407:6;5403:17;5399:27;5389:122;;5430:79;;:::i;:::-;5389:122;5543:6;5530:20;5520:30;;5573:18;5565:6;5562:30;5559:117;;;5595:79;;:::i;:::-;5559:117;5709:4;5701:6;5697:17;5685:29;;5763:3;5755:4;5747:6;5743:17;5733:8;5729:32;5726:41;5723:128;;;5770:79;;:::i;:::-;5723:128;5305:552;;;;;:::o;5863:527::-;5933:6;5941;5990:2;5978:9;5969:7;5965:23;5961:32;5958:119;;;5996:79;;:::i;:::-;5958:119;6144:1;6133:9;6129:17;6116:31;6174:18;6166:6;6163:30;6160:117;;;6196:79;;:::i;:::-;6160:117;6309:64;6365:7;6356:6;6345:9;6341:22;6309:64;:::i;:::-;6291:82;;;;6087:296;5863:527;;;;;:::o;6396:126::-;6433:7;6473:42;6466:5;6462:54;6451:65;;6396:126;;;:::o;6528:96::-;6565:7;6594:24;6612:5;6594:24;:::i;:::-;6583:35;;6528:96;;;:::o;6630:118::-;6717:24;6735:5;6717:24;:::i;:::-;6712:3;6705:37;6630:118;;:::o;6754:222::-;6847:4;6885:2;6874:9;6870:18;6862:26;;6898:71;6966:1;6955:9;6951:17;6942:6;6898:71;:::i;:::-;6754:222;;;;:::o;6982:117::-;7091:1;7088;7081:12;7105:307;7166:4;7256:18;7248:6;7245:30;7242:56;;;7278:18;;:::i;:::-;7242:56;7316:29;7338:6;7316:29;:::i;:::-;7308:37;;7400:4;7394;7390:15;7382:23;;7105:307;;;:::o;7418:146::-;7515:6;7510:3;7505;7492:30;7556:1;7547:6;7542:3;7538:16;7531:27;7418:146;;;:::o;7570:423::-;7647:5;7672:65;7688:48;7729:6;7688:48;:::i;:::-;7672:65;:::i;:::-;7663:74;;7760:6;7753:5;7746:21;7798:4;7791:5;7787:16;7836:3;7827:6;7822:3;7818:16;7815:25;7812:112;;;7843:79;;:::i;:::-;7812:112;7933:54;7980:6;7975:3;7970;7933:54;:::i;:::-;7653:340;7570:423;;;;;:::o;8012:338::-;8067:5;8116:3;8109:4;8101:6;8097:17;8093:27;8083:122;;8124:79;;:::i;:::-;8083:122;8241:6;8228:20;8266:78;8340:3;8332:6;8325:4;8317:6;8313:17;8266:78;:::i;:::-;8257:87;;8073:277;8012:338;;;;:::o;8356:507::-;8424:6;8473:2;8461:9;8452:7;8448:23;8444:32;8441:119;;;8479:79;;:::i;:::-;8441:119;8627:1;8616:9;8612:17;8599:31;8657:18;8649:6;8646:30;8643:117;;;8679:79;;:::i;:::-;8643:117;8784:62;8838:7;8829:6;8818:9;8814:22;8784:62;:::i;:::-;8774:72;;8570:286;8356:507;;;;:::o;8869:90::-;8903:7;8946:5;8939:13;8932:21;8921:32;;8869:90;;;:::o;8965:109::-;9046:21;9061:5;9046:21;:::i;:::-;9041:3;9034:34;8965:109;;:::o;9080:98::-;9131:6;9165:5;9159:12;9149:22;;9080:98;;;:::o;9184:168::-;9267:11;9301:6;9296:3;9289:19;9341:4;9336:3;9332:14;9317:29;;9184:168;;;;:::o;9358:246::-;9439:1;9449:113;9463:6;9460:1;9457:13;9449:113;;;9548:1;9543:3;9539:11;9533:18;9529:1;9524:3;9520:11;9513:39;9485:2;9482:1;9478:10;9473:15;;9449:113;;;9596:1;9587:6;9582:3;9578:16;9571:27;9420:184;9358:246;;;:::o;9610:373::-;9696:3;9724:38;9756:5;9724:38;:::i;:::-;9778:70;9841:6;9836:3;9778:70;:::i;:::-;9771:77;;9857:65;9915:6;9910:3;9903:4;9896:5;9892:16;9857:65;:::i;:::-;9947:29;9969:6;9947:29;:::i;:::-;9942:3;9938:39;9931:46;;9700:283;9610:373;;;;:::o;9989:407::-;10122:4;10160:2;10149:9;10145:18;10137:26;;10173:65;10235:1;10224:9;10220:17;10211:6;10173:65;:::i;:::-;10285:9;10279:4;10275:20;10270:2;10259:9;10255:18;10248:48;10313:76;10384:4;10375:6;10313:76;:::i;:::-;10305:84;;9989:407;;;;;:::o;10402:329::-;10461:6;10510:2;10498:9;10489:7;10485:23;10481:32;10478:119;;;10516:79;;:::i;:::-;10478:119;10636:1;10661:53;10706:7;10697:6;10686:9;10682:22;10661:53;:::i;:::-;10651:63;;10607:117;10402:329;;;;:::o;10737:332::-;10858:4;10896:2;10885:9;10881:18;10873:26;;10909:71;10977:1;10966:9;10962:17;10953:6;10909:71;:::i;:::-;10990:72;11058:2;11047:9;11043:18;11034:6;10990:72;:::i;:::-;10737:332;;;;;:::o;11075:169::-;11159:11;11193:6;11188:3;11181:19;11233:4;11228:3;11224:14;11209:29;;11075:169;;;;:::o;11250:165::-;11390:17;11386:1;11378:6;11374:14;11367:41;11250:165;:::o;11421:366::-;11563:3;11584:67;11648:2;11643:3;11584:67;:::i;:::-;11577:74;;11660:93;11749:3;11660:93;:::i;:::-;11778:2;11773:3;11769:12;11762:19;;11421:366;;;:::o;11793:419::-;11959:4;11997:2;11986:9;11982:18;11974:26;;12046:9;12040:4;12036:20;12032:1;12021:9;12017:17;12010:47;12074:131;12200:4;12074:131;:::i;:::-;12066:139;;11793:419;;;:::o;12218:158::-;12358:10;12354:1;12346:6;12342:14;12335:34;12218:158;:::o;12382:365::-;12524:3;12545:66;12609:1;12604:3;12545:66;:::i;:::-;12538:73;;12620:93;12709:3;12620:93;:::i;:::-;12738:2;12733:3;12729:12;12722:19;;12382:365;;;:::o;12753:419::-;12919:4;12957:2;12946:9;12942:18;12934:26;;13006:9;13000:4;12996:20;12992:1;12981:9;12977:17;12970:47;13034:131;13160:4;13034:131;:::i;:::-;13026:139;;12753:419;;;:::o;13178:167::-;13318:19;13314:1;13306:6;13302:14;13295:43;13178:167;:::o;13351:366::-;13493:3;13514:67;13578:2;13573:3;13514:67;:::i;:::-;13507:74;;13590:93;13679:3;13590:93;:::i;:::-;13708:2;13703:3;13699:12;13692:19;;13351:366;;;:::o;13723:419::-;13889:4;13927:2;13916:9;13912:18;13904:26;;13976:9;13970:4;13966:20;13962:1;13951:9;13947:17;13940:47;14004:131;14130:4;14004:131;:::i;:::-;13996:139;;13723:419;;;:::o;14148:77::-;14185:7;14214:5;14203:16;;14148:77;;;:::o;14231:118::-;14318:24;14336:5;14318:24;:::i;:::-;14313:3;14306:37;14231:118;;:::o;14355:101::-;14391:7;14431:18;14424:5;14420:30;14409:41;;14355:101;;;:::o;14462:115::-;14547:23;14564:5;14547:23;:::i;:::-;14542:3;14535:36;14462:115;;:::o;14583:89::-;14619:7;14659:6;14652:5;14648:18;14637:29;;14583:89;;;:::o;14678:115::-;14763:23;14780:5;14763:23;:::i;:::-;14758:3;14751:36;14678:115;;:::o;14799:93::-;14835:7;14875:10;14868:5;14864:22;14853:33;;14799:93;;;:::o;14898:115::-;14983:23;15000:5;14983:23;:::i;:::-;14978:3;14971:36;14898:115;;:::o;15019:648::-;15216:4;15254:3;15243:9;15239:19;15231:27;;15268:71;15336:1;15325:9;15321:17;15312:6;15268:71;:::i;:::-;15349:70;15415:2;15404:9;15400:18;15391:6;15349:70;:::i;:::-;15429;15495:2;15484:9;15480:18;15471:6;15429:70;:::i;:::-;15509;15575:2;15564:9;15560:18;15551:6;15509:70;:::i;:::-;15589:71;15655:3;15644:9;15640:19;15631:6;15589:71;:::i;:::-;15019:648;;;;;;;;:::o;15673:143::-;15730:5;15761:6;15755:13;15746:22;;15777:33;15804:5;15777:33;:::i;:::-;15673:143;;;;:::o;15822:351::-;15892:6;15941:2;15929:9;15920:7;15916:23;15912:32;15909:119;;;15947:79;;:::i;:::-;15909:119;16067:1;16092:64;16148:7;16139:6;16128:9;16124:22;16092:64;:::i;:::-;16082:74;;16038:128;15822:351;;;;:::o;16179:180::-;16227:77;16224:1;16217:88;16324:4;16321:1;16314:15;16348:4;16345:1;16338:15;16365:194;16405:4;16425:20;16443:1;16425:20;:::i;:::-;16420:25;;16459:20;16477:1;16459:20;:::i;:::-;16454:25;;16503:1;16500;16496:9;16488:17;;16527:1;16521:4;16518:11;16515:37;;;16532:18;;:::i;:::-;16515:37;16365:194;;;;:::o;16565:180::-;16613:77;16610:1;16603:88;16710:4;16707:1;16700:15;16734:4;16731:1;16724:15;16751:180;16799:77;16796:1;16789:88;16896:4;16893:1;16886:15;16920:4;16917:1;16910:15;16937:176;16969:1;16986:20;17004:1;16986:20;:::i;:::-;16981:25;;17020:20;17038:1;17020:20;:::i;:::-;17015:25;;17059:1;17049:35;;17064:18;;:::i;:::-;17049:35;17105:1;17102;17098:9;17093:14;;16937:176;;;;:::o;17119:147::-;17220:11;17257:3;17242:18;;17119:147;;;;:::o;17272:114::-;;:::o;17392:398::-;17551:3;17572:83;17653:1;17648:3;17572:83;:::i;:::-;17565:90;;17664:93;17753:3;17664:93;:::i;:::-;17782:1;17777:3;17773:11;17766:18;;17392:398;;;:::o;17796:379::-;17980:3;18002:147;18145:3;18002:147;:::i;:::-;17995:154;;18166:3;18159:10;;17796:379;;;:::o;18181:166::-;18321:18;18317:1;18309:6;18305:14;18298:42;18181:166;:::o;18353:366::-;18495:3;18516:67;18580:2;18575:3;18516:67;:::i;:::-;18509:74;;18592:93;18681:3;18592:93;:::i;:::-;18710:2;18705:3;18701:12;18694:19;;18353:366;;;:::o;18725:419::-;18891:4;18929:2;18918:9;18914:18;18906:26;;18978:9;18972:4;18968:20;18964:1;18953:9;18949:17;18942:47;19006:131;19132:4;19006:131;:::i;:::-;18998:139;;18725:419;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"1112400","executionCost":"infinite","totalCost":"infinite"},"external":{"checkUpkeep(bytes)":"infinite","enterRaffle()":"infinite","getEntranceFee()":"infinite","getInterval()":"infinite","getLatestTimeStamp()":"2526","getNumWords()":"388","getNumberOfPlayers()":"2533","getPlayer(uint256)":"5033","getRaffleState()":"2641","getRecentWinner()":"2545","getRequestConfirmation()":"387","performUpkeep(bytes)":"infinite","rawFulfillRandomWords(uint256,uint256[])":"infinite"},"internal":{"fulfillRandomWords(uint256,uint256[] memory)":"infinite"}},"methodIdentifiers":{"checkUpkeep(bytes)":"6e04ff0d","enterRaffle()":"2cfcc539","getEntranceFee()":"09bc33a7","getInterval()":"91ad27b4","getLatestTimeStamp()":"320229eb","getNumWords()":"53a2c19a","getNumberOfPlayers()":"fd6673f5","getPlayer(uint256)":"e55ae4e8","getRaffleState()":"115cbaf5","getRecentWinner()":"473f1ddc","getRequestConfirmation()":"ca6a9ef8","performUpkeep(bytes)":"4585e33b","rawFulfillRandomWords(uint256,uint256[])":"1fe543e3"}},"metadata":"{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"vrfCoordinatorV2\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"entranceFee\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"gasLane\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"subscriptionId\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"callbackGasLimit\",\"type\":\"uint32\"},{\"internalType\":\"uint256\",\"name\":\"interval\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"have\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"want\",\"type\":\"address\"}],\"name\":\"OnlyCoordinatorCanFulfill\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"}],\"name\":\"RaffleEnter\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"}],\"name\":\"RequestedRaffleWinner\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"}],\"name\":\"WinnerPicked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"checkUpkeep\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"upkeepNeeded\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enterRaffle\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getEntranceFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getInterval\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLatestTimeStamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNumWords\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNumberOfPlayers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getPlayer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRaffleState\",\"outputs\":[{\"internalType\":\"enum Raffle.RaffleState\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRecentWinner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRequestConfirmation\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"performUpkeep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"randomWords\",\"type\":\"uint256[]\"}],\"name\":\"rawFulfillRandomWords\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Raffle.sol\":\"Raffle\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/ChainSpecificUtil.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\n\\nimport {ArbSys} from \\\"./vendor/@arbitrum/nitro-contracts/src/precompiles/ArbSys.sol\\\";\\nimport {ArbGasInfo} from \\\"./vendor/@arbitrum/nitro-contracts/src/precompiles/ArbGasInfo.sol\\\";\\n\\n//@dev A library that abstracts out opcodes that behave differently across chains.\\n//@dev The methods below return values that are pertinent to the given chain.\\n//@dev For instance, ChainSpecificUtil.getBlockNumber() returns L2 block number in L2 chains\\nlibrary ChainSpecificUtil {\\n  address private constant ARBSYS_ADDR = address(0x0000000000000000000000000000000000000064);\\n  ArbSys private constant ARBSYS = ArbSys(ARBSYS_ADDR);\\n  address private constant ARBGAS_ADDR = address(0x000000000000000000000000000000000000006C);\\n  ArbGasInfo private constant ARBGAS = ArbGasInfo(ARBGAS_ADDR);\\n  uint256 private constant ARB_MAINNET_CHAIN_ID = 42161;\\n  uint256 private constant ARB_GOERLI_TESTNET_CHAIN_ID = 421613;\\n  uint256 private constant ARB_SEPOLIA_TESTNET_CHAIN_ID = 421614;\\n\\n  function getBlockhash(uint64 blockNumber) internal view returns (bytes32) {\\n    uint256 chainid = block.chainid;\\n    if (\\n      chainid == ARB_MAINNET_CHAIN_ID ||\\n      chainid == ARB_GOERLI_TESTNET_CHAIN_ID ||\\n      chainid == ARB_SEPOLIA_TESTNET_CHAIN_ID\\n    ) {\\n      if ((getBlockNumber() - blockNumber) > 256 || blockNumber >= getBlockNumber()) {\\n        return \\\"\\\";\\n      }\\n      return ARBSYS.arbBlockHash(blockNumber);\\n    }\\n    return blockhash(blockNumber);\\n  }\\n\\n  function getBlockNumber() internal view returns (uint256) {\\n    uint256 chainid = block.chainid;\\n    if (chainid == ARB_MAINNET_CHAIN_ID || chainid == ARB_GOERLI_TESTNET_CHAIN_ID) {\\n      return ARBSYS.arbBlockNumber();\\n    }\\n    return block.number;\\n  }\\n\\n  function getCurrentTxL1GasFees() internal view returns (uint256) {\\n    uint256 chainid = block.chainid;\\n    if (chainid == ARB_MAINNET_CHAIN_ID || chainid == ARB_GOERLI_TESTNET_CHAIN_ID) {\\n      return ARBGAS.getCurrentTxL1GasFees();\\n    }\\n    return 0;\\n  }\\n\\n  /**\\n   * @notice Returns the gas cost in wei of calldataSizeBytes of calldata being posted\\n   * @notice to L1.\\n   */\\n  function getL1CalldataGasCost(uint256 calldataSizeBytes) internal view returns (uint256) {\\n    uint256 chainid = block.chainid;\\n    if (chainid == ARB_MAINNET_CHAIN_ID || chainid == ARB_GOERLI_TESTNET_CHAIN_ID) {\\n      (, uint256 l1PricePerByte, , , , ) = ARBGAS.getPricesInWei();\\n      // see https://developer.arbitrum.io/devs-how-tos/how-to-estimate-gas#where-do-we-get-all-this-information-from\\n      // for the justification behind the 140 number.\\n      return l1PricePerByte * (calldataSizeBytes + 140);\\n    }\\n    return 0;\\n  }\\n}\\n\",\"keccak256\":\"0x5a544649bb97cde531acc7bdb25a6c4b5f4f6bcbd592b57c4e2de201c251bcd7\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/automation/AutomationBase.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ncontract AutomationBase {\\n  error OnlySimulatedBackend();\\n\\n  /**\\n   * @notice method that allows it to be simulated via eth_call by checking that\\n   * the sender is the zero address.\\n   */\\n  function preventExecution() internal view {\\n    if (tx.origin != address(0)) {\\n      revert OnlySimulatedBackend();\\n    }\\n  }\\n\\n  /**\\n   * @notice modifier that allows it to be simulated via eth_call by checking\\n   * that the sender is the zero address.\\n   */\\n  modifier cannotExecute() {\\n    preventExecution();\\n    _;\\n  }\\n}\\n\",\"keccak256\":\"0x5d354afa1a97dffe66094397cdcbb0c14713cf3d609d88fd8f9891010e9a351a\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/automation/AutomationCompatible.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"./AutomationBase.sol\\\";\\nimport \\\"./interfaces/AutomationCompatibleInterface.sol\\\";\\n\\nabstract contract AutomationCompatible is AutomationBase, AutomationCompatibleInterface {}\\n\",\"keccak256\":\"0x40e5ae0eff4edd0740c1b5590d09c344f84dee031e82d5294563e99603774f80\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/automation/KeeperCompatible.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n/**\\n * @notice This is a deprecated interface. Please use AutomationCompatible directly.\\n */\\npragma solidity ^0.8.0;\\nimport {AutomationCompatible as KeeperCompatible} from \\\"./AutomationCompatible.sol\\\";\\nimport {AutomationBase as KeeperBase} from \\\"./AutomationBase.sol\\\";\\nimport {AutomationCompatibleInterface as KeeperCompatibleInterface} from \\\"./interfaces/AutomationCompatibleInterface.sol\\\";\\n\",\"keccak256\":\"0xa5f26a85ab9a927016e27af9f1ec33f878c28d8f06cb611e7fb2e189a5336a43\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/automation/interfaces/AutomationCompatibleInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AutomationCompatibleInterface {\\n  /**\\n   * @notice method that is simulated by the keepers to see if any work actually\\n   * needs to be performed. This method does does not actually need to be\\n   * executable, and since it is only ever simulated it can consume lots of gas.\\n   * @dev To ensure that it is never called, you may want to add the\\n   * cannotExecute modifier from KeeperBase to your implementation of this\\n   * method.\\n   * @param checkData specified in the upkeep registration so it is always the\\n   * same for a registered upkeep. This can easily be broken down into specific\\n   * arguments using `abi.decode`, so multiple upkeeps can be registered on the\\n   * same contract and easily differentiated by the contract.\\n   * @return upkeepNeeded boolean to indicate whether the keeper should call\\n   * performUpkeep or not.\\n   * @return performData bytes that the keeper should call performUpkeep with, if\\n   * upkeep is needed. If you would like to encode data to decode later, try\\n   * `abi.encode`.\\n   */\\n  function checkUpkeep(bytes calldata checkData) external returns (bool upkeepNeeded, bytes memory performData);\\n\\n  /**\\n   * @notice method that is actually executed by the keepers, via the registry.\\n   * The data returned by the checkUpkeep simulation will be passed into\\n   * this method to actually be executed.\\n   * @dev The input to this method should not be trusted, and the caller of the\\n   * method should not even be restricted to any single registry. Anyone should\\n   * be able call it, and the input should be validated, there is no guarantee\\n   * that the data passed in is the performData returned from checkUpkeep. This\\n   * could happen due to malicious keepers, racing keepers, or simply a state\\n   * change while the performUpkeep transaction is waiting for confirmation.\\n   * Always validate the data passed in.\\n   * @param performData is the data which was passed back from the checkData\\n   * simulation. If it is encoded, it can easily be decoded into other types by\\n   * calling `abi.decode`. This data should not be trusted, and should be\\n   * validated against the contract's current state.\\n   */\\n  function performUpkeep(bytes calldata performData) external;\\n}\\n\",\"keccak256\":\"0x67076747c6f66d8d43472a56e72879c350056bff82e069addaf9064922863340\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(\\n    uint80 _roundId\\n  ) external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n}\\n\",\"keccak256\":\"0xfe4e8bb4861bb3860ba890ab91a3b818ec66e5a8f544fb608cfcb73f433472cd\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/interfaces/BlockhashStoreInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface BlockhashStoreInterface {\\n  function getBlockhash(uint256 number) external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x0d39e3be84000b35faa198e8c4fcc1cfd65a876275c776f45b4e0d48c852b4cc\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/interfaces/TypeAndVersionInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nabstract contract TypeAndVersionInterface {\\n  function typeAndVersion() external pure virtual returns (string memory);\\n}\\n\",\"keccak256\":\"0x805cc9a91d54db1bea60cb19f38364f1eac2735bddb3476294fb803c2f6b7097\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface VRFCoordinatorV2Interface {\\n  /**\\n   * @notice Get configuration relevant for making requests\\n   * @return minimumRequestConfirmations global min for request confirmations\\n   * @return maxGasLimit global max for request gas limit\\n   * @return s_provingKeyHashes list of registered key hashes\\n   */\\n  function getRequestConfig() external view returns (uint16, uint32, bytes32[] memory);\\n\\n  /**\\n   * @notice Request a set of random words.\\n   * @param keyHash - Corresponds to a particular oracle job which uses\\n   * that key for generating the VRF proof. Different keyHash's have different gas price\\n   * ceilings, so you can select a specific one to bound your maximum per request cost.\\n   * @param subId  - The ID of the VRF subscription. Must be funded\\n   * with the minimum subscription balance required for the selected keyHash.\\n   * @param minimumRequestConfirmations - How many blocks you'd like the\\n   * oracle to wait before responding to the request. See SECURITY CONSIDERATIONS\\n   * for why you may want to request more. The acceptable range is\\n   * [minimumRequestBlockConfirmations, 200].\\n   * @param callbackGasLimit - How much gas you'd like to receive in your\\n   * fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords\\n   * may be slightly less than this amount because of gas used calling the function\\n   * (argument decoding etc.), so you may need to request slightly more than you expect\\n   * to have inside fulfillRandomWords. The acceptable range is\\n   * [0, maxGasLimit]\\n   * @param numWords - The number of uint256 random values you'd like to receive\\n   * in your fulfillRandomWords callback. Note these numbers are expanded in a\\n   * secure way by the VRFCoordinator from a single random value supplied by the oracle.\\n   * @return requestId - A unique identifier of the request. Can be used to match\\n   * a request to a response in fulfillRandomWords.\\n   */\\n  function requestRandomWords(\\n    bytes32 keyHash,\\n    uint64 subId,\\n    uint16 minimumRequestConfirmations,\\n    uint32 callbackGasLimit,\\n    uint32 numWords\\n  ) external returns (uint256 requestId);\\n\\n  /**\\n   * @notice Create a VRF subscription.\\n   * @return subId - A unique subscription id.\\n   * @dev You can manage the consumer set dynamically with addConsumer/removeConsumer.\\n   * @dev Note to fund the subscription, use transferAndCall. For example\\n   * @dev  LINKTOKEN.transferAndCall(\\n   * @dev    address(COORDINATOR),\\n   * @dev    amount,\\n   * @dev    abi.encode(subId));\\n   */\\n  function createSubscription() external returns (uint64 subId);\\n\\n  /**\\n   * @notice Get a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @return balance - LINK balance of the subscription in juels.\\n   * @return reqCount - number of requests for this subscription, determines fee tier.\\n   * @return owner - owner of the subscription.\\n   * @return consumers - list of consumer address which are able to use this subscription.\\n   */\\n  function getSubscription(\\n    uint64 subId\\n  ) external view returns (uint96 balance, uint64 reqCount, address owner, address[] memory consumers);\\n\\n  /**\\n   * @notice Request subscription owner transfer.\\n   * @param subId - ID of the subscription\\n   * @param newOwner - proposed new owner of the subscription\\n   */\\n  function requestSubscriptionOwnerTransfer(uint64 subId, address newOwner) external;\\n\\n  /**\\n   * @notice Request subscription owner transfer.\\n   * @param subId - ID of the subscription\\n   * @dev will revert if original owner of subId has\\n   * not requested that msg.sender become the new owner.\\n   */\\n  function acceptSubscriptionOwnerTransfer(uint64 subId) external;\\n\\n  /**\\n   * @notice Add a consumer to a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @param consumer - New consumer which can use the subscription\\n   */\\n  function addConsumer(uint64 subId, address consumer) external;\\n\\n  /**\\n   * @notice Remove a consumer from a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @param consumer - Consumer to remove from the subscription\\n   */\\n  function removeConsumer(uint64 subId, address consumer) external;\\n\\n  /**\\n   * @notice Cancel a subscription\\n   * @param subId - ID of the subscription\\n   * @param to - Where to send the remaining LINK to\\n   */\\n  function cancelSubscription(uint64 subId, address to) external;\\n\\n  /*\\n   * @notice Check to see if there exists a request commitment consumers\\n   * for all consumers and keyhashes for a given sub.\\n   * @param subId - ID of the subscription\\n   * @return true if there exists at least one unfulfilled request for the subscription, false\\n   * otherwise.\\n   */\\n  function pendingRequestExists(uint64 subId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xa9f8b7e09811f4ac9f421116b5d6bcf50b5748025c0cb012aaf5ff7c39a6b46a\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"./ConfirmedOwnerWithProposal.sol\\\";\\n\\n/**\\n * @title The ConfirmedOwner contract\\n * @notice A contract with helpers for basic contract ownership.\\n */\\ncontract ConfirmedOwner is ConfirmedOwnerWithProposal {\\n  constructor(address newOwner) ConfirmedOwnerWithProposal(newOwner, address(0)) {}\\n}\\n\",\"keccak256\":\"0x99d0b0786fe368970009c703f2249bfbc56340ddf1a28b60d2915bb58c34cd72\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"../interfaces/IOwnable.sol\\\";\\n\\n/**\\n * @title The ConfirmedOwner contract\\n * @notice A contract with helpers for basic contract ownership.\\n */\\ncontract ConfirmedOwnerWithProposal is IOwnable {\\n  address private s_owner;\\n  address private s_pendingOwner;\\n\\n  event OwnershipTransferRequested(address indexed from, address indexed to);\\n  event OwnershipTransferred(address indexed from, address indexed to);\\n\\n  constructor(address newOwner, address pendingOwner) {\\n    require(newOwner != address(0), \\\"Cannot set owner to zero\\\");\\n\\n    s_owner = newOwner;\\n    if (pendingOwner != address(0)) {\\n      _transferOwnership(pendingOwner);\\n    }\\n  }\\n\\n  /**\\n   * @notice Allows an owner to begin transferring ownership to a new address,\\n   * pending.\\n   */\\n  function transferOwnership(address to) public override onlyOwner {\\n    _transferOwnership(to);\\n  }\\n\\n  /**\\n   * @notice Allows an ownership transfer to be completed by the recipient.\\n   */\\n  function acceptOwnership() external override {\\n    require(msg.sender == s_pendingOwner, \\\"Must be proposed owner\\\");\\n\\n    address oldOwner = s_owner;\\n    s_owner = msg.sender;\\n    s_pendingOwner = address(0);\\n\\n    emit OwnershipTransferred(oldOwner, msg.sender);\\n  }\\n\\n  /**\\n   * @notice Get the current owner\\n   */\\n  function owner() public view override returns (address) {\\n    return s_owner;\\n  }\\n\\n  /**\\n   * @notice validate, transfer ownership, and emit relevant events\\n   */\\n  function _transferOwnership(address to) private {\\n    require(to != msg.sender, \\\"Cannot transfer to self\\\");\\n\\n    s_pendingOwner = to;\\n\\n    emit OwnershipTransferRequested(s_owner, to);\\n  }\\n\\n  /**\\n   * @notice validate access\\n   */\\n  function _validateOwnership() internal view {\\n    require(msg.sender == s_owner, \\\"Only callable by owner\\\");\\n  }\\n\\n  /**\\n   * @notice Reverts if called by anyone other than the contract owner.\\n   */\\n  modifier onlyOwner() {\\n    _validateOwnership();\\n    _;\\n  }\\n}\\n\",\"keccak256\":\"0x215529a99534a40e6257ef2282a91ea4a95b66debc3997866406907622efb405\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/shared/interfaces/IERC677Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.6;\\n\\ninterface IERC677Receiver {\\n  function onTokenTransfer(address sender, uint256 amount, bytes calldata data) external;\\n}\\n\",\"keccak256\":\"0x5f9ee31598e2250815033c2f4e1e7e747f917815378938505063df1d4ae603ec\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/shared/interfaces/IOwnable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface IOwnable {\\n  function owner() external returns (address);\\n\\n  function transferOwnership(address recipient) external;\\n\\n  function acceptOwnership() external;\\n}\\n\",\"keccak256\":\"0x885de72b7b4e4f1bf8ba817a3f2bcc37fd9022d342c4ce76782151c30122d767\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/shared/interfaces/LinkTokenInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface LinkTokenInterface {\\n  function allowance(address owner, address spender) external view returns (uint256 remaining);\\n\\n  function approve(address spender, uint256 value) external returns (bool success);\\n\\n  function balanceOf(address owner) external view returns (uint256 balance);\\n\\n  function decimals() external view returns (uint8 decimalPlaces);\\n\\n  function decreaseApproval(address spender, uint256 addedValue) external returns (bool success);\\n\\n  function increaseApproval(address spender, uint256 subtractedValue) external;\\n\\n  function name() external view returns (string memory tokenName);\\n\\n  function symbol() external view returns (string memory tokenSymbol);\\n\\n  function totalSupply() external view returns (uint256 totalTokensIssued);\\n\\n  function transfer(address to, uint256 value) external returns (bool success);\\n\\n  function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool success);\\n\\n  function transferFrom(address from, address to, uint256 value) external returns (bool success);\\n}\\n\",\"keccak256\":\"0xac02fbc0c7d194e525a71f524d1f7c472df73e19c2b527d7b529badaeaf0ec51\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/vendor/@arbitrum/nitro-contracts/src/precompiles/ArbGasInfo.sol\":{\"content\":\"// Copyright 2021-2022, Offchain Labs, Inc.\\n// For license information, see https://github.com/nitro/blob/master/LICENSE\\n// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity >=0.4.21 <0.9.0;\\n\\ninterface ArbGasInfo {\\n    // return gas prices in wei, assuming the specified aggregator is used\\n    //        (\\n    //            per L2 tx,\\n    //            per L1 calldata unit, (zero byte = 4 units, nonzero byte = 16 units)\\n    //            per storage allocation,\\n    //            per ArbGas base,\\n    //            per ArbGas congestion,\\n    //            per ArbGas total\\n    //        )\\n    function getPricesInWeiWithAggregator(address aggregator) external view returns (uint, uint, uint, uint, uint, uint);\\n\\n    // return gas prices in wei, as described above, assuming the caller's preferred aggregator is used\\n    //     if the caller hasn't specified a preferred aggregator, the default aggregator is assumed\\n    function getPricesInWei() external view returns (uint, uint, uint, uint, uint, uint);\\n\\n    // return prices in ArbGas (per L2 tx, per L1 calldata unit, per storage allocation),\\n    //       assuming the specified aggregator is used\\n    function getPricesInArbGasWithAggregator(address aggregator) external view returns (uint, uint, uint);\\n\\n    // return gas prices in ArbGas, as described above, assuming the caller's preferred aggregator is used\\n    //     if the caller hasn't specified a preferred aggregator, the default aggregator is assumed\\n    function getPricesInArbGas() external view returns (uint, uint, uint);\\n\\n    // return gas accounting parameters (speedLimitPerSecond, gasPoolMax, maxTxGasLimit)\\n    function getGasAccountingParams() external view returns (uint, uint, uint);\\n\\n    // get ArbOS's estimate of the L1 gas price in wei\\n    function getL1GasPriceEstimate() external view returns(uint);\\n\\n    // set ArbOS's estimate of the L1 gas price in wei\\n    // reverts unless called by chain owner or designated gas oracle (if any)\\n    function setL1GasPriceEstimate(uint priceInWei) external;\\n\\n    // get L1 gas fees paid by the current transaction (txBaseFeeWei, calldataFeeWei)\\n    function getCurrentTxL1GasFees() external view returns(uint);\\n}\\n\",\"keccak256\":\"0x70607287132cc13f599a31a2eb679f4259f86429ea2fdf4f8f02be3044f6db5a\",\"license\":\"BUSL-1.1\"},\"@chainlink/contracts/src/v0.8/vendor/@arbitrum/nitro-contracts/src/precompiles/ArbSys.sol\":{\"content\":\"// Copyright 2021-2022, Offchain Labs, Inc.\\n// For license information, see https://github.com/nitro/blob/master/LICENSE\\n// SPDX-License-Identifier: BUSL-1.1\\n\\npragma solidity >=0.4.21 <0.9.0;\\n\\n/**\\n * @title System level functionality\\n * @notice For use by contracts to interact with core L2-specific functionality.\\n * Precompiled contract that exists in every Arbitrum chain at address(100), 0x0000000000000000000000000000000000000064.\\n */\\ninterface ArbSys {\\n    /**\\n     * @notice Get Arbitrum block number (distinct from L1 block number; Arbitrum genesis block has block number 0)\\n     * @return block number as int\\n     */\\n    function arbBlockNumber() external view returns (uint256);\\n\\n    /**\\n     * @notice Get Arbitrum block hash (reverts unless currentBlockNum-256 <= arbBlockNum < currentBlockNum)\\n     * @return block hash\\n     */\\n    function arbBlockHash(uint256 arbBlockNum) external view returns (bytes32);\\n\\n    /**\\n     * @notice Gets the rollup's unique chain identifier\\n     * @return Chain identifier as int\\n     */\\n    function arbChainID() external view returns (uint256);\\n\\n    /**\\n     * @notice Get internal version number identifying an ArbOS build\\n     * @return version number as int\\n     */\\n    function arbOSVersion() external view returns (uint256);\\n\\n    /**\\n     * @notice Returns 0 since Nitro has no concept of storage gas\\n     * @return uint 0\\n     */\\n    function getStorageGasAvailable() external view returns (uint256);\\n\\n    /**\\n     * @notice (deprecated) check if current call is top level (meaning it was triggered by an EoA or a L1 contract)\\n     * @dev this call has been deprecated and may be removed in a future release\\n     * @return true if current execution frame is not a call by another L2 contract\\n     */\\n    function isTopLevelCall() external view returns (bool);\\n\\n    /**\\n     * @notice map L1 sender contract address to its L2 alias\\n     * @param sender sender address\\n     * @param unused argument no longer used\\n     * @return aliased sender address\\n     */\\n    function mapL1SenderContractAddressToL2Alias(address sender, address unused)\\n        external\\n        pure\\n        returns (address);\\n\\n    /**\\n     * @notice check if the caller (of this caller of this) is an aliased L1 contract address\\n     * @return true iff the caller's address is an alias for an L1 contract address\\n     */\\n    function wasMyCallersAddressAliased() external view returns (bool);\\n\\n    /**\\n     * @notice return the address of the caller (of this caller of this), without applying L1 contract address aliasing\\n     * @return address of the caller's caller, without applying L1 contract address aliasing\\n     */\\n    function myCallersAddressWithoutAliasing() external view returns (address);\\n\\n    /**\\n     * @notice Send given amount of Eth to dest from sender.\\n     * This is a convenience function, which is equivalent to calling sendTxToL1 with empty data.\\n     * @param destination recipient address on L1\\n     * @return unique identifier for this L2-to-L1 transaction.\\n     */\\n    function withdrawEth(address destination)\\n        external\\n        payable\\n        returns (uint256);\\n\\n    /**\\n     * @notice Send a transaction to L1\\n     * @dev it is not possible to execute on the L1 any L2-to-L1 transaction which contains data\\n     * to a contract address without any code (as enforced by the Bridge contract).\\n     * @param destination recipient address on L1\\n     * @param data (optional) calldata for L1 contract call\\n     * @return a unique identifier for this L2-to-L1 transaction.\\n     */\\n    function sendTxToL1(address destination, bytes calldata data)\\n        external\\n        payable\\n        returns (uint256);\\n\\n    /**\\n     * @notice Get send Merkle tree state\\n     * @return size number of sends in the history\\n     * @return root root hash of the send history\\n     * @return partials hashes of partial subtrees in the send history tree\\n     */\\n    function sendMerkleTreeState()\\n        external\\n        view\\n        returns (\\n            uint256 size,\\n            bytes32 root,\\n            bytes32[] memory partials\\n        );\\n\\n    /**\\n     * @notice creates a send txn from L2 to L1\\n     * @param position = (level << 192) + leaf = (0 << 192) + leaf = leaf\\n     */\\n    event L2ToL1Tx(\\n        address caller,\\n        address indexed destination,\\n        uint256 indexed hash,\\n        uint256 indexed position,\\n        uint256 arbBlockNum,\\n        uint256 ethBlockNum,\\n        uint256 timestamp,\\n        uint256 callvalue,\\n        bytes data\\n    );\\n\\n    /// @dev DEPRECATED in favour of the new L2ToL1Tx event above after the nitro upgrade\\n    event L2ToL1Transaction(\\n        address caller,\\n        address indexed destination,\\n        uint256 indexed uniqueId,\\n        uint256 indexed batchNumber,\\n        uint256 indexInBatch,\\n        uint256 arbBlockNum,\\n        uint256 ethBlockNum,\\n        uint256 timestamp,\\n        uint256 callvalue,\\n        bytes data\\n    );\\n\\n    /**\\n     * @notice logs a merkle branch for proof synthesis\\n     * @param reserved an index meant only to align the 4th index with L2ToL1Transaction's 4th event\\n     * @param hash the merkle hash\\n     * @param position = (level << 192) + leaf\\n     */\\n    event SendMerkleUpdate(\\n        uint256 indexed reserved,\\n        bytes32 indexed hash,\\n        uint256 indexed position\\n    );\\n}\\n\",\"keccak256\":\"0xa8461b373712cb0f4950ef9cad1d12fb38442da76cd57ff916baa7920f7b5077\",\"license\":\"BUSL-1.1\"},\"@chainlink/contracts/src/v0.8/vrf/VRF.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n/** ****************************************************************************\\n  * @notice Verification of verifiable-random-function (VRF) proofs, following\\n  * @notice https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-5.3\\n  * @notice See https://eprint.iacr.org/2017/099.pdf for security proofs.\\n\\n  * @dev Bibliographic references:\\n\\n  * @dev Goldberg, et al., \\\"Verifiable Random Functions (VRFs)\\\", Internet Draft\\n  * @dev draft-irtf-cfrg-vrf-05, IETF, Aug 11 2019,\\n  * @dev https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05\\n\\n  * @dev Papadopoulos, et al., \\\"Making NSEC5 Practical for DNSSEC\\\", Cryptology\\n  * @dev ePrint Archive, Report 2017/099, https://eprint.iacr.org/2017/099.pdf\\n  * ****************************************************************************\\n  * @dev USAGE\\n\\n  * @dev The main entry point is randomValueFromVRFProof. See its docstring.\\n  * ****************************************************************************\\n  * @dev PURPOSE\\n\\n  * @dev Reggie the Random Oracle (not his real job) wants to provide randomness\\n  * @dev to Vera the verifier in such a way that Vera can be sure he's not\\n  * @dev making his output up to suit himself. Reggie provides Vera a public key\\n  * @dev to which he knows the secret key. Each time Vera provides a seed to\\n  * @dev Reggie, he gives back a value which is computed completely\\n  * @dev deterministically from the seed and the secret key.\\n\\n  * @dev Reggie provides a proof by which Vera can verify that the output was\\n  * @dev correctly computed once Reggie tells it to her, but without that proof,\\n  * @dev the output is computationally indistinguishable to her from a uniform\\n  * @dev random sample from the output space.\\n\\n  * @dev The purpose of this contract is to perform that verification.\\n  * ****************************************************************************\\n  * @dev DESIGN NOTES\\n\\n  * @dev The VRF algorithm verified here satisfies the full uniqueness, full\\n  * @dev collision resistance, and full pseudo-randomness security properties.\\n  * @dev See \\\"SECURITY PROPERTIES\\\" below, and\\n  * @dev https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-3\\n\\n  * @dev An elliptic curve point is generally represented in the solidity code\\n  * @dev as a uint256[2], corresponding to its affine coordinates in\\n  * @dev GF(FIELD_SIZE).\\n\\n  * @dev For the sake of efficiency, this implementation deviates from the spec\\n  * @dev in some minor ways:\\n\\n  * @dev - Keccak hash rather than the SHA256 hash recommended in\\n  * @dev   https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-5.5\\n  * @dev   Keccak costs much less gas on the EVM, and provides similar security.\\n\\n  * @dev - Secp256k1 curve instead of the P-256 or ED25519 curves recommended in\\n  * @dev   https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-5.5\\n  * @dev   For curve-point multiplication, it's much cheaper to abuse ECRECOVER\\n\\n  * @dev - hashToCurve recursively hashes until it finds a curve x-ordinate. On\\n  * @dev   the EVM, this is slightly more efficient than the recommendation in\\n  * @dev   https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-5.4.1.1\\n  * @dev   step 5, to concatenate with a nonce then hash, and rehash with the\\n  * @dev   nonce updated until a valid x-ordinate is found.\\n\\n  * @dev - hashToCurve does not include a cipher version string or the byte 0x1\\n  * @dev   in the hash message, as recommended in step 5.B of the draft\\n  * @dev   standard. They are unnecessary here because no variation in the\\n  * @dev   cipher suite is allowed.\\n\\n  * @dev - Similarly, the hash input in scalarFromCurvePoints does not include a\\n  * @dev   commitment to the cipher suite, either, which differs from step 2 of\\n  * @dev   https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-5.4.3\\n  * @dev   . Also, the hash input is the concatenation of the uncompressed\\n  * @dev   points, not the compressed points as recommended in step 3.\\n\\n  * @dev - In the calculation of the challenge value \\\"c\\\", the \\\"u\\\" value (i.e.\\n  * @dev   the value computed by Reggie as the nonce times the secp256k1\\n  * @dev   generator point, see steps 5 and 7 of\\n  * @dev   https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-5.3\\n  * @dev   ) is replaced by its ethereum address, i.e. the lower 160 bits of the\\n  * @dev   keccak hash of the original u. This is because we only verify the\\n  * @dev   calculation of u up to its address, by abusing ECRECOVER.\\n  * ****************************************************************************\\n  * @dev   SECURITY PROPERTIES\\n\\n  * @dev Here are the security properties for this VRF:\\n\\n  * @dev Full uniqueness: For any seed and valid VRF public key, there is\\n  * @dev   exactly one VRF output which can be proved to come from that seed, in\\n  * @dev   the sense that the proof will pass verifyVRFProof.\\n\\n  * @dev Full collision resistance: It's cryptographically infeasible to find\\n  * @dev   two seeds with same VRF output from a fixed, valid VRF key\\n\\n  * @dev Full pseudorandomness: Absent the proofs that the VRF outputs are\\n  * @dev   derived from a given seed, the outputs are computationally\\n  * @dev   indistinguishable from randomness.\\n\\n  * @dev https://eprint.iacr.org/2017/099.pdf, Appendix B contains the proofs\\n  * @dev for these properties.\\n\\n  * @dev For secp256k1, the key validation described in section\\n  * @dev https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-5.6\\n  * @dev is unnecessary, because secp256k1 has cofactor 1, and the\\n  * @dev representation of the public key used here (affine x- and y-ordinates\\n  * @dev of the secp256k1 point on the standard y^2=x^3+7 curve) cannot refer to\\n  * @dev the point at infinity.\\n  * ****************************************************************************\\n  * @dev OTHER SECURITY CONSIDERATIONS\\n  *\\n  * @dev The seed input to the VRF could in principle force an arbitrary amount\\n  * @dev of work in hashToCurve, by requiring extra rounds of hashing and\\n  * @dev checking whether that's yielded the x ordinate of a secp256k1 point.\\n  * @dev However, under the Random Oracle Model the probability of choosing a\\n  * @dev point which forces n extra rounds in hashToCurve is 2\\u207b\\u207f. The base cost\\n  * @dev for calling hashToCurve is about 25,000 gas, and each round of checking\\n  * @dev for a valid x ordinate costs about 15,555 gas, so to find a seed for\\n  * @dev which hashToCurve would cost more than 2,017,000 gas, one would have to\\n  * @dev try, in expectation, about 2\\u00b9\\u00b2\\u2078 seeds, which is infeasible for any\\n  * @dev foreseeable computational resources. (25,000 + 128 * 15,555 < 2,017,000.)\\n\\n  * @dev Since the gas block limit for the Ethereum main net is 10,000,000 gas,\\n  * @dev this means it is infeasible for an adversary to prevent correct\\n  * @dev operation of this contract by choosing an adverse seed.\\n\\n  * @dev (See TestMeasureHashToCurveGasCost for verification of the gas cost for\\n  * @dev hashToCurve.)\\n\\n  * @dev It may be possible to make a secure constant-time hashToCurve function.\\n  * @dev See notes in hashToCurve docstring.\\n*/\\ncontract VRF {\\n  // See https://www.secg.org/sec2-v2.pdf, section 2.4.1, for these constants.\\n  // Number of points in Secp256k1\\n  uint256 private constant GROUP_ORDER = 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141;\\n  // Prime characteristic of the galois field over which Secp256k1 is defined\\n  uint256 private constant FIELD_SIZE =\\n    // solium-disable-next-line indentation\\n    0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F;\\n  uint256 private constant WORD_LENGTH_BYTES = 0x20;\\n\\n  // (base^exponent) % FIELD_SIZE\\n  // Cribbed from https://medium.com/@rbkhmrcr/precompiles-solidity-e5d29bd428c4\\n  function bigModExp(uint256 base, uint256 exponent) internal view returns (uint256 exponentiation) {\\n    uint256 callResult;\\n    uint256[6] memory bigModExpContractInputs;\\n    bigModExpContractInputs[0] = WORD_LENGTH_BYTES; // Length of base\\n    bigModExpContractInputs[1] = WORD_LENGTH_BYTES; // Length of exponent\\n    bigModExpContractInputs[2] = WORD_LENGTH_BYTES; // Length of modulus\\n    bigModExpContractInputs[3] = base;\\n    bigModExpContractInputs[4] = exponent;\\n    bigModExpContractInputs[5] = FIELD_SIZE;\\n    uint256[1] memory output;\\n    assembly {\\n      // solhint-disable-line no-inline-assembly\\n      callResult := staticcall(\\n        not(0), // Gas cost: no limit\\n        0x05, // Bigmodexp contract address\\n        bigModExpContractInputs,\\n        0xc0, // Length of input segment: 6*0x20-bytes\\n        output,\\n        0x20 // Length of output segment\\n      )\\n    }\\n    if (callResult == 0) {\\n      revert(\\\"bigModExp failure!\\\");\\n    }\\n    return output[0];\\n  }\\n\\n  // Let q=FIELD_SIZE. q % 4 = 3, \\u2234 x\\u2261r^2 mod q \\u21d2 x^SQRT_POWER\\u2261\\u00b1r mod q.  See\\n  // https://en.wikipedia.org/wiki/Modular_square_root#Prime_or_prime_power_modulus\\n  uint256 private constant SQRT_POWER = (FIELD_SIZE + 1) >> 2;\\n\\n  // Computes a s.t. a^2 = x in the field. Assumes a exists\\n  function squareRoot(uint256 x) internal view returns (uint256) {\\n    return bigModExp(x, SQRT_POWER);\\n  }\\n\\n  // The value of y^2 given that (x,y) is on secp256k1.\\n  function ySquared(uint256 x) internal pure returns (uint256) {\\n    // Curve is y^2=x^3+7. See section 2.4.1 of https://www.secg.org/sec2-v2.pdf\\n    uint256 xCubed = mulmod(x, mulmod(x, x, FIELD_SIZE), FIELD_SIZE);\\n    return addmod(xCubed, 7, FIELD_SIZE);\\n  }\\n\\n  // True iff p is on secp256k1\\n  function isOnCurve(uint256[2] memory p) internal pure returns (bool) {\\n    // Section 2.3.6. in https://www.secg.org/sec1-v2.pdf\\n    // requires each ordinate to be in [0, ..., FIELD_SIZE-1]\\n    require(p[0] < FIELD_SIZE, \\\"invalid x-ordinate\\\");\\n    require(p[1] < FIELD_SIZE, \\\"invalid y-ordinate\\\");\\n    return ySquared(p[0]) == mulmod(p[1], p[1], FIELD_SIZE);\\n  }\\n\\n  // Hash x uniformly into {0, ..., FIELD_SIZE-1}.\\n  function fieldHash(bytes memory b) internal pure returns (uint256 x_) {\\n    x_ = uint256(keccak256(b));\\n    // Rejecting if x >= FIELD_SIZE corresponds to step 2.1 in section 2.3.4 of\\n    // http://www.secg.org/sec1-v2.pdf , which is part of the definition of\\n    // string_to_point in the IETF draft\\n    while (x_ >= FIELD_SIZE) {\\n      x_ = uint256(keccak256(abi.encodePacked(x_)));\\n    }\\n  }\\n\\n  // Hash b to a random point which hopefully lies on secp256k1. The y ordinate\\n  // is always even, due to\\n  // https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-5.4.1.1\\n  // step 5.C, which references arbitrary_string_to_point, defined in\\n  // https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-5.5 as\\n  // returning the point with given x ordinate, and even y ordinate.\\n  function newCandidateSecp256k1Point(bytes memory b) internal view returns (uint256[2] memory p) {\\n    unchecked {\\n      p[0] = fieldHash(b);\\n      p[1] = squareRoot(ySquared(p[0]));\\n      if (p[1] % 2 == 1) {\\n        // Note that 0 <= p[1] < FIELD_SIZE\\n        // so this cannot wrap, we use unchecked to save gas.\\n        p[1] = FIELD_SIZE - p[1];\\n      }\\n    }\\n  }\\n\\n  // Domain-separation tag for initial hash in hashToCurve. Corresponds to\\n  // vrf.go/hashToCurveHashPrefix\\n  uint256 internal constant HASH_TO_CURVE_HASH_PREFIX = 1;\\n\\n  // Cryptographic hash function onto the curve.\\n  //\\n  // Corresponds to algorithm in section 5.4.1.1 of the draft standard. (But see\\n  // DESIGN NOTES above for slight differences.)\\n  //\\n  // TODO(alx): Implement a bounded-computation hash-to-curve, as described in\\n  // \\\"Construction of Rational Points on Elliptic Curves over Finite Fields\\\"\\n  // http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.831.5299&rep=rep1&type=pdf\\n  // and suggested by\\n  // https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-hash-to-curve-01#section-5.2.2\\n  // (Though we can't used exactly that because secp256k1's j-invariant is 0.)\\n  //\\n  // This would greatly simplify the analysis in \\\"OTHER SECURITY CONSIDERATIONS\\\"\\n  // https://www.pivotaltracker.com/story/show/171120900\\n  function hashToCurve(uint256[2] memory pk, uint256 input) internal view returns (uint256[2] memory rv) {\\n    rv = newCandidateSecp256k1Point(abi.encodePacked(HASH_TO_CURVE_HASH_PREFIX, pk, input));\\n    while (!isOnCurve(rv)) {\\n      rv = newCandidateSecp256k1Point(abi.encodePacked(rv[0]));\\n    }\\n  }\\n\\n  /** *********************************************************************\\n   * @notice Check that product==scalar*multiplicand\\n   *\\n   * @dev Based on Vitalik Buterin's idea in ethresear.ch post cited below.\\n   *\\n   * @param multiplicand: secp256k1 point\\n   * @param scalar: non-zero GF(GROUP_ORDER) scalar\\n   * @param product: secp256k1 expected to be multiplier * multiplicand\\n   * @return verifies true iff product==scalar*multiplicand, with cryptographically high probability\\n   */\\n  function ecmulVerify(\\n    uint256[2] memory multiplicand,\\n    uint256 scalar,\\n    uint256[2] memory product\\n  ) internal pure returns (bool verifies) {\\n    require(scalar != 0, \\\"zero scalar\\\"); // Rules out an ecrecover failure case\\n    uint256 x = multiplicand[0]; // x ordinate of multiplicand\\n    uint8 v = multiplicand[1] % 2 == 0 ? 27 : 28; // parity of y ordinate\\n    // https://ethresear.ch/t/you-can-kinda-abuse-ecrecover-to-do-ecmul-in-secp256k1-today/2384/9\\n    // Point corresponding to address ecrecover(0, v, x, s=scalar*x) is\\n    // (x\\u207b\\u00b9 mod GROUP_ORDER) * (scalar * x * multiplicand - 0 * g), i.e.\\n    // scalar*multiplicand. See https://crypto.stackexchange.com/a/18106\\n    bytes32 scalarTimesX = bytes32(mulmod(scalar, x, GROUP_ORDER));\\n    address actual = ecrecover(bytes32(0), v, bytes32(x), scalarTimesX);\\n    // Explicit conversion to address takes bottom 160 bits\\n    address expected = address(uint160(uint256(keccak256(abi.encodePacked(product)))));\\n    return (actual == expected);\\n  }\\n\\n  // Returns x1/z1-x2/z2=(x1z2-x2z1)/(z1z2) in projective coordinates on P\\u00b9(\\ud835\\udd3d\\u2099)\\n  function projectiveSub(\\n    uint256 x1,\\n    uint256 z1,\\n    uint256 x2,\\n    uint256 z2\\n  ) internal pure returns (uint256 x3, uint256 z3) {\\n    unchecked {\\n      uint256 num1 = mulmod(z2, x1, FIELD_SIZE);\\n      // Note this cannot wrap since x2 is a point in [0, FIELD_SIZE-1]\\n      // we use unchecked to save gas.\\n      uint256 num2 = mulmod(FIELD_SIZE - x2, z1, FIELD_SIZE);\\n      (x3, z3) = (addmod(num1, num2, FIELD_SIZE), mulmod(z1, z2, FIELD_SIZE));\\n    }\\n  }\\n\\n  // Returns x1/z1*x2/z2=(x1x2)/(z1z2), in projective coordinates on P\\u00b9(\\ud835\\udd3d\\u2099)\\n  function projectiveMul(\\n    uint256 x1,\\n    uint256 z1,\\n    uint256 x2,\\n    uint256 z2\\n  ) internal pure returns (uint256 x3, uint256 z3) {\\n    (x3, z3) = (mulmod(x1, x2, FIELD_SIZE), mulmod(z1, z2, FIELD_SIZE));\\n  }\\n\\n  /** **************************************************************************\\n        @notice Computes elliptic-curve sum, in projective co-ordinates\\n\\n        @dev Using projective coordinates avoids costly divisions\\n\\n        @dev To use this with p and q in affine coordinates, call\\n        @dev projectiveECAdd(px, py, qx, qy). This will return\\n        @dev the addition of (px, py, 1) and (qx, qy, 1), in the\\n        @dev secp256k1 group.\\n\\n        @dev This can be used to calculate the z which is the inverse to zInv\\n        @dev in isValidVRFOutput. But consider using a faster\\n        @dev re-implementation such as ProjectiveECAdd in the golang vrf package.\\n\\n        @dev This function assumes [px,py,1],[qx,qy,1] are valid projective\\n             coordinates of secp256k1 points. That is safe in this contract,\\n             because this method is only used by linearCombination, which checks\\n             points are on the curve via ecrecover.\\n        **************************************************************************\\n        @param px The first affine coordinate of the first summand\\n        @param py The second affine coordinate of the first summand\\n        @param qx The first affine coordinate of the second summand\\n        @param qy The second affine coordinate of the second summand\\n\\n        (px,py) and (qx,qy) must be distinct, valid secp256k1 points.\\n        **************************************************************************\\n        Return values are projective coordinates of [px,py,1]+[qx,qy,1] as points\\n        on secp256k1, in P\\u00b2(\\ud835\\udd3d\\u2099)\\n        @return sx\\n        @return sy\\n        @return sz\\n    */\\n  function projectiveECAdd(\\n    uint256 px,\\n    uint256 py,\\n    uint256 qx,\\n    uint256 qy\\n  ) internal pure returns (uint256 sx, uint256 sy, uint256 sz) {\\n    unchecked {\\n      // See \\\"Group law for E/K : y^2 = x^3 + ax + b\\\", in section 3.1.2, p. 80,\\n      // \\\"Guide to Elliptic Curve Cryptography\\\" by Hankerson, Menezes and Vanstone\\n      // We take the equations there for (sx,sy), and homogenize them to\\n      // projective coordinates. That way, no inverses are required, here, and we\\n      // only need the one inverse in affineECAdd.\\n\\n      // We only need the \\\"point addition\\\" equations from Hankerson et al. Can\\n      // skip the \\\"point doubling\\\" equations because p1 == p2 is cryptographically\\n      // impossible, and required not to be the case in linearCombination.\\n\\n      // Add extra \\\"projective coordinate\\\" to the two points\\n      (uint256 z1, uint256 z2) = (1, 1);\\n\\n      // (lx, lz) = (qy-py)/(qx-px), i.e., gradient of secant line.\\n      // Cannot wrap since px and py are in [0, FIELD_SIZE-1]\\n      uint256 lx = addmod(qy, FIELD_SIZE - py, FIELD_SIZE);\\n      uint256 lz = addmod(qx, FIELD_SIZE - px, FIELD_SIZE);\\n\\n      uint256 dx; // Accumulates denominator from sx calculation\\n      // sx=((qy-py)/(qx-px))^2-px-qx\\n      (sx, dx) = projectiveMul(lx, lz, lx, lz); // ((qy-py)/(qx-px))^2\\n      (sx, dx) = projectiveSub(sx, dx, px, z1); // ((qy-py)/(qx-px))^2-px\\n      (sx, dx) = projectiveSub(sx, dx, qx, z2); // ((qy-py)/(qx-px))^2-px-qx\\n\\n      uint256 dy; // Accumulates denominator from sy calculation\\n      // sy=((qy-py)/(qx-px))(px-sx)-py\\n      (sy, dy) = projectiveSub(px, z1, sx, dx); // px-sx\\n      (sy, dy) = projectiveMul(sy, dy, lx, lz); // ((qy-py)/(qx-px))(px-sx)\\n      (sy, dy) = projectiveSub(sy, dy, py, z1); // ((qy-py)/(qx-px))(px-sx)-py\\n\\n      if (dx != dy) {\\n        // Cross-multiply to put everything over a common denominator\\n        sx = mulmod(sx, dy, FIELD_SIZE);\\n        sy = mulmod(sy, dx, FIELD_SIZE);\\n        sz = mulmod(dx, dy, FIELD_SIZE);\\n      } else {\\n        // Already over a common denominator, use that for z ordinate\\n        sz = dx;\\n      }\\n    }\\n  }\\n\\n  // p1+p2, as affine points on secp256k1.\\n  //\\n  // invZ must be the inverse of the z returned by projectiveECAdd(p1, p2).\\n  // It is computed off-chain to save gas.\\n  //\\n  // p1 and p2 must be distinct, because projectiveECAdd doesn't handle\\n  // point doubling.\\n  function affineECAdd(\\n    uint256[2] memory p1,\\n    uint256[2] memory p2,\\n    uint256 invZ\\n  ) internal pure returns (uint256[2] memory) {\\n    uint256 x;\\n    uint256 y;\\n    uint256 z;\\n    (x, y, z) = projectiveECAdd(p1[0], p1[1], p2[0], p2[1]);\\n    require(mulmod(z, invZ, FIELD_SIZE) == 1, \\\"invZ must be inverse of z\\\");\\n    // Clear the z ordinate of the projective representation by dividing through\\n    // by it, to obtain the affine representation\\n    return [mulmod(x, invZ, FIELD_SIZE), mulmod(y, invZ, FIELD_SIZE)];\\n  }\\n\\n  // True iff address(c*p+s*g) == lcWitness, where g is generator. (With\\n  // cryptographically high probability.)\\n  function verifyLinearCombinationWithGenerator(\\n    uint256 c,\\n    uint256[2] memory p,\\n    uint256 s,\\n    address lcWitness\\n  ) internal pure returns (bool) {\\n    // Rule out ecrecover failure modes which return address 0.\\n    unchecked {\\n      require(lcWitness != address(0), \\\"bad witness\\\");\\n      uint8 v = (p[1] % 2 == 0) ? 27 : 28; // parity of y-ordinate of p\\n      // Note this cannot wrap (X - Y % X), but we use unchecked to save\\n      // gas.\\n      bytes32 pseudoHash = bytes32(GROUP_ORDER - mulmod(p[0], s, GROUP_ORDER)); // -s*p[0]\\n      bytes32 pseudoSignature = bytes32(mulmod(c, p[0], GROUP_ORDER)); // c*p[0]\\n      // https://ethresear.ch/t/you-can-kinda-abuse-ecrecover-to-do-ecmul-in-secp256k1-today/2384/9\\n      // The point corresponding to the address returned by\\n      // ecrecover(-s*p[0],v,p[0],c*p[0]) is\\n      // (p[0]\\u207b\\u00b9 mod GROUP_ORDER)*(c*p[0]-(-s)*p[0]*g)=c*p+s*g.\\n      // See https://crypto.stackexchange.com/a/18106\\n      // https://bitcoin.stackexchange.com/questions/38351/ecdsa-v-r-s-what-is-v\\n      address computed = ecrecover(pseudoHash, v, bytes32(p[0]), pseudoSignature);\\n      return computed == lcWitness;\\n    }\\n  }\\n\\n  // c*p1 + s*p2. Requires cp1Witness=c*p1 and sp2Witness=s*p2. Also\\n  // requires cp1Witness != sp2Witness (which is fine for this application,\\n  // since it is cryptographically impossible for them to be equal. In the\\n  // (cryptographically impossible) case that a prover accidentally derives\\n  // a proof with equal c*p1 and s*p2, they should retry with a different\\n  // proof nonce.) Assumes that all points are on secp256k1\\n  // (which is checked in verifyVRFProof below.)\\n  function linearCombination(\\n    uint256 c,\\n    uint256[2] memory p1,\\n    uint256[2] memory cp1Witness,\\n    uint256 s,\\n    uint256[2] memory p2,\\n    uint256[2] memory sp2Witness,\\n    uint256 zInv\\n  ) internal pure returns (uint256[2] memory) {\\n    unchecked {\\n      // Note we are relying on the wrap around here\\n      require((cp1Witness[0] % FIELD_SIZE) != (sp2Witness[0] % FIELD_SIZE), \\\"points in sum must be distinct\\\");\\n      require(ecmulVerify(p1, c, cp1Witness), \\\"First mul check failed\\\");\\n      require(ecmulVerify(p2, s, sp2Witness), \\\"Second mul check failed\\\");\\n      return affineECAdd(cp1Witness, sp2Witness, zInv);\\n    }\\n  }\\n\\n  // Domain-separation tag for the hash taken in scalarFromCurvePoints.\\n  // Corresponds to scalarFromCurveHashPrefix in vrf.go\\n  uint256 internal constant SCALAR_FROM_CURVE_POINTS_HASH_PREFIX = 2;\\n\\n  // Pseudo-random number from inputs. Matches vrf.go/scalarFromCurvePoints, and\\n  // https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-vrf-05#section-5.4.3\\n  // The draft calls (in step 7, via the definition of string_to_int, in\\n  // https://datatracker.ietf.org/doc/html/rfc8017#section-4.2 ) for taking the\\n  // first hash without checking that it corresponds to a number less than the\\n  // group order, which will lead to a slight bias in the sample.\\n  //\\n  // TODO(alx): We could save a bit of gas by following the standard here and\\n  // using the compressed representation of the points, if we collated the y\\n  // parities into a single bytes32.\\n  // https://www.pivotaltracker.com/story/show/171120588\\n  function scalarFromCurvePoints(\\n    uint256[2] memory hash,\\n    uint256[2] memory pk,\\n    uint256[2] memory gamma,\\n    address uWitness,\\n    uint256[2] memory v\\n  ) internal pure returns (uint256 s) {\\n    return uint256(keccak256(abi.encodePacked(SCALAR_FROM_CURVE_POINTS_HASH_PREFIX, hash, pk, gamma, v, uWitness)));\\n  }\\n\\n  // True if (gamma, c, s) is a correctly constructed randomness proof from pk\\n  // and seed. zInv must be the inverse of the third ordinate from\\n  // projectiveECAdd applied to cGammaWitness and sHashWitness. Corresponds to\\n  // section 5.3 of the IETF draft.\\n  //\\n  // TODO(alx): Since I'm only using pk in the ecrecover call, I could only pass\\n  // the x ordinate, and the parity of the y ordinate in the top bit of uWitness\\n  // (which I could make a uint256 without using any extra space.) Would save\\n  // about 2000 gas. https://www.pivotaltracker.com/story/show/170828567\\n  function verifyVRFProof(\\n    uint256[2] memory pk,\\n    uint256[2] memory gamma,\\n    uint256 c,\\n    uint256 s,\\n    uint256 seed,\\n    address uWitness,\\n    uint256[2] memory cGammaWitness,\\n    uint256[2] memory sHashWitness,\\n    uint256 zInv\\n  ) internal view {\\n    unchecked {\\n      require(isOnCurve(pk), \\\"public key is not on curve\\\");\\n      require(isOnCurve(gamma), \\\"gamma is not on curve\\\");\\n      require(isOnCurve(cGammaWitness), \\\"cGammaWitness is not on curve\\\");\\n      require(isOnCurve(sHashWitness), \\\"sHashWitness is not on curve\\\");\\n      // Step 5. of IETF draft section 5.3 (pk corresponds to 5.3's Y, and here\\n      // we use the address of u instead of u itself. Also, here we add the\\n      // terms instead of taking the difference, and in the proof construction in\\n      // vrf.GenerateProof, we correspondingly take the difference instead of\\n      // taking the sum as they do in step 7 of section 5.1.)\\n      require(verifyLinearCombinationWithGenerator(c, pk, s, uWitness), \\\"addr(c*pk+s*g)!=_uWitness\\\");\\n      // Step 4. of IETF draft section 5.3 (pk corresponds to Y, seed to alpha_string)\\n      uint256[2] memory hash = hashToCurve(pk, seed);\\n      // Step 6. of IETF draft section 5.3, but see note for step 5 about +/- terms\\n      uint256[2] memory v = linearCombination(c, gamma, cGammaWitness, s, hash, sHashWitness, zInv);\\n      // Steps 7. and 8. of IETF draft section 5.3\\n      uint256 derivedC = scalarFromCurvePoints(hash, pk, gamma, uWitness, v);\\n      require(c == derivedC, \\\"invalid proof\\\");\\n    }\\n  }\\n\\n  // Domain-separation tag for the hash used as the final VRF output.\\n  // Corresponds to vrfRandomOutputHashPrefix in vrf.go\\n  uint256 internal constant VRF_RANDOM_OUTPUT_HASH_PREFIX = 3;\\n\\n  struct Proof {\\n    uint256[2] pk;\\n    uint256[2] gamma;\\n    uint256 c;\\n    uint256 s;\\n    uint256 seed;\\n    address uWitness;\\n    uint256[2] cGammaWitness;\\n    uint256[2] sHashWitness;\\n    uint256 zInv;\\n  }\\n\\n  /* ***************************************************************************\\n     * @notice Returns proof's output, if proof is valid. Otherwise reverts\\n\\n     * @param proof vrf proof components\\n     * @param seed  seed used to generate the vrf output\\n     *\\n     * Throws if proof is invalid, otherwise:\\n     * @return output i.e., the random output implied by the proof\\n     * ***************************************************************************\\n     */\\n  function randomValueFromVRFProof(Proof memory proof, uint256 seed) internal view returns (uint256 output) {\\n    verifyVRFProof(\\n      proof.pk,\\n      proof.gamma,\\n      proof.c,\\n      proof.s,\\n      seed,\\n      proof.uWitness,\\n      proof.cGammaWitness,\\n      proof.sHashWitness,\\n      proof.zInv\\n    );\\n    output = uint256(keccak256(abi.encode(VRF_RANDOM_OUTPUT_HASH_PREFIX, proof.gamma)));\\n  }\\n}\\n\",\"keccak256\":\"0x5efe574be3a5b871ef7bcc7704355d21c1244f1a39a1266422a1b904d7b41944\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\n\\n/** ****************************************************************************\\n * @notice Interface for contracts using VRF randomness\\n * *****************************************************************************\\n * @dev PURPOSE\\n *\\n * @dev Reggie the Random Oracle (not his real job) wants to provide randomness\\n * @dev to Vera the verifier in such a way that Vera can be sure he's not\\n * @dev making his output up to suit himself. Reggie provides Vera a public key\\n * @dev to which he knows the secret key. Each time Vera provides a seed to\\n * @dev Reggie, he gives back a value which is computed completely\\n * @dev deterministically from the seed and the secret key.\\n *\\n * @dev Reggie provides a proof by which Vera can verify that the output was\\n * @dev correctly computed once Reggie tells it to her, but without that proof,\\n * @dev the output is indistinguishable to her from a uniform random sample\\n * @dev from the output space.\\n *\\n * @dev The purpose of this contract is to make it easy for unrelated contracts\\n * @dev to talk to Vera the verifier about the work Reggie is doing, to provide\\n * @dev simple access to a verifiable source of randomness. It ensures 2 things:\\n * @dev 1. The fulfillment came from the VRFCoordinator\\n * @dev 2. The consumer contract implements fulfillRandomWords.\\n * *****************************************************************************\\n * @dev USAGE\\n *\\n * @dev Calling contracts must inherit from VRFConsumerBase, and can\\n * @dev initialize VRFConsumerBase's attributes in their constructor as\\n * @dev shown:\\n *\\n * @dev   contract VRFConsumer {\\n * @dev     constructor(<other arguments>, address _vrfCoordinator, address _link)\\n * @dev       VRFConsumerBase(_vrfCoordinator) public {\\n * @dev         <initialization with other arguments goes here>\\n * @dev       }\\n * @dev   }\\n *\\n * @dev The oracle will have given you an ID for the VRF keypair they have\\n * @dev committed to (let's call it keyHash). Create subscription, fund it\\n * @dev and your consumer contract as a consumer of it (see VRFCoordinatorInterface\\n * @dev subscription management functions).\\n * @dev Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,\\n * @dev callbackGasLimit, numWords),\\n * @dev see (VRFCoordinatorInterface for a description of the arguments).\\n *\\n * @dev Once the VRFCoordinator has received and validated the oracle's response\\n * @dev to your request, it will call your contract's fulfillRandomWords method.\\n *\\n * @dev The randomness argument to fulfillRandomWords is a set of random words\\n * @dev generated from your requestId and the blockHash of the request.\\n *\\n * @dev If your contract could have concurrent requests open, you can use the\\n * @dev requestId returned from requestRandomWords to track which response is associated\\n * @dev with which randomness request.\\n * @dev See \\\"SECURITY CONSIDERATIONS\\\" for principles to keep in mind,\\n * @dev if your contract could have multiple requests in flight simultaneously.\\n *\\n * @dev Colliding `requestId`s are cryptographically impossible as long as seeds\\n * @dev differ.\\n *\\n * *****************************************************************************\\n * @dev SECURITY CONSIDERATIONS\\n *\\n * @dev A method with the ability to call your fulfillRandomness method directly\\n * @dev could spoof a VRF response with any random value, so it's critical that\\n * @dev it cannot be directly called by anything other than this base contract\\n * @dev (specifically, by the VRFConsumerBase.rawFulfillRandomness method).\\n *\\n * @dev For your users to trust that your contract's random behavior is free\\n * @dev from malicious interference, it's best if you can write it so that all\\n * @dev behaviors implied by a VRF response are executed *during* your\\n * @dev fulfillRandomness method. If your contract must store the response (or\\n * @dev anything derived from it) and use it later, you must ensure that any\\n * @dev user-significant behavior which depends on that stored value cannot be\\n * @dev manipulated by a subsequent VRF request.\\n *\\n * @dev Similarly, both miners and the VRF oracle itself have some influence\\n * @dev over the order in which VRF responses appear on the blockchain, so if\\n * @dev your contract could have multiple VRF requests in flight simultaneously,\\n * @dev you must ensure that the order in which the VRF responses arrive cannot\\n * @dev be used to manipulate your contract's user-significant behavior.\\n *\\n * @dev Since the block hash of the block which contains the requestRandomness\\n * @dev call is mixed into the input to the VRF *last*, a sufficiently powerful\\n * @dev miner could, in principle, fork the blockchain to evict the block\\n * @dev containing the request, forcing the request to be included in a\\n * @dev different block with a different hash, and therefore a different input\\n * @dev to the VRF. However, such an attack would incur a substantial economic\\n * @dev cost. This cost scales with the number of blocks the VRF oracle waits\\n * @dev until it calls responds to a request. It is for this reason that\\n * @dev that you can signal to an oracle you'd like them to wait longer before\\n * @dev responding to the request (however this is not enforced in the contract\\n * @dev and so remains effective only in the case of unmodified oracle software).\\n */\\nabstract contract VRFConsumerBaseV2 {\\n  error OnlyCoordinatorCanFulfill(address have, address want);\\n  address private immutable vrfCoordinator;\\n\\n  /**\\n   * @param _vrfCoordinator address of VRFCoordinator contract\\n   */\\n  constructor(address _vrfCoordinator) {\\n    vrfCoordinator = _vrfCoordinator;\\n  }\\n\\n  /**\\n   * @notice fulfillRandomness handles the VRF response. Your contract must\\n   * @notice implement it. See \\\"SECURITY CONSIDERATIONS\\\" above for important\\n   * @notice principles to keep in mind when implementing your fulfillRandomness\\n   * @notice method.\\n   *\\n   * @dev VRFConsumerBaseV2 expects its subcontracts to have a method with this\\n   * @dev signature, and will call it once it has verified the proof\\n   * @dev associated with the randomness. (It is triggered via a call to\\n   * @dev rawFulfillRandomness, below.)\\n   *\\n   * @param requestId The Id initially returned by requestRandomness\\n   * @param randomWords the VRF output expanded to the requested number of words\\n   */\\n  function fulfillRandomWords(uint256 requestId, uint256[] memory randomWords) internal virtual;\\n\\n  // rawFulfillRandomness is called by VRFCoordinator when it receives a valid VRF\\n  // proof. rawFulfillRandomness then calls fulfillRandomness, after validating\\n  // the origin of the call\\n  function rawFulfillRandomWords(uint256 requestId, uint256[] memory randomWords) external {\\n    if (msg.sender != vrfCoordinator) {\\n      revert OnlyCoordinatorCanFulfill(msg.sender, vrfCoordinator);\\n    }\\n    fulfillRandomWords(requestId, randomWords);\\n  }\\n}\\n\",\"keccak256\":\"0x3d709a5e0f1f9b8841172b10ba8af785dd51a13eda9fc395723a706e51329904\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/vrf/VRFCoordinatorV2.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\n\\nimport \\\"../shared/interfaces/LinkTokenInterface.sol\\\";\\nimport \\\"../interfaces/BlockhashStoreInterface.sol\\\";\\nimport \\\"../interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"../interfaces/VRFCoordinatorV2Interface.sol\\\";\\nimport \\\"../interfaces/TypeAndVersionInterface.sol\\\";\\nimport \\\"../shared/interfaces/IERC677Receiver.sol\\\";\\nimport \\\"./VRF.sol\\\";\\nimport \\\"../shared/access/ConfirmedOwner.sol\\\";\\nimport \\\"./VRFConsumerBaseV2.sol\\\";\\nimport \\\"../ChainSpecificUtil.sol\\\";\\n\\ncontract VRFCoordinatorV2 is\\n    VRF,\\n    ConfirmedOwner,\\n    TypeAndVersionInterface,\\n    VRFCoordinatorV2Interface,\\n    IERC677Receiver\\n{\\n    LinkTokenInterface public immutable LINK;\\n    AggregatorV3Interface public immutable LINK_ETH_FEED;\\n    BlockhashStoreInterface public immutable BLOCKHASH_STORE;\\n\\n    // We need to maintain a list of consuming addresses.\\n    // This bound ensures we are able to loop over them as needed.\\n    // Should a user require more consumers, they can use multiple subscriptions.\\n    uint16 public constant MAX_CONSUMERS = 100;\\n    error TooManyConsumers();\\n    error InsufficientBalance();\\n    error InvalidConsumer(uint64 subId, address consumer);\\n    error InvalidSubscription();\\n    error OnlyCallableFromLink();\\n    error InvalidCalldata();\\n    error MustBeSubOwner(address owner);\\n    error PendingRequestExists();\\n    error MustBeRequestedOwner(address proposedOwner);\\n    error BalanceInvariantViolated(\\n        uint256 internalBalance,\\n        uint256 externalBalance\\n    ); // Should never happen\\n    event FundsRecovered(address to, uint256 amount);\\n    // We use the subscription struct (1 word)\\n    // at fulfillment time.\\n    struct Subscription {\\n        // There are only 1e9*1e18 = 1e27 juels in existence, so the balance can fit in uint96 (2^96 ~ 7e28)\\n        uint96 balance; // Common link balance used for all consumer requests.\\n        uint64 reqCount; // For fee tiers\\n    }\\n    // We use the config for the mgmt APIs\\n    struct SubscriptionConfig {\\n        address owner; // Owner can fund/withdraw/cancel the sub.\\n        address requestedOwner; // For safely transferring sub ownership.\\n        // Maintains the list of keys in s_consumers.\\n        // We do this for 2 reasons:\\n        // 1. To be able to clean up all keys from s_consumers when canceling a subscription.\\n        // 2. To be able to return the list of all consumers in getSubscription.\\n        // Note that we need the s_consumers map to be able to directly check if a\\n        // consumer is valid without reading all the consumers from storage.\\n        address[] consumers;\\n    }\\n    // Note a nonce of 0 indicates an the consumer is not assigned to that subscription.\\n    mapping(address => mapping(uint64 => uint64)) /* consumer */ /* subId */ /* nonce */\\n        private s_consumers;\\n    mapping(uint64 => SubscriptionConfig) /* subId */ /* subscriptionConfig */\\n        private s_subscriptionConfigs;\\n    mapping(uint64 => Subscription) /* subId */ /* subscription */\\n        private s_subscriptions;\\n    // We make the sub count public so that its possible to\\n    // get all the current subscriptions via getSubscription.\\n    uint64 private s_currentSubId;\\n    // s_totalBalance tracks the total link sent to/from\\n    // this contract through onTokenTransfer, cancelSubscription and oracleWithdraw.\\n    // A discrepancy with this contract's link balance indicates someone\\n    // sent tokens using transfer and so we may need to use recoverFunds.\\n    uint96 private s_totalBalance;\\n    event SubscriptionCreated(uint64 indexed subId, address owner);\\n    event SubscriptionFunded(\\n        uint64 indexed subId,\\n        uint256 oldBalance,\\n        uint256 newBalance\\n    );\\n    event SubscriptionConsumerAdded(uint64 indexed subId, address consumer);\\n    event SubscriptionConsumerRemoved(uint64 indexed subId, address consumer);\\n    event SubscriptionCanceled(\\n        uint64 indexed subId,\\n        address to,\\n        uint256 amount\\n    );\\n    event SubscriptionOwnerTransferRequested(\\n        uint64 indexed subId,\\n        address from,\\n        address to\\n    );\\n    event SubscriptionOwnerTransferred(\\n        uint64 indexed subId,\\n        address from,\\n        address to\\n    );\\n\\n    // Set this maximum to 200 to give us a 56 block window to fulfill\\n    // the request before requiring the block hash feeder.\\n    uint16 public constant MAX_REQUEST_CONFIRMATIONS = 200;\\n    uint32 public constant MAX_NUM_WORDS = 500;\\n    // 5k is plenty for an EXTCODESIZE call (2600) + warm CALL (100)\\n    // and some arithmetic operations.\\n    uint256 private constant GAS_FOR_CALL_EXACT_CHECK = 5_000;\\n    error InvalidRequestConfirmations(uint16 have, uint16 min, uint16 max);\\n    error GasLimitTooBig(uint32 have, uint32 want);\\n    error NumWordsTooBig(uint32 have, uint32 want);\\n    error ProvingKeyAlreadyRegistered(bytes32 keyHash);\\n    error NoSuchProvingKey(bytes32 keyHash);\\n    error InvalidLinkWeiPrice(int256 linkWei);\\n    error InsufficientGasForConsumer(uint256 have, uint256 want);\\n    error NoCorrespondingRequest();\\n    error IncorrectCommitment();\\n    error BlockhashNotInStore(uint256 blockNum);\\n    error PaymentTooLarge();\\n    error Reentrant();\\n    struct RequestCommitment {\\n        uint64 blockNum;\\n        uint64 subId;\\n        uint32 callbackGasLimit;\\n        uint32 numWords;\\n        address sender;\\n    }\\n    mapping(bytes32 => address) /* keyHash */ /* oracle */\\n        private s_provingKeys;\\n    bytes32[] private s_provingKeyHashes;\\n    mapping(address => uint96) /* oracle */ /* LINK balance */\\n        private s_withdrawableTokens;\\n    mapping(uint256 => bytes32) /* requestID */ /* commitment */\\n        private s_requestCommitments;\\n    event ProvingKeyRegistered(bytes32 keyHash, address indexed oracle);\\n    event ProvingKeyDeregistered(bytes32 keyHash, address indexed oracle);\\n    event RandomWordsRequested(\\n        bytes32 indexed keyHash,\\n        uint256 requestId,\\n        uint256 preSeed,\\n        uint64 indexed subId,\\n        uint16 minimumRequestConfirmations,\\n        uint32 callbackGasLimit,\\n        uint32 numWords,\\n        address indexed sender\\n    );\\n    event RandomWordsFulfilled(\\n        uint256 indexed requestId,\\n        uint256 outputSeed,\\n        uint96 payment,\\n        bool success\\n    );\\n\\n    struct Config {\\n        uint16 minimumRequestConfirmations;\\n        uint32 maxGasLimit;\\n        // Reentrancy protection.\\n        bool reentrancyLock;\\n        // stalenessSeconds is how long before we consider the feed price to be stale\\n        // and fallback to fallbackWeiPerUnitLink.\\n        uint32 stalenessSeconds;\\n        // Gas to cover oracle payment after we calculate the payment.\\n        // We make it configurable in case those operations are repriced.\\n        uint32 gasAfterPaymentCalculation;\\n    }\\n    int256 private s_fallbackWeiPerUnitLink;\\n    Config private s_config;\\n    FeeConfig private s_feeConfig;\\n    struct FeeConfig {\\n        // Flat fee charged per fulfillment in millionths of link\\n        // So fee range is [0, 2^32/10^6].\\n        uint32 fulfillmentFlatFeeLinkPPMTier1;\\n        uint32 fulfillmentFlatFeeLinkPPMTier2;\\n        uint32 fulfillmentFlatFeeLinkPPMTier3;\\n        uint32 fulfillmentFlatFeeLinkPPMTier4;\\n        uint32 fulfillmentFlatFeeLinkPPMTier5;\\n        uint24 reqsForTier2;\\n        uint24 reqsForTier3;\\n        uint24 reqsForTier4;\\n        uint24 reqsForTier5;\\n    }\\n    event ConfigSet(\\n        uint16 minimumRequestConfirmations,\\n        uint32 maxGasLimit,\\n        uint32 stalenessSeconds,\\n        uint32 gasAfterPaymentCalculation,\\n        int256 fallbackWeiPerUnitLink,\\n        FeeConfig feeConfig\\n    );\\n\\n    constructor(\\n        address link,\\n        address blockhashStore,\\n        address linkEthFeed\\n    ) ConfirmedOwner(msg.sender) {\\n        LINK = LinkTokenInterface(link);\\n        LINK_ETH_FEED = AggregatorV3Interface(linkEthFeed);\\n        BLOCKHASH_STORE = BlockhashStoreInterface(blockhashStore);\\n    }\\n\\n    /**\\n     * @notice Registers a proving key to an oracle.\\n     * @param oracle address of the oracle\\n     * @param publicProvingKey key that oracle can use to submit vrf fulfillments\\n     */\\n    function registerProvingKey(\\n        address oracle,\\n        uint256[2] calldata publicProvingKey\\n    ) external onlyOwner {\\n        bytes32 kh = hashOfKey(publicProvingKey);\\n        if (s_provingKeys[kh] != address(0)) {\\n            revert ProvingKeyAlreadyRegistered(kh);\\n        }\\n        s_provingKeys[kh] = oracle;\\n        s_provingKeyHashes.push(kh);\\n        emit ProvingKeyRegistered(kh, oracle);\\n    }\\n\\n    /**\\n     * @notice Deregisters a proving key to an oracle.\\n     * @param publicProvingKey key that oracle can use to submit vrf fulfillments\\n     */\\n    function deregisterProvingKey(\\n        uint256[2] calldata publicProvingKey\\n    ) external onlyOwner {\\n        bytes32 kh = hashOfKey(publicProvingKey);\\n        address oracle = s_provingKeys[kh];\\n        if (oracle == address(0)) {\\n            revert NoSuchProvingKey(kh);\\n        }\\n        delete s_provingKeys[kh];\\n        for (uint256 i = 0; i < s_provingKeyHashes.length; i++) {\\n            if (s_provingKeyHashes[i] == kh) {\\n                bytes32 last = s_provingKeyHashes[\\n                    s_provingKeyHashes.length - 1\\n                ];\\n                // Copy last element and overwrite kh to be deleted with it\\n                s_provingKeyHashes[i] = last;\\n                s_provingKeyHashes.pop();\\n            }\\n        }\\n        emit ProvingKeyDeregistered(kh, oracle);\\n    }\\n\\n    /**\\n     * @notice Returns the proving key hash key associated with this public key\\n     * @param publicKey the key to return the hash of\\n     */\\n    function hashOfKey(\\n        uint256[2] memory publicKey\\n    ) public pure returns (bytes32) {\\n        return keccak256(abi.encode(publicKey));\\n    }\\n\\n    /**\\n     * @notice Sets the configuration of the vrfv2 coordinator\\n     * @param minimumRequestConfirmations global min for request confirmations\\n     * @param maxGasLimit global max for request gas limit\\n     * @param stalenessSeconds if the eth/link feed is more stale then this, use the fallback price\\n     * @param gasAfterPaymentCalculation gas used in doing accounting after completing the gas measurement\\n     * @param fallbackWeiPerUnitLink fallback eth/link price in the case of a stale feed\\n     * @param feeConfig fee tier configuration\\n     */\\n    function setConfig(\\n        uint16 minimumRequestConfirmations,\\n        uint32 maxGasLimit,\\n        uint32 stalenessSeconds,\\n        uint32 gasAfterPaymentCalculation,\\n        int256 fallbackWeiPerUnitLink,\\n        FeeConfig memory feeConfig\\n    ) external onlyOwner {\\n        if (minimumRequestConfirmations > MAX_REQUEST_CONFIRMATIONS) {\\n            revert InvalidRequestConfirmations(\\n                minimumRequestConfirmations,\\n                minimumRequestConfirmations,\\n                MAX_REQUEST_CONFIRMATIONS\\n            );\\n        }\\n        if (fallbackWeiPerUnitLink <= 0) {\\n            revert InvalidLinkWeiPrice(fallbackWeiPerUnitLink);\\n        }\\n        s_config = Config({\\n            minimumRequestConfirmations: minimumRequestConfirmations,\\n            maxGasLimit: maxGasLimit,\\n            stalenessSeconds: stalenessSeconds,\\n            gasAfterPaymentCalculation: gasAfterPaymentCalculation,\\n            reentrancyLock: false\\n        });\\n        s_feeConfig = feeConfig;\\n        s_fallbackWeiPerUnitLink = fallbackWeiPerUnitLink;\\n        emit ConfigSet(\\n            minimumRequestConfirmations,\\n            maxGasLimit,\\n            stalenessSeconds,\\n            gasAfterPaymentCalculation,\\n            fallbackWeiPerUnitLink,\\n            s_feeConfig\\n        );\\n    }\\n\\n    function getConfig()\\n        external\\n        view\\n        returns (\\n            uint16 minimumRequestConfirmations,\\n            uint32 maxGasLimit,\\n            uint32 stalenessSeconds,\\n            uint32 gasAfterPaymentCalculation\\n        )\\n    {\\n        return (\\n            s_config.minimumRequestConfirmations,\\n            s_config.maxGasLimit,\\n            s_config.stalenessSeconds,\\n            s_config.gasAfterPaymentCalculation\\n        );\\n    }\\n\\n    function getFeeConfig()\\n        external\\n        view\\n        returns (\\n            uint32 fulfillmentFlatFeeLinkPPMTier1,\\n            uint32 fulfillmentFlatFeeLinkPPMTier2,\\n            uint32 fulfillmentFlatFeeLinkPPMTier3,\\n            uint32 fulfillmentFlatFeeLinkPPMTier4,\\n            uint32 fulfillmentFlatFeeLinkPPMTier5,\\n            uint24 reqsForTier2,\\n            uint24 reqsForTier3,\\n            uint24 reqsForTier4,\\n            uint24 reqsForTier5\\n        )\\n    {\\n        return (\\n            s_feeConfig.fulfillmentFlatFeeLinkPPMTier1,\\n            s_feeConfig.fulfillmentFlatFeeLinkPPMTier2,\\n            s_feeConfig.fulfillmentFlatFeeLinkPPMTier3,\\n            s_feeConfig.fulfillmentFlatFeeLinkPPMTier4,\\n            s_feeConfig.fulfillmentFlatFeeLinkPPMTier5,\\n            s_feeConfig.reqsForTier2,\\n            s_feeConfig.reqsForTier3,\\n            s_feeConfig.reqsForTier4,\\n            s_feeConfig.reqsForTier5\\n        );\\n    }\\n\\n    function getTotalBalance() external view returns (uint256) {\\n        return s_totalBalance;\\n    }\\n\\n    function getFallbackWeiPerUnitLink() external view returns (int256) {\\n        return s_fallbackWeiPerUnitLink;\\n    }\\n\\n    /**\\n     * @notice Owner cancel subscription, sends remaining link directly to the subscription owner.\\n     * @param subId subscription id\\n     * @dev notably can be called even if there are pending requests, outstanding ones may fail onchain\\n     */\\n    function ownerCancelSubscription(uint64 subId) external onlyOwner {\\n        if (s_subscriptionConfigs[subId].owner == address(0)) {\\n            revert InvalidSubscription();\\n        }\\n        cancelSubscriptionHelper(subId, s_subscriptionConfigs[subId].owner);\\n    }\\n\\n    /**\\n     * @notice Recover link sent with transfer instead of transferAndCall.\\n     * @param to address to send link to\\n     */\\n    function recoverFunds(address to) external onlyOwner {\\n        uint256 externalBalance = LINK.balanceOf(address(this));\\n        uint256 internalBalance = uint256(s_totalBalance);\\n        if (internalBalance > externalBalance) {\\n            revert BalanceInvariantViolated(internalBalance, externalBalance);\\n        }\\n        if (internalBalance < externalBalance) {\\n            uint256 amount = externalBalance - internalBalance;\\n            LINK.transfer(to, amount);\\n            emit FundsRecovered(to, amount);\\n        }\\n        // If the balances are equal, nothing to be done.\\n    }\\n\\n    /**\\n     * @inheritdoc VRFCoordinatorV2Interface\\n     */\\n    function getRequestConfig()\\n        external\\n        view\\n        override\\n        returns (uint16, uint32, bytes32[] memory)\\n    {\\n        return (\\n            s_config.minimumRequestConfirmations,\\n            s_config.maxGasLimit,\\n            s_provingKeyHashes\\n        );\\n    }\\n\\n    /**\\n     * @inheritdoc VRFCoordinatorV2Interface\\n     */\\n    function requestRandomWords(\\n        bytes32 keyHash,\\n        uint64 subId,\\n        uint16 requestConfirmations,\\n        uint32 callbackGasLimit,\\n        uint32 numWords\\n    ) external override nonReentrant returns (uint256) {\\n        // Input validation using the subscription storage.\\n        if (s_subscriptionConfigs[subId].owner == address(0)) {\\n            revert InvalidSubscription();\\n        }\\n        // Its important to ensure that the consumer is in fact who they say they\\n        // are, otherwise they could use someone else's subscription balance.\\n        // A nonce of 0 indicates consumer is not allocated to the sub.\\n        uint64 currentNonce = s_consumers[msg.sender][subId];\\n        if (currentNonce == 0) {\\n            revert InvalidConsumer(subId, msg.sender);\\n        }\\n        // Input validation using the config storage word.\\n        if (\\n            requestConfirmations < s_config.minimumRequestConfirmations ||\\n            requestConfirmations > MAX_REQUEST_CONFIRMATIONS\\n        ) {\\n            revert InvalidRequestConfirmations(\\n                requestConfirmations,\\n                s_config.minimumRequestConfirmations,\\n                MAX_REQUEST_CONFIRMATIONS\\n            );\\n        }\\n        // No lower bound on the requested gas limit. A user could request 0\\n        // and they would simply be billed for the proof verification and wouldn't be\\n        // able to do anything with the random value.\\n        if (callbackGasLimit > s_config.maxGasLimit) {\\n            revert GasLimitTooBig(callbackGasLimit, s_config.maxGasLimit);\\n        }\\n        if (numWords > MAX_NUM_WORDS) {\\n            revert NumWordsTooBig(numWords, MAX_NUM_WORDS);\\n        }\\n        // Note we do not check whether the keyHash is valid to save gas.\\n        // The consequence for users is that they can send requests\\n        // for invalid keyHashes which will simply not be fulfilled.\\n        uint64 nonce = currentNonce + 1;\\n        (uint256 requestId, uint256 preSeed) = computeRequestId(\\n            keyHash,\\n            msg.sender,\\n            subId,\\n            nonce\\n        );\\n\\n        s_requestCommitments[requestId] = keccak256(\\n            abi.encode(\\n                requestId,\\n                ChainSpecificUtil.getBlockNumber(),\\n                subId,\\n                callbackGasLimit,\\n                numWords,\\n                msg.sender\\n            )\\n        );\\n        emit RandomWordsRequested(\\n            keyHash,\\n            requestId,\\n            preSeed,\\n            subId,\\n            requestConfirmations,\\n            callbackGasLimit,\\n            numWords,\\n            msg.sender\\n        );\\n        s_consumers[msg.sender][subId] = nonce;\\n\\n        return requestId;\\n    }\\n\\n    /**\\n     * @notice Get request commitment\\n     * @param requestId id of request\\n     * @dev used to determine if a request is fulfilled or not\\n     */\\n    function getCommitment(uint256 requestId) external view returns (bytes32) {\\n        return s_requestCommitments[requestId];\\n    }\\n\\n    function computeRequestId(\\n        bytes32 keyHash,\\n        address sender,\\n        uint64 subId,\\n        uint64 nonce\\n    ) private pure returns (uint256, uint256) {\\n        uint256 preSeed = uint256(\\n            keccak256(abi.encode(keyHash, sender, subId, nonce))\\n        );\\n        return (uint256(keccak256(abi.encode(keyHash, preSeed))), preSeed);\\n    }\\n\\n    /**\\n     * @dev calls target address with exactly gasAmount gas and data as calldata\\n     * or reverts if at least gasAmount gas is not available.\\n     */\\n    function callWithExactGas(\\n        uint256 gasAmount,\\n        address target,\\n        bytes memory data\\n    ) private returns (bool success) {\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly {\\n            let g := gas()\\n            // Compute g -= GAS_FOR_CALL_EXACT_CHECK and check for underflow\\n            // The gas actually passed to the callee is min(gasAmount, 63//64*gas available).\\n            // We want to ensure that we revert if gasAmount >  63//64*gas available\\n            // as we do not want to provide them with less, however that check itself costs\\n            // gas.  GAS_FOR_CALL_EXACT_CHECK ensures we have at least enough gas to be able\\n            // to revert if gasAmount >  63//64*gas available.\\n            if lt(g, GAS_FOR_CALL_EXACT_CHECK) {\\n                revert(0, 0)\\n            }\\n            g := sub(g, GAS_FOR_CALL_EXACT_CHECK)\\n            // if g - g//64 <= gasAmount, revert\\n            // (we subtract g//64 because of EIP-150)\\n            if iszero(gt(sub(g, div(g, 64)), gasAmount)) {\\n                revert(0, 0)\\n            }\\n            // solidity calls check that a contract actually exists at the destination, so we do the same\\n            if iszero(extcodesize(target)) {\\n                revert(0, 0)\\n            }\\n            // call and return whether we succeeded. ignore return data\\n            // call(gas,addr,value,argsOffset,argsLength,retOffset,retLength)\\n            success := call(\\n                gasAmount,\\n                target,\\n                0,\\n                add(data, 0x20),\\n                mload(data),\\n                0,\\n                0\\n            )\\n        }\\n        return success;\\n    }\\n\\n    function getRandomnessFromProof(\\n        Proof memory proof,\\n        RequestCommitment memory rc\\n    )\\n        private\\n        view\\n        returns (bytes32 keyHash, uint256 requestId, uint256 randomness)\\n    {\\n        keyHash = hashOfKey(proof.pk);\\n        // Only registered proving keys are permitted.\\n        address oracle = s_provingKeys[keyHash];\\n        if (oracle == address(0)) {\\n            revert NoSuchProvingKey(keyHash);\\n        }\\n        requestId = uint256(keccak256(abi.encode(keyHash, proof.seed)));\\n        bytes32 commitment = s_requestCommitments[requestId];\\n        if (commitment == 0) {\\n            revert NoCorrespondingRequest();\\n        }\\n        if (\\n            commitment !=\\n            keccak256(\\n                abi.encode(\\n                    requestId,\\n                    rc.blockNum,\\n                    rc.subId,\\n                    rc.callbackGasLimit,\\n                    rc.numWords,\\n                    rc.sender\\n                )\\n            )\\n        ) {\\n            revert IncorrectCommitment();\\n        }\\n\\n        bytes32 blockHash = ChainSpecificUtil.getBlockhash(rc.blockNum);\\n        if (blockHash == bytes32(0)) {\\n            blockHash = BLOCKHASH_STORE.getBlockhash(rc.blockNum);\\n            if (blockHash == bytes32(0)) {\\n                revert BlockhashNotInStore(rc.blockNum);\\n            }\\n        }\\n\\n        // The seed actually used by the VRF machinery, mixing in the blockhash\\n        uint256 actualSeed = uint256(\\n            keccak256(abi.encodePacked(proof.seed, blockHash))\\n        );\\n        randomness = VRF.randomValueFromVRFProof(proof, actualSeed); // Reverts on failure\\n    }\\n\\n    /*\\n     * @notice Compute fee based on the request count\\n     * @param reqCount number of requests\\n     * @return feePPM fee in LINK PPM\\n     */\\n    function getFeeTier(uint64 reqCount) public view returns (uint32) {\\n        FeeConfig memory fc = s_feeConfig;\\n        if (0 <= reqCount && reqCount <= fc.reqsForTier2) {\\n            return fc.fulfillmentFlatFeeLinkPPMTier1;\\n        }\\n        if (fc.reqsForTier2 < reqCount && reqCount <= fc.reqsForTier3) {\\n            return fc.fulfillmentFlatFeeLinkPPMTier2;\\n        }\\n        if (fc.reqsForTier3 < reqCount && reqCount <= fc.reqsForTier4) {\\n            return fc.fulfillmentFlatFeeLinkPPMTier3;\\n        }\\n        if (fc.reqsForTier4 < reqCount && reqCount <= fc.reqsForTier5) {\\n            return fc.fulfillmentFlatFeeLinkPPMTier4;\\n        }\\n        return fc.fulfillmentFlatFeeLinkPPMTier5;\\n    }\\n\\n    /*\\n     * @notice Fulfill a randomness request\\n     * @param proof contains the proof and randomness\\n     * @param rc request commitment pre-image, committed to at request time\\n     * @return payment amount billed to the subscription\\n     * @dev simulated offchain to determine if sufficient balance is present to fulfill the request\\n     */\\n    function fulfillRandomWords(\\n        Proof memory proof,\\n        RequestCommitment memory rc\\n    ) external nonReentrant returns (uint96) {\\n        uint256 startGas = gasleft();\\n        (\\n            bytes32 keyHash,\\n            uint256 requestId,\\n            uint256 randomness\\n        ) = getRandomnessFromProof(proof, rc);\\n\\n        uint256[] memory randomWords = new uint256[](rc.numWords);\\n        for (uint256 i = 0; i < rc.numWords; i++) {\\n            randomWords[i] = uint256(keccak256(abi.encode(randomness, i)));\\n        }\\n\\n        delete s_requestCommitments[requestId];\\n        VRFConsumerBaseV2 v;\\n        bytes memory resp = abi.encodeWithSelector(\\n            v.rawFulfillRandomWords.selector,\\n            requestId,\\n            randomWords\\n        );\\n        // Call with explicitly the amount of callback gas requested\\n        // Important to not let them exhaust the gas budget and avoid oracle payment.\\n        // Do not allow any non-view/non-pure coordinator functions to be called\\n        // during the consumers callback code via reentrancyLock.\\n        // Note that callWithExactGas will revert if we do not have sufficient gas\\n        // to give the callee their requested amount.\\n        s_config.reentrancyLock = true;\\n        bool success = callWithExactGas(rc.callbackGasLimit, rc.sender, resp);\\n        s_config.reentrancyLock = false;\\n\\n        // Increment the req count for fee tier selection.\\n        uint64 reqCount = s_subscriptions[rc.subId].reqCount;\\n        s_subscriptions[rc.subId].reqCount += 1;\\n\\n        // We want to charge users exactly for how much gas they use in their callback.\\n        // The gasAfterPaymentCalculation is meant to cover these additional operations where we\\n        // decrement the subscription balance and increment the oracles withdrawable balance.\\n        // We also add the flat link fee to the payment amount.\\n        // Its specified in millionths of link, if s_config.fulfillmentFlatFeeLinkPPM = 1\\n        // 1 link / 1e6 = 1e18 juels / 1e6 = 1e12 juels.\\n        uint96 payment = calculatePaymentAmount(\\n            startGas,\\n            s_config.gasAfterPaymentCalculation,\\n            getFeeTier(reqCount),\\n            tx.gasprice\\n        );\\n        if (s_subscriptions[rc.subId].balance < payment) {\\n            revert InsufficientBalance();\\n        }\\n        s_subscriptions[rc.subId].balance -= payment;\\n        s_withdrawableTokens[s_provingKeys[keyHash]] += payment;\\n        // Include payment in the event for tracking costs.\\n        emit RandomWordsFulfilled(requestId, randomness, payment, success);\\n        return payment;\\n    }\\n\\n    // Get the amount of gas used for fulfillment\\n    function calculatePaymentAmount(\\n        uint256 startGas,\\n        uint256 gasAfterPaymentCalculation,\\n        uint32 fulfillmentFlatFeeLinkPPM,\\n        uint256 weiPerUnitGas\\n    ) internal view returns (uint96) {\\n        int256 weiPerUnitLink;\\n        weiPerUnitLink = getFeedData();\\n        if (weiPerUnitLink <= 0) {\\n            revert InvalidLinkWeiPrice(weiPerUnitLink);\\n        }\\n        // Will return non-zero on chains that have this enabled\\n        uint256 l1CostWei = ChainSpecificUtil.getCurrentTxL1GasFees();\\n        // (1e18 juels/link) ((wei/gas * gas) + l1wei) / (wei/link) = juels\\n        uint256 paymentNoFee = (1e18 *\\n            (weiPerUnitGas *\\n                (gasAfterPaymentCalculation + startGas - gasleft()) +\\n                l1CostWei)) / uint256(weiPerUnitLink);\\n        uint256 fee = 1e12 * uint256(fulfillmentFlatFeeLinkPPM);\\n        if (paymentNoFee > (1e27 - fee)) {\\n            revert PaymentTooLarge(); // Payment + fee cannot be more than all of the link in existence.\\n        }\\n        return uint96(paymentNoFee + fee);\\n    }\\n\\n    function getFeedData() private view returns (int256) {\\n        uint32 stalenessSeconds = s_config.stalenessSeconds;\\n        bool staleFallback = stalenessSeconds > 0;\\n        uint256 timestamp;\\n        int256 weiPerUnitLink;\\n        (, weiPerUnitLink, , timestamp, ) = LINK_ETH_FEED.latestRoundData();\\n        // solhint-disable-next-line not-rely-on-time\\n        if (staleFallback && stalenessSeconds < block.timestamp - timestamp) {\\n            weiPerUnitLink = s_fallbackWeiPerUnitLink;\\n        }\\n        return weiPerUnitLink;\\n    }\\n\\n    /*\\n     * @notice Oracle withdraw LINK earned through fulfilling requests\\n     * @param recipient where to send the funds\\n     * @param amount amount to withdraw\\n     */\\n    function oracleWithdraw(\\n        address recipient,\\n        uint96 amount\\n    ) external nonReentrant {\\n        if (s_withdrawableTokens[msg.sender] < amount) {\\n            revert InsufficientBalance();\\n        }\\n        s_withdrawableTokens[msg.sender] -= amount;\\n        s_totalBalance -= amount;\\n        if (!LINK.transfer(recipient, amount)) {\\n            revert InsufficientBalance();\\n        }\\n    }\\n\\n    function onTokenTransfer(\\n        address /* sender */,\\n        uint256 amount,\\n        bytes calldata data\\n    ) external override nonReentrant {\\n        if (msg.sender != address(LINK)) {\\n            revert OnlyCallableFromLink();\\n        }\\n        if (data.length != 32) {\\n            revert InvalidCalldata();\\n        }\\n        uint64 subId = abi.decode(data, (uint64));\\n        if (s_subscriptionConfigs[subId].owner == address(0)) {\\n            revert InvalidSubscription();\\n        }\\n        // We do not check that the msg.sender is the subscription owner,\\n        // anyone can fund a subscription.\\n        uint256 oldBalance = s_subscriptions[subId].balance;\\n        s_subscriptions[subId].balance += uint96(amount);\\n        s_totalBalance += uint96(amount);\\n        emit SubscriptionFunded(subId, oldBalance, oldBalance + amount);\\n    }\\n\\n    function getCurrentSubId() external view returns (uint64) {\\n        return s_currentSubId;\\n    }\\n\\n    /**\\n     * @inheritdoc VRFCoordinatorV2Interface\\n     */\\n    function getSubscription(\\n        uint64 subId\\n    )\\n        external\\n        view\\n        override\\n        returns (\\n            uint96 balance,\\n            uint64 reqCount,\\n            address owner,\\n            address[] memory consumers\\n        )\\n    {\\n        if (s_subscriptionConfigs[subId].owner == address(0)) {\\n            revert InvalidSubscription();\\n        }\\n        return (\\n            s_subscriptions[subId].balance,\\n            s_subscriptions[subId].reqCount,\\n            s_subscriptionConfigs[subId].owner,\\n            s_subscriptionConfigs[subId].consumers\\n        );\\n    }\\n\\n    /**\\n     * @inheritdoc VRFCoordinatorV2Interface\\n     */\\n    function createSubscription()\\n        external\\n        override\\n        nonReentrant\\n        returns (uint64)\\n    {\\n        s_currentSubId++;\\n        uint64 currentSubId = s_currentSubId;\\n        address[] memory consumers = new address[](0);\\n        s_subscriptions[currentSubId] = Subscription({balance: 0, reqCount: 0});\\n        s_subscriptionConfigs[currentSubId] = SubscriptionConfig({\\n            owner: msg.sender,\\n            requestedOwner: address(0),\\n            consumers: consumers\\n        });\\n\\n        emit SubscriptionCreated(currentSubId, msg.sender);\\n        return currentSubId;\\n    }\\n\\n    /**\\n     * @inheritdoc VRFCoordinatorV2Interface\\n     */\\n    function requestSubscriptionOwnerTransfer(\\n        uint64 subId,\\n        address newOwner\\n    ) external override onlySubOwner(subId) nonReentrant {\\n        // Proposing to address(0) would never be claimable so don't need to check.\\n        if (s_subscriptionConfigs[subId].requestedOwner != newOwner) {\\n            s_subscriptionConfigs[subId].requestedOwner = newOwner;\\n            emit SubscriptionOwnerTransferRequested(\\n                subId,\\n                msg.sender,\\n                newOwner\\n            );\\n        }\\n    }\\n\\n    /**\\n     * @inheritdoc VRFCoordinatorV2Interface\\n     */\\n    function acceptSubscriptionOwnerTransfer(\\n        uint64 subId\\n    ) external override nonReentrant {\\n        if (s_subscriptionConfigs[subId].owner == address(0)) {\\n            revert InvalidSubscription();\\n        }\\n        if (s_subscriptionConfigs[subId].requestedOwner != msg.sender) {\\n            revert MustBeRequestedOwner(\\n                s_subscriptionConfigs[subId].requestedOwner\\n            );\\n        }\\n        address oldOwner = s_subscriptionConfigs[subId].owner;\\n        s_subscriptionConfigs[subId].owner = msg.sender;\\n        s_subscriptionConfigs[subId].requestedOwner = address(0);\\n        emit SubscriptionOwnerTransferred(subId, oldOwner, msg.sender);\\n    }\\n\\n    /**\\n     * @inheritdoc VRFCoordinatorV2Interface\\n     */\\n    function removeConsumer(\\n        uint64 subId,\\n        address consumer\\n    ) external override onlySubOwner(subId) nonReentrant {\\n        if (pendingRequestExists(subId)) {\\n            revert PendingRequestExists();\\n        }\\n        if (s_consumers[consumer][subId] == 0) {\\n            revert InvalidConsumer(subId, consumer);\\n        }\\n        // Note bounded by MAX_CONSUMERS\\n        address[] memory consumers = s_subscriptionConfigs[subId].consumers;\\n        uint256 lastConsumerIndex = consumers.length - 1;\\n        for (uint256 i = 0; i < consumers.length; i++) {\\n            if (consumers[i] == consumer) {\\n                address last = consumers[lastConsumerIndex];\\n                // Storage write to preserve last element\\n                s_subscriptionConfigs[subId].consumers[i] = last;\\n                // Storage remove last element\\n                s_subscriptionConfigs[subId].consumers.pop();\\n                break;\\n            }\\n        }\\n        delete s_consumers[consumer][subId];\\n        emit SubscriptionConsumerRemoved(subId, consumer);\\n    }\\n\\n    /**\\n     * @inheritdoc VRFCoordinatorV2Interface\\n     */\\n    function addConsumer(\\n        uint64 subId,\\n        address consumer\\n    ) external override onlySubOwner(subId) nonReentrant {\\n        // Already maxed, cannot add any more consumers.\\n        if (s_subscriptionConfigs[subId].consumers.length == MAX_CONSUMERS) {\\n            revert TooManyConsumers();\\n        }\\n        if (s_consumers[consumer][subId] != 0) {\\n            // Idempotence - do nothing if already added.\\n            // Ensures uniqueness in s_subscriptions[subId].consumers.\\n            return;\\n        }\\n        // Initialize the nonce to 1, indicating the consumer is allocated.\\n        s_consumers[consumer][subId] = 1;\\n        s_subscriptionConfigs[subId].consumers.push(consumer);\\n\\n        emit SubscriptionConsumerAdded(subId, consumer);\\n    }\\n\\n    /**\\n     * @inheritdoc VRFCoordinatorV2Interface\\n     */\\n    function cancelSubscription(\\n        uint64 subId,\\n        address to\\n    ) external override onlySubOwner(subId) nonReentrant {\\n        if (pendingRequestExists(subId)) {\\n            revert PendingRequestExists();\\n        }\\n        cancelSubscriptionHelper(subId, to);\\n    }\\n\\n    function cancelSubscriptionHelper(\\n        uint64 subId,\\n        address to\\n    ) private nonReentrant {\\n        SubscriptionConfig memory subConfig = s_subscriptionConfigs[subId];\\n        Subscription memory sub = s_subscriptions[subId];\\n        uint96 balance = sub.balance;\\n        // Note bounded by MAX_CONSUMERS;\\n        // If no consumers, does nothing.\\n        for (uint256 i = 0; i < subConfig.consumers.length; i++) {\\n            delete s_consumers[subConfig.consumers[i]][subId];\\n        }\\n        delete s_subscriptionConfigs[subId];\\n        delete s_subscriptions[subId];\\n        s_totalBalance -= balance;\\n        if (!LINK.transfer(to, uint256(balance))) {\\n            revert InsufficientBalance();\\n        }\\n        emit SubscriptionCanceled(subId, to, balance);\\n    }\\n\\n    /**\\n     * @inheritdoc VRFCoordinatorV2Interface\\n     * @dev Looping is bounded to MAX_CONSUMERS*(number of keyhashes).\\n     * @dev Used to disable subscription canceling while outstanding request are present.\\n     */\\n    function pendingRequestExists(\\n        uint64 subId\\n    ) public view override returns (bool) {\\n        SubscriptionConfig memory subConfig = s_subscriptionConfigs[subId];\\n        for (uint256 i = 0; i < subConfig.consumers.length; i++) {\\n            for (uint256 j = 0; j < s_provingKeyHashes.length; j++) {\\n                (uint256 reqId, ) = computeRequestId(\\n                    s_provingKeyHashes[j],\\n                    subConfig.consumers[i],\\n                    subId,\\n                    s_consumers[subConfig.consumers[i]][subId]\\n                );\\n                if (s_requestCommitments[reqId] != 0) {\\n                    return true;\\n                }\\n            }\\n        }\\n        return false;\\n    }\\n\\n    modifier onlySubOwner(uint64 subId) {\\n        address owner = s_subscriptionConfigs[subId].owner;\\n        if (owner == address(0)) {\\n            revert InvalidSubscription();\\n        }\\n        if (msg.sender != owner) {\\n            revert MustBeSubOwner(owner);\\n        }\\n        _;\\n    }\\n\\n    modifier nonReentrant() {\\n        if (s_config.reentrancyLock) {\\n            revert Reentrant();\\n        }\\n        _;\\n    }\\n\\n    /**\\n     * @notice The type and version of this contract\\n     * @return Type and version string\\n     */\\n    function typeAndVersion()\\n        external\\n        pure\\n        virtual\\n        override\\n        returns (string memory)\\n    {\\n        return \\\"VRFCoordinatorV2 1.0.0\\\";\\n    }\\n}\\n\",\"keccak256\":\"0xaaa3ae138eef964f56db5c7f3e489699312132bacbf422074c85621b156f773f\",\"license\":\"MIT\"},\"contracts/Raffle.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.7;\\r\\n\\r\\nimport {VRFCoordinatorV2} from \\\"@chainlink/contracts/src/v0.8/vrf/VRFCoordinatorV2.sol\\\";\\r\\nimport {VRFConsumerBaseV2} from \\\"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol\\\";\\r\\nimport {KeeperCompatibleInterface} from \\\"@chainlink/contracts/src/v0.8/automation/KeeperCompatible.sol\\\";\\r\\n\\r\\ncontract Raffle is VRFConsumerBaseV2, KeeperCompatibleInterface {\\r\\n    enum RaffleState {\\r\\n        OPEN,\\r\\n        CALCULATING\\r\\n    }\\r\\n\\r\\n    uint256 private immutable i_entranceFee;\\r\\n    address payable[] private s_players;\\r\\n    VRFCoordinatorV2 private immutable i_vrfCoordinator;\\r\\n    bytes32 private immutable i_gasLane;\\r\\n    uint256 private immutable i_subscriptionId;\\r\\n    uint16 private constant REQUEST_CONFIRMATION = 3;\\r\\n    uint32 private immutable i_callbackGasLimit;\\r\\n    uint32 private constant NUM_WORDS = 1;\\r\\n    uint256 private immutable i_interval;\\r\\n\\r\\n    //Lottery Variables\\r\\n    address private s_recentWinner;\\r\\n    RaffleState private s_raffleState;\\r\\n    uint256 private s_lastTimeStamp;\\r\\n\\r\\n    event RaffleEnter(address indexed player);\\r\\n    event RequestedRaffleWinner(uint256 indexed requestId);\\r\\n    event WinnerPicked(address indexed winner);\\r\\n\\r\\n    constructor(\\r\\n        address vrfCoordinatorV2,\\r\\n        uint256 entranceFee,\\r\\n        bytes32 gasLane,\\r\\n        uint256 subscriptionId,\\r\\n        uint32 callbackGasLimit,\\r\\n        uint256 interval\\r\\n    ) VRFConsumerBaseV2(vrfCoordinatorV2) {\\r\\n        i_entranceFee = entranceFee;\\r\\n        //log(vrfCoordinatorV2);\\r\\n        i_vrfCoordinator = VRFCoordinatorV2(vrfCoordinatorV2);\\r\\n        i_gasLane = gasLane;\\r\\n        i_subscriptionId = subscriptionId;\\r\\n        i_callbackGasLimit = callbackGasLimit;\\r\\n        s_raffleState = RaffleState.OPEN;\\r\\n        s_lastTimeStamp = block.timestamp;\\r\\n        i_interval = interval;\\r\\n    }\\r\\n\\r\\n    function enterRaffle() public payable {\\r\\n        require(msg.value >= i_entranceFee, \\\"Not enough ETH!\\\");\\r\\n        require(s_raffleState == RaffleState.OPEN, \\\"Not open\\\");\\r\\n        s_players.push(payable(msg.sender));\\r\\n        emit RaffleEnter(msg.sender);\\r\\n    }\\r\\n\\r\\n    function checkUpkeep(\\r\\n        bytes memory\\r\\n    ) public override returns (bool upkeepNeeded, bytes memory) {\\r\\n        bool isOpen = (RaffleState.OPEN == s_raffleState);\\r\\n        bool timePassed = ((block.timestamp - s_lastTimeStamp) > i_interval);\\r\\n        bool hasPlayers = (s_players.length > 0);\\r\\n        bool hasBalance = address(this).balance > 0;\\r\\n        upkeepNeeded = (isOpen && timePassed && hasPlayers && hasBalance);\\r\\n    }\\r\\n\\r\\n    function performUpkeep(bytes calldata) external override {\\r\\n        (bool upKeepNeeded, ) = checkUpkeep(\\\"\\\");\\r\\n        require(upKeepNeeded == true, \\\"Upkeep not needed\\\");\\r\\n        s_raffleState = RaffleState.CALCULATING;\\r\\n        uint256 requestId = i_vrfCoordinator.requestRandomWords(\\r\\n            i_gasLane,\\r\\n            uint64(i_subscriptionId),\\r\\n            REQUEST_CONFIRMATION,\\r\\n            i_callbackGasLimit,\\r\\n            NUM_WORDS\\r\\n        );\\r\\n        emit RequestedRaffleWinner(requestId);\\r\\n    }\\r\\n\\r\\n    function fulfillRandomWords(\\r\\n        uint256,\\r\\n        uint256[] memory randomWords\\r\\n    ) internal override {\\r\\n        uint256 indexOfWinner = randomWords[0] % s_players.length;\\r\\n        address payable recentWinner = s_players[indexOfWinner];\\r\\n        s_recentWinner = recentWinner;\\r\\n        s_raffleState = RaffleState.OPEN;\\r\\n        s_players = new address payable[](0);\\r\\n        s_lastTimeStamp = block.timestamp;\\r\\n        (bool success, ) = recentWinner.call{value: address(this).balance}(\\\"\\\");\\r\\n        require(success == true, \\\"Transfer Failed!\\\");\\r\\n        emit WinnerPicked(recentWinner);\\r\\n    }\\r\\n\\r\\n    function getEntranceFee() public view returns (uint256) {\\r\\n        return i_entranceFee;\\r\\n    }\\r\\n\\r\\n    function getPlayer(uint256 index) public view returns (address) {\\r\\n        return s_players[index];\\r\\n    }\\r\\n\\r\\n    function getRecentWinner() public view returns (address) {\\r\\n        return s_recentWinner;\\r\\n    }\\r\\n\\r\\n    function getRaffleState() public view returns (RaffleState) {\\r\\n        return s_raffleState;\\r\\n    }\\r\\n\\r\\n    function getNumWords() public pure returns (uint256) {\\r\\n        return NUM_WORDS;\\r\\n    }\\r\\n\\r\\n    function getNumberOfPlayers() public view returns (uint256) {\\r\\n        return s_players.length;\\r\\n    }\\r\\n\\r\\n    function getLatestTimeStamp() public view returns (uint256) {\\r\\n        return s_lastTimeStamp;\\r\\n    }\\r\\n\\r\\n    function getRequestConfirmation() public pure returns (uint256) {\\r\\n        return REQUEST_CONFIRMATION;\\r\\n    }\\r\\n\\r\\n    function getInterval() public view returns (uint256) {\\r\\n        return i_interval;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xb185b18adb4487a8abd5a79e5daf623253e4d1d824684df0782927569c54aa0c\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":4420,"contract":"contracts/Raffle.sol:Raffle","label":"s_players","offset":0,"slot":"0","type":"t_array(t_address_payable)dyn_storage"},{"astId":4439,"contract":"contracts/Raffle.sol:Raffle","label":"s_recentWinner","offset":0,"slot":"1","type":"t_address"},{"astId":4442,"contract":"contracts/Raffle.sol:Raffle","label":"s_raffleState","offset":20,"slot":"1","type":"t_enum(RaffleState)4415"},{"astId":4444,"contract":"contracts/Raffle.sol:Raffle","label":"s_lastTimeStamp","offset":0,"slot":"2","type":"t_uint256"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_address_payable":{"encoding":"inplace","label":"address payable","numberOfBytes":"20"},"t_array(t_address_payable)dyn_storage":{"base":"t_address_payable","encoding":"dynamic_array","label":"address payable[]","numberOfBytes":"32"},"t_enum(RaffleState)4415":{"encoding":"inplace","label":"enum Raffle.RaffleState","numberOfBytes":"1"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}}}}}